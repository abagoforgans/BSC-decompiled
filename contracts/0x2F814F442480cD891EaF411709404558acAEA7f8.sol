contract main {




// =====================  Runtime code  =====================


#
#  - sub_0d866d5a(?)
#  - sub_e182a503(?)
#
address stor0;
address wethAddress;
address bakeryRouterAddress;
address sub_d60b53dcAddress;
address sub_ada4c30aAddress;
address sub_09c6e72cAddress;
address sub_746f8e57Address;
address sub_0d133cd3Address;

function sub_09c6e72c(?) {
    return sub_09c6e72cAddress
}

function sub_0d133cd3(?) {
    return sub_0d133cd3Address
}

function weth() {
    return wethAddress
}

function sub_746f8e57(?) {
    return sub_746f8e57Address
}

function sub_ada4c30a(?) {
    return sub_ada4c30aAddress
}

function sub_d60b53dc(?) {
    return sub_d60b53dcAddress
}

function bakeryRouter() {
    return bakeryRouterAddress
}

function _fallback() payable {
    revert
}

function setWETH(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if stor0 != msg.sender:
        revert with 0, 'Caller is not owner'
    wethAddress = arg1
}

function drainBalance() payable {
    if stor0 != msg.sender:
        revert with 0, 'Caller is not owner'
    call msg.sender with:
       value eth.balance(this.address) wei
         gas 2300 * is_zero(value) wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
}

function drainToken(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if stor0 != msg.sender:
        revert with 0, 'Caller is not owner'
    require ext_code.size(arg1)
    staticcall arg1.balanceOf(address rg1) with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[0]
    require ext_code.size(arg1)
    call arg1.transfer(address rg1, uint256 rg2) with:
         gas gas_remaining wei
        args msg.sender, ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
    if not ext_call.return_data[0]:
        revert with 0, 'drain ERROR'
}

function sub_dca751a6(?) {
    require calldata.size - 4 >= 128
    require arg1 == address(arg1)
    require arg2 == address(arg2)
    require arg3 == address(arg3)
    require arg4 == arg4
    if stor0 != msg.sender:
        revert with 0, 'Caller is not owner'
    mem[96] = 2
    mem[128] = wethAddress
    mem[160] = address(arg3)
    if address(arg1) == bakeryRouterAddress:
        mem[192] = 0x9cf6891100000000000000000000000000000000000000000000000000000000
        mem[196] = 0
        mem[228] = 128
        mem[324] = 2
        idx = 0
        s = 128
        t = 356
        while idx < 2:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[260] = this.address
        mem[292] = block.timestamp + 6 * 10^6
        require ext_code.size(address(arg1))
        call address(arg1).0x9cf68911 with:
           value arg4 wei
             gas gas_remaining wei
            args 0, 128, address(this.address), block.timestamp + 6 * 10^6, 2, mem[356 len 64]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        mem[192 len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = ceil32(return_data.size) + 192
        require return_data.size >= 32
        _270 = mem[192 len 4], 0
        require mem[192 len 4], 0 <= test266151307()
        require mem[192 len 4], 0 + 223 < return_data.size + 192
        _274 = mem[mem[192 len 4], 0 + 192]
        require mem[mem[192 len 4], 0 + 192] <= test266151307()
        require ceil32(return_data.size) + (32 * mem[mem[192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[mem[192 len 4], 0 + 192]) + 32 >= 0
        mem[64] = ceil32(return_data.size) + (32 * mem[mem[192 len 4], 0 + 192]) + 224
        mem[ceil32(return_data.size) + 192] = mem[mem[192 len 4], 0 + 192]
        require _270 + (32 * _274) + 32 <= return_data.size
        idx = 0
        s = _270 + 224
        t = ceil32(return_data.size) + 224
        while idx < _274:
            require mem[s] == mem[s]
            mem[t] = mem[s]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        require 1 < _274
        _510 = mem[ceil32(return_data.size) + 256]
        mem[mem[64] + 4] = address(arg2)
        mem[mem[64] + 36] = _510
        require ext_code.size(address(arg3))
        call address(arg3).approve(address rg1, uint256 rg2) with:
             gas gas_remaining wei
            args address(arg2), _510
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _522 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require mem[_522] == bool(mem[_522])
        if not mem[_522]:
            revert with 0, 'approve failed.'
        mem[128] = address(arg3)
        mem[160] = wethAddress
        require 1 < _274
        if address(arg2) == bakeryRouterAddress:
            _546 = mem[ceil32(return_data.size) + 256]
            mem[mem[64]] = 0x5d616c5b00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = _546
            mem[mem[64] + 36] = 0
            mem[mem[64] + 68] = 160
            mem[mem[64] + 164] = 2
            idx = 0
            s = 128
            t = mem[64] + 196
            while idx < 2:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[mem[64] + 100] = this.address
            mem[mem[64] + 132] = block.timestamp + 6 * 10^6
            require ext_code.size(address(arg2))
            call address(arg2).0x5d616c5b with:
                 gas gas_remaining wei
                args _546, 0, 160, address(this.address), block.timestamp + 6 * 10^6, 2, mem[mem[64] + 196 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _754 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _770 = mem[_754]
            require mem[_754] <= test266151307()
            require _754 + mem[_754] + 31 < _754 + return_data.size
            _786 = mem[_754 + mem[_754]]
            require mem[_754 + mem[_754]] <= test266151307()
            require _754 + ceil32(return_data.size) + (32 * mem[_754 + mem[_754]]) + 32 <= test266151307() and (32 * mem[_754 + mem[_754]]) + 32 >= 0
            mem[64] = _754 + ceil32(return_data.size) + (32 * mem[_754 + mem[_754]]) + 32
            mem[_754 + ceil32(return_data.size)] = _786
            require _770 + (32 * _786) + 32 <= return_data.size
            idx = 0
            s = _754 + _770 + 32
            t = _754 + ceil32(return_data.size) + 32
            while idx < _786:
                require mem[s] == mem[s]
                mem[t] = mem[s]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
        else:
            if address(arg2) == sub_746f8e57Address:
                _562 = mem[ceil32(return_data.size) + 256]
                mem[mem[64]] = 0x5d616c5b00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _562
                mem[mem[64] + 36] = 0
                mem[mem[64] + 68] = 160
                mem[mem[64] + 164] = 2
                idx = 0
                s = 128
                t = mem[64] + 196
                while idx < 2:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[mem[64] + 100] = this.address
                mem[mem[64] + 132] = block.timestamp + 6 * 10^6
                require ext_code.size(address(arg2))
                call address(arg2).0x5d616c5b with:
                     gas gas_remaining wei
                    args _562, 0, 160, address(this.address), block.timestamp + 6 * 10^6, 2, mem[mem[64] + 196 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _755 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _771 = mem[_755]
                require mem[_755] <= test266151307()
                require _755 + mem[_755] + 31 < _755 + return_data.size
                _787 = mem[_755 + mem[_755]]
                require mem[_755 + mem[_755]] <= test266151307()
                require _755 + ceil32(return_data.size) + (32 * mem[_755 + mem[_755]]) + 32 <= test266151307() and (32 * mem[_755 + mem[_755]]) + 32 >= 0
                mem[64] = _755 + ceil32(return_data.size) + (32 * mem[_755 + mem[_755]]) + 32
                mem[_755 + ceil32(return_data.size)] = _787
                require _771 + (32 * _787) + 32 <= return_data.size
                idx = 0
                s = _755 + _771 + 32
                t = _755 + ceil32(return_data.size) + 32
                while idx < _787:
                    require mem[s] == mem[s]
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
            else:
                if address(arg2) != sub_0d133cd3Address:
                    _578 = mem[ceil32(return_data.size) + 256]
                    mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _578
                    mem[mem[64] + 36] = 0
                    mem[mem[64] + 68] = 160
                    mem[mem[64] + 164] = 2
                    idx = 0
                    s = 128
                    t = mem[64] + 196
                    while idx < 2:
                        mem[t] = mem[s + 12 len 20]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[mem[64] + 100] = this.address
                    mem[mem[64] + 132] = block.timestamp + 6 * 10^6
                    require ext_code.size(address(arg2))
                    call address(arg2).swapExactTokensForETH(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                         gas gas_remaining wei
                        args _578, 0, 160, address(this.address), block.timestamp + 6 * 10^6, 2, mem[mem[64] + 196 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _756 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _772 = mem[_756]
                    require mem[_756] <= test266151307()
                    require _756 + mem[_756] + 31 < _756 + return_data.size
                    _788 = mem[_756 + mem[_756]]
                    require mem[_756 + mem[_756]] <= test266151307()
                    require _756 + ceil32(return_data.size) + (32 * mem[_756 + mem[_756]]) + 32 <= test266151307() and (32 * mem[_756 + mem[_756]]) + 32 >= 0
                    mem[64] = _756 + ceil32(return_data.size) + (32 * mem[_756 + mem[_756]]) + 32
                    mem[_756 + ceil32(return_data.size)] = _788
                    require _772 + (32 * _788) + 32 <= return_data.size
                    idx = 0
                    s = _756 + _772 + 32
                    t = _756 + ceil32(return_data.size) + 32
                    while idx < _788:
                        require mem[s] == mem[s]
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                else:
                    _580 = mem[ceil32(return_data.size) + 256]
                    mem[mem[64]] = 0x5d616c5b00000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _580
                    mem[mem[64] + 36] = 0
                    mem[mem[64] + 68] = 160
                    mem[mem[64] + 164] = 2
                    idx = 0
                    s = 128
                    t = mem[64] + 196
                    while idx < 2:
                        mem[t] = mem[s + 12 len 20]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[mem[64] + 100] = this.address
                    mem[mem[64] + 132] = block.timestamp + 6 * 10^6
                    require ext_code.size(address(arg2))
                    call address(arg2).0x5d616c5b with:
                         gas gas_remaining wei
                        args _580, 0, 160, address(this.address), block.timestamp + 6 * 10^6, 2, mem[mem[64] + 196 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _757 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _773 = mem[_757]
                    require mem[_757] <= test266151307()
                    require _757 + mem[_757] + 31 < _757 + return_data.size
                    _789 = mem[_757 + mem[_757]]
                    require mem[_757 + mem[_757]] <= test266151307()
                    require _757 + ceil32(return_data.size) + (32 * mem[_757 + mem[_757]]) + 32 <= test266151307() and (32 * mem[_757 + mem[_757]]) + 32 >= 0
                    mem[64] = _757 + ceil32(return_data.size) + (32 * mem[_757 + mem[_757]]) + 32
                    mem[_757 + ceil32(return_data.size)] = _789
                    require _773 + (32 * _789) + 32 <= return_data.size
                    idx = 0
                    s = _757 + _773 + 32
                    t = _757 + ceil32(return_data.size) + 32
                    while idx < _789:
                        require mem[s] == mem[s]
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
    else:
        if address(arg1) == sub_746f8e57Address:
            mem[192] = 0x9cf6891100000000000000000000000000000000000000000000000000000000
            mem[196] = 0
            mem[228] = 128
            mem[324] = 2
            idx = 0
            s = 128
            t = 356
            while idx < 2:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[260] = this.address
            mem[292] = block.timestamp + 6 * 10^6
            require ext_code.size(address(arg1))
            call address(arg1).0x9cf68911 with:
               value arg4 wei
                 gas gas_remaining wei
                args 0, 128, address(this.address), block.timestamp + 6 * 10^6, 2, mem[356 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[192 len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = ceil32(return_data.size) + 192
            require return_data.size >= 32
            _271 = mem[192 len 4], 0
            require mem[192 len 4], 0 <= test266151307()
            require mem[192 len 4], 0 + 223 < return_data.size + 192
            _275 = mem[mem[192 len 4], 0 + 192]
            require mem[mem[192 len 4], 0 + 192] <= test266151307()
            require ceil32(return_data.size) + (32 * mem[mem[192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[mem[192 len 4], 0 + 192]) + 32 >= 0
            mem[64] = ceil32(return_data.size) + (32 * mem[mem[192 len 4], 0 + 192]) + 224
            mem[ceil32(return_data.size) + 192] = mem[mem[192 len 4], 0 + 192]
            require _271 + (32 * _275) + 32 <= return_data.size
            idx = 0
            s = _271 + 224
            t = ceil32(return_data.size) + 224
            while idx < _275:
                require mem[s] == mem[s]
                mem[t] = mem[s]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            require 1 < _275
            _512 = mem[ceil32(return_data.size) + 256]
            mem[mem[64] + 4] = address(arg2)
            mem[mem[64] + 36] = _512
            require ext_code.size(address(arg3))
            call address(arg3).approve(address rg1, uint256 rg2) with:
                 gas gas_remaining wei
                args address(arg2), _512
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _523 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_523] == bool(mem[_523])
            if not mem[_523]:
                revert with 0, 'approve failed.'
            mem[128] = address(arg3)
            mem[160] = wethAddress
            require 1 < _275
            if address(arg2) == bakeryRouterAddress:
                _550 = mem[ceil32(return_data.size) + 256]
                mem[mem[64]] = 0x5d616c5b00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _550
                mem[mem[64] + 36] = 0
                mem[mem[64] + 68] = 160
                mem[mem[64] + 164] = 2
                idx = 0
                s = 128
                t = mem[64] + 196
                while idx < 2:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[mem[64] + 100] = this.address
                mem[mem[64] + 132] = block.timestamp + 6 * 10^6
                require ext_code.size(address(arg2))
                call address(arg2).0x5d616c5b with:
                     gas gas_remaining wei
                    args _550, 0, 160, address(this.address), block.timestamp + 6 * 10^6, 2, mem[mem[64] + 196 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _758 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _774 = mem[_758]
                require mem[_758] <= test266151307()
                require _758 + mem[_758] + 31 < _758 + return_data.size
                _790 = mem[_758 + mem[_758]]
                require mem[_758 + mem[_758]] <= test266151307()
                require _758 + ceil32(return_data.size) + (32 * mem[_758 + mem[_758]]) + 32 <= test266151307() and (32 * mem[_758 + mem[_758]]) + 32 >= 0
                mem[64] = _758 + ceil32(return_data.size) + (32 * mem[_758 + mem[_758]]) + 32
                mem[_758 + ceil32(return_data.size)] = _790
                require _774 + (32 * _790) + 32 <= return_data.size
                idx = 0
                s = _758 + _774 + 32
                t = _758 + ceil32(return_data.size) + 32
                while idx < _790:
                    require mem[s] == mem[s]
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
            else:
                if address(arg2) == sub_746f8e57Address:
                    _566 = mem[ceil32(return_data.size) + 256]
                    mem[mem[64]] = 0x5d616c5b00000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _566
                    mem[mem[64] + 36] = 0
                    mem[mem[64] + 68] = 160
                    mem[mem[64] + 164] = 2
                    idx = 0
                    s = 128
                    t = mem[64] + 196
                    while idx < 2:
                        mem[t] = mem[s + 12 len 20]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[mem[64] + 100] = this.address
                    mem[mem[64] + 132] = block.timestamp + 6 * 10^6
                    require ext_code.size(address(arg2))
                    call address(arg2).0x5d616c5b with:
                         gas gas_remaining wei
                        args _566, 0, 160, address(this.address), block.timestamp + 6 * 10^6, 2, mem[mem[64] + 196 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _759 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _775 = mem[_759]
                    require mem[_759] <= test266151307()
                    require _759 + mem[_759] + 31 < _759 + return_data.size
                    _791 = mem[_759 + mem[_759]]
                    require mem[_759 + mem[_759]] <= test266151307()
                    require _759 + ceil32(return_data.size) + (32 * mem[_759 + mem[_759]]) + 32 <= test266151307() and (32 * mem[_759 + mem[_759]]) + 32 >= 0
                    mem[64] = _759 + ceil32(return_data.size) + (32 * mem[_759 + mem[_759]]) + 32
                    mem[_759 + ceil32(return_data.size)] = _791
                    require _775 + (32 * _791) + 32 <= return_data.size
                    idx = 0
                    s = _759 + _775 + 32
                    t = _759 + ceil32(return_data.size) + 32
                    while idx < _791:
                        require mem[s] == mem[s]
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                else:
                    if address(arg2) != sub_0d133cd3Address:
                        _582 = mem[ceil32(return_data.size) + 256]
                        mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _582
                        mem[mem[64] + 36] = 0
                        mem[mem[64] + 68] = 160
                        mem[mem[64] + 164] = 2
                        idx = 0
                        s = 128
                        t = mem[64] + 196
                        while idx < 2:
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[mem[64] + 100] = this.address
                        mem[mem[64] + 132] = block.timestamp + 6 * 10^6
                        require ext_code.size(address(arg2))
                        call address(arg2).swapExactTokensForETH(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                             gas gas_remaining wei
                            args _582, 0, 160, address(this.address), block.timestamp + 6 * 10^6, 2, mem[mem[64] + 196 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _760 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _776 = mem[_760]
                        require mem[_760] <= test266151307()
                        require _760 + mem[_760] + 31 < _760 + return_data.size
                        _792 = mem[_760 + mem[_760]]
                        require mem[_760 + mem[_760]] <= test266151307()
                        require _760 + ceil32(return_data.size) + (32 * mem[_760 + mem[_760]]) + 32 <= test266151307() and (32 * mem[_760 + mem[_760]]) + 32 >= 0
                        mem[64] = _760 + ceil32(return_data.size) + (32 * mem[_760 + mem[_760]]) + 32
                        mem[_760 + ceil32(return_data.size)] = _792
                        require _776 + (32 * _792) + 32 <= return_data.size
                        idx = 0
                        s = _760 + _776 + 32
                        t = _760 + ceil32(return_data.size) + 32
                        while idx < _792:
                            require mem[s] == mem[s]
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                    else:
                        _584 = mem[ceil32(return_data.size) + 256]
                        mem[mem[64]] = 0x5d616c5b00000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _584
                        mem[mem[64] + 36] = 0
                        mem[mem[64] + 68] = 160
                        mem[mem[64] + 164] = 2
                        idx = 0
                        s = 128
                        t = mem[64] + 196
                        while idx < 2:
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[mem[64] + 100] = this.address
                        mem[mem[64] + 132] = block.timestamp + 6 * 10^6
                        require ext_code.size(address(arg2))
                        call address(arg2).0x5d616c5b with:
                             gas gas_remaining wei
                            args _584, 0, 160, address(this.address), block.timestamp + 6 * 10^6, 2, mem[mem[64] + 196 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _761 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _777 = mem[_761]
                        require mem[_761] <= test266151307()
                        require _761 + mem[_761] + 31 < _761 + return_data.size
                        _793 = mem[_761 + mem[_761]]
                        require mem[_761 + mem[_761]] <= test266151307()
                        require _761 + ceil32(return_data.size) + (32 * mem[_761 + mem[_761]]) + 32 <= test266151307() and (32 * mem[_761 + mem[_761]]) + 32 >= 0
                        mem[64] = _761 + ceil32(return_data.size) + (32 * mem[_761 + mem[_761]]) + 32
                        mem[_761 + ceil32(return_data.size)] = _793
                        require _777 + (32 * _793) + 32 <= return_data.size
                        idx = 0
                        s = _761 + _777 + 32
                        t = _761 + ceil32(return_data.size) + 32
                        while idx < _793:
                            require mem[s] == mem[s]
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
        else:
            if address(arg1) != sub_0d133cd3Address:
                mem[192] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                mem[196] = 0
                mem[228] = 128
                mem[324] = 2
                idx = 0
                s = 128
                t = 356
                while idx < 2:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[260] = this.address
                mem[292] = block.timestamp + 6 * 10^6
                require ext_code.size(address(arg1))
                call address(arg1).swapExactETHForTokens(uint256 rg1, address[] rg2, address rg3, uint256 rg4) with:
                   value arg4 wei
                     gas gas_remaining wei
                    args 0, 128, address(this.address), block.timestamp + 6 * 10^6, 2, mem[356 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = ceil32(return_data.size) + 192
                require return_data.size >= 32
                _272 = mem[192 len 4], 0
                require mem[192 len 4], 0 <= test266151307()
                require mem[192 len 4], 0 + 223 < return_data.size + 192
                _276 = mem[mem[192 len 4], 0 + 192]
                require mem[mem[192 len 4], 0 + 192] <= test266151307()
                require ceil32(return_data.size) + (32 * mem[mem[192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[mem[192 len 4], 0 + 192]) + 32 >= 0
                mem[64] = ceil32(return_data.size) + (32 * mem[mem[192 len 4], 0 + 192]) + 224
                mem[ceil32(return_data.size) + 192] = mem[mem[192 len 4], 0 + 192]
                require _272 + (32 * _276) + 32 <= return_data.size
                idx = 0
                s = _272 + 224
                t = ceil32(return_data.size) + 224
                while idx < _276:
                    require mem[s] == mem[s]
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                require 1 < _276
                _514 = mem[ceil32(return_data.size) + 256]
                mem[mem[64] + 4] = address(arg2)
                mem[mem[64] + 36] = _514
                require ext_code.size(address(arg3))
                call address(arg3).approve(address rg1, uint256 rg2) with:
                     gas gas_remaining wei
                    args address(arg2), _514
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _524 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_524] == bool(mem[_524])
                if not mem[_524]:
                    revert with 0, 'approve failed.'
                mem[128] = address(arg3)
                mem[160] = wethAddress
                require 1 < _276
                if address(arg2) == bakeryRouterAddress:
                    _554 = mem[ceil32(return_data.size) + 256]
                    mem[mem[64]] = 0x5d616c5b00000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _554
                    mem[mem[64] + 36] = 0
                    mem[mem[64] + 68] = 160
                    mem[mem[64] + 164] = 2
                    idx = 0
                    s = 128
                    t = mem[64] + 196
                    while idx < 2:
                        mem[t] = mem[s + 12 len 20]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[mem[64] + 100] = this.address
                    mem[mem[64] + 132] = block.timestamp + 6 * 10^6
                    require ext_code.size(address(arg2))
                    call address(arg2).0x5d616c5b with:
                         gas gas_remaining wei
                        args _554, 0, 160, address(this.address), block.timestamp + 6 * 10^6, 2, mem[mem[64] + 196 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _762 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _778 = mem[_762]
                    require mem[_762] <= test266151307()
                    require _762 + mem[_762] + 31 < _762 + return_data.size
                    _794 = mem[_762 + mem[_762]]
                    require mem[_762 + mem[_762]] <= test266151307()
                    require _762 + ceil32(return_data.size) + (32 * mem[_762 + mem[_762]]) + 32 <= test266151307() and (32 * mem[_762 + mem[_762]]) + 32 >= 0
                    mem[64] = _762 + ceil32(return_data.size) + (32 * mem[_762 + mem[_762]]) + 32
                    mem[_762 + ceil32(return_data.size)] = _794
                    require _778 + (32 * _794) + 32 <= return_data.size
                    idx = 0
                    s = _762 + _778 + 32
                    t = _762 + ceil32(return_data.size) + 32
                    while idx < _794:
                        require mem[s] == mem[s]
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                else:
                    if address(arg2) == sub_746f8e57Address:
                        _570 = mem[ceil32(return_data.size) + 256]
                        mem[mem[64]] = 0x5d616c5b00000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _570
                        mem[mem[64] + 36] = 0
                        mem[mem[64] + 68] = 160
                        mem[mem[64] + 164] = 2
                        idx = 0
                        s = 128
                        t = mem[64] + 196
                        while idx < 2:
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[mem[64] + 100] = this.address
                        mem[mem[64] + 132] = block.timestamp + 6 * 10^6
                        require ext_code.size(address(arg2))
                        call address(arg2).0x5d616c5b with:
                             gas gas_remaining wei
                            args _570, 0, 160, address(this.address), block.timestamp + 6 * 10^6, 2, mem[mem[64] + 196 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _763 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _779 = mem[_763]
                        require mem[_763] <= test266151307()
                        require _763 + mem[_763] + 31 < _763 + return_data.size
                        _795 = mem[_763 + mem[_763]]
                        require mem[_763 + mem[_763]] <= test266151307()
                        require _763 + ceil32(return_data.size) + (32 * mem[_763 + mem[_763]]) + 32 <= test266151307() and (32 * mem[_763 + mem[_763]]) + 32 >= 0
                        mem[64] = _763 + ceil32(return_data.size) + (32 * mem[_763 + mem[_763]]) + 32
                        mem[_763 + ceil32(return_data.size)] = _795
                        require _779 + (32 * _795) + 32 <= return_data.size
                        idx = 0
                        s = _763 + _779 + 32
                        t = _763 + ceil32(return_data.size) + 32
                        while idx < _795:
                            require mem[s] == mem[s]
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                    else:
                        if address(arg2) != sub_0d133cd3Address:
                            _586 = mem[ceil32(return_data.size) + 256]
                            mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _586
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = 160
                            mem[mem[64] + 164] = 2
                            idx = 0
                            s = 128
                            t = mem[64] + 196
                            while idx < 2:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[mem[64] + 100] = this.address
                            mem[mem[64] + 132] = block.timestamp + 6 * 10^6
                            require ext_code.size(address(arg2))
                            call address(arg2).swapExactTokensForETH(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args _586, 0, 160, address(this.address), block.timestamp + 6 * 10^6, 2, mem[mem[64] + 196 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _764 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _780 = mem[_764]
                            require mem[_764] <= test266151307()
                            require _764 + mem[_764] + 31 < _764 + return_data.size
                            _796 = mem[_764 + mem[_764]]
                            require mem[_764 + mem[_764]] <= test266151307()
                            require _764 + ceil32(return_data.size) + (32 * mem[_764 + mem[_764]]) + 32 <= test266151307() and (32 * mem[_764 + mem[_764]]) + 32 >= 0
                            mem[64] = _764 + ceil32(return_data.size) + (32 * mem[_764 + mem[_764]]) + 32
                            mem[_764 + ceil32(return_data.size)] = _796
                            require _780 + (32 * _796) + 32 <= return_data.size
                            idx = 0
                            s = _764 + _780 + 32
                            t = _764 + ceil32(return_data.size) + 32
                            while idx < _796:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            _588 = mem[ceil32(return_data.size) + 256]
                            mem[mem[64]] = 0x5d616c5b00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _588
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = 160
                            mem[mem[64] + 164] = 2
                            idx = 0
                            s = 128
                            t = mem[64] + 196
                            while idx < 2:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[mem[64] + 100] = this.address
                            mem[mem[64] + 132] = block.timestamp + 6 * 10^6
                            require ext_code.size(address(arg2))
                            call address(arg2).0x5d616c5b with:
                                 gas gas_remaining wei
                                args _588, 0, 160, address(this.address), block.timestamp + 6 * 10^6, 2, mem[mem[64] + 196 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _765 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _781 = mem[_765]
                            require mem[_765] <= test266151307()
                            require _765 + mem[_765] + 31 < _765 + return_data.size
                            _797 = mem[_765 + mem[_765]]
                            require mem[_765 + mem[_765]] <= test266151307()
                            require _765 + ceil32(return_data.size) + (32 * mem[_765 + mem[_765]]) + 32 <= test266151307() and (32 * mem[_765 + mem[_765]]) + 32 >= 0
                            mem[64] = _765 + ceil32(return_data.size) + (32 * mem[_765 + mem[_765]]) + 32
                            mem[_765 + ceil32(return_data.size)] = _797
                            require _781 + (32 * _797) + 32 <= return_data.size
                            idx = 0
                            s = _765 + _781 + 32
                            t = _765 + ceil32(return_data.size) + 32
                            while idx < _797:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
            else:
                mem[192] = 0x9cf6891100000000000000000000000000000000000000000000000000000000
                mem[196] = 0
                mem[228] = 128
                mem[324] = 2
                idx = 0
                s = 128
                t = 356
                while idx < 2:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[260] = this.address
                mem[292] = block.timestamp + 6 * 10^6
                require ext_code.size(address(arg1))
                call address(arg1).0x9cf68911 with:
                   value arg4 wei
                     gas gas_remaining wei
                    args 0, 128, address(this.address), block.timestamp + 6 * 10^6, 2, mem[356 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = ceil32(return_data.size) + 192
                require return_data.size >= 32
                _273 = mem[192 len 4], 0
                require mem[192 len 4], 0 <= test266151307()
                require mem[192 len 4], 0 + 223 < return_data.size + 192
                _277 = mem[mem[192 len 4], 0 + 192]
                require mem[mem[192 len 4], 0 + 192] <= test266151307()
                require ceil32(return_data.size) + (32 * mem[mem[192 len 4], 0 + 192]) + 224 <= test266151307() and (32 * mem[mem[192 len 4], 0 + 192]) + 32 >= 0
                mem[64] = ceil32(return_data.size) + (32 * mem[mem[192 len 4], 0 + 192]) + 224
                mem[ceil32(return_data.size) + 192] = mem[mem[192 len 4], 0 + 192]
                require _273 + (32 * _277) + 32 <= return_data.size
                idx = 0
                s = _273 + 224
                t = ceil32(return_data.size) + 224
                while idx < _277:
                    require mem[s] == mem[s]
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                require 1 < _277
                _516 = mem[ceil32(return_data.size) + 256]
                mem[mem[64] + 4] = address(arg2)
                mem[mem[64] + 36] = _516
                require ext_code.size(address(arg3))
                call address(arg3).approve(address rg1, uint256 rg2) with:
                     gas gas_remaining wei
                    args address(arg2), _516
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _525 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_525] == bool(mem[_525])
                if not mem[_525]:
                    revert with 0, 'approve failed.'
                mem[128] = address(arg3)
                mem[160] = wethAddress
                require 1 < _277
                if address(arg2) == bakeryRouterAddress:
                    _558 = mem[ceil32(return_data.size) + 256]
                    mem[mem[64]] = 0x5d616c5b00000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _558
                    mem[mem[64] + 36] = 0
                    mem[mem[64] + 68] = 160
                    mem[mem[64] + 164] = 2
                    idx = 0
                    s = 128
                    t = mem[64] + 196
                    while idx < 2:
                        mem[t] = mem[s + 12 len 20]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[mem[64] + 100] = this.address
                    mem[mem[64] + 132] = block.timestamp + 6 * 10^6
                    require ext_code.size(address(arg2))
                    call address(arg2).0x5d616c5b with:
                         gas gas_remaining wei
                        args _558, 0, 160, address(this.address), block.timestamp + 6 * 10^6, 2, mem[mem[64] + 196 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _766 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _782 = mem[_766]
                    require mem[_766] <= test266151307()
                    require _766 + mem[_766] + 31 < _766 + return_data.size
                    _798 = mem[_766 + mem[_766]]
                    require mem[_766 + mem[_766]] <= test266151307()
                    require _766 + ceil32(return_data.size) + (32 * mem[_766 + mem[_766]]) + 32 <= test266151307() and (32 * mem[_766 + mem[_766]]) + 32 >= 0
                    mem[64] = _766 + ceil32(return_data.size) + (32 * mem[_766 + mem[_766]]) + 32
                    mem[_766 + ceil32(return_data.size)] = _798
                    require _782 + (32 * _798) + 32 <= return_data.size
                    idx = 0
                    s = _766 + _782 + 32
                    t = _766 + ceil32(return_data.size) + 32
                    while idx < _798:
                        require mem[s] == mem[s]
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                else:
                    if address(arg2) == sub_746f8e57Address:
                        _574 = mem[ceil32(return_data.size) + 256]
                        mem[mem[64]] = 0x5d616c5b00000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _574
                        mem[mem[64] + 36] = 0
                        mem[mem[64] + 68] = 160
                        mem[mem[64] + 164] = 2
                        idx = 0
                        s = 128
                        t = mem[64] + 196
                        while idx < 2:
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[mem[64] + 100] = this.address
                        mem[mem[64] + 132] = block.timestamp + 6 * 10^6
                        require ext_code.size(address(arg2))
                        call address(arg2).0x5d616c5b with:
                             gas gas_remaining wei
                            args _574, 0, 160, address(this.address), block.timestamp + 6 * 10^6, 2, mem[mem[64] + 196 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _767 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _783 = mem[_767]
                        require mem[_767] <= test266151307()
                        require _767 + mem[_767] + 31 < _767 + return_data.size
                        _799 = mem[_767 + mem[_767]]
                        require mem[_767 + mem[_767]] <= test266151307()
                        require _767 + ceil32(return_data.size) + (32 * mem[_767 + mem[_767]]) + 32 <= test266151307() and (32 * mem[_767 + mem[_767]]) + 32 >= 0
                        mem[64] = _767 + ceil32(return_data.size) + (32 * mem[_767 + mem[_767]]) + 32
                        mem[_767 + ceil32(return_data.size)] = _799
                        require _783 + (32 * _799) + 32 <= return_data.size
                        idx = 0
                        s = _767 + _783 + 32
                        t = _767 + ceil32(return_data.size) + 32
                        while idx < _799:
                            require mem[s] == mem[s]
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                    else:
                        if address(arg2) != sub_0d133cd3Address:
                            _590 = mem[ceil32(return_data.size) + 256]
                            mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _590
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = 160
                            mem[mem[64] + 164] = 2
                            idx = 0
                            s = 128
                            t = mem[64] + 196
                            while idx < 2:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[mem[64] + 100] = this.address
                            mem[mem[64] + 132] = block.timestamp + 6 * 10^6
                            require ext_code.size(address(arg2))
                            call address(arg2).swapExactTokensForETH(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args _590, 0, 160, address(this.address), block.timestamp + 6 * 10^6, 2, mem[mem[64] + 196 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _768 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _784 = mem[_768]
                            require mem[_768] <= test266151307()
                            require _768 + mem[_768] + 31 < _768 + return_data.size
                            _800 = mem[_768 + mem[_768]]
                            require mem[_768 + mem[_768]] <= test266151307()
                            require _768 + ceil32(return_data.size) + (32 * mem[_768 + mem[_768]]) + 32 <= test266151307() and (32 * mem[_768 + mem[_768]]) + 32 >= 0
                            mem[64] = _768 + ceil32(return_data.size) + (32 * mem[_768 + mem[_768]]) + 32
                            mem[_768 + ceil32(return_data.size)] = _800
                            require _784 + (32 * _800) + 32 <= return_data.size
                            idx = 0
                            s = _768 + _784 + 32
                            t = _768 + ceil32(return_data.size) + 32
                            while idx < _800:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            _592 = mem[ceil32(return_data.size) + 256]
                            mem[mem[64]] = 0x5d616c5b00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _592
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = 160
                            mem[mem[64] + 164] = 2
                            idx = 0
                            s = 128
                            t = mem[64] + 196
                            while idx < 2:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[mem[64] + 100] = this.address
                            mem[mem[64] + 132] = block.timestamp + 6 * 10^6
                            require ext_code.size(address(arg2))
                            call address(arg2).0x5d616c5b with:
                                 gas gas_remaining wei
                                args _592, 0, 160, address(this.address), block.timestamp + 6 * 10^6, 2, mem[mem[64] + 196 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _769 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _785 = mem[_769]
                            require mem[_769] <= test266151307()
                            require _769 + mem[_769] + 31 < _769 + return_data.size
                            _801 = mem[_769 + mem[_769]]
                            require mem[_769 + mem[_769]] <= test266151307()
                            require _769 + ceil32(return_data.size) + (32 * mem[_769 + mem[_769]]) + 32 <= test266151307() and (32 * mem[_769 + mem[_769]]) + 32 >= 0
                            mem[64] = _769 + ceil32(return_data.size) + (32 * mem[_769 + mem[_769]]) + 32
                            mem[_769 + ceil32(return_data.size)] = _801
                            require _785 + (32 * _801) + 32 <= return_data.size
                            idx = 0
                            s = _769 + _785 + 32
                            t = _769 + ceil32(return_data.size) + 32
                            while idx < _801:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
}

function sub_937c70dd(?) {
    require calldata.size - 4 >= 96
    require arg1 == address(arg1)
    require arg2 == address(arg2)
    require arg3 == address(arg3)
    if 10^17 >= eth.balance(this.address):
        revert with 0, 'not enough balance'
    require ext_code.size(address(arg1))
    staticcall address(arg1).getPair(address rg1, address rg2) with:
            gas gas_remaining wei
           args wethAddress, address(arg3)
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(address(arg2))
    staticcall address(arg2).getPair(address rg1, address rg2) with:
            gas gas_remaining wei
           args address(arg3), wethAddress
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    if not address(ext_call.return_data[0]):
        revert with 0, 'UniswapV2: PAIRB_NOT_EXISTS'
    if not ext_call.return_data[12 len 20]:
        revert with 0, 'UniswapV2: PAIRS_NOT_EXISTS'
    require ext_code.size(address(ext_call.return_data[0]))
    staticcall address(ext_call.return_data[0]).getReserves() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 96
    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
    require ext_code.size(address(ext_call.return_data[0]))
    staticcall address(ext_call.return_data[0]).getReserves() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 96
    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
    if wethAddress < address(arg3):
        if address(arg3) < wethAddress:
            idx = 10^17
            s = 0
            while idx + 10^17 < eth.balance(this.address) + 1:
                if uint255(idx + eth.balance(this.address) + 1) * 0.5 <= 0:
                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                if 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 / 997 != uint255(idx + eth.balance(this.address) + 1) * 0.5:
                    revert with 0, 'ds-math-mul-overflow'
                if not Mask(112, 0, ext_call.return_data[32]):
                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                        revert with 0, 'ds-math-mul-overflow'
                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                        revert with 0, 'ds-math-add-overflow'
                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5)
                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) <= 0:
                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                    if ext_call.return_data[18 len 14] <= 0:
                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                    if ext_call.return_data[50 len 14] <= 0:
                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5):
                        revert with 0, 'ds-math-mul-overflow'
                    if not ext_call.return_data[50 len 14]:
                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5)) < 1000 * ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))
                        if (uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16 <= 0:
                            revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                        if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[32]):
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16
                            if 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                revert with 0, 'ds-math-mul-overflow'
                            if not ext_call.return_data[50 len 14]:
                                if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                            else:
                                require ext_call.return_data[50 len 14]
                                if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                        else:
                            require Mask(112, 0, ext_call.return_data[32])
                            if (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16
                            if (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if 997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 / 997 != (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                revert with 0, 'ds-math-mul-overflow'
                            if not ext_call.return_data[50 len 14]:
                                if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                            else:
                                require ext_call.return_data[50 len 14]
                                if 997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                    else:
                        require ext_call.return_data[50 len 14]
                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5):
                            revert with 0, 'ds-math-mul-overflow'
                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5)) < 1000 * ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))
                        if (uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16 <= 0:
                            revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                        if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[32]):
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16
                            if 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                revert with 0, 'ds-math-mul-overflow'
                            if not ext_call.return_data[50 len 14]:
                                if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                            else:
                                require ext_call.return_data[50 len 14]
                                if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                        else:
                            require Mask(112, 0, ext_call.return_data[32])
                            if (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16
                            if (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if 997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 / 997 != (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                revert with 0, 'ds-math-mul-overflow'
                            if not ext_call.return_data[50 len 14]:
                                if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                            else:
                                require ext_call.return_data[50 len 14]
                                if 997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                else:
                    require Mask(112, 0, ext_call.return_data[32])
                    if 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5:
                        revert with 0, 'ds-math-mul-overflow'
                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                        revert with 0, 'ds-math-mul-overflow'
                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                        revert with 0, 'ds-math-add-overflow'
                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5)
                    if 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) <= 0:
                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                    if ext_call.return_data[18 len 14] <= 0:
                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                    if ext_call.return_data[50 len 14] <= 0:
                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                    if 997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) / 997 != 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5):
                        revert with 0, 'ds-math-mul-overflow'
                    if not ext_call.return_data[50 len 14]:
                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5)) < 1000 * ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))
                        if (uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16 <= 0:
                            revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                        if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[32]):
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16
                            if 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                revert with 0, 'ds-math-mul-overflow'
                            if not ext_call.return_data[50 len 14]:
                                if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                            else:
                                require ext_call.return_data[50 len 14]
                                if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                        else:
                            require Mask(112, 0, ext_call.return_data[32])
                            if (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16
                            if (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if 997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 / 997 != (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                revert with 0, 'ds-math-mul-overflow'
                            if not ext_call.return_data[50 len 14]:
                                if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                            else:
                                require ext_call.return_data[50 len 14]
                                if 997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                    else:
                        require ext_call.return_data[50 len 14]
                        if 997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5):
                            revert with 0, 'ds-math-mul-overflow'
                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5)) < 1000 * ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))
                        if (uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16 <= 0:
                            revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                        if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[32]):
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16
                            if 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                revert with 0, 'ds-math-mul-overflow'
                            if not ext_call.return_data[50 len 14]:
                                if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                            else:
                                require ext_call.return_data[50 len 14]
                                if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                        else:
                            require Mask(112, 0, ext_call.return_data[32])
                            if (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16
                            if (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if 997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 / 997 != (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                revert with 0, 'ds-math-mul-overflow'
                            if not ext_call.return_data[50 len 14]:
                                if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                            else:
                                require ext_call.return_data[50 len 14]
                                if 997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                idx = idx
                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                continue 
            if idx <= 0:
                revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
            if 997 * idx / 997 != idx:
                revert with 0, 'ds-math-mul-overflow'
            if not Mask(112, 0, ext_call.return_data[32]):
                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                    revert with 0, 'ds-math-mul-overflow'
                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * idx) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                    revert with 0, 'ds-math-add-overflow'
                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * idx):
                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * idx) <= 0:
                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                    if ext_call.return_data[18 len 14] <= 0:
                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                    if ext_call.return_data[50 len 14] <= 0:
                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * idx) / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * idx):
                        revert with 0, 'ds-math-mul-overflow'
                    if not ext_call.return_data[50 len 14]:
                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * idx)) < 1000 * ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * idx)):
                            return idx, 
                                   (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * idx))) - idx,
                                   eth.balance(this.address),
                                   ext_call.return_data[0] << 144,
                                   ext_call.return_data[32] << 144,
                                   ext_call.return_data[0] << 144,
                                   Mask(112, 0, ext_call.return_data[32])
                    else:
                        if ext_call.return_data[50 len 14]:
                            if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * idx) * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * idx):
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * idx)) < 1000 * ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * idx)):
                                return idx, 
                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * idx) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * idx))) - idx,
                                       eth.balance(this.address),
                                       ext_call.return_data[0] << 144,
                                       ext_call.return_data[32] << 144,
                                       ext_call.return_data[0] << 144,
                                       Mask(112, 0, ext_call.return_data[32])
            else:
                if Mask(112, 0, ext_call.return_data[32]):
                    if 997 * idx * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * idx:
                        revert with 0, 'ds-math-mul-overflow'
                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                        revert with 0, 'ds-math-mul-overflow'
                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * idx) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                        revert with 0, 'ds-math-add-overflow'
                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * idx):
                        if 997 * idx * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * idx) <= 0:
                            revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                        if ext_call.return_data[18 len 14] <= 0:
                            revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                        if ext_call.return_data[50 len 14] <= 0:
                            revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                        if 997 * 997 * idx * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * idx) / 997 != 997 * idx * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * idx):
                            revert with 0, 'ds-math-mul-overflow'
                        if not ext_call.return_data[50 len 14]:
                            if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * idx * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * idx)) < 1000 * ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            if (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * idx * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * idx)):
                                return idx, 
                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * idx * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * idx))) - idx,
                                       eth.balance(this.address),
                                       ext_call.return_data[0] << 144,
                                       ext_call.return_data[32] << 144,
                                       ext_call.return_data[0] << 144,
                                       Mask(112, 0, ext_call.return_data[32])
                        else:
                            if ext_call.return_data[50 len 14]:
                                if 997 * 997 * idx * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * idx) * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * 997 * idx * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * idx):
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * idx * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * idx)) < 1000 * ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                if (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * idx * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * idx)):
                                    return idx, 
                                           (997 * 997 * idx * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * idx) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * idx * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * idx))) - idx,
                                           eth.balance(this.address),
                                           ext_call.return_data[0] << 144,
                                           ext_call.return_data[32] << 144,
                                           ext_call.return_data[0] << 144,
                                           Mask(112, 0, ext_call.return_data[32])
        else:
            idx = 10^17
            s = 0
            while idx + 10^17 < eth.balance(this.address) + 1:
                if uint255(idx + eth.balance(this.address) + 1) * 0.5 <= 0:
                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                if 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 / 997 != uint255(idx + eth.balance(this.address) + 1) * 0.5:
                    revert with 0, 'ds-math-mul-overflow'
                if not Mask(112, 0, ext_call.return_data[32]):
                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                        revert with 0, 'ds-math-mul-overflow'
                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                        revert with 0, 'ds-math-add-overflow'
                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5)
                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) <= 0:
                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                    if ext_call.return_data[50 len 14] <= 0:
                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                    if ext_call.return_data[18 len 14] <= 0:
                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5):
                        revert with 0, 'ds-math-mul-overflow'
                    if not ext_call.return_data[18 len 14]:
                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5)) < 1000 * ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))
                        if (uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16 <= 0:
                            revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                        if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[32]):
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16
                            if 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                revert with 0, 'ds-math-mul-overflow'
                            if not ext_call.return_data[18 len 14]:
                                if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                            else:
                                require ext_call.return_data[18 len 14]
                                if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                        else:
                            require Mask(112, 0, ext_call.return_data[32])
                            if (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16
                            if (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if 997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 / 997 != (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                revert with 0, 'ds-math-mul-overflow'
                            if not ext_call.return_data[18 len 14]:
                                if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                            else:
                                require ext_call.return_data[18 len 14]
                                if 997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                    else:
                        require ext_call.return_data[18 len 14]
                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5):
                            revert with 0, 'ds-math-mul-overflow'
                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5)) < 1000 * ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))
                        if (uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16 <= 0:
                            revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                        if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[32]):
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16
                            if 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                revert with 0, 'ds-math-mul-overflow'
                            if not ext_call.return_data[18 len 14]:
                                if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                            else:
                                require ext_call.return_data[18 len 14]
                                if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                        else:
                            require Mask(112, 0, ext_call.return_data[32])
                            if (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16
                            if (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if 997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 / 997 != (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                revert with 0, 'ds-math-mul-overflow'
                            if not ext_call.return_data[18 len 14]:
                                if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                            else:
                                require ext_call.return_data[18 len 14]
                                if 997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                else:
                    require Mask(112, 0, ext_call.return_data[32])
                    if 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5:
                        revert with 0, 'ds-math-mul-overflow'
                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                        revert with 0, 'ds-math-mul-overflow'
                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                        revert with 0, 'ds-math-add-overflow'
                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5)
                    if 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) <= 0:
                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                    if ext_call.return_data[50 len 14] <= 0:
                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                    if ext_call.return_data[18 len 14] <= 0:
                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                    if 997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) / 997 != 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5):
                        revert with 0, 'ds-math-mul-overflow'
                    if not ext_call.return_data[18 len 14]:
                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5)) < 1000 * ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))
                        if (uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16 <= 0:
                            revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                        if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[32]):
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16
                            if 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                revert with 0, 'ds-math-mul-overflow'
                            if not ext_call.return_data[18 len 14]:
                                if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                            else:
                                require ext_call.return_data[18 len 14]
                                if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                        else:
                            require Mask(112, 0, ext_call.return_data[32])
                            if (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16
                            if (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if 997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 / 997 != (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                revert with 0, 'ds-math-mul-overflow'
                            if not ext_call.return_data[18 len 14]:
                                if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                            else:
                                require ext_call.return_data[18 len 14]
                                if 997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                    else:
                        require ext_call.return_data[18 len 14]
                        if 997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5):
                            revert with 0, 'ds-math-mul-overflow'
                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5)) < 1000 * ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))
                        if (uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16 <= 0:
                            revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                        if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[32]):
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16
                            if 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                revert with 0, 'ds-math-mul-overflow'
                            if not ext_call.return_data[18 len 14]:
                                if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                            else:
                                require ext_call.return_data[18 len 14]
                                if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                        else:
                            require Mask(112, 0, ext_call.return_data[32])
                            if (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16
                            if (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if 997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 / 997 != (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                revert with 0, 'ds-math-mul-overflow'
                            if not ext_call.return_data[18 len 14]:
                                if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                            else:
                                require ext_call.return_data[18 len 14]
                                if 997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[32])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / Mask(112, 0, ext_call.return_data[32]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[32])) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                idx = idx
                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                continue 
            if idx <= 0:
                revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
            if 997 * idx / 997 != idx:
                revert with 0, 'ds-math-mul-overflow'
            if not Mask(112, 0, ext_call.return_data[32]):
                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                    revert with 0, 'ds-math-mul-overflow'
                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * idx) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                    revert with 0, 'ds-math-add-overflow'
                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * idx):
                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * idx) <= 0:
                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                    if ext_call.return_data[50 len 14] <= 0:
                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                    if ext_call.return_data[18 len 14] <= 0:
                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * idx) / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * idx):
                        revert with 0, 'ds-math-mul-overflow'
                    if not ext_call.return_data[18 len 14]:
                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * idx)) < 1000 * ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * idx)):
                            return idx, 
                                   (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * idx))) - idx,
                                   eth.balance(this.address),
                                   ext_call.return_data[0] << 144,
                                   ext_call.return_data[32] << 144,
                                   ext_call.return_data[32] << 144,
                                   Mask(112, 0, ext_call.return_data[0])
                    else:
                        if ext_call.return_data[18 len 14]:
                            if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * idx) * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * idx):
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * idx)) < 1000 * ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * idx)):
                                return idx, 
                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * idx) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * idx))) - idx,
                                       eth.balance(this.address),
                                       ext_call.return_data[0] << 144,
                                       ext_call.return_data[32] << 144,
                                       ext_call.return_data[32] << 144,
                                       Mask(112, 0, ext_call.return_data[0])
            else:
                if Mask(112, 0, ext_call.return_data[32]):
                    if 997 * idx * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * idx:
                        revert with 0, 'ds-math-mul-overflow'
                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                        revert with 0, 'ds-math-mul-overflow'
                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * idx) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                        revert with 0, 'ds-math-add-overflow'
                    if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * idx):
                        if 997 * idx * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * idx) <= 0:
                            revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                        if ext_call.return_data[50 len 14] <= 0:
                            revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                        if ext_call.return_data[18 len 14] <= 0:
                            revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                        if 997 * 997 * idx * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * idx) / 997 != 997 * idx * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * idx):
                            revert with 0, 'ds-math-mul-overflow'
                        if not ext_call.return_data[18 len 14]:
                            if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * idx * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * idx)) < 1000 * ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            if (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * idx * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * idx)):
                                return idx, 
                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * idx * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * idx))) - idx,
                                       eth.balance(this.address),
                                       ext_call.return_data[0] << 144,
                                       ext_call.return_data[32] << 144,
                                       ext_call.return_data[32] << 144,
                                       Mask(112, 0, ext_call.return_data[0])
                        else:
                            if ext_call.return_data[18 len 14]:
                                if 997 * 997 * idx * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * idx) * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * 997 * idx * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * idx):
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * idx * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * idx)) < 1000 * ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                if (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * idx * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * idx)):
                                    return idx, 
                                           (997 * 997 * idx * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * idx) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * idx * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * idx))) - idx,
                                           eth.balance(this.address),
                                           ext_call.return_data[0] << 144,
                                           ext_call.return_data[32] << 144,
                                           ext_call.return_data[32] << 144,
                                           Mask(112, 0, ext_call.return_data[0])
    else:
        if address(arg3) < wethAddress:
            idx = 10^17
            s = 0
            while idx + 10^17 < eth.balance(this.address) + 1:
                if uint255(idx + eth.balance(this.address) + 1) * 0.5 <= 0:
                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                if 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 / 997 != uint255(idx + eth.balance(this.address) + 1) * 0.5:
                    revert with 0, 'ds-math-mul-overflow'
                if not Mask(112, 0, ext_call.return_data[0]):
                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                        revert with 0, 'ds-math-mul-overflow'
                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                        revert with 0, 'ds-math-add-overflow'
                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5)
                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) <= 0:
                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                    if ext_call.return_data[18 len 14] <= 0:
                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                    if ext_call.return_data[50 len 14] <= 0:
                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5):
                        revert with 0, 'ds-math-mul-overflow'
                    if not ext_call.return_data[50 len 14]:
                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5)) < 1000 * ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))
                        if (uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16 <= 0:
                            revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                        if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16
                            if 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                revert with 0, 'ds-math-mul-overflow'
                            if not ext_call.return_data[50 len 14]:
                                if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[0])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                            else:
                                require ext_call.return_data[50 len 14]
                                if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[0])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                        else:
                            require Mask(112, 0, ext_call.return_data[0])
                            if (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16
                            if (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if 997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 / 997 != (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                revert with 0, 'ds-math-mul-overflow'
                            if not ext_call.return_data[50 len 14]:
                                if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[0])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                            else:
                                require ext_call.return_data[50 len 14]
                                if 997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[0])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                    else:
                        require ext_call.return_data[50 len 14]
                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5):
                            revert with 0, 'ds-math-mul-overflow'
                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5)) < 1000 * ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))
                        if (uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16 <= 0:
                            revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                        if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16
                            if 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                revert with 0, 'ds-math-mul-overflow'
                            if not ext_call.return_data[50 len 14]:
                                if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[0])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                            else:
                                require ext_call.return_data[50 len 14]
                                if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[0])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                        else:
                            require Mask(112, 0, ext_call.return_data[0])
                            if (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16
                            if (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if 997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 / 997 != (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                revert with 0, 'ds-math-mul-overflow'
                            if not ext_call.return_data[50 len 14]:
                                if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[0])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                            else:
                                require ext_call.return_data[50 len 14]
                                if 997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[0])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                else:
                    require Mask(112, 0, ext_call.return_data[0])
                    if 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5:
                        revert with 0, 'ds-math-mul-overflow'
                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                        revert with 0, 'ds-math-mul-overflow'
                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                        revert with 0, 'ds-math-add-overflow'
                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5)
                    if 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) <= 0:
                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                    if ext_call.return_data[18 len 14] <= 0:
                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                    if ext_call.return_data[50 len 14] <= 0:
                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                    if 997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) / 997 != 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5):
                        revert with 0, 'ds-math-mul-overflow'
                    if not ext_call.return_data[50 len 14]:
                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5)) < 1000 * ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))
                        if (uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16 <= 0:
                            revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                        if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16
                            if 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                revert with 0, 'ds-math-mul-overflow'
                            if not ext_call.return_data[50 len 14]:
                                if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[0])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                            else:
                                require ext_call.return_data[50 len 14]
                                if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[0])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                        else:
                            require Mask(112, 0, ext_call.return_data[0])
                            if (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16
                            if (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if 997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 / 997 != (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                revert with 0, 'ds-math-mul-overflow'
                            if not ext_call.return_data[50 len 14]:
                                if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[0])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                            else:
                                require ext_call.return_data[50 len 14]
                                if 997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[0])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                    else:
                        require ext_call.return_data[50 len 14]
                        if 997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5):
                            revert with 0, 'ds-math-mul-overflow'
                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5)) < 1000 * ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))
                        if (uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16 <= 0:
                            revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                        if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16
                            if 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                revert with 0, 'ds-math-mul-overflow'
                            if not ext_call.return_data[50 len 14]:
                                if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[0])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                            else:
                                require ext_call.return_data[50 len 14]
                                if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[0])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                        else:
                            require Mask(112, 0, ext_call.return_data[0])
                            if (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16
                            if (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if 997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 / 997 != (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                revert with 0, 'ds-math-mul-overflow'
                            if not ext_call.return_data[50 len 14]:
                                if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[0])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                            else:
                                require ext_call.return_data[50 len 14]
                                if 997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[0])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[50 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       Mask(112, 0, ext_call.return_data[32])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                idx = idx
                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                continue 
            if idx <= 0:
                revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
            if 997 * idx / 997 != idx:
                revert with 0, 'ds-math-mul-overflow'
            if not Mask(112, 0, ext_call.return_data[0]):
                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                    revert with 0, 'ds-math-mul-overflow'
                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * idx) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                    revert with 0, 'ds-math-add-overflow'
                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * idx):
                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * idx) <= 0:
                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                    if ext_call.return_data[18 len 14] <= 0:
                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                    if ext_call.return_data[50 len 14] <= 0:
                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * idx) / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * idx):
                        revert with 0, 'ds-math-mul-overflow'
                    if not ext_call.return_data[50 len 14]:
                        if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * idx)) < 1000 * ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * idx)):
                            return idx, 
                                   (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * idx))) - idx,
                                   eth.balance(this.address),
                                   ext_call.return_data[32] << 144,
                                   ext_call.return_data[0] << 144,
                                   ext_call.return_data[0] << 144,
                                   Mask(112, 0, ext_call.return_data[32])
                    else:
                        if ext_call.return_data[50 len 14]:
                            if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * idx) * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * idx):
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * idx)) < 1000 * ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            if (1000 * ext_call.return_data[18 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * idx)):
                                return idx, 
                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * idx) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * idx))) - idx,
                                       eth.balance(this.address),
                                       ext_call.return_data[32] << 144,
                                       ext_call.return_data[0] << 144,
                                       ext_call.return_data[0] << 144,
                                       Mask(112, 0, ext_call.return_data[32])
            else:
                if Mask(112, 0, ext_call.return_data[0]):
                    if 997 * idx * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * idx:
                        revert with 0, 'ds-math-mul-overflow'
                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                        revert with 0, 'ds-math-mul-overflow'
                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * idx) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                        revert with 0, 'ds-math-add-overflow'
                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * idx):
                        if 997 * idx * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * idx) <= 0:
                            revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                        if ext_call.return_data[18 len 14] <= 0:
                            revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                        if ext_call.return_data[50 len 14] <= 0:
                            revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                        if 997 * 997 * idx * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * idx) / 997 != 997 * idx * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * idx):
                            revert with 0, 'ds-math-mul-overflow'
                        if not ext_call.return_data[50 len 14]:
                            if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * idx * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * idx)) < 1000 * ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            if (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * idx * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * idx)):
                                return idx, 
                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * idx * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * idx))) - idx,
                                       eth.balance(this.address),
                                       ext_call.return_data[32] << 144,
                                       ext_call.return_data[0] << 144,
                                       ext_call.return_data[0] << 144,
                                       Mask(112, 0, ext_call.return_data[32])
                        else:
                            if ext_call.return_data[50 len 14]:
                                if 997 * 997 * idx * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * idx) * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * 997 * idx * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * idx):
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * idx * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * idx)) < 1000 * ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                if (1000 * ext_call.return_data[18 len 14]) + (997 * 997 * idx * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * idx)):
                                    return idx, 
                                           (997 * 997 * idx * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * idx) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * 997 * idx * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * idx))) - idx,
                                           eth.balance(this.address),
                                           ext_call.return_data[32] << 144,
                                           ext_call.return_data[0] << 144,
                                           ext_call.return_data[0] << 144,
                                           Mask(112, 0, ext_call.return_data[32])
        else:
            idx = 10^17
            s = 0
            while idx + 10^17 < eth.balance(this.address) + 1:
                if uint255(idx + eth.balance(this.address) + 1) * 0.5 <= 0:
                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                if 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 / 997 != uint255(idx + eth.balance(this.address) + 1) * 0.5:
                    revert with 0, 'ds-math-mul-overflow'
                if not Mask(112, 0, ext_call.return_data[0]):
                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                        revert with 0, 'ds-math-mul-overflow'
                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                        revert with 0, 'ds-math-add-overflow'
                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5)
                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) <= 0:
                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                    if ext_call.return_data[50 len 14] <= 0:
                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                    if ext_call.return_data[18 len 14] <= 0:
                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5):
                        revert with 0, 'ds-math-mul-overflow'
                    if not ext_call.return_data[18 len 14]:
                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5)) < 1000 * ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))
                        if (uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16 <= 0:
                            revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                        if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16
                            if 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                revert with 0, 'ds-math-mul-overflow'
                            if not ext_call.return_data[18 len 14]:
                                if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[0])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                            else:
                                require ext_call.return_data[18 len 14]
                                if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[0])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                        else:
                            require Mask(112, 0, ext_call.return_data[0])
                            if (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16
                            if (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if 997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 / 997 != (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                revert with 0, 'ds-math-mul-overflow'
                            if not ext_call.return_data[18 len 14]:
                                if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[0])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                            else:
                                require ext_call.return_data[18 len 14]
                                if 997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[0])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                    else:
                        require ext_call.return_data[18 len 14]
                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5):
                            revert with 0, 'ds-math-mul-overflow'
                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5)) < 1000 * ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))
                        if (uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16 <= 0:
                            revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                        if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16
                            if 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                revert with 0, 'ds-math-mul-overflow'
                            if not ext_call.return_data[18 len 14]:
                                if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[0])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                            else:
                                require ext_call.return_data[18 len 14]
                                if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[0])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                        else:
                            require Mask(112, 0, ext_call.return_data[0])
                            if (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16
                            if (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if 997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 / 997 != (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                revert with 0, 'ds-math-mul-overflow'
                            if not ext_call.return_data[18 len 14]:
                                if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[0])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                            else:
                                require ext_call.return_data[18 len 14]
                                if 997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[0])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                else:
                    require Mask(112, 0, ext_call.return_data[0])
                    if 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5:
                        revert with 0, 'ds-math-mul-overflow'
                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                        revert with 0, 'ds-math-mul-overflow'
                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                        revert with 0, 'ds-math-add-overflow'
                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5)
                    if 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) <= 0:
                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                    if ext_call.return_data[50 len 14] <= 0:
                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                    if ext_call.return_data[18 len 14] <= 0:
                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                    if 997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) / 997 != 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5):
                        revert with 0, 'ds-math-mul-overflow'
                    if not ext_call.return_data[18 len 14]:
                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5)) < 1000 * ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))
                        if (uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16 <= 0:
                            revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                        if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16
                            if 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                revert with 0, 'ds-math-mul-overflow'
                            if not ext_call.return_data[18 len 14]:
                                if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[0])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                            else:
                                require ext_call.return_data[18 len 14]
                                if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[0])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                        else:
                            require Mask(112, 0, ext_call.return_data[0])
                            if (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16
                            if (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if 997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 / 997 != (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                revert with 0, 'ds-math-mul-overflow'
                            if not ext_call.return_data[18 len 14]:
                                if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[0])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                            else:
                                require ext_call.return_data[18 len 14]
                                if 997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[0])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                    else:
                        require ext_call.return_data[18 len 14]
                        if 997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5):
                            revert with 0, 'ds-math-mul-overflow'
                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5)) < 1000 * ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))
                        if (uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16 <= 0:
                            revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                        if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16
                            if 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                revert with 0, 'ds-math-mul-overflow'
                            if not ext_call.return_data[18 len 14]:
                                if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[0])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                            else:
                                require ext_call.return_data[18 len 14]
                                if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[0])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                        else:
                            require Mask(112, 0, ext_call.return_data[0])
                            if (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16
                            if (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                            if ext_call.return_data[50 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if ext_call.return_data[18 len 14] <= 0:
                                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                            if 997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 / 997 != (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                revert with 0, 'ds-math-mul-overflow'
                            if not ext_call.return_data[18 len 14]:
                                if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[0])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                            else:
                                require ext_call.return_data[18 len 14]
                                if 997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)
                                if (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16 <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                if (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                    revert with 0, 'ds-math-mul-overflow'
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                else:
                                    require Mask(112, 0, ext_call.return_data[0])
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / Mask(112, 0, ext_call.return_data[0]) != (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-mul-overflow'
                                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 'ds-math-add-overflow'
                                    require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16
                                    if (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                                    if ext_call.return_data[50 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if ext_call.return_data[18 len 14] <= 0:
                                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                                    if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 / 997 != (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                        revert with 0, 'ds-math-mul-overflow'
                                    if not ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                                    else:
                                        require ext_call.return_data[18 len 14]
                                        if 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-mul-overflow'
                                        if (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16) < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'ds-math-add-overflow'
                                        require (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                                return 2 * Mask(256, -1, idx + eth.balance(this.address) + 1), 
                                                       (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5),
                                                       eth.balance(this.address),
                                                       ext_call.return_data[32] << 144,
                                                       ext_call.return_data[0] << 144,
                                                       ext_call.return_data[32] << 144,
                                                       Mask(112, 0, ext_call.return_data[0])
                                            if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) > (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (-997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) - 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) + 10^16:
                                                idx = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                                                continue 
                                        if (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5))) - (uint255(idx + eth.balance(this.address) + 1) * 0.5) <= (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * (997 * 10^16 * Mask(112, 0, ext_call.return_data[0])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5 * Mask(112, 0, ext_call.return_data[0])) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * uint255(idx + eth.balance(this.address) + 1) * 0.5) + 997 * 10^16)) + -(uint255(idx + eth.balance(this.address) + 1) * 0.5) - 10^16:
                                            revert with 0, 'error'
                idx = idx
                s = uint255(idx + eth.balance(this.address) + 1) * 0.5
                continue 
            if idx <= 0:
                revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
            if 997 * idx / 997 != idx:
                revert with 0, 'ds-math-mul-overflow'
            if not Mask(112, 0, ext_call.return_data[0]):
                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                    revert with 0, 'ds-math-mul-overflow'
                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * idx) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                    revert with 0, 'ds-math-add-overflow'
                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * idx):
                    if 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * idx) <= 0:
                        revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                    if ext_call.return_data[50 len 14] <= 0:
                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                    if ext_call.return_data[18 len 14] <= 0:
                        revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                    if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * idx) / 997 != 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * idx):
                        revert with 0, 'ds-math-mul-overflow'
                    if not ext_call.return_data[18 len 14]:
                        if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * idx)) < 1000 * ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * idx)):
                            return idx, 
                                   (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * idx))) - idx,
                                   eth.balance(this.address),
                                   ext_call.return_data[32] << 144,
                                   ext_call.return_data[0] << 144,
                                   ext_call.return_data[32] << 144,
                                   Mask(112, 0, ext_call.return_data[0])
                    else:
                        if ext_call.return_data[18 len 14]:
                            if 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * idx) * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * idx):
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * idx)) < 1000 * ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            if (1000 * ext_call.return_data[50 len 14]) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * idx)):
                                return idx, 
                                       (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * idx) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * idx))) - idx,
                                       eth.balance(this.address),
                                       ext_call.return_data[32] << 144,
                                       ext_call.return_data[0] << 144,
                                       ext_call.return_data[32] << 144,
                                       Mask(112, 0, ext_call.return_data[0])
            else:
                if Mask(112, 0, ext_call.return_data[0]):
                    if 997 * idx * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * idx:
                        revert with 0, 'ds-math-mul-overflow'
                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                        revert with 0, 'ds-math-mul-overflow'
                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * idx) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                        revert with 0, 'ds-math-add-overflow'
                    if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * idx):
                        if 997 * idx * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * idx) <= 0:
                            revert with 0, 'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'
                        if ext_call.return_data[50 len 14] <= 0:
                            revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                        if ext_call.return_data[18 len 14] <= 0:
                            revert with 0, 'UniswapV2Library: INSUFFICIENT_LIQUIDITY'
                        if 997 * 997 * idx * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * idx) / 997 != 997 * idx * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * idx):
                            revert with 0, 'ds-math-mul-overflow'
                        if not ext_call.return_data[18 len 14]:
                            if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * idx * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * idx)) < 1000 * ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            if (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * idx * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * idx)):
                                return idx, 
                                       (0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * idx * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * idx))) - idx,
                                       eth.balance(this.address),
                                       ext_call.return_data[32] << 144,
                                       ext_call.return_data[0] << 144,
                                       ext_call.return_data[32] << 144,
                                       Mask(112, 0, ext_call.return_data[0])
                        else:
                            if ext_call.return_data[18 len 14]:
                                if 997 * 997 * idx * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * idx) * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * 997 * idx * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * idx):
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * idx * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * idx)) < 1000 * ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                if (1000 * ext_call.return_data[50 len 14]) + (997 * 997 * idx * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * idx)):
                                    return idx, 
                                           (997 * 997 * idx * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * idx) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * 997 * idx * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * idx))) - idx,
                                           eth.balance(this.address),
                                           ext_call.return_data[32] << 144,
                                           ext_call.return_data[0] << 144,
                                           ext_call.return_data[32] << 144,
                                           Mask(112, 0, ext_call.return_data[0])
    revert
}



}
