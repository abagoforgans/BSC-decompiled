contract main {




// =====================  Runtime code  =====================


#
#  - sub_786304ee(?)
#  - sub_c419e693(?)
#
address owner;
uint256 stor1;
uint256 stor2;
address factoryAddress;
mapping of uint256 sub_f6692c0a;
mapping of uint256 sub_acaed29c;
mapping of uint8 stor6;

function getOwner() {
    return owner
}

function sub_acaed29c(?) {
    require calldata.size - 4 >= 32
    return sub_acaed29c[address(arg1)]
}

function factory() {
    return factoryAddress
}

function sub_f6692c0a(?) {
    require calldata.size - 4 >= 32
    return sub_f6692c0a[address(arg1)]
}

function isAuthorized(address arg1) {
    require calldata.size - 4 >= 32
    return bool(stor6[address(arg1)])
}

function _fallback() payable {
    revert
}

function bid() payable {
    stor1 += msg.value
}

function isOwner(address arg1) {
    require calldata.size - 4 >= 32
    return (arg1 == owner)
}

function getBalance() {
    if owner != msg.sender:
        revert with 0, '!OWNER'
    return eth.balance(this.address)
}

function unauthorize(address arg1) {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, '!OWNER'
    stor6[address(arg1)] = 0
}

function sub_15be559d(?) {
    require calldata.size - 4 >= 64
    if owner != msg.sender:
        revert with 0, '!OWNER'
    factoryAddress = arg1
    stor2 = arg2
    return 1
}

function sub_776b0d38(?) {
    require calldata.size - 4 >= 96
    if owner != msg.sender:
        revert with 0, '!OWNER'
    sub_acaed29c[address(arg1)] = arg2
    sub_f6692c0a[address(arg1)] = arg3
}

function sub_deac8dbc(?) {
    require calldata.size - 4 >= 32
    require cd[4] <= 4294967296
    require cd[4] + 36 <= calldata.size
    require ('cd', 4).length <= 4294967296 and cd[4] + (32 * ('cd', 4).length) + 36 <= calldata.size
    if owner != msg.sender:
        revert with 0, '!OWNER'
    idx = 0
    while idx < ('cd', 4).length:
        mem[0] = address(cd[((32 * idx) + cd[4] + 36)])
        mem[32] = 6
        stor6[address(cd[((32 * idx) + cd[4] + 36)])] = 1
        idx = idx + 1
        continue 
    return 1
}

function getPairFor(address arg1, address arg2) {
    require calldata.size - 4 >= 64
    if arg1 == arg2:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    35,
                    0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345,
                    mem[199 len 29]
    if arg1 < arg2:
        if not arg1:
            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
        return address(sha3(0, factoryAddress, sha3(arg1, arg2), sub_acaed29c[stor3]))
    if not arg2:
        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
    return address(sha3(0, factoryAddress, sha3(arg2, arg1), sub_acaed29c[stor3]))
}

function sub_e2c27a67(?) {
    require calldata.size - 4 >= 32
    require cd[4] <= 4294967296
    require cd[4] + 36 <= calldata.size
    require ('cd', 4).length <= 4294967296 and cd[4] + (32 * ('cd', 4).length) + 36 <= calldata.size
    if owner != msg.sender:
        revert with 0, '!OWNER'
    idx = 0
    while idx < ('cd', 4).length:
        mem[100] = this.address
        mem[132] = -1
        require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
        call address(cd[((32 * idx) + cd[4] + 36)]).approve(address arg1, uint256 arg2) with:
             gas gas_remaining wei
            args address(this.address), -1
        mem[96] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        idx = idx + 1
        continue 
    return 1
}

function sub_af52f0b4(?) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, '!OWNER'
    call arg1 with:
       value eth.balance(this.address) wei
         gas gas_remaining wei
    if not return_data.size:
        if not ext_call.success:
            revert with 0, 
                        32,
                        52,
                        0x645472616e7366657248656c7065723a3a736166655472616e736665724554483a20455448207472616e73666572206661696c65,
                        mem[248 len 12]
    else:
        if not ext_call.success:
            revert with 0, 
                        32,
                        52,
                        0x645472616e7366657248656c7065723a3a736166655472616e736665724554483a20455448207472616e73666572206661696c65,
                        mem[ceil32(return_data.size) + 249 len 12]
    ('bool', 'ext_call.success')
}

function batchList(address[] arg1) payable {
    mem[64] = 96
    require calldata.size - 4 >= 32
    require arg1 <= 4294967296
    require arg1 + 36 <= calldata.size
    require arg1.length <= 4294967296 and arg1 + (32 * arg1.length) + 36 <= calldata.size
    if owner != msg.sender:
        revert with 0, '!OWNER'
    require arg1.length
    idx = 0
    while idx < arg1.length:
        _19 = mem[64]
        mem[mem[64]] = 0
        mem[64] = mem[64] + 32
        _21 = mem[_19]
        t = _19 + 32
        u = mem[64]
        s = mem[_19]
        while s >= 32:
            mem[u] = mem[t]
            t = t + 32
            u = u + 32
            s = s - 32
            continue 
        mem[mem[64] + floor32(mem[_19])] = mem[_19 + floor32(mem[_19]) + -(mem[_19] % 32) + 64 len mem[_19] % 32] or Mask(8 * -(mem[_19] % 32) + 32, -(8 * -(mem[_19] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_19])])
        call address(cd[((32 * idx) + arg1 + 36)]).mem[mem[64] len 4] with:
           value msg.value / arg1.length wei
             gas gas_remaining wei
            args mem[mem[64] + 4 len _21 + _19 + -mem[64] + 28]
        if return_data.size:
            _35 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size) + 1
            mem[_35] = return_data.size
            mem[_35 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
        if not ext_call.success:
            revert with 0, 
                        32,
                        52,
                        0x645472616e7366657248656c7065723a3a736166655472616e736665724554483a20455448207472616e73666572206661696c65,
                        mem[mem[64] + 120 len 12]
        idx = idx + 1
        continue 
    return (msg.value / arg1.length)
}

function sub_a0c99ff2(?) payable {
    require calldata.size - 4 >= 64
    if owner != msg.sender:
        revert with 0, '!OWNER'
    require ext_code.size(arg1)
    staticcall arg1.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    mem[196 len 64] = unknown_0xa9059cbb(?????), address(arg2) << 64, 0, ext_call.return_data[0 len 28]
    call arg1 with:
         gas gas_remaining wei
        args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[260 len 4]
    if not return_data.size:
        if not ext_call.success:
            revert with 0, 
                        32,
                        45,
                        0x535472616e7366657248656c7065723a3a736166655472616e736665723a207472616e73666572206661696c65,
                        mem[309 len 19]
        if not unknown_0xa9059cbb(?????), address(arg2) << 64:
            revert with 0, 
                        32,
                        45,
                        0x535472616e7366657248656c7065723a3a736166655472616e736665723a207472616e73666572206661696c65,
                        mem[309 len 19]
    else:
        mem[228 len return_data.size] = ext_call.return_data[0 len return_data.size]
        if not ext_call.success:
            revert with 0, 
                        32,
                        45,
                        0x535472616e7366657248656c7065723a3a736166655472616e736665723a207472616e73666572206661696c65,
                        mem[ceil32(return_data.size) + 310 len 19]
        if return_data.size:
            require return_data.size >= 32
            if not mem[228]:
                revert with 0, 
                            32,
                            45,
                            0x535472616e7366657248656c7065723a3a736166655472616e736665723a207472616e73666572206661696c65,
                            mem[ceil32(return_data.size) + 310 len 19]
}

function sub_c80079ed(?) {
    require calldata.size - 4 >= 64
    if arg1 == arg2:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    35,
                    0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345,
                    mem[199 len 29]
    if arg1 < arg2:
        if not arg1:
            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
        require ext_code.size(arg1)
        staticcall arg1.0x70a08231 with:
                gas gas_remaining wei
               args address(sha3(0, factoryAddress, sha3(arg1, arg2), sub_acaed29c[stor3]))
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(arg2)
        staticcall arg2.0x70a08231 with:
                gas gas_remaining wei
               args address(sha3(0, factoryAddress, sha3(arg1, arg2), sub_acaed29c[stor3]))
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        mem[349 len 1280] = ext_call.return_data[0], ext_call.return_data[0], 0, 0, factoryAddress, sha3(arg1, arg2), sub_acaed29c[stor3], 32, 40, mem[349 len 1059]
    else:
        if not arg2:
            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
        require ext_code.size(arg1)
        staticcall arg1.0x70a08231 with:
                gas gas_remaining wei
               args address(sha3(0, factoryAddress, sha3(arg2, arg1), sub_acaed29c[stor3]))
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(arg2)
        staticcall arg2.0x70a08231 with:
                gas gas_remaining wei
               args address(sha3(0, factoryAddress, sha3(arg2, arg1), sub_acaed29c[stor3]))
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        mem[349 len 1280] = ext_call.return_data[0], ext_call.return_data[0], 0, 0, factoryAddress, sha3(arg2, arg1), sub_acaed29c[stor3], 32, 40, mem[349 len 1059]
    return Array(len=40, data=mem[349 len 1280])
}

function getAmountsOut(uint256 arg1, address[] arg2) {
    require calldata.size - 4 >= 64
    require arg2 <= 4294967296
    require arg2 + 36 <= calldata.size
    require arg2.length <= 4294967296 and arg2 + (32 * arg2.length) + 36 <= calldata.size
    mem[96] = arg2.length
    mem[128 len 32 * arg2.length] = call.data[arg2 + 36 len 32 * arg2.length]
    mem[0] = factoryAddress
    mem[32] = 4
    if arg2.length < 2:
        revert with 0, 'PancakeLibrary: INVALID_PATH'
    require arg2.length <= test266151307()
    mem[(32 * arg2.length) + 128] = arg2.length
    mem[64] = (64 * arg2.length) + 160
    if not arg2.length:
        require 0 < arg2.length
        mem[(32 * arg2.length) + 160] = arg1
        idx = 0
        while idx < arg2.length - 1:
            require idx < mem[96]
            _1495 = mem[(32 * idx) + 128]
            require idx + 1 < mem[96]
            _1502 = mem[(32 * idx + 1) + 128]
            if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
            if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                if not mem[(32 * idx) + 140 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                    if not mem[(32 * idx) + 140 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    _1547 = mem[64]
                    mem[mem[64] + 32] = address(mem[(32 * idx) + 128])
                    mem[mem[64] + 52] = address(_1502)
                    _1548 = mem[64]
                    mem[mem[64]] = 40
                    mem[64] = mem[64] + 72
                    _1550 = sha3(mem[_1548 + 32 len mem[_1548]])
                    mem[_1547 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_1547 + 105] = factoryAddress
                    mem[_1547 + 125] = _1550
                    mem[_1547 + 157] = sub_acaed29c[stor3]
                    mem[_1547 + 72] = 85
                    if address(_1495) == address(_1502):
                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_1547 + 292 len 29]
                    if address(_1495) < address(_1502):
                        if not address(_1495):
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_1547 + 221] = address(_1495)
                        mem[_1547 + 241] = address(_1502)
                        mem[_1547 + 189] = 40
                        mem[_1547 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_1547 + 294] = factoryAddress
                        mem[_1547 + 314] = sha3(address(_1495), address(_1502))
                        mem[_1547 + 346] = sub_acaed29c[stor3]
                        mem[_1547 + 261] = 85
                        mem[64] = _1547 + 378
                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_1495), address(_1502)), sub_acaed29c[stor3])))
                        staticcall address(sha3(0, factoryAddress, sha3(address(_1495), address(_1502)), sub_acaed29c[stor3])).getReserves() with:
                                gas gas_remaining wei
                    else:
                        if not address(_1502):
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_1547 + 221] = address(_1502)
                        mem[_1547 + 241] = address(_1495)
                        mem[_1547 + 189] = 40
                        mem[_1547 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_1547 + 294] = factoryAddress
                        mem[_1547 + 314] = sha3(address(_1502), address(_1495))
                        mem[_1547 + 346] = sub_acaed29c[stor3]
                        mem[_1547 + 261] = 85
                        mem[64] = _1547 + 378
                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_1502), address(_1495)), sub_acaed29c[stor3])))
                        staticcall address(sha3(0, factoryAddress, sha3(address(_1502), address(_1495)), sub_acaed29c[stor3])).getReserves() with:
                                gas gas_remaining wei
                    mem[_1547 + 378 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 96
                    require idx < mem[(32 * arg2.length) + 128]
                    if mem[(32 * idx) + (32 * arg2.length) + 160] <= 0:
                        revert with 0, 
                                    32,
                                    41,
                                    0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                    mem[_1547 + 487 len 23]
                    if address(_1495) == address(_1495):
                        if ext_call.return_data[18 len 14] <= 0:
                            revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1547 + 484 len 26]
                        if ext_call.return_data[50 len 14] <= 0:
                            revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1547 + 484 len 26]
                        if not sub_f6692c0a[stor3]:
                            if ext_call.return_data[50 len 14]:
                                require ext_call.return_data[50 len 14]
                                if 0 / ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[18 len 14] < 10000 * ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require 10000 * ext_call.return_data[18 len 14]
                            require idx + 1 < mem[(32 * arg2.length) + 128]
                            mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0 / 10000 * ext_call.return_data[18 len 14]
                        else:
                            require sub_f6692c0a[stor3]
                            if mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3] / sub_f6692c0a[stor3] != mem[(32 * idx) + (32 * arg2.length) + 160]:
                                revert with 0, 'ds-math-mul-overflow'
                            if not ext_call.return_data[50 len 14]:
                                if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                                require idx + 1 < mem[(32 * arg2.length) + 128]
                                mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0 / (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                            else:
                                require ext_call.return_data[50 len 14]
                                if mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                                require idx + 1 < mem[(32 * arg2.length) + 128]
                                mem[(32 * idx + 1) + (32 * arg2.length) + 160] = mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[50 len 14] / (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                    else:
                        if ext_call.return_data[50 len 14] <= 0:
                            revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1547 + 484 len 26]
                        if ext_call.return_data[18 len 14] <= 0:
                            revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1547 + 484 len 26]
                        if not sub_f6692c0a[stor3]:
                            if ext_call.return_data[18 len 14]:
                                require ext_call.return_data[18 len 14]
                                if 0 / ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[50 len 14] < 10000 * ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require 10000 * ext_call.return_data[50 len 14]
                            require idx + 1 < mem[(32 * arg2.length) + 128]
                            mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0 / 10000 * ext_call.return_data[50 len 14]
                        else:
                            require sub_f6692c0a[stor3]
                            if mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3] / sub_f6692c0a[stor3] != mem[(32 * idx) + (32 * arg2.length) + 160]:
                                revert with 0, 'ds-math-mul-overflow'
                            if not ext_call.return_data[18 len 14]:
                                if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                                require idx + 1 < mem[(32 * arg2.length) + 128]
                                mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0 / (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                            else:
                                require ext_call.return_data[18 len 14]
                                if mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                                require idx + 1 < mem[(32 * arg2.length) + 128]
                                mem[(32 * idx + 1) + (32 * arg2.length) + 160] = mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[18 len 14] / (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                else:
                    if not mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    _1555 = mem[64]
                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + 128])
                    mem[mem[64] + 52] = address(_1495)
                    _1556 = mem[64]
                    mem[mem[64]] = 40
                    mem[64] = mem[64] + 72
                    _1558 = sha3(mem[_1556 + 32 len mem[_1556]])
                    mem[_1555 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_1555 + 105] = factoryAddress
                    mem[_1555 + 125] = _1558
                    mem[_1555 + 157] = sub_acaed29c[stor3]
                    mem[_1555 + 72] = 85
                    if address(_1495) == address(_1502):
                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_1555 + 292 len 29]
                    if address(_1495) < address(_1502):
                        if not address(_1495):
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_1555 + 221] = address(_1495)
                        mem[_1555 + 241] = address(_1502)
                        mem[_1555 + 189] = 40
                        mem[_1555 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_1555 + 294] = factoryAddress
                        mem[_1555 + 314] = sha3(address(_1495), address(_1502))
                        mem[_1555 + 346] = sub_acaed29c[stor3]
                        mem[_1555 + 261] = 85
                        mem[64] = _1555 + 378
                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_1495), address(_1502)), sub_acaed29c[stor3])))
                        staticcall address(sha3(0, factoryAddress, sha3(address(_1495), address(_1502)), sub_acaed29c[stor3])).getReserves() with:
                                gas gas_remaining wei
                    else:
                        if not address(_1502):
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_1555 + 221] = address(_1502)
                        mem[_1555 + 241] = address(_1495)
                        mem[_1555 + 189] = 40
                        mem[_1555 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_1555 + 294] = factoryAddress
                        mem[_1555 + 314] = sha3(address(_1502), address(_1495))
                        mem[_1555 + 346] = sub_acaed29c[stor3]
                        mem[_1555 + 261] = 85
                        mem[64] = _1555 + 378
                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_1502), address(_1495)), sub_acaed29c[stor3])))
                        staticcall address(sha3(0, factoryAddress, sha3(address(_1502), address(_1495)), sub_acaed29c[stor3])).getReserves() with:
                                gas gas_remaining wei
                    mem[_1555 + 378 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 96
                    require idx < mem[(32 * arg2.length) + 128]
                    if mem[(32 * idx) + (32 * arg2.length) + 160] <= 0:
                        revert with 0, 
                                    32,
                                    41,
                                    0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                    mem[_1555 + 487 len 23]
                    if address(_1495) == address(_1495):
                        if ext_call.return_data[18 len 14] <= 0:
                            revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1555 + 484 len 26]
                        if ext_call.return_data[50 len 14] <= 0:
                            revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1555 + 484 len 26]
                        if not sub_f6692c0a[stor3]:
                            if ext_call.return_data[50 len 14]:
                                require ext_call.return_data[50 len 14]
                                if 0 / ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[18 len 14] < 10000 * ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require 10000 * ext_call.return_data[18 len 14]
                            require idx + 1 < mem[(32 * arg2.length) + 128]
                            mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0 / 10000 * ext_call.return_data[18 len 14]
                        else:
                            require sub_f6692c0a[stor3]
                            if mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3] / sub_f6692c0a[stor3] != mem[(32 * idx) + (32 * arg2.length) + 160]:
                                revert with 0, 'ds-math-mul-overflow'
                            if not ext_call.return_data[50 len 14]:
                                if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                                require idx + 1 < mem[(32 * arg2.length) + 128]
                                mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0 / (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                            else:
                                require ext_call.return_data[50 len 14]
                                if mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                                require idx + 1 < mem[(32 * arg2.length) + 128]
                                mem[(32 * idx + 1) + (32 * arg2.length) + 160] = mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[50 len 14] / (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                    else:
                        if ext_call.return_data[50 len 14] <= 0:
                            revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1555 + 484 len 26]
                        if ext_call.return_data[18 len 14] <= 0:
                            revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1555 + 484 len 26]
                        if not sub_f6692c0a[stor3]:
                            if ext_call.return_data[18 len 14]:
                                require ext_call.return_data[18 len 14]
                                if 0 / ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[50 len 14] < 10000 * ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require 10000 * ext_call.return_data[50 len 14]
                            require idx + 1 < mem[(32 * arg2.length) + 128]
                            mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0 / 10000 * ext_call.return_data[50 len 14]
                        else:
                            require sub_f6692c0a[stor3]
                            if mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3] / sub_f6692c0a[stor3] != mem[(32 * idx) + (32 * arg2.length) + 160]:
                                revert with 0, 'ds-math-mul-overflow'
                            if not ext_call.return_data[18 len 14]:
                                if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                                require idx + 1 < mem[(32 * arg2.length) + 128]
                                mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0 / (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                            else:
                                require ext_call.return_data[18 len 14]
                                if mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                                require idx + 1 < mem[(32 * arg2.length) + 128]
                                mem[(32 * idx + 1) + (32 * arg2.length) + 160] = mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[18 len 14] / (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
            else:
                if not mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                    if not mem[(32 * idx) + 140 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    _1563 = mem[64]
                    mem[mem[64] + 32] = address(mem[(32 * idx) + 128])
                    mem[mem[64] + 52] = address(_1502)
                    _1564 = mem[64]
                    mem[mem[64]] = 40
                    mem[64] = mem[64] + 72
                    _1566 = sha3(mem[_1564 + 32 len mem[_1564]])
                    mem[_1563 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_1563 + 105] = factoryAddress
                    mem[_1563 + 125] = _1566
                    mem[_1563 + 157] = sub_acaed29c[stor3]
                    mem[_1563 + 72] = 85
                    if address(_1495) == address(_1502):
                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_1563 + 292 len 29]
                    if address(_1495) < address(_1502):
                        if not address(_1495):
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_1563 + 221] = address(_1495)
                        mem[_1563 + 241] = address(_1502)
                        mem[_1563 + 189] = 40
                        mem[_1563 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_1563 + 294] = factoryAddress
                        mem[_1563 + 314] = sha3(address(_1495), address(_1502))
                        mem[_1563 + 346] = sub_acaed29c[stor3]
                        mem[_1563 + 261] = 85
                        mem[64] = _1563 + 378
                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_1495), address(_1502)), sub_acaed29c[stor3])))
                        staticcall address(sha3(0, factoryAddress, sha3(address(_1495), address(_1502)), sub_acaed29c[stor3])).getReserves() with:
                                gas gas_remaining wei
                    else:
                        if not address(_1502):
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_1563 + 221] = address(_1502)
                        mem[_1563 + 241] = address(_1495)
                        mem[_1563 + 189] = 40
                        mem[_1563 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_1563 + 294] = factoryAddress
                        mem[_1563 + 314] = sha3(address(_1502), address(_1495))
                        mem[_1563 + 346] = sub_acaed29c[stor3]
                        mem[_1563 + 261] = 85
                        mem[64] = _1563 + 378
                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_1502), address(_1495)), sub_acaed29c[stor3])))
                        staticcall address(sha3(0, factoryAddress, sha3(address(_1502), address(_1495)), sub_acaed29c[stor3])).getReserves() with:
                                gas gas_remaining wei
                    mem[_1563 + 378 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 96
                    require idx < mem[(32 * arg2.length) + 128]
                    if mem[(32 * idx) + (32 * arg2.length) + 160] <= 0:
                        revert with 0, 
                                    32,
                                    41,
                                    0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                    mem[_1563 + 487 len 23]
                    if address(_1495) == address(_1502):
                        if ext_call.return_data[18 len 14] <= 0:
                            revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1563 + 484 len 26]
                        if ext_call.return_data[50 len 14] <= 0:
                            revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1563 + 484 len 26]
                        if not sub_f6692c0a[stor3]:
                            if ext_call.return_data[50 len 14]:
                                require ext_call.return_data[50 len 14]
                                if 0 / ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[18 len 14] < 10000 * ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require 10000 * ext_call.return_data[18 len 14]
                            require idx + 1 < mem[(32 * arg2.length) + 128]
                            mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0 / 10000 * ext_call.return_data[18 len 14]
                        else:
                            require sub_f6692c0a[stor3]
                            if mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3] / sub_f6692c0a[stor3] != mem[(32 * idx) + (32 * arg2.length) + 160]:
                                revert with 0, 'ds-math-mul-overflow'
                            if not ext_call.return_data[50 len 14]:
                                if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                                require idx + 1 < mem[(32 * arg2.length) + 128]
                                mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0 / (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                            else:
                                require ext_call.return_data[50 len 14]
                                if mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                                require idx + 1 < mem[(32 * arg2.length) + 128]
                                mem[(32 * idx + 1) + (32 * arg2.length) + 160] = mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[50 len 14] / (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                    else:
                        if ext_call.return_data[50 len 14] <= 0:
                            revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1563 + 484 len 26]
                        if ext_call.return_data[18 len 14] <= 0:
                            revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1563 + 484 len 26]
                        if not sub_f6692c0a[stor3]:
                            if ext_call.return_data[18 len 14]:
                                require ext_call.return_data[18 len 14]
                                if 0 / ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[50 len 14] < 10000 * ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require 10000 * ext_call.return_data[50 len 14]
                            require idx + 1 < mem[(32 * arg2.length) + 128]
                            mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0 / 10000 * ext_call.return_data[50 len 14]
                        else:
                            require sub_f6692c0a[stor3]
                            if mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3] / sub_f6692c0a[stor3] != mem[(32 * idx) + (32 * arg2.length) + 160]:
                                revert with 0, 'ds-math-mul-overflow'
                            if not ext_call.return_data[18 len 14]:
                                if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                                require idx + 1 < mem[(32 * arg2.length) + 128]
                                mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0 / (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                            else:
                                require ext_call.return_data[18 len 14]
                                if mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                                require idx + 1 < mem[(32 * arg2.length) + 128]
                                mem[(32 * idx + 1) + (32 * arg2.length) + 160] = mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[18 len 14] / (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                else:
                    if not mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    _1571 = mem[64]
                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + 128])
                    mem[mem[64] + 52] = address(_1495)
                    _1572 = mem[64]
                    mem[mem[64]] = 40
                    mem[64] = mem[64] + 72
                    _1574 = sha3(mem[_1572 + 32 len mem[_1572]])
                    mem[_1571 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_1571 + 105] = factoryAddress
                    mem[_1571 + 125] = _1574
                    mem[_1571 + 157] = sub_acaed29c[stor3]
                    mem[_1571 + 72] = 85
                    if address(_1495) == address(_1502):
                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_1571 + 292 len 29]
                    if address(_1495) < address(_1502):
                        if not address(_1495):
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_1571 + 221] = address(_1495)
                        mem[_1571 + 241] = address(_1502)
                        mem[_1571 + 189] = 40
                        mem[_1571 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_1571 + 294] = factoryAddress
                        mem[_1571 + 314] = sha3(address(_1495), address(_1502))
                        mem[_1571 + 346] = sub_acaed29c[stor3]
                        mem[_1571 + 261] = 85
                        mem[64] = _1571 + 378
                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_1495), address(_1502)), sub_acaed29c[stor3])))
                        staticcall address(sha3(0, factoryAddress, sha3(address(_1495), address(_1502)), sub_acaed29c[stor3])).getReserves() with:
                                gas gas_remaining wei
                    else:
                        if not address(_1502):
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_1571 + 221] = address(_1502)
                        mem[_1571 + 241] = address(_1495)
                        mem[_1571 + 189] = 40
                        mem[_1571 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_1571 + 294] = factoryAddress
                        mem[_1571 + 314] = sha3(address(_1502), address(_1495))
                        mem[_1571 + 346] = sub_acaed29c[stor3]
                        mem[_1571 + 261] = 85
                        mem[64] = _1571 + 378
                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_1502), address(_1495)), sub_acaed29c[stor3])))
                        staticcall address(sha3(0, factoryAddress, sha3(address(_1502), address(_1495)), sub_acaed29c[stor3])).getReserves() with:
                                gas gas_remaining wei
                    mem[_1571 + 378 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 96
                    require idx < mem[(32 * arg2.length) + 128]
                    if mem[(32 * idx) + (32 * arg2.length) + 160] <= 0:
                        revert with 0, 
                                    32,
                                    41,
                                    0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                    mem[_1571 + 487 len 23]
                    if address(_1495) == address(_1502):
                        if ext_call.return_data[18 len 14] <= 0:
                            revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1571 + 484 len 26]
                        if ext_call.return_data[50 len 14] <= 0:
                            revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1571 + 484 len 26]
                        if not sub_f6692c0a[stor3]:
                            if ext_call.return_data[50 len 14]:
                                require ext_call.return_data[50 len 14]
                                if 0 / ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[18 len 14] < 10000 * ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require 10000 * ext_call.return_data[18 len 14]
                            require idx + 1 < mem[(32 * arg2.length) + 128]
                            mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0 / 10000 * ext_call.return_data[18 len 14]
                        else:
                            require sub_f6692c0a[stor3]
                            if mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3] / sub_f6692c0a[stor3] != mem[(32 * idx) + (32 * arg2.length) + 160]:
                                revert with 0, 'ds-math-mul-overflow'
                            if not ext_call.return_data[50 len 14]:
                                if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                                require idx + 1 < mem[(32 * arg2.length) + 128]
                                mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0 / (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                            else:
                                require ext_call.return_data[50 len 14]
                                if mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                                require idx + 1 < mem[(32 * arg2.length) + 128]
                                mem[(32 * idx + 1) + (32 * arg2.length) + 160] = mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[50 len 14] / (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                    else:
                        if ext_call.return_data[50 len 14] <= 0:
                            revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1571 + 484 len 26]
                        if ext_call.return_data[18 len 14] <= 0:
                            revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1571 + 484 len 26]
                        if not sub_f6692c0a[stor3]:
                            if ext_call.return_data[18 len 14]:
                                require ext_call.return_data[18 len 14]
                                if 0 / ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[50 len 14] < 10000 * ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require 10000 * ext_call.return_data[50 len 14]
                            require idx + 1 < mem[(32 * arg2.length) + 128]
                            mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0 / 10000 * ext_call.return_data[50 len 14]
                        else:
                            require sub_f6692c0a[stor3]
                            if mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3] / sub_f6692c0a[stor3] != mem[(32 * idx) + (32 * arg2.length) + 160]:
                                revert with 0, 'ds-math-mul-overflow'
                            if not ext_call.return_data[18 len 14]:
                                if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                                require idx + 1 < mem[(32 * arg2.length) + 128]
                                mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0 / (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                            else:
                                require ext_call.return_data[18 len 14]
                                if mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                                require idx + 1 < mem[(32 * arg2.length) + 128]
                                mem[(32 * idx + 1) + (32 * arg2.length) + 160] = mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[18 len 14] / (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
            idx = idx + 1
            continue 
        mem[mem[64]] = 32
        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
        _1501 = mem[(32 * arg2.length) + 128]
        mem[mem[64] + 64 len floor32(mem[(32 * arg2.length) + 128])] = mem[(32 * arg2.length) + 160 len floor32(mem[(32 * arg2.length) + 128])]
        return 32, mem[mem[64] + 32 len (32 * _1501) + 32]
    mem[(32 * arg2.length) + 160 len 32 * arg2.length] = call.data[calldata.size len 32 * arg2.length]
    require 0 < arg2.length
    mem[(32 * arg2.length) + 160] = arg1
    idx = 0
    while idx < arg2.length - 1:
        require idx < mem[96]
        _1497 = mem[(32 * idx) + 128]
        require idx + 1 < mem[96]
        _1506 = mem[(32 * idx + 1) + 128]
        if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
            revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
        if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
            if not mem[(32 * idx) + 140 len 20]:
                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
            if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
            if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                if not mem[(32 * idx) + 140 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                _1579 = mem[64]
                mem[mem[64] + 32] = address(mem[(32 * idx) + 128])
                mem[mem[64] + 52] = address(_1506)
                _1580 = mem[64]
                mem[mem[64]] = 40
                mem[64] = mem[64] + 72
                _1582 = sha3(mem[_1580 + 32 len mem[_1580]])
                mem[_1579 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                mem[_1579 + 105] = factoryAddress
                mem[_1579 + 125] = _1582
                mem[_1579 + 157] = sub_acaed29c[stor3]
                mem[_1579 + 72] = 85
                if address(_1497) == address(_1506):
                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_1579 + 292 len 29]
                if address(_1497) < address(_1506):
                    if not address(_1497):
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    mem[_1579 + 221] = address(_1497)
                    mem[_1579 + 241] = address(_1506)
                    mem[_1579 + 189] = 40
                    mem[_1579 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_1579 + 294] = factoryAddress
                    mem[_1579 + 314] = sha3(address(_1497), address(_1506))
                    mem[_1579 + 346] = sub_acaed29c[stor3]
                    mem[_1579 + 261] = 85
                    mem[64] = _1579 + 378
                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_1497), address(_1506)), sub_acaed29c[stor3])))
                    staticcall address(sha3(0, factoryAddress, sha3(address(_1497), address(_1506)), sub_acaed29c[stor3])).getReserves() with:
                            gas gas_remaining wei
                else:
                    if not address(_1506):
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    mem[_1579 + 221] = address(_1506)
                    mem[_1579 + 241] = address(_1497)
                    mem[_1579 + 189] = 40
                    mem[_1579 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_1579 + 294] = factoryAddress
                    mem[_1579 + 314] = sha3(address(_1506), address(_1497))
                    mem[_1579 + 346] = sub_acaed29c[stor3]
                    mem[_1579 + 261] = 85
                    mem[64] = _1579 + 378
                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_1506), address(_1497)), sub_acaed29c[stor3])))
                    staticcall address(sha3(0, factoryAddress, sha3(address(_1506), address(_1497)), sub_acaed29c[stor3])).getReserves() with:
                            gas gas_remaining wei
                mem[_1579 + 378 len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 96
                require idx < mem[(32 * arg2.length) + 128]
                if mem[(32 * idx) + (32 * arg2.length) + 160] <= 0:
                    revert with 0, 
                                32,
                                41,
                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                mem[_1579 + 487 len 23]
                if address(_1497) == address(_1497):
                    if ext_call.return_data[18 len 14] <= 0:
                        revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1579 + 484 len 26]
                    if ext_call.return_data[50 len 14] <= 0:
                        revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1579 + 484 len 26]
                    if not sub_f6692c0a[stor3]:
                        if ext_call.return_data[50 len 14]:
                            require ext_call.return_data[50 len 14]
                            if 0 / ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[18 len 14] < 10000 * ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require 10000 * ext_call.return_data[18 len 14]
                        require idx + 1 < mem[(32 * arg2.length) + 128]
                        mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0 / 10000 * ext_call.return_data[18 len 14]
                    else:
                        require sub_f6692c0a[stor3]
                        if mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3] / sub_f6692c0a[stor3] != mem[(32 * idx) + (32 * arg2.length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not ext_call.return_data[50 len 14]:
                            if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                            require idx + 1 < mem[(32 * arg2.length) + 128]
                            mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0 / (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                        else:
                            require ext_call.return_data[50 len 14]
                            if mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                            require idx + 1 < mem[(32 * arg2.length) + 128]
                            mem[(32 * idx + 1) + (32 * arg2.length) + 160] = mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[50 len 14] / (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                else:
                    if ext_call.return_data[50 len 14] <= 0:
                        revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1579 + 484 len 26]
                    if ext_call.return_data[18 len 14] <= 0:
                        revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1579 + 484 len 26]
                    if not sub_f6692c0a[stor3]:
                        if ext_call.return_data[18 len 14]:
                            require ext_call.return_data[18 len 14]
                            if 0 / ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[50 len 14] < 10000 * ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require 10000 * ext_call.return_data[50 len 14]
                        require idx + 1 < mem[(32 * arg2.length) + 128]
                        mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0 / 10000 * ext_call.return_data[50 len 14]
                    else:
                        require sub_f6692c0a[stor3]
                        if mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3] / sub_f6692c0a[stor3] != mem[(32 * idx) + (32 * arg2.length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not ext_call.return_data[18 len 14]:
                            if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                            require idx + 1 < mem[(32 * arg2.length) + 128]
                            mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0 / (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                        else:
                            require ext_call.return_data[18 len 14]
                            if mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                            require idx + 1 < mem[(32 * arg2.length) + 128]
                            mem[(32 * idx + 1) + (32 * arg2.length) + 160] = mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[18 len 14] / (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
            else:
                if not mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                _1587 = mem[64]
                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + 128])
                mem[mem[64] + 52] = address(_1497)
                _1588 = mem[64]
                mem[mem[64]] = 40
                mem[64] = mem[64] + 72
                _1590 = sha3(mem[_1588 + 32 len mem[_1588]])
                mem[_1587 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                mem[_1587 + 105] = factoryAddress
                mem[_1587 + 125] = _1590
                mem[_1587 + 157] = sub_acaed29c[stor3]
                mem[_1587 + 72] = 85
                if address(_1497) == address(_1506):
                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_1587 + 292 len 29]
                if address(_1497) < address(_1506):
                    if not address(_1497):
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    mem[_1587 + 221] = address(_1497)
                    mem[_1587 + 241] = address(_1506)
                    mem[_1587 + 189] = 40
                    mem[_1587 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_1587 + 294] = factoryAddress
                    mem[_1587 + 314] = sha3(address(_1497), address(_1506))
                    mem[_1587 + 346] = sub_acaed29c[stor3]
                    mem[_1587 + 261] = 85
                    mem[64] = _1587 + 378
                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_1497), address(_1506)), sub_acaed29c[stor3])))
                    staticcall address(sha3(0, factoryAddress, sha3(address(_1497), address(_1506)), sub_acaed29c[stor3])).getReserves() with:
                            gas gas_remaining wei
                else:
                    if not address(_1506):
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    mem[_1587 + 221] = address(_1506)
                    mem[_1587 + 241] = address(_1497)
                    mem[_1587 + 189] = 40
                    mem[_1587 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_1587 + 294] = factoryAddress
                    mem[_1587 + 314] = sha3(address(_1506), address(_1497))
                    mem[_1587 + 346] = sub_acaed29c[stor3]
                    mem[_1587 + 261] = 85
                    mem[64] = _1587 + 378
                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_1506), address(_1497)), sub_acaed29c[stor3])))
                    staticcall address(sha3(0, factoryAddress, sha3(address(_1506), address(_1497)), sub_acaed29c[stor3])).getReserves() with:
                            gas gas_remaining wei
                mem[_1587 + 378 len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 96
                require idx < mem[(32 * arg2.length) + 128]
                if mem[(32 * idx) + (32 * arg2.length) + 160] <= 0:
                    revert with 0, 
                                32,
                                41,
                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                mem[_1587 + 487 len 23]
                if address(_1497) == address(_1497):
                    if ext_call.return_data[18 len 14] <= 0:
                        revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1587 + 484 len 26]
                    if ext_call.return_data[50 len 14] <= 0:
                        revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1587 + 484 len 26]
                    if not sub_f6692c0a[stor3]:
                        if ext_call.return_data[50 len 14]:
                            require ext_call.return_data[50 len 14]
                            if 0 / ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[18 len 14] < 10000 * ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require 10000 * ext_call.return_data[18 len 14]
                        require idx + 1 < mem[(32 * arg2.length) + 128]
                        mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0 / 10000 * ext_call.return_data[18 len 14]
                    else:
                        require sub_f6692c0a[stor3]
                        if mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3] / sub_f6692c0a[stor3] != mem[(32 * idx) + (32 * arg2.length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not ext_call.return_data[50 len 14]:
                            if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                            require idx + 1 < mem[(32 * arg2.length) + 128]
                            mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0 / (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                        else:
                            require ext_call.return_data[50 len 14]
                            if mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                            require idx + 1 < mem[(32 * arg2.length) + 128]
                            mem[(32 * idx + 1) + (32 * arg2.length) + 160] = mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[50 len 14] / (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                else:
                    if ext_call.return_data[50 len 14] <= 0:
                        revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1587 + 484 len 26]
                    if ext_call.return_data[18 len 14] <= 0:
                        revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1587 + 484 len 26]
                    if not sub_f6692c0a[stor3]:
                        if ext_call.return_data[18 len 14]:
                            require ext_call.return_data[18 len 14]
                            if 0 / ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[50 len 14] < 10000 * ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require 10000 * ext_call.return_data[50 len 14]
                        require idx + 1 < mem[(32 * arg2.length) + 128]
                        mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0 / 10000 * ext_call.return_data[50 len 14]
                    else:
                        require sub_f6692c0a[stor3]
                        if mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3] / sub_f6692c0a[stor3] != mem[(32 * idx) + (32 * arg2.length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not ext_call.return_data[18 len 14]:
                            if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                            require idx + 1 < mem[(32 * arg2.length) + 128]
                            mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0 / (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                        else:
                            require ext_call.return_data[18 len 14]
                            if mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                            require idx + 1 < mem[(32 * arg2.length) + 128]
                            mem[(32 * idx + 1) + (32 * arg2.length) + 160] = mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[18 len 14] / (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
        else:
            if not mem[(32 * idx + 1) + 140 len 20]:
                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
            if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
            if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                if not mem[(32 * idx) + 140 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                _1595 = mem[64]
                mem[mem[64] + 32] = address(mem[(32 * idx) + 128])
                mem[mem[64] + 52] = address(_1506)
                _1596 = mem[64]
                mem[mem[64]] = 40
                mem[64] = mem[64] + 72
                _1598 = sha3(mem[_1596 + 32 len mem[_1596]])
                mem[_1595 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                mem[_1595 + 105] = factoryAddress
                mem[_1595 + 125] = _1598
                mem[_1595 + 157] = sub_acaed29c[stor3]
                mem[_1595 + 72] = 85
                if address(_1497) == address(_1506):
                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_1595 + 292 len 29]
                if address(_1497) < address(_1506):
                    if not address(_1497):
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    mem[_1595 + 221] = address(_1497)
                    mem[_1595 + 241] = address(_1506)
                    mem[_1595 + 189] = 40
                    mem[_1595 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_1595 + 294] = factoryAddress
                    mem[_1595 + 314] = sha3(address(_1497), address(_1506))
                    mem[_1595 + 346] = sub_acaed29c[stor3]
                    mem[_1595 + 261] = 85
                    mem[64] = _1595 + 378
                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_1497), address(_1506)), sub_acaed29c[stor3])))
                    staticcall address(sha3(0, factoryAddress, sha3(address(_1497), address(_1506)), sub_acaed29c[stor3])).getReserves() with:
                            gas gas_remaining wei
                else:
                    if not address(_1506):
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    mem[_1595 + 221] = address(_1506)
                    mem[_1595 + 241] = address(_1497)
                    mem[_1595 + 189] = 40
                    mem[_1595 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_1595 + 294] = factoryAddress
                    mem[_1595 + 314] = sha3(address(_1506), address(_1497))
                    mem[_1595 + 346] = sub_acaed29c[stor3]
                    mem[_1595 + 261] = 85
                    mem[64] = _1595 + 378
                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_1506), address(_1497)), sub_acaed29c[stor3])))
                    staticcall address(sha3(0, factoryAddress, sha3(address(_1506), address(_1497)), sub_acaed29c[stor3])).getReserves() with:
                            gas gas_remaining wei
                mem[_1595 + 378 len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 96
                require idx < mem[(32 * arg2.length) + 128]
                if mem[(32 * idx) + (32 * arg2.length) + 160] <= 0:
                    revert with 0, 
                                32,
                                41,
                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                mem[_1595 + 487 len 23]
                if address(_1497) == address(_1506):
                    if ext_call.return_data[18 len 14] <= 0:
                        revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1595 + 484 len 26]
                    if ext_call.return_data[50 len 14] <= 0:
                        revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1595 + 484 len 26]
                    if not sub_f6692c0a[stor3]:
                        if ext_call.return_data[50 len 14]:
                            require ext_call.return_data[50 len 14]
                            if 0 / ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[18 len 14] < 10000 * ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require 10000 * ext_call.return_data[18 len 14]
                        require idx + 1 < mem[(32 * arg2.length) + 128]
                        mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0 / 10000 * ext_call.return_data[18 len 14]
                    else:
                        require sub_f6692c0a[stor3]
                        if mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3] / sub_f6692c0a[stor3] != mem[(32 * idx) + (32 * arg2.length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not ext_call.return_data[50 len 14]:
                            if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                            require idx + 1 < mem[(32 * arg2.length) + 128]
                            mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0 / (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                        else:
                            require ext_call.return_data[50 len 14]
                            if mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                            require idx + 1 < mem[(32 * arg2.length) + 128]
                            mem[(32 * idx + 1) + (32 * arg2.length) + 160] = mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[50 len 14] / (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                else:
                    if ext_call.return_data[50 len 14] <= 0:
                        revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1595 + 484 len 26]
                    if ext_call.return_data[18 len 14] <= 0:
                        revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1595 + 484 len 26]
                    if not sub_f6692c0a[stor3]:
                        if ext_call.return_data[18 len 14]:
                            require ext_call.return_data[18 len 14]
                            if 0 / ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[50 len 14] < 10000 * ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require 10000 * ext_call.return_data[50 len 14]
                        require idx + 1 < mem[(32 * arg2.length) + 128]
                        mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0 / 10000 * ext_call.return_data[50 len 14]
                    else:
                        require sub_f6692c0a[stor3]
                        if mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3] / sub_f6692c0a[stor3] != mem[(32 * idx) + (32 * arg2.length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not ext_call.return_data[18 len 14]:
                            if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                            require idx + 1 < mem[(32 * arg2.length) + 128]
                            mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0 / (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                        else:
                            require ext_call.return_data[18 len 14]
                            if mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                            require idx + 1 < mem[(32 * arg2.length) + 128]
                            mem[(32 * idx + 1) + (32 * arg2.length) + 160] = mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[18 len 14] / (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
            else:
                if not mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                _1603 = mem[64]
                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + 128])
                mem[mem[64] + 52] = address(_1497)
                _1604 = mem[64]
                mem[mem[64]] = 40
                mem[64] = mem[64] + 72
                _1606 = sha3(mem[_1604 + 32 len mem[_1604]])
                mem[_1603 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                mem[_1603 + 105] = factoryAddress
                mem[_1603 + 125] = _1606
                mem[_1603 + 157] = sub_acaed29c[stor3]
                mem[_1603 + 72] = 85
                if address(_1497) == address(_1506):
                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_1603 + 292 len 29]
                if address(_1497) < address(_1506):
                    if not address(_1497):
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    mem[_1603 + 221] = address(_1497)
                    mem[_1603 + 241] = address(_1506)
                    mem[_1603 + 189] = 40
                    mem[_1603 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_1603 + 294] = factoryAddress
                    mem[_1603 + 314] = sha3(address(_1497), address(_1506))
                    mem[_1603 + 346] = sub_acaed29c[stor3]
                    mem[_1603 + 261] = 85
                    mem[64] = _1603 + 378
                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_1497), address(_1506)), sub_acaed29c[stor3])))
                    staticcall address(sha3(0, factoryAddress, sha3(address(_1497), address(_1506)), sub_acaed29c[stor3])).getReserves() with:
                            gas gas_remaining wei
                else:
                    if not address(_1506):
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    mem[_1603 + 221] = address(_1506)
                    mem[_1603 + 241] = address(_1497)
                    mem[_1603 + 189] = 40
                    mem[_1603 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_1603 + 294] = factoryAddress
                    mem[_1603 + 314] = sha3(address(_1506), address(_1497))
                    mem[_1603 + 346] = sub_acaed29c[stor3]
                    mem[_1603 + 261] = 85
                    mem[64] = _1603 + 378
                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_1506), address(_1497)), sub_acaed29c[stor3])))
                    staticcall address(sha3(0, factoryAddress, sha3(address(_1506), address(_1497)), sub_acaed29c[stor3])).getReserves() with:
                            gas gas_remaining wei
                mem[_1603 + 378 len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 96
                require idx < mem[(32 * arg2.length) + 128]
                if mem[(32 * idx) + (32 * arg2.length) + 160] <= 0:
                    revert with 0, 
                                32,
                                41,
                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                mem[_1603 + 487 len 23]
                if address(_1497) == address(_1506):
                    if ext_call.return_data[18 len 14] <= 0:
                        revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1603 + 484 len 26]
                    if ext_call.return_data[50 len 14] <= 0:
                        revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1603 + 484 len 26]
                    if not sub_f6692c0a[stor3]:
                        if ext_call.return_data[50 len 14]:
                            require ext_call.return_data[50 len 14]
                            if 0 / ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[18 len 14] < 10000 * ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require 10000 * ext_call.return_data[18 len 14]
                        require idx + 1 < mem[(32 * arg2.length) + 128]
                        mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0 / 10000 * ext_call.return_data[18 len 14]
                    else:
                        require sub_f6692c0a[stor3]
                        if mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3] / sub_f6692c0a[stor3] != mem[(32 * idx) + (32 * arg2.length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not ext_call.return_data[50 len 14]:
                            if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                            require idx + 1 < mem[(32 * arg2.length) + 128]
                            mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0 / (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                        else:
                            require ext_call.return_data[50 len 14]
                            if mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                            require idx + 1 < mem[(32 * arg2.length) + 128]
                            mem[(32 * idx + 1) + (32 * arg2.length) + 160] = mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[50 len 14] / (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                else:
                    if ext_call.return_data[50 len 14] <= 0:
                        revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1603 + 484 len 26]
                    if ext_call.return_data[18 len 14] <= 0:
                        revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1603 + 484 len 26]
                    if not sub_f6692c0a[stor3]:
                        if ext_call.return_data[18 len 14]:
                            require ext_call.return_data[18 len 14]
                            if 0 / ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[50 len 14] < 10000 * ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require 10000 * ext_call.return_data[50 len 14]
                        require idx + 1 < mem[(32 * arg2.length) + 128]
                        mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0 / 10000 * ext_call.return_data[50 len 14]
                    else:
                        require sub_f6692c0a[stor3]
                        if mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3] / sub_f6692c0a[stor3] != mem[(32 * idx) + (32 * arg2.length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not ext_call.return_data[18 len 14]:
                            if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                            require idx + 1 < mem[(32 * arg2.length) + 128]
                            mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0 / (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                        else:
                            require ext_call.return_data[18 len 14]
                            if mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                            require idx + 1 < mem[(32 * arg2.length) + 128]
                            mem[(32 * idx + 1) + (32 * arg2.length) + 160] = mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[18 len 14] / (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
        idx = idx + 1
        continue 
    mem[mem[64]] = 32
    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
    _1505 = mem[(32 * arg2.length) + 128]
    mem[mem[64] + 64 len floor32(mem[(32 * arg2.length) + 128])] = mem[(32 * arg2.length) + 160 len floor32(mem[(32 * arg2.length) + 128])]
    return 32, mem[mem[64] + 32 len (32 * _1505) + 32]
}

function getAmountsIn(uint256 arg1, address[] arg2) {
    require calldata.size - 4 >= 64
    require arg2 <= 4294967296
    require arg2 + 36 <= calldata.size
    require arg2.length <= 4294967296 and arg2 + (32 * arg2.length) + 36 <= calldata.size
    mem[96] = arg2.length
    mem[128 len 32 * arg2.length] = call.data[arg2 + 36 len 32 * arg2.length]
    mem[0] = factoryAddress
    mem[32] = 4
    if arg2.length < 2:
        revert with 0, 'PancakeLibrary: INVALID_PATH'
    require arg2.length <= test266151307()
    mem[(32 * arg2.length) + 128] = arg2.length
    mem[64] = (64 * arg2.length) + 160
    if not arg2.length:
        require arg2.length - 1 < arg2.length
        mem[(32 * arg2.length - 1) + (32 * arg2.length) + 160] = arg1
        idx = mem[96] - 1
        while idx > 0:
            require idx - 1 < mem[96]
            require idx < mem[96]
            _1246 = mem[(32 * idx) + 128]
            if mem[(32 * idx - 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
            if mem[(32 * idx - 1) + 140 len 20] < mem[(32 * idx) + 140 len 20]:
                if not mem[(32 * idx - 1) + 140 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                if mem[(32 * idx - 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                if mem[(32 * idx - 1) + 140 len 20] < mem[(32 * idx) + 140 len 20]:
                    if not mem[(32 * idx - 1) + 140 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    _1291 = mem[64]
                    mem[mem[64] + 32] = address(mem[(32 * idx - 1) + 128])
                    mem[mem[64] + 52] = address(_1246)
                    _1292 = mem[64]
                    mem[mem[64]] = 40
                    mem[64] = mem[64] + 72
                    _1294 = sha3(mem[_1292 + 32 len mem[_1292]])
                    mem[_1291 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_1291 + 105] = factoryAddress
                    mem[_1291 + 125] = _1294
                    mem[_1291 + 157] = sub_acaed29c[stor3]
                    mem[_1291 + 72] = 85
                    if mem[(32 * idx - 1) + 140 len 20] == address(_1246):
                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_1291 + 292 len 29]
                    if mem[(32 * idx - 1) + 140 len 20] < address(_1246):
                        if not mem[(32 * idx - 1) + 140 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_1291 + 221] = address(mem[(32 * idx - 1) + 128])
                        mem[_1291 + 241] = address(_1246)
                        mem[_1291 + 189] = 40
                        mem[_1291 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_1291 + 294] = factoryAddress
                        mem[_1291 + 314] = sha3(mem[(32 * idx - 1) + 140 len 20], address(_1246))
                        mem[_1291 + 346] = sub_acaed29c[stor3]
                        mem[_1291 + 261] = 85
                        mem[64] = _1291 + 378
                        require ext_code.size(address(sha3(0, factoryAddress, sha3(mem[(32 * idx - 1) + 140 len 20], address(_1246)), sub_acaed29c[stor3])))
                        staticcall address(sha3(0, factoryAddress, sha3(mem[(32 * idx - 1) + 140 len 20], address(_1246)), sub_acaed29c[stor3])).getReserves() with:
                                gas gas_remaining wei
                    else:
                        if not address(_1246):
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_1291 + 221] = address(_1246)
                        mem[_1291 + 241] = address(mem[(32 * idx - 1) + 128])
                        mem[_1291 + 189] = 40
                        mem[_1291 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_1291 + 294] = factoryAddress
                        mem[_1291 + 314] = sha3(address(_1246), mem[(32 * idx - 1) + 140 len 20])
                        mem[_1291 + 346] = sub_acaed29c[stor3]
                        mem[_1291 + 261] = 85
                        mem[64] = _1291 + 378
                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_1246), mem[(32 * idx - 1) + 140 len 20]), sub_acaed29c[stor3])))
                        staticcall address(sha3(0, factoryAddress, sha3(address(_1246), mem[(32 * idx - 1) + 140 len 20]), sub_acaed29c[stor3])).getReserves() with:
                                gas gas_remaining wei
                    mem[_1291 + 378 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 96
                    require idx < mem[(32 * arg2.length) + 128]
                    if mem[(32 * idx) + (32 * arg2.length) + 160] <= 0:
                        revert with 0, 
                                    32,
                                    42,
                                    0x5450616e63616b654c6962726172793a20494e53554646494349454e545f4f55545055545f414d4f554e,
                                    mem[_1291 + 488 len 22]
                    if mem[(32 * idx - 1) + 140 len 20] == mem[(32 * idx - 1) + 140 len 20]:
                        if ext_call.return_data[18 len 14] <= 0:
                            revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1291 + 484 len 26]
                        if ext_call.return_data[50 len 14] <= 0:
                            revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1291 + 484 len 26]
                        if not mem[(32 * idx) + (32 * arg2.length) + 160]:
                            if ext_call.return_data[50 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160] > ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-sub-underflow'
                            require sub_f6692c0a[stor3]
                            require sub_f6692c0a[stor3]
                            if (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) / sub_f6692c0a[stor3] != ext_call.return_data[50 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160]:
                                revert with 0, 'ds-math-mul-overflow'
                            require (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                            if (0 / (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1 < 0 / (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]):
                                revert with 0, 'ds-math-add-overflow'
                            require idx - 1 < mem[(32 * arg2.length) + 128]
                            mem[(32 * idx - 1) + (32 * arg2.length) + 160] = (0 / (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1
                        else:
                            require mem[(32 * idx) + (32 * arg2.length) + 160]
                            if ext_call.return_data[18 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / mem[(32 * idx) + (32 * arg2.length) + 160] != ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[18 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / 10000 != ext_call.return_data[18 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160]:
                                revert with 0, 'ds-math-mul-overflow'
                            if ext_call.return_data[50 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160] > ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-sub-underflow'
                            require sub_f6692c0a[stor3]
                            require sub_f6692c0a[stor3]
                            if (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) / sub_f6692c0a[stor3] != ext_call.return_data[50 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160]:
                                revert with 0, 'ds-math-mul-overflow'
                            require (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                            if (10000 * ext_call.return_data[18 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1 < 10000 * ext_call.return_data[18 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]):
                                revert with 0, 'ds-math-add-overflow'
                            require idx - 1 < mem[(32 * arg2.length) + 128]
                            mem[(32 * idx - 1) + (32 * arg2.length) + 160] = (10000 * ext_call.return_data[18 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1
                    else:
                        if ext_call.return_data[50 len 14] <= 0:
                            revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1291 + 484 len 26]
                        if ext_call.return_data[18 len 14] <= 0:
                            revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1291 + 484 len 26]
                        if not mem[(32 * idx) + (32 * arg2.length) + 160]:
                            if ext_call.return_data[18 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160] > ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-sub-underflow'
                            require sub_f6692c0a[stor3]
                            require sub_f6692c0a[stor3]
                            if (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) / sub_f6692c0a[stor3] != ext_call.return_data[18 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160]:
                                revert with 0, 'ds-math-mul-overflow'
                            require (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                            if (0 / (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1 < 0 / (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]):
                                revert with 0, 'ds-math-add-overflow'
                            require idx - 1 < mem[(32 * arg2.length) + 128]
                            mem[(32 * idx - 1) + (32 * arg2.length) + 160] = (0 / (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1
                        else:
                            require mem[(32 * idx) + (32 * arg2.length) + 160]
                            if ext_call.return_data[50 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / mem[(32 * idx) + (32 * arg2.length) + 160] != ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[50 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / 10000 != ext_call.return_data[50 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160]:
                                revert with 0, 'ds-math-mul-overflow'
                            if ext_call.return_data[18 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160] > ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-sub-underflow'
                            require sub_f6692c0a[stor3]
                            require sub_f6692c0a[stor3]
                            if (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) / sub_f6692c0a[stor3] != ext_call.return_data[18 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160]:
                                revert with 0, 'ds-math-mul-overflow'
                            require (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                            if (10000 * ext_call.return_data[50 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1 < 10000 * ext_call.return_data[50 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]):
                                revert with 0, 'ds-math-add-overflow'
                            require idx - 1 < mem[(32 * arg2.length) + 128]
                            mem[(32 * idx - 1) + (32 * arg2.length) + 160] = (10000 * ext_call.return_data[50 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1
                else:
                    if not mem[(32 * idx) + 140 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    _1299 = mem[64]
                    mem[mem[64] + 32] = address(mem[(32 * idx) + 128])
                    mem[mem[64] + 52] = address(mem[(32 * idx - 1) + 128])
                    _1300 = mem[64]
                    mem[mem[64]] = 40
                    mem[64] = mem[64] + 72
                    _1302 = sha3(mem[_1300 + 32 len mem[_1300]])
                    mem[_1299 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_1299 + 105] = factoryAddress
                    mem[_1299 + 125] = _1302
                    mem[_1299 + 157] = sub_acaed29c[stor3]
                    mem[_1299 + 72] = 85
                    if mem[(32 * idx - 1) + 140 len 20] == address(_1246):
                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_1299 + 292 len 29]
                    if mem[(32 * idx - 1) + 140 len 20] < address(_1246):
                        if not mem[(32 * idx - 1) + 140 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_1299 + 221] = address(mem[(32 * idx - 1) + 128])
                        mem[_1299 + 241] = address(_1246)
                        mem[_1299 + 189] = 40
                        mem[_1299 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_1299 + 294] = factoryAddress
                        mem[_1299 + 314] = sha3(mem[(32 * idx - 1) + 140 len 20], address(_1246))
                        mem[_1299 + 346] = sub_acaed29c[stor3]
                        mem[_1299 + 261] = 85
                        mem[64] = _1299 + 378
                        require ext_code.size(address(sha3(0, factoryAddress, sha3(mem[(32 * idx - 1) + 140 len 20], address(_1246)), sub_acaed29c[stor3])))
                        staticcall address(sha3(0, factoryAddress, sha3(mem[(32 * idx - 1) + 140 len 20], address(_1246)), sub_acaed29c[stor3])).getReserves() with:
                                gas gas_remaining wei
                    else:
                        if not address(_1246):
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_1299 + 221] = address(_1246)
                        mem[_1299 + 241] = address(mem[(32 * idx - 1) + 128])
                        mem[_1299 + 189] = 40
                        mem[_1299 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_1299 + 294] = factoryAddress
                        mem[_1299 + 314] = sha3(address(_1246), mem[(32 * idx - 1) + 140 len 20])
                        mem[_1299 + 346] = sub_acaed29c[stor3]
                        mem[_1299 + 261] = 85
                        mem[64] = _1299 + 378
                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_1246), mem[(32 * idx - 1) + 140 len 20]), sub_acaed29c[stor3])))
                        staticcall address(sha3(0, factoryAddress, sha3(address(_1246), mem[(32 * idx - 1) + 140 len 20]), sub_acaed29c[stor3])).getReserves() with:
                                gas gas_remaining wei
                    mem[_1299 + 378 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 96
                    require idx < mem[(32 * arg2.length) + 128]
                    if mem[(32 * idx) + (32 * arg2.length) + 160] <= 0:
                        revert with 0, 
                                    32,
                                    42,
                                    0x5450616e63616b654c6962726172793a20494e53554646494349454e545f4f55545055545f414d4f554e,
                                    mem[_1299 + 488 len 22]
                    if mem[(32 * idx - 1) + 140 len 20] == mem[(32 * idx - 1) + 140 len 20]:
                        if ext_call.return_data[18 len 14] <= 0:
                            revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1299 + 484 len 26]
                        if ext_call.return_data[50 len 14] <= 0:
                            revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1299 + 484 len 26]
                        if not mem[(32 * idx) + (32 * arg2.length) + 160]:
                            if ext_call.return_data[50 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160] > ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-sub-underflow'
                            require sub_f6692c0a[stor3]
                            require sub_f6692c0a[stor3]
                            if (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) / sub_f6692c0a[stor3] != ext_call.return_data[50 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160]:
                                revert with 0, 'ds-math-mul-overflow'
                            require (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                            if (0 / (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1 < 0 / (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]):
                                revert with 0, 'ds-math-add-overflow'
                            require idx - 1 < mem[(32 * arg2.length) + 128]
                            mem[(32 * idx - 1) + (32 * arg2.length) + 160] = (0 / (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1
                        else:
                            require mem[(32 * idx) + (32 * arg2.length) + 160]
                            if ext_call.return_data[18 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / mem[(32 * idx) + (32 * arg2.length) + 160] != ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[18 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / 10000 != ext_call.return_data[18 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160]:
                                revert with 0, 'ds-math-mul-overflow'
                            if ext_call.return_data[50 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160] > ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-sub-underflow'
                            require sub_f6692c0a[stor3]
                            require sub_f6692c0a[stor3]
                            if (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) / sub_f6692c0a[stor3] != ext_call.return_data[50 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160]:
                                revert with 0, 'ds-math-mul-overflow'
                            require (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                            if (10000 * ext_call.return_data[18 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1 < 10000 * ext_call.return_data[18 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]):
                                revert with 0, 'ds-math-add-overflow'
                            require idx - 1 < mem[(32 * arg2.length) + 128]
                            mem[(32 * idx - 1) + (32 * arg2.length) + 160] = (10000 * ext_call.return_data[18 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1
                    else:
                        if ext_call.return_data[50 len 14] <= 0:
                            revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1299 + 484 len 26]
                        if ext_call.return_data[18 len 14] <= 0:
                            revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1299 + 484 len 26]
                        if not mem[(32 * idx) + (32 * arg2.length) + 160]:
                            if ext_call.return_data[18 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160] > ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-sub-underflow'
                            require sub_f6692c0a[stor3]
                            require sub_f6692c0a[stor3]
                            if (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) / sub_f6692c0a[stor3] != ext_call.return_data[18 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160]:
                                revert with 0, 'ds-math-mul-overflow'
                            require (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                            if (0 / (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1 < 0 / (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]):
                                revert with 0, 'ds-math-add-overflow'
                            require idx - 1 < mem[(32 * arg2.length) + 128]
                            mem[(32 * idx - 1) + (32 * arg2.length) + 160] = (0 / (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1
                        else:
                            require mem[(32 * idx) + (32 * arg2.length) + 160]
                            if ext_call.return_data[50 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / mem[(32 * idx) + (32 * arg2.length) + 160] != ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[50 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / 10000 != ext_call.return_data[50 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160]:
                                revert with 0, 'ds-math-mul-overflow'
                            if ext_call.return_data[18 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160] > ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-sub-underflow'
                            require sub_f6692c0a[stor3]
                            require sub_f6692c0a[stor3]
                            if (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) / sub_f6692c0a[stor3] != ext_call.return_data[18 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160]:
                                revert with 0, 'ds-math-mul-overflow'
                            require (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                            if (10000 * ext_call.return_data[50 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1 < 10000 * ext_call.return_data[50 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]):
                                revert with 0, 'ds-math-add-overflow'
                            require idx - 1 < mem[(32 * arg2.length) + 128]
                            mem[(32 * idx - 1) + (32 * arg2.length) + 160] = (10000 * ext_call.return_data[50 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1
            else:
                if not mem[(32 * idx) + 140 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                if mem[(32 * idx - 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                if mem[(32 * idx - 1) + 140 len 20] < mem[(32 * idx) + 140 len 20]:
                    if not mem[(32 * idx - 1) + 140 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    _1307 = mem[64]
                    mem[mem[64] + 32] = address(mem[(32 * idx - 1) + 128])
                    mem[mem[64] + 52] = address(_1246)
                    _1308 = mem[64]
                    mem[mem[64]] = 40
                    mem[64] = mem[64] + 72
                    _1310 = sha3(mem[_1308 + 32 len mem[_1308]])
                    mem[_1307 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_1307 + 105] = factoryAddress
                    mem[_1307 + 125] = _1310
                    mem[_1307 + 157] = sub_acaed29c[stor3]
                    mem[_1307 + 72] = 85
                    if mem[(32 * idx - 1) + 140 len 20] == address(_1246):
                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_1307 + 292 len 29]
                    if mem[(32 * idx - 1) + 140 len 20] < address(_1246):
                        if not mem[(32 * idx - 1) + 140 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_1307 + 221] = address(mem[(32 * idx - 1) + 128])
                        mem[_1307 + 241] = address(_1246)
                        mem[_1307 + 189] = 40
                        mem[_1307 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_1307 + 294] = factoryAddress
                        mem[_1307 + 314] = sha3(mem[(32 * idx - 1) + 140 len 20], address(_1246))
                        mem[_1307 + 346] = sub_acaed29c[stor3]
                        mem[_1307 + 261] = 85
                        mem[64] = _1307 + 378
                        require ext_code.size(address(sha3(0, factoryAddress, sha3(mem[(32 * idx - 1) + 140 len 20], address(_1246)), sub_acaed29c[stor3])))
                        staticcall address(sha3(0, factoryAddress, sha3(mem[(32 * idx - 1) + 140 len 20], address(_1246)), sub_acaed29c[stor3])).getReserves() with:
                                gas gas_remaining wei
                    else:
                        if not address(_1246):
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_1307 + 221] = address(_1246)
                        mem[_1307 + 241] = address(mem[(32 * idx - 1) + 128])
                        mem[_1307 + 189] = 40
                        mem[_1307 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_1307 + 294] = factoryAddress
                        mem[_1307 + 314] = sha3(address(_1246), mem[(32 * idx - 1) + 140 len 20])
                        mem[_1307 + 346] = sub_acaed29c[stor3]
                        mem[_1307 + 261] = 85
                        mem[64] = _1307 + 378
                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_1246), mem[(32 * idx - 1) + 140 len 20]), sub_acaed29c[stor3])))
                        staticcall address(sha3(0, factoryAddress, sha3(address(_1246), mem[(32 * idx - 1) + 140 len 20]), sub_acaed29c[stor3])).getReserves() with:
                                gas gas_remaining wei
                    mem[_1307 + 378 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 96
                    require idx < mem[(32 * arg2.length) + 128]
                    if mem[(32 * idx) + (32 * arg2.length) + 160] <= 0:
                        revert with 0, 
                                    32,
                                    42,
                                    0x5450616e63616b654c6962726172793a20494e53554646494349454e545f4f55545055545f414d4f554e,
                                    mem[_1307 + 488 len 22]
                    if mem[(32 * idx - 1) + 140 len 20] == address(_1246):
                        if ext_call.return_data[18 len 14] <= 0:
                            revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1307 + 484 len 26]
                        if ext_call.return_data[50 len 14] <= 0:
                            revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1307 + 484 len 26]
                        if not mem[(32 * idx) + (32 * arg2.length) + 160]:
                            if ext_call.return_data[50 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160] > ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-sub-underflow'
                            require sub_f6692c0a[stor3]
                            require sub_f6692c0a[stor3]
                            if (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) / sub_f6692c0a[stor3] != ext_call.return_data[50 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160]:
                                revert with 0, 'ds-math-mul-overflow'
                            require (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                            if (0 / (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1 < 0 / (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]):
                                revert with 0, 'ds-math-add-overflow'
                            require idx - 1 < mem[(32 * arg2.length) + 128]
                            mem[(32 * idx - 1) + (32 * arg2.length) + 160] = (0 / (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1
                        else:
                            require mem[(32 * idx) + (32 * arg2.length) + 160]
                            if ext_call.return_data[18 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / mem[(32 * idx) + (32 * arg2.length) + 160] != ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[18 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / 10000 != ext_call.return_data[18 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160]:
                                revert with 0, 'ds-math-mul-overflow'
                            if ext_call.return_data[50 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160] > ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-sub-underflow'
                            require sub_f6692c0a[stor3]
                            require sub_f6692c0a[stor3]
                            if (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) / sub_f6692c0a[stor3] != ext_call.return_data[50 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160]:
                                revert with 0, 'ds-math-mul-overflow'
                            require (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                            if (10000 * ext_call.return_data[18 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1 < 10000 * ext_call.return_data[18 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]):
                                revert with 0, 'ds-math-add-overflow'
                            require idx - 1 < mem[(32 * arg2.length) + 128]
                            mem[(32 * idx - 1) + (32 * arg2.length) + 160] = (10000 * ext_call.return_data[18 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1
                    else:
                        if ext_call.return_data[50 len 14] <= 0:
                            revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1307 + 484 len 26]
                        if ext_call.return_data[18 len 14] <= 0:
                            revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1307 + 484 len 26]
                        if not mem[(32 * idx) + (32 * arg2.length) + 160]:
                            if ext_call.return_data[18 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160] > ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-sub-underflow'
                            require sub_f6692c0a[stor3]
                            require sub_f6692c0a[stor3]
                            if (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) / sub_f6692c0a[stor3] != ext_call.return_data[18 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160]:
                                revert with 0, 'ds-math-mul-overflow'
                            require (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                            if (0 / (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1 < 0 / (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]):
                                revert with 0, 'ds-math-add-overflow'
                            require idx - 1 < mem[(32 * arg2.length) + 128]
                            mem[(32 * idx - 1) + (32 * arg2.length) + 160] = (0 / (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1
                        else:
                            require mem[(32 * idx) + (32 * arg2.length) + 160]
                            if ext_call.return_data[50 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / mem[(32 * idx) + (32 * arg2.length) + 160] != ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[50 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / 10000 != ext_call.return_data[50 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160]:
                                revert with 0, 'ds-math-mul-overflow'
                            if ext_call.return_data[18 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160] > ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-sub-underflow'
                            require sub_f6692c0a[stor3]
                            require sub_f6692c0a[stor3]
                            if (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) / sub_f6692c0a[stor3] != ext_call.return_data[18 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160]:
                                revert with 0, 'ds-math-mul-overflow'
                            require (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                            if (10000 * ext_call.return_data[50 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1 < 10000 * ext_call.return_data[50 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]):
                                revert with 0, 'ds-math-add-overflow'
                            require idx - 1 < mem[(32 * arg2.length) + 128]
                            mem[(32 * idx - 1) + (32 * arg2.length) + 160] = (10000 * ext_call.return_data[50 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1
                else:
                    if not mem[(32 * idx) + 140 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    _1315 = mem[64]
                    mem[mem[64] + 32] = address(mem[(32 * idx) + 128])
                    mem[mem[64] + 52] = address(mem[(32 * idx - 1) + 128])
                    _1316 = mem[64]
                    mem[mem[64]] = 40
                    mem[64] = mem[64] + 72
                    _1318 = sha3(mem[_1316 + 32 len mem[_1316]])
                    mem[_1315 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_1315 + 105] = factoryAddress
                    mem[_1315 + 125] = _1318
                    mem[_1315 + 157] = sub_acaed29c[stor3]
                    mem[_1315 + 72] = 85
                    if mem[(32 * idx - 1) + 140 len 20] == address(_1246):
                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_1315 + 292 len 29]
                    if mem[(32 * idx - 1) + 140 len 20] < address(_1246):
                        if not mem[(32 * idx - 1) + 140 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_1315 + 221] = address(mem[(32 * idx - 1) + 128])
                        mem[_1315 + 241] = address(_1246)
                        mem[_1315 + 189] = 40
                        mem[_1315 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_1315 + 294] = factoryAddress
                        mem[_1315 + 314] = sha3(mem[(32 * idx - 1) + 140 len 20], address(_1246))
                        mem[_1315 + 346] = sub_acaed29c[stor3]
                        mem[_1315 + 261] = 85
                        mem[64] = _1315 + 378
                        require ext_code.size(address(sha3(0, factoryAddress, sha3(mem[(32 * idx - 1) + 140 len 20], address(_1246)), sub_acaed29c[stor3])))
                        staticcall address(sha3(0, factoryAddress, sha3(mem[(32 * idx - 1) + 140 len 20], address(_1246)), sub_acaed29c[stor3])).getReserves() with:
                                gas gas_remaining wei
                    else:
                        if not address(_1246):
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_1315 + 221] = address(_1246)
                        mem[_1315 + 241] = address(mem[(32 * idx - 1) + 128])
                        mem[_1315 + 189] = 40
                        mem[_1315 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_1315 + 294] = factoryAddress
                        mem[_1315 + 314] = sha3(address(_1246), mem[(32 * idx - 1) + 140 len 20])
                        mem[_1315 + 346] = sub_acaed29c[stor3]
                        mem[_1315 + 261] = 85
                        mem[64] = _1315 + 378
                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_1246), mem[(32 * idx - 1) + 140 len 20]), sub_acaed29c[stor3])))
                        staticcall address(sha3(0, factoryAddress, sha3(address(_1246), mem[(32 * idx - 1) + 140 len 20]), sub_acaed29c[stor3])).getReserves() with:
                                gas gas_remaining wei
                    mem[_1315 + 378 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 96
                    require idx < mem[(32 * arg2.length) + 128]
                    if mem[(32 * idx) + (32 * arg2.length) + 160] <= 0:
                        revert with 0, 
                                    32,
                                    42,
                                    0x5450616e63616b654c6962726172793a20494e53554646494349454e545f4f55545055545f414d4f554e,
                                    mem[_1315 + 488 len 22]
                    if mem[(32 * idx - 1) + 140 len 20] == address(_1246):
                        if ext_call.return_data[18 len 14] <= 0:
                            revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1315 + 484 len 26]
                        if ext_call.return_data[50 len 14] <= 0:
                            revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1315 + 484 len 26]
                        if not mem[(32 * idx) + (32 * arg2.length) + 160]:
                            if ext_call.return_data[50 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160] > ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-sub-underflow'
                            require sub_f6692c0a[stor3]
                            require sub_f6692c0a[stor3]
                            if (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) / sub_f6692c0a[stor3] != ext_call.return_data[50 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160]:
                                revert with 0, 'ds-math-mul-overflow'
                            require (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                            if (0 / (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1 < 0 / (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]):
                                revert with 0, 'ds-math-add-overflow'
                            require idx - 1 < mem[(32 * arg2.length) + 128]
                            mem[(32 * idx - 1) + (32 * arg2.length) + 160] = (0 / (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1
                        else:
                            require mem[(32 * idx) + (32 * arg2.length) + 160]
                            if ext_call.return_data[18 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / mem[(32 * idx) + (32 * arg2.length) + 160] != ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[18 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / 10000 != ext_call.return_data[18 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160]:
                                revert with 0, 'ds-math-mul-overflow'
                            if ext_call.return_data[50 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160] > ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-sub-underflow'
                            require sub_f6692c0a[stor3]
                            require sub_f6692c0a[stor3]
                            if (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) / sub_f6692c0a[stor3] != ext_call.return_data[50 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160]:
                                revert with 0, 'ds-math-mul-overflow'
                            require (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                            if (10000 * ext_call.return_data[18 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1 < 10000 * ext_call.return_data[18 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]):
                                revert with 0, 'ds-math-add-overflow'
                            require idx - 1 < mem[(32 * arg2.length) + 128]
                            mem[(32 * idx - 1) + (32 * arg2.length) + 160] = (10000 * ext_call.return_data[18 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1
                    else:
                        if ext_call.return_data[50 len 14] <= 0:
                            revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1315 + 484 len 26]
                        if ext_call.return_data[18 len 14] <= 0:
                            revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1315 + 484 len 26]
                        if not mem[(32 * idx) + (32 * arg2.length) + 160]:
                            if ext_call.return_data[18 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160] > ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-sub-underflow'
                            require sub_f6692c0a[stor3]
                            require sub_f6692c0a[stor3]
                            if (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) / sub_f6692c0a[stor3] != ext_call.return_data[18 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160]:
                                revert with 0, 'ds-math-mul-overflow'
                            require (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                            if (0 / (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1 < 0 / (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]):
                                revert with 0, 'ds-math-add-overflow'
                            require idx - 1 < mem[(32 * arg2.length) + 128]
                            mem[(32 * idx - 1) + (32 * arg2.length) + 160] = (0 / (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1
                        else:
                            require mem[(32 * idx) + (32 * arg2.length) + 160]
                            if ext_call.return_data[50 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / mem[(32 * idx) + (32 * arg2.length) + 160] != ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[50 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / 10000 != ext_call.return_data[50 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160]:
                                revert with 0, 'ds-math-mul-overflow'
                            if ext_call.return_data[18 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160] > ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-sub-underflow'
                            require sub_f6692c0a[stor3]
                            require sub_f6692c0a[stor3]
                            if (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) / sub_f6692c0a[stor3] != ext_call.return_data[18 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160]:
                                revert with 0, 'ds-math-mul-overflow'
                            require (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                            if (10000 * ext_call.return_data[50 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1 < 10000 * ext_call.return_data[50 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]):
                                revert with 0, 'ds-math-add-overflow'
                            require idx - 1 < mem[(32 * arg2.length) + 128]
                            mem[(32 * idx - 1) + (32 * arg2.length) + 160] = (10000 * ext_call.return_data[50 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1
            idx = idx - 1
            continue 
        mem[mem[64]] = 32
        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
        _1245 = mem[(32 * arg2.length) + 128]
        mem[mem[64] + 64 len floor32(mem[(32 * arg2.length) + 128])] = mem[(32 * arg2.length) + 160 len floor32(mem[(32 * arg2.length) + 128])]
        return 32, mem[mem[64] + 32 len (32 * _1245) + 32]
    mem[(32 * arg2.length) + 160 len 32 * arg2.length] = call.data[calldata.size len 32 * arg2.length]
    require arg2.length - 1 < arg2.length
    mem[(32 * arg2.length - 1) + (32 * arg2.length) + 160] = arg1
    idx = mem[96] - 1
    while idx > 0:
        require idx - 1 < mem[96]
        require idx < mem[96]
        _1250 = mem[(32 * idx) + 128]
        if mem[(32 * idx - 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
            revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
        if mem[(32 * idx - 1) + 140 len 20] < mem[(32 * idx) + 140 len 20]:
            if not mem[(32 * idx - 1) + 140 len 20]:
                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
            if mem[(32 * idx - 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
            if mem[(32 * idx - 1) + 140 len 20] < mem[(32 * idx) + 140 len 20]:
                if not mem[(32 * idx - 1) + 140 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                _1323 = mem[64]
                mem[mem[64] + 32] = address(mem[(32 * idx - 1) + 128])
                mem[mem[64] + 52] = address(_1250)
                _1324 = mem[64]
                mem[mem[64]] = 40
                mem[64] = mem[64] + 72
                _1326 = sha3(mem[_1324 + 32 len mem[_1324]])
                mem[_1323 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                mem[_1323 + 105] = factoryAddress
                mem[_1323 + 125] = _1326
                mem[_1323 + 157] = sub_acaed29c[stor3]
                mem[_1323 + 72] = 85
                if mem[(32 * idx - 1) + 140 len 20] == address(_1250):
                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_1323 + 292 len 29]
                if mem[(32 * idx - 1) + 140 len 20] < address(_1250):
                    if not mem[(32 * idx - 1) + 140 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    mem[_1323 + 221] = address(mem[(32 * idx - 1) + 128])
                    mem[_1323 + 241] = address(_1250)
                    mem[_1323 + 189] = 40
                    mem[_1323 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_1323 + 294] = factoryAddress
                    mem[_1323 + 314] = sha3(mem[(32 * idx - 1) + 140 len 20], address(_1250))
                    mem[_1323 + 346] = sub_acaed29c[stor3]
                    mem[_1323 + 261] = 85
                    mem[64] = _1323 + 378
                    require ext_code.size(address(sha3(0, factoryAddress, sha3(mem[(32 * idx - 1) + 140 len 20], address(_1250)), sub_acaed29c[stor3])))
                    staticcall address(sha3(0, factoryAddress, sha3(mem[(32 * idx - 1) + 140 len 20], address(_1250)), sub_acaed29c[stor3])).getReserves() with:
                            gas gas_remaining wei
                else:
                    if not address(_1250):
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    mem[_1323 + 221] = address(_1250)
                    mem[_1323 + 241] = address(mem[(32 * idx - 1) + 128])
                    mem[_1323 + 189] = 40
                    mem[_1323 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_1323 + 294] = factoryAddress
                    mem[_1323 + 314] = sha3(address(_1250), mem[(32 * idx - 1) + 140 len 20])
                    mem[_1323 + 346] = sub_acaed29c[stor3]
                    mem[_1323 + 261] = 85
                    mem[64] = _1323 + 378
                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_1250), mem[(32 * idx - 1) + 140 len 20]), sub_acaed29c[stor3])))
                    staticcall address(sha3(0, factoryAddress, sha3(address(_1250), mem[(32 * idx - 1) + 140 len 20]), sub_acaed29c[stor3])).getReserves() with:
                            gas gas_remaining wei
                mem[_1323 + 378 len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 96
                require idx < mem[(32 * arg2.length) + 128]
                if mem[(32 * idx) + (32 * arg2.length) + 160] <= 0:
                    revert with 0, 
                                32,
                                42,
                                0x5450616e63616b654c6962726172793a20494e53554646494349454e545f4f55545055545f414d4f554e,
                                mem[_1323 + 488 len 22]
                if mem[(32 * idx - 1) + 140 len 20] == mem[(32 * idx - 1) + 140 len 20]:
                    if ext_call.return_data[18 len 14] <= 0:
                        revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1323 + 484 len 26]
                    if ext_call.return_data[50 len 14] <= 0:
                        revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1323 + 484 len 26]
                    if not mem[(32 * idx) + (32 * arg2.length) + 160]:
                        if ext_call.return_data[50 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160] > ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-sub-underflow'
                        require sub_f6692c0a[stor3]
                        require sub_f6692c0a[stor3]
                        if (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) / sub_f6692c0a[stor3] != ext_call.return_data[50 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        require (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                        if (0 / (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1 < 0 / (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]):
                            revert with 0, 'ds-math-add-overflow'
                        require idx - 1 < mem[(32 * arg2.length) + 128]
                        mem[(32 * idx - 1) + (32 * arg2.length) + 160] = (0 / (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1
                    else:
                        require mem[(32 * idx) + (32 * arg2.length) + 160]
                        if ext_call.return_data[18 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / mem[(32 * idx) + (32 * arg2.length) + 160] != ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[18 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / 10000 != ext_call.return_data[18 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        if ext_call.return_data[50 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160] > ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-sub-underflow'
                        require sub_f6692c0a[stor3]
                        require sub_f6692c0a[stor3]
                        if (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) / sub_f6692c0a[stor3] != ext_call.return_data[50 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        require (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                        if (10000 * ext_call.return_data[18 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1 < 10000 * ext_call.return_data[18 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]):
                            revert with 0, 'ds-math-add-overflow'
                        require idx - 1 < mem[(32 * arg2.length) + 128]
                        mem[(32 * idx - 1) + (32 * arg2.length) + 160] = (10000 * ext_call.return_data[18 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1
                else:
                    if ext_call.return_data[50 len 14] <= 0:
                        revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1323 + 484 len 26]
                    if ext_call.return_data[18 len 14] <= 0:
                        revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1323 + 484 len 26]
                    if not mem[(32 * idx) + (32 * arg2.length) + 160]:
                        if ext_call.return_data[18 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160] > ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-sub-underflow'
                        require sub_f6692c0a[stor3]
                        require sub_f6692c0a[stor3]
                        if (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) / sub_f6692c0a[stor3] != ext_call.return_data[18 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        require (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                        if (0 / (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1 < 0 / (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]):
                            revert with 0, 'ds-math-add-overflow'
                        require idx - 1 < mem[(32 * arg2.length) + 128]
                        mem[(32 * idx - 1) + (32 * arg2.length) + 160] = (0 / (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1
                    else:
                        require mem[(32 * idx) + (32 * arg2.length) + 160]
                        if ext_call.return_data[50 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / mem[(32 * idx) + (32 * arg2.length) + 160] != ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[50 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / 10000 != ext_call.return_data[50 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        if ext_call.return_data[18 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160] > ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-sub-underflow'
                        require sub_f6692c0a[stor3]
                        require sub_f6692c0a[stor3]
                        if (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) / sub_f6692c0a[stor3] != ext_call.return_data[18 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        require (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                        if (10000 * ext_call.return_data[50 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1 < 10000 * ext_call.return_data[50 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]):
                            revert with 0, 'ds-math-add-overflow'
                        require idx - 1 < mem[(32 * arg2.length) + 128]
                        mem[(32 * idx - 1) + (32 * arg2.length) + 160] = (10000 * ext_call.return_data[50 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1
            else:
                if not mem[(32 * idx) + 140 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                _1331 = mem[64]
                mem[mem[64] + 32] = address(mem[(32 * idx) + 128])
                mem[mem[64] + 52] = address(mem[(32 * idx - 1) + 128])
                _1332 = mem[64]
                mem[mem[64]] = 40
                mem[64] = mem[64] + 72
                _1334 = sha3(mem[_1332 + 32 len mem[_1332]])
                mem[_1331 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                mem[_1331 + 105] = factoryAddress
                mem[_1331 + 125] = _1334
                mem[_1331 + 157] = sub_acaed29c[stor3]
                mem[_1331 + 72] = 85
                if mem[(32 * idx - 1) + 140 len 20] == address(_1250):
                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_1331 + 292 len 29]
                if mem[(32 * idx - 1) + 140 len 20] < address(_1250):
                    if not mem[(32 * idx - 1) + 140 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    mem[_1331 + 221] = address(mem[(32 * idx - 1) + 128])
                    mem[_1331 + 241] = address(_1250)
                    mem[_1331 + 189] = 40
                    mem[_1331 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_1331 + 294] = factoryAddress
                    mem[_1331 + 314] = sha3(mem[(32 * idx - 1) + 140 len 20], address(_1250))
                    mem[_1331 + 346] = sub_acaed29c[stor3]
                    mem[_1331 + 261] = 85
                    mem[64] = _1331 + 378
                    require ext_code.size(address(sha3(0, factoryAddress, sha3(mem[(32 * idx - 1) + 140 len 20], address(_1250)), sub_acaed29c[stor3])))
                    staticcall address(sha3(0, factoryAddress, sha3(mem[(32 * idx - 1) + 140 len 20], address(_1250)), sub_acaed29c[stor3])).getReserves() with:
                            gas gas_remaining wei
                else:
                    if not address(_1250):
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    mem[_1331 + 221] = address(_1250)
                    mem[_1331 + 241] = address(mem[(32 * idx - 1) + 128])
                    mem[_1331 + 189] = 40
                    mem[_1331 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_1331 + 294] = factoryAddress
                    mem[_1331 + 314] = sha3(address(_1250), mem[(32 * idx - 1) + 140 len 20])
                    mem[_1331 + 346] = sub_acaed29c[stor3]
                    mem[_1331 + 261] = 85
                    mem[64] = _1331 + 378
                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_1250), mem[(32 * idx - 1) + 140 len 20]), sub_acaed29c[stor3])))
                    staticcall address(sha3(0, factoryAddress, sha3(address(_1250), mem[(32 * idx - 1) + 140 len 20]), sub_acaed29c[stor3])).getReserves() with:
                            gas gas_remaining wei
                mem[_1331 + 378 len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 96
                require idx < mem[(32 * arg2.length) + 128]
                if mem[(32 * idx) + (32 * arg2.length) + 160] <= 0:
                    revert with 0, 
                                32,
                                42,
                                0x5450616e63616b654c6962726172793a20494e53554646494349454e545f4f55545055545f414d4f554e,
                                mem[_1331 + 488 len 22]
                if mem[(32 * idx - 1) + 140 len 20] == mem[(32 * idx - 1) + 140 len 20]:
                    if ext_call.return_data[18 len 14] <= 0:
                        revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1331 + 484 len 26]
                    if ext_call.return_data[50 len 14] <= 0:
                        revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1331 + 484 len 26]
                    if not mem[(32 * idx) + (32 * arg2.length) + 160]:
                        if ext_call.return_data[50 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160] > ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-sub-underflow'
                        require sub_f6692c0a[stor3]
                        require sub_f6692c0a[stor3]
                        if (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) / sub_f6692c0a[stor3] != ext_call.return_data[50 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        require (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                        if (0 / (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1 < 0 / (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]):
                            revert with 0, 'ds-math-add-overflow'
                        require idx - 1 < mem[(32 * arg2.length) + 128]
                        mem[(32 * idx - 1) + (32 * arg2.length) + 160] = (0 / (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1
                    else:
                        require mem[(32 * idx) + (32 * arg2.length) + 160]
                        if ext_call.return_data[18 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / mem[(32 * idx) + (32 * arg2.length) + 160] != ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[18 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / 10000 != ext_call.return_data[18 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        if ext_call.return_data[50 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160] > ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-sub-underflow'
                        require sub_f6692c0a[stor3]
                        require sub_f6692c0a[stor3]
                        if (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) / sub_f6692c0a[stor3] != ext_call.return_data[50 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        require (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                        if (10000 * ext_call.return_data[18 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1 < 10000 * ext_call.return_data[18 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]):
                            revert with 0, 'ds-math-add-overflow'
                        require idx - 1 < mem[(32 * arg2.length) + 128]
                        mem[(32 * idx - 1) + (32 * arg2.length) + 160] = (10000 * ext_call.return_data[18 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1
                else:
                    if ext_call.return_data[50 len 14] <= 0:
                        revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1331 + 484 len 26]
                    if ext_call.return_data[18 len 14] <= 0:
                        revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1331 + 484 len 26]
                    if not mem[(32 * idx) + (32 * arg2.length) + 160]:
                        if ext_call.return_data[18 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160] > ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-sub-underflow'
                        require sub_f6692c0a[stor3]
                        require sub_f6692c0a[stor3]
                        if (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) / sub_f6692c0a[stor3] != ext_call.return_data[18 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        require (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                        if (0 / (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1 < 0 / (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]):
                            revert with 0, 'ds-math-add-overflow'
                        require idx - 1 < mem[(32 * arg2.length) + 128]
                        mem[(32 * idx - 1) + (32 * arg2.length) + 160] = (0 / (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1
                    else:
                        require mem[(32 * idx) + (32 * arg2.length) + 160]
                        if ext_call.return_data[50 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / mem[(32 * idx) + (32 * arg2.length) + 160] != ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[50 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / 10000 != ext_call.return_data[50 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        if ext_call.return_data[18 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160] > ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-sub-underflow'
                        require sub_f6692c0a[stor3]
                        require sub_f6692c0a[stor3]
                        if (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) / sub_f6692c0a[stor3] != ext_call.return_data[18 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        require (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                        if (10000 * ext_call.return_data[50 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1 < 10000 * ext_call.return_data[50 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]):
                            revert with 0, 'ds-math-add-overflow'
                        require idx - 1 < mem[(32 * arg2.length) + 128]
                        mem[(32 * idx - 1) + (32 * arg2.length) + 160] = (10000 * ext_call.return_data[50 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1
        else:
            if not mem[(32 * idx) + 140 len 20]:
                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
            if mem[(32 * idx - 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
            if mem[(32 * idx - 1) + 140 len 20] < mem[(32 * idx) + 140 len 20]:
                if not mem[(32 * idx - 1) + 140 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                _1339 = mem[64]
                mem[mem[64] + 32] = address(mem[(32 * idx - 1) + 128])
                mem[mem[64] + 52] = address(_1250)
                _1340 = mem[64]
                mem[mem[64]] = 40
                mem[64] = mem[64] + 72
                _1342 = sha3(mem[_1340 + 32 len mem[_1340]])
                mem[_1339 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                mem[_1339 + 105] = factoryAddress
                mem[_1339 + 125] = _1342
                mem[_1339 + 157] = sub_acaed29c[stor3]
                mem[_1339 + 72] = 85
                if mem[(32 * idx - 1) + 140 len 20] == address(_1250):
                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_1339 + 292 len 29]
                if mem[(32 * idx - 1) + 140 len 20] < address(_1250):
                    if not mem[(32 * idx - 1) + 140 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    mem[_1339 + 221] = address(mem[(32 * idx - 1) + 128])
                    mem[_1339 + 241] = address(_1250)
                    mem[_1339 + 189] = 40
                    mem[_1339 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_1339 + 294] = factoryAddress
                    mem[_1339 + 314] = sha3(mem[(32 * idx - 1) + 140 len 20], address(_1250))
                    mem[_1339 + 346] = sub_acaed29c[stor3]
                    mem[_1339 + 261] = 85
                    mem[64] = _1339 + 378
                    require ext_code.size(address(sha3(0, factoryAddress, sha3(mem[(32 * idx - 1) + 140 len 20], address(_1250)), sub_acaed29c[stor3])))
                    staticcall address(sha3(0, factoryAddress, sha3(mem[(32 * idx - 1) + 140 len 20], address(_1250)), sub_acaed29c[stor3])).getReserves() with:
                            gas gas_remaining wei
                else:
                    if not address(_1250):
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    mem[_1339 + 221] = address(_1250)
                    mem[_1339 + 241] = address(mem[(32 * idx - 1) + 128])
                    mem[_1339 + 189] = 40
                    mem[_1339 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_1339 + 294] = factoryAddress
                    mem[_1339 + 314] = sha3(address(_1250), mem[(32 * idx - 1) + 140 len 20])
                    mem[_1339 + 346] = sub_acaed29c[stor3]
                    mem[_1339 + 261] = 85
                    mem[64] = _1339 + 378
                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_1250), mem[(32 * idx - 1) + 140 len 20]), sub_acaed29c[stor3])))
                    staticcall address(sha3(0, factoryAddress, sha3(address(_1250), mem[(32 * idx - 1) + 140 len 20]), sub_acaed29c[stor3])).getReserves() with:
                            gas gas_remaining wei
                mem[_1339 + 378 len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 96
                require idx < mem[(32 * arg2.length) + 128]
                if mem[(32 * idx) + (32 * arg2.length) + 160] <= 0:
                    revert with 0, 
                                32,
                                42,
                                0x5450616e63616b654c6962726172793a20494e53554646494349454e545f4f55545055545f414d4f554e,
                                mem[_1339 + 488 len 22]
                if mem[(32 * idx - 1) + 140 len 20] == address(_1250):
                    if ext_call.return_data[18 len 14] <= 0:
                        revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1339 + 484 len 26]
                    if ext_call.return_data[50 len 14] <= 0:
                        revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1339 + 484 len 26]
                    if not mem[(32 * idx) + (32 * arg2.length) + 160]:
                        if ext_call.return_data[50 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160] > ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-sub-underflow'
                        require sub_f6692c0a[stor3]
                        require sub_f6692c0a[stor3]
                        if (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) / sub_f6692c0a[stor3] != ext_call.return_data[50 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        require (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                        if (0 / (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1 < 0 / (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]):
                            revert with 0, 'ds-math-add-overflow'
                        require idx - 1 < mem[(32 * arg2.length) + 128]
                        mem[(32 * idx - 1) + (32 * arg2.length) + 160] = (0 / (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1
                    else:
                        require mem[(32 * idx) + (32 * arg2.length) + 160]
                        if ext_call.return_data[18 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / mem[(32 * idx) + (32 * arg2.length) + 160] != ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[18 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / 10000 != ext_call.return_data[18 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        if ext_call.return_data[50 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160] > ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-sub-underflow'
                        require sub_f6692c0a[stor3]
                        require sub_f6692c0a[stor3]
                        if (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) / sub_f6692c0a[stor3] != ext_call.return_data[50 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        require (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                        if (10000 * ext_call.return_data[18 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1 < 10000 * ext_call.return_data[18 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]):
                            revert with 0, 'ds-math-add-overflow'
                        require idx - 1 < mem[(32 * arg2.length) + 128]
                        mem[(32 * idx - 1) + (32 * arg2.length) + 160] = (10000 * ext_call.return_data[18 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1
                else:
                    if ext_call.return_data[50 len 14] <= 0:
                        revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1339 + 484 len 26]
                    if ext_call.return_data[18 len 14] <= 0:
                        revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1339 + 484 len 26]
                    if not mem[(32 * idx) + (32 * arg2.length) + 160]:
                        if ext_call.return_data[18 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160] > ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-sub-underflow'
                        require sub_f6692c0a[stor3]
                        require sub_f6692c0a[stor3]
                        if (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) / sub_f6692c0a[stor3] != ext_call.return_data[18 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        require (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                        if (0 / (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1 < 0 / (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]):
                            revert with 0, 'ds-math-add-overflow'
                        require idx - 1 < mem[(32 * arg2.length) + 128]
                        mem[(32 * idx - 1) + (32 * arg2.length) + 160] = (0 / (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1
                    else:
                        require mem[(32 * idx) + (32 * arg2.length) + 160]
                        if ext_call.return_data[50 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / mem[(32 * idx) + (32 * arg2.length) + 160] != ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[50 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / 10000 != ext_call.return_data[50 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        if ext_call.return_data[18 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160] > ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-sub-underflow'
                        require sub_f6692c0a[stor3]
                        require sub_f6692c0a[stor3]
                        if (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) / sub_f6692c0a[stor3] != ext_call.return_data[18 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        require (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                        if (10000 * ext_call.return_data[50 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1 < 10000 * ext_call.return_data[50 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]):
                            revert with 0, 'ds-math-add-overflow'
                        require idx - 1 < mem[(32 * arg2.length) + 128]
                        mem[(32 * idx - 1) + (32 * arg2.length) + 160] = (10000 * ext_call.return_data[50 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1
            else:
                if not mem[(32 * idx) + 140 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                _1347 = mem[64]
                mem[mem[64] + 32] = address(mem[(32 * idx) + 128])
                mem[mem[64] + 52] = address(mem[(32 * idx - 1) + 128])
                _1348 = mem[64]
                mem[mem[64]] = 40
                mem[64] = mem[64] + 72
                _1350 = sha3(mem[_1348 + 32 len mem[_1348]])
                mem[_1347 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                mem[_1347 + 105] = factoryAddress
                mem[_1347 + 125] = _1350
                mem[_1347 + 157] = sub_acaed29c[stor3]
                mem[_1347 + 72] = 85
                if mem[(32 * idx - 1) + 140 len 20] == address(_1250):
                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_1347 + 292 len 29]
                if mem[(32 * idx - 1) + 140 len 20] < address(_1250):
                    if not mem[(32 * idx - 1) + 140 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    mem[_1347 + 221] = address(mem[(32 * idx - 1) + 128])
                    mem[_1347 + 241] = address(_1250)
                    mem[_1347 + 189] = 40
                    mem[_1347 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_1347 + 294] = factoryAddress
                    mem[_1347 + 314] = sha3(mem[(32 * idx - 1) + 140 len 20], address(_1250))
                    mem[_1347 + 346] = sub_acaed29c[stor3]
                    mem[_1347 + 261] = 85
                    mem[64] = _1347 + 378
                    require ext_code.size(address(sha3(0, factoryAddress, sha3(mem[(32 * idx - 1) + 140 len 20], address(_1250)), sub_acaed29c[stor3])))
                    staticcall address(sha3(0, factoryAddress, sha3(mem[(32 * idx - 1) + 140 len 20], address(_1250)), sub_acaed29c[stor3])).getReserves() with:
                            gas gas_remaining wei
                else:
                    if not address(_1250):
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    mem[_1347 + 221] = address(_1250)
                    mem[_1347 + 241] = address(mem[(32 * idx - 1) + 128])
                    mem[_1347 + 189] = 40
                    mem[_1347 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_1347 + 294] = factoryAddress
                    mem[_1347 + 314] = sha3(address(_1250), mem[(32 * idx - 1) + 140 len 20])
                    mem[_1347 + 346] = sub_acaed29c[stor3]
                    mem[_1347 + 261] = 85
                    mem[64] = _1347 + 378
                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_1250), mem[(32 * idx - 1) + 140 len 20]), sub_acaed29c[stor3])))
                    staticcall address(sha3(0, factoryAddress, sha3(address(_1250), mem[(32 * idx - 1) + 140 len 20]), sub_acaed29c[stor3])).getReserves() with:
                            gas gas_remaining wei
                mem[_1347 + 378 len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 96
                require idx < mem[(32 * arg2.length) + 128]
                if mem[(32 * idx) + (32 * arg2.length) + 160] <= 0:
                    revert with 0, 
                                32,
                                42,
                                0x5450616e63616b654c6962726172793a20494e53554646494349454e545f4f55545055545f414d4f554e,
                                mem[_1347 + 488 len 22]
                if mem[(32 * idx - 1) + 140 len 20] == address(_1250):
                    if ext_call.return_data[18 len 14] <= 0:
                        revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1347 + 484 len 26]
                    if ext_call.return_data[50 len 14] <= 0:
                        revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1347 + 484 len 26]
                    if not mem[(32 * idx) + (32 * arg2.length) + 160]:
                        if ext_call.return_data[50 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160] > ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-sub-underflow'
                        require sub_f6692c0a[stor3]
                        require sub_f6692c0a[stor3]
                        if (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) / sub_f6692c0a[stor3] != ext_call.return_data[50 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        require (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                        if (0 / (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1 < 0 / (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]):
                            revert with 0, 'ds-math-add-overflow'
                        require idx - 1 < mem[(32 * arg2.length) + 128]
                        mem[(32 * idx - 1) + (32 * arg2.length) + 160] = (0 / (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1
                    else:
                        require mem[(32 * idx) + (32 * arg2.length) + 160]
                        if ext_call.return_data[18 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / mem[(32 * idx) + (32 * arg2.length) + 160] != ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[18 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / 10000 != ext_call.return_data[18 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        if ext_call.return_data[50 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160] > ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-sub-underflow'
                        require sub_f6692c0a[stor3]
                        require sub_f6692c0a[stor3]
                        if (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) / sub_f6692c0a[stor3] != ext_call.return_data[50 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        require (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                        if (10000 * ext_call.return_data[18 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1 < 10000 * ext_call.return_data[18 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]):
                            revert with 0, 'ds-math-add-overflow'
                        require idx - 1 < mem[(32 * arg2.length) + 128]
                        mem[(32 * idx - 1) + (32 * arg2.length) + 160] = (10000 * ext_call.return_data[18 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / (ext_call.return_data[50 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1
                else:
                    if ext_call.return_data[50 len 14] <= 0:
                        revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1347 + 484 len 26]
                    if ext_call.return_data[18 len 14] <= 0:
                        revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_1347 + 484 len 26]
                    if not mem[(32 * idx) + (32 * arg2.length) + 160]:
                        if ext_call.return_data[18 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160] > ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-sub-underflow'
                        require sub_f6692c0a[stor3]
                        require sub_f6692c0a[stor3]
                        if (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) / sub_f6692c0a[stor3] != ext_call.return_data[18 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        require (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                        if (0 / (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1 < 0 / (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]):
                            revert with 0, 'ds-math-add-overflow'
                        require idx - 1 < mem[(32 * arg2.length) + 128]
                        mem[(32 * idx - 1) + (32 * arg2.length) + 160] = (0 / (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1
                    else:
                        require mem[(32 * idx) + (32 * arg2.length) + 160]
                        if ext_call.return_data[50 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / mem[(32 * idx) + (32 * arg2.length) + 160] != ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[50 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / 10000 != ext_call.return_data[50 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        if ext_call.return_data[18 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160] > ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-sub-underflow'
                        require sub_f6692c0a[stor3]
                        require sub_f6692c0a[stor3]
                        if (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]) / sub_f6692c0a[stor3] != ext_call.return_data[18 len 14] - mem[(32 * idx) + (32 * arg2.length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        require (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])
                        if (10000 * ext_call.return_data[50 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1 < 10000 * ext_call.return_data[50 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3]):
                            revert with 0, 'ds-math-add-overflow'
                        require idx - 1 < mem[(32 * arg2.length) + 128]
                        mem[(32 * idx - 1) + (32 * arg2.length) + 160] = (10000 * ext_call.return_data[50 len 14] * mem[(32 * idx) + (32 * arg2.length) + 160] / (ext_call.return_data[18 len 14] * sub_f6692c0a[stor3]) - (mem[(32 * idx) + (32 * arg2.length) + 160] * sub_f6692c0a[stor3])) + 1
        idx = idx - 1
        continue 
    mem[mem[64]] = 32
    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
    _1249 = mem[(32 * arg2.length) + 128]
    mem[mem[64] + 64 len floor32(mem[(32 * arg2.length) + 128])] = mem[(32 * arg2.length) + 160 len floor32(mem[(32 * arg2.length) + 128])]
    return 32, mem[mem[64] + 32 len (32 * _1249) + 32]
}

function sub_eeb08328(?) {
    require calldata.size - 4 >= 64
    require cd[36] <= 4294967296
    require cd[36] + 36 <= calldata.size
    require ('cd', 36).length <= 4294967296 and cd[36] + (32 * ('cd', 36).length) + 36 <= calldata.size
    if owner != msg.sender:
        revert with 0, '!OWNER'
    require 0 < ('cd', 36).length
    mem[100] = this.address
    require ext_code.size(address(('cd', 36)[0]))
    staticcall address(('cd', 36)[0]).0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    mem[96] = ('cd', 36).length
    mem[128 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
    mem[0] = factoryAddress
    mem[32] = 4
    if ('cd', 36).length < 2:
        revert with 0, 'PancakeLibrary: INVALID_PATH'
    require ('cd', 36).length <= test266151307()
    mem[(32 * ('cd', 36).length) + 128] = ('cd', 36).length
    mem[64] = (64 * ('cd', 36).length) + 160
    if not ('cd', 36).length:
        require 0 < ('cd', 36).length
        mem[(32 * ('cd', 36).length) + 160] = ext_call.return_data[0]
        idx = 0
        while idx < ('cd', 36).length - 1:
            require idx < mem[96]
            _11129 = mem[(32 * idx) + 128]
            require idx + 1 < mem[96]
            _11133 = mem[(32 * idx + 1) + 128]
            if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
            if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                if not mem[(32 * idx) + 140 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                    if not mem[(32 * idx) + 140 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    _11253 = mem[64]
                    mem[mem[64] + 32] = address(mem[(32 * idx) + 128])
                    mem[mem[64] + 52] = address(_11133)
                    _11254 = mem[64]
                    mem[mem[64]] = 40
                    mem[64] = mem[64] + 72
                    _11256 = sha3(mem[_11254 + 32 len mem[_11254]])
                    mem[_11253 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_11253 + 105] = factoryAddress
                    mem[_11253 + 125] = _11256
                    mem[_11253 + 157] = sub_acaed29c[stor3]
                    mem[_11253 + 72] = 85
                    if address(_11129) == address(_11133):
                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_11253 + 292 len 29]
                    if address(_11129) < address(_11133):
                        if not address(_11129):
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_11253 + 221] = address(_11129)
                        mem[_11253 + 241] = address(_11133)
                        mem[_11253 + 189] = 40
                        mem[_11253 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_11253 + 294] = factoryAddress
                        mem[_11253 + 314] = sha3(address(_11129), address(_11133))
                        mem[_11253 + 346] = sub_acaed29c[stor3]
                        mem[_11253 + 261] = 85
                        mem[64] = _11253 + 378
                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_11129), address(_11133)), sub_acaed29c[stor3])))
                        staticcall address(sha3(0, factoryAddress, sha3(address(_11129), address(_11133)), sub_acaed29c[stor3])).getReserves() with:
                                gas gas_remaining wei
                    else:
                        if not address(_11133):
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_11253 + 221] = address(_11133)
                        mem[_11253 + 241] = address(_11129)
                        mem[_11253 + 189] = 40
                        mem[_11253 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_11253 + 294] = factoryAddress
                        mem[_11253 + 314] = sha3(address(_11133), address(_11129))
                        mem[_11253 + 346] = sub_acaed29c[stor3]
                        mem[_11253 + 261] = 85
                        mem[64] = _11253 + 378
                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_11133), address(_11129)), sub_acaed29c[stor3])))
                        staticcall address(sha3(0, factoryAddress, sha3(address(_11133), address(_11129)), sub_acaed29c[stor3])).getReserves() with:
                                gas gas_remaining wei
                    mem[_11253 + 378 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 96
                    require idx < mem[(32 * ('cd', 36).length) + 128]
                    if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] <= 0:
                        revert with 0, 
                                    32,
                                    41,
                                    0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                    mem[_11253 + 487 len 23]
                    if address(_11129) == address(_11129):
                        if ext_call.return_data[18 len 14] <= 0:
                            revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_11253 + 484 len 26]
                        if ext_call.return_data[50 len 14] <= 0:
                            revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_11253 + 484 len 26]
                        if not sub_f6692c0a[stor3]:
                            if ext_call.return_data[50 len 14]:
                                require ext_call.return_data[50 len 14]
                                if 0 / ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[18 len 14] < 10000 * ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require 10000 * ext_call.return_data[18 len 14]
                            require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                            mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = 0 / 10000 * ext_call.return_data[18 len 14]
                        else:
                            require sub_f6692c0a[stor3]
                            if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3] / sub_f6692c0a[stor3] != mem[(32 * idx) + (32 * ('cd', 36).length) + 160]:
                                revert with 0, 'ds-math-mul-overflow'
                            if not ext_call.return_data[50 len 14]:
                                if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
                                require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                                mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = 0 / (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
                            else:
                                require ext_call.return_data[50 len 14]
                                if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
                                require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                                mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[50 len 14] / (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
                    else:
                        if ext_call.return_data[50 len 14] <= 0:
                            revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_11253 + 484 len 26]
                        if ext_call.return_data[18 len 14] <= 0:
                            revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_11253 + 484 len 26]
                        if not sub_f6692c0a[stor3]:
                            if ext_call.return_data[18 len 14]:
                                require ext_call.return_data[18 len 14]
                                if 0 / ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[50 len 14] < 10000 * ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require 10000 * ext_call.return_data[50 len 14]
                            require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                            mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = 0 / 10000 * ext_call.return_data[50 len 14]
                        else:
                            require sub_f6692c0a[stor3]
                            if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3] / sub_f6692c0a[stor3] != mem[(32 * idx) + (32 * ('cd', 36).length) + 160]:
                                revert with 0, 'ds-math-mul-overflow'
                            if not ext_call.return_data[18 len 14]:
                                if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
                                require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                                mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = 0 / (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
                            else:
                                require ext_call.return_data[18 len 14]
                                if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
                                require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                                mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[18 len 14] / (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
                else:
                    if not mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    _11261 = mem[64]
                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + 128])
                    mem[mem[64] + 52] = address(_11129)
                    _11262 = mem[64]
                    mem[mem[64]] = 40
                    mem[64] = mem[64] + 72
                    _11264 = sha3(mem[_11262 + 32 len mem[_11262]])
                    mem[_11261 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_11261 + 105] = factoryAddress
                    mem[_11261 + 125] = _11264
                    mem[_11261 + 157] = sub_acaed29c[stor3]
                    mem[_11261 + 72] = 85
                    if address(_11129) == address(_11133):
                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_11261 + 292 len 29]
                    if address(_11129) < address(_11133):
                        if not address(_11129):
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_11261 + 221] = address(_11129)
                        mem[_11261 + 241] = address(_11133)
                        mem[_11261 + 189] = 40
                        mem[_11261 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_11261 + 294] = factoryAddress
                        mem[_11261 + 314] = sha3(address(_11129), address(_11133))
                        mem[_11261 + 346] = sub_acaed29c[stor3]
                        mem[_11261 + 261] = 85
                        mem[64] = _11261 + 378
                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_11129), address(_11133)), sub_acaed29c[stor3])))
                        staticcall address(sha3(0, factoryAddress, sha3(address(_11129), address(_11133)), sub_acaed29c[stor3])).getReserves() with:
                                gas gas_remaining wei
                    else:
                        if not address(_11133):
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_11261 + 221] = address(_11133)
                        mem[_11261 + 241] = address(_11129)
                        mem[_11261 + 189] = 40
                        mem[_11261 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_11261 + 294] = factoryAddress
                        mem[_11261 + 314] = sha3(address(_11133), address(_11129))
                        mem[_11261 + 346] = sub_acaed29c[stor3]
                        mem[_11261 + 261] = 85
                        mem[64] = _11261 + 378
                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_11133), address(_11129)), sub_acaed29c[stor3])))
                        staticcall address(sha3(0, factoryAddress, sha3(address(_11133), address(_11129)), sub_acaed29c[stor3])).getReserves() with:
                                gas gas_remaining wei
                    mem[_11261 + 378 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 96
                    require idx < mem[(32 * ('cd', 36).length) + 128]
                    if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] <= 0:
                        revert with 0, 
                                    32,
                                    41,
                                    0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                    mem[_11261 + 487 len 23]
                    if address(_11129) == address(_11129):
                        if ext_call.return_data[18 len 14] <= 0:
                            revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_11261 + 484 len 26]
                        if ext_call.return_data[50 len 14] <= 0:
                            revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_11261 + 484 len 26]
                        if not sub_f6692c0a[stor3]:
                            if ext_call.return_data[50 len 14]:
                                require ext_call.return_data[50 len 14]
                                if 0 / ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[18 len 14] < 10000 * ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require 10000 * ext_call.return_data[18 len 14]
                            require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                            mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = 0 / 10000 * ext_call.return_data[18 len 14]
                        else:
                            require sub_f6692c0a[stor3]
                            if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3] / sub_f6692c0a[stor3] != mem[(32 * idx) + (32 * ('cd', 36).length) + 160]:
                                revert with 0, 'ds-math-mul-overflow'
                            if not ext_call.return_data[50 len 14]:
                                if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
                                require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                                mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = 0 / (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
                            else:
                                require ext_call.return_data[50 len 14]
                                if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
                                require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                                mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[50 len 14] / (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
                    else:
                        if ext_call.return_data[50 len 14] <= 0:
                            revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_11261 + 484 len 26]
                        if ext_call.return_data[18 len 14] <= 0:
                            revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_11261 + 484 len 26]
                        if not sub_f6692c0a[stor3]:
                            if ext_call.return_data[18 len 14]:
                                require ext_call.return_data[18 len 14]
                                if 0 / ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[50 len 14] < 10000 * ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require 10000 * ext_call.return_data[50 len 14]
                            require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                            mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = 0 / 10000 * ext_call.return_data[50 len 14]
                        else:
                            require sub_f6692c0a[stor3]
                            if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3] / sub_f6692c0a[stor3] != mem[(32 * idx) + (32 * ('cd', 36).length) + 160]:
                                revert with 0, 'ds-math-mul-overflow'
                            if not ext_call.return_data[18 len 14]:
                                if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
                                require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                                mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = 0 / (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
                            else:
                                require ext_call.return_data[18 len 14]
                                if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
                                require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                                mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[18 len 14] / (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
            else:
                if not mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                    if not mem[(32 * idx) + 140 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    _11269 = mem[64]
                    mem[mem[64] + 32] = address(mem[(32 * idx) + 128])
                    mem[mem[64] + 52] = address(_11133)
                    _11270 = mem[64]
                    mem[mem[64]] = 40
                    mem[64] = mem[64] + 72
                    _11272 = sha3(mem[_11270 + 32 len mem[_11270]])
                    mem[_11269 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_11269 + 105] = factoryAddress
                    mem[_11269 + 125] = _11272
                    mem[_11269 + 157] = sub_acaed29c[stor3]
                    mem[_11269 + 72] = 85
                    if address(_11129) == address(_11133):
                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_11269 + 292 len 29]
                    if address(_11129) < address(_11133):
                        if not address(_11129):
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_11269 + 221] = address(_11129)
                        mem[_11269 + 241] = address(_11133)
                        mem[_11269 + 189] = 40
                        mem[_11269 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_11269 + 294] = factoryAddress
                        mem[_11269 + 314] = sha3(address(_11129), address(_11133))
                        mem[_11269 + 346] = sub_acaed29c[stor3]
                        mem[_11269 + 261] = 85
                        mem[64] = _11269 + 378
                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_11129), address(_11133)), sub_acaed29c[stor3])))
                        staticcall address(sha3(0, factoryAddress, sha3(address(_11129), address(_11133)), sub_acaed29c[stor3])).getReserves() with:
                                gas gas_remaining wei
                    else:
                        if not address(_11133):
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_11269 + 221] = address(_11133)
                        mem[_11269 + 241] = address(_11129)
                        mem[_11269 + 189] = 40
                        mem[_11269 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_11269 + 294] = factoryAddress
                        mem[_11269 + 314] = sha3(address(_11133), address(_11129))
                        mem[_11269 + 346] = sub_acaed29c[stor3]
                        mem[_11269 + 261] = 85
                        mem[64] = _11269 + 378
                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_11133), address(_11129)), sub_acaed29c[stor3])))
                        staticcall address(sha3(0, factoryAddress, sha3(address(_11133), address(_11129)), sub_acaed29c[stor3])).getReserves() with:
                                gas gas_remaining wei
                    mem[_11269 + 378 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 96
                    require idx < mem[(32 * ('cd', 36).length) + 128]
                    if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] <= 0:
                        revert with 0, 
                                    32,
                                    41,
                                    0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                    mem[_11269 + 487 len 23]
                    if address(_11129) == address(_11133):
                        if ext_call.return_data[18 len 14] <= 0:
                            revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_11269 + 484 len 26]
                        if ext_call.return_data[50 len 14] <= 0:
                            revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_11269 + 484 len 26]
                        if not sub_f6692c0a[stor3]:
                            if ext_call.return_data[50 len 14]:
                                require ext_call.return_data[50 len 14]
                                if 0 / ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[18 len 14] < 10000 * ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require 10000 * ext_call.return_data[18 len 14]
                            require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                            mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = 0 / 10000 * ext_call.return_data[18 len 14]
                        else:
                            require sub_f6692c0a[stor3]
                            if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3] / sub_f6692c0a[stor3] != mem[(32 * idx) + (32 * ('cd', 36).length) + 160]:
                                revert with 0, 'ds-math-mul-overflow'
                            if not ext_call.return_data[50 len 14]:
                                if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
                                require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                                mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = 0 / (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
                            else:
                                require ext_call.return_data[50 len 14]
                                if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
                                require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                                mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[50 len 14] / (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
                    else:
                        if ext_call.return_data[50 len 14] <= 0:
                            revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_11269 + 484 len 26]
                        if ext_call.return_data[18 len 14] <= 0:
                            revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_11269 + 484 len 26]
                        if not sub_f6692c0a[stor3]:
                            if ext_call.return_data[18 len 14]:
                                require ext_call.return_data[18 len 14]
                                if 0 / ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[50 len 14] < 10000 * ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require 10000 * ext_call.return_data[50 len 14]
                            require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                            mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = 0 / 10000 * ext_call.return_data[50 len 14]
                        else:
                            require sub_f6692c0a[stor3]
                            if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3] / sub_f6692c0a[stor3] != mem[(32 * idx) + (32 * ('cd', 36).length) + 160]:
                                revert with 0, 'ds-math-mul-overflow'
                            if not ext_call.return_data[18 len 14]:
                                if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
                                require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                                mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = 0 / (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
                            else:
                                require ext_call.return_data[18 len 14]
                                if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
                                require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                                mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[18 len 14] / (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
                else:
                    if not mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    _11277 = mem[64]
                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + 128])
                    mem[mem[64] + 52] = address(_11129)
                    _11278 = mem[64]
                    mem[mem[64]] = 40
                    mem[64] = mem[64] + 72
                    _11280 = sha3(mem[_11278 + 32 len mem[_11278]])
                    mem[_11277 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_11277 + 105] = factoryAddress
                    mem[_11277 + 125] = _11280
                    mem[_11277 + 157] = sub_acaed29c[stor3]
                    mem[_11277 + 72] = 85
                    if address(_11129) == address(_11133):
                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_11277 + 292 len 29]
                    if address(_11129) < address(_11133):
                        if not address(_11129):
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_11277 + 221] = address(_11129)
                        mem[_11277 + 241] = address(_11133)
                        mem[_11277 + 189] = 40
                        mem[_11277 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_11277 + 294] = factoryAddress
                        mem[_11277 + 314] = sha3(address(_11129), address(_11133))
                        mem[_11277 + 346] = sub_acaed29c[stor3]
                        mem[_11277 + 261] = 85
                        mem[64] = _11277 + 378
                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_11129), address(_11133)), sub_acaed29c[stor3])))
                        staticcall address(sha3(0, factoryAddress, sha3(address(_11129), address(_11133)), sub_acaed29c[stor3])).getReserves() with:
                                gas gas_remaining wei
                    else:
                        if not address(_11133):
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_11277 + 221] = address(_11133)
                        mem[_11277 + 241] = address(_11129)
                        mem[_11277 + 189] = 40
                        mem[_11277 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_11277 + 294] = factoryAddress
                        mem[_11277 + 314] = sha3(address(_11133), address(_11129))
                        mem[_11277 + 346] = sub_acaed29c[stor3]
                        mem[_11277 + 261] = 85
                        mem[64] = _11277 + 378
                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_11133), address(_11129)), sub_acaed29c[stor3])))
                        staticcall address(sha3(0, factoryAddress, sha3(address(_11133), address(_11129)), sub_acaed29c[stor3])).getReserves() with:
                                gas gas_remaining wei
                    mem[_11277 + 378 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 96
                    require idx < mem[(32 * ('cd', 36).length) + 128]
                    if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] <= 0:
                        revert with 0, 
                                    32,
                                    41,
                                    0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                    mem[_11277 + 487 len 23]
                    if address(_11129) == address(_11133):
                        if ext_call.return_data[18 len 14] <= 0:
                            revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_11277 + 484 len 26]
                        if ext_call.return_data[50 len 14] <= 0:
                            revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_11277 + 484 len 26]
                        if not sub_f6692c0a[stor3]:
                            if ext_call.return_data[50 len 14]:
                                require ext_call.return_data[50 len 14]
                                if 0 / ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[18 len 14] < 10000 * ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require 10000 * ext_call.return_data[18 len 14]
                            require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                            mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = 0 / 10000 * ext_call.return_data[18 len 14]
                        else:
                            require sub_f6692c0a[stor3]
                            if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3] / sub_f6692c0a[stor3] != mem[(32 * idx) + (32 * ('cd', 36).length) + 160]:
                                revert with 0, 'ds-math-mul-overflow'
                            if not ext_call.return_data[50 len 14]:
                                if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
                                require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                                mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = 0 / (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
                            else:
                                require ext_call.return_data[50 len 14]
                                if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
                                require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                                mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[50 len 14] / (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
                    else:
                        if ext_call.return_data[50 len 14] <= 0:
                            revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_11277 + 484 len 26]
                        if ext_call.return_data[18 len 14] <= 0:
                            revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_11277 + 484 len 26]
                        if not sub_f6692c0a[stor3]:
                            if ext_call.return_data[18 len 14]:
                                require ext_call.return_data[18 len 14]
                                if 0 / ext_call.return_data[18 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[50 len 14] < 10000 * ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require 10000 * ext_call.return_data[50 len 14]
                            require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                            mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = 0 / 10000 * ext_call.return_data[50 len 14]
                        else:
                            require sub_f6692c0a[stor3]
                            if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3] / sub_f6692c0a[stor3] != mem[(32 * idx) + (32 * ('cd', 36).length) + 160]:
                                revert with 0, 'ds-math-mul-overflow'
                            if not ext_call.return_data[18 len 14]:
                                if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
                                require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                                mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = 0 / (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
                            else:
                                require ext_call.return_data[18 len 14]
                                if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[50 len 14]:
                                    revert with 0, 'ds-math-add-overflow'
                                require (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
                                require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                                mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[18 len 14] / (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
            idx = idx + 1
            continue 
        require 0 < ('cd', 36).length
        require 1 < ('cd', 36).length
        mem[0] = factoryAddress
        mem[32] = 5
        if address(('cd', 36)[0]) == address(('cd', 36)[1]):
            revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
        if address(('cd', 36)[0]) < address(('cd', 36)[1]):
            if not address(('cd', 36)[0]):
                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
            _11161 = mem[64]
            mem[mem[64] + 32] = address(('cd', 36)[0])
            mem[mem[64] + 52] = address(('cd', 36)[1])
            _11162 = mem[64]
            mem[mem[64]] = 40
            mem[64] = mem[64] + 72
            _11164 = sha3(mem[_11162 + 32 len mem[_11162]])
            mem[_11161 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
            mem[_11161 + 105] = factoryAddress
            mem[_11161 + 125] = _11164
            mem[_11161 + 157] = sub_acaed29c[stor3]
            mem[_11161 + 72] = 85
            require 0 < mem[(32 * ('cd', 36).length) + 128]
            _11205 = mem[(32 * ('cd', 36).length) + 160]
            mem[_11161 + 225] = this.address
            mem[_11161 + 257] = address(sha3(0, factoryAddress, _11164, sub_acaed29c[stor3]))
            mem[_11161 + 289] = _11205
            mem[_11161 + 189] = 100
            mem[_11161 + 225 len 28] = address(this.address) << 64
            mem[_11161 + 221 len 4] = unknown_0x23b872dd(?????)
            mem[_11161 + 321 len 96] = unknown_0x23b872dd(?????), address(this.address) << 64, 0, address(sha3(0, factoryAddress, _11164, sub_acaed29c[stor3])), Mask(224, 32, _11205) >> 32
            mem[_11161 + 445 len 4] = Mask(32, 64, _11205) >> 64
            call address(('cd', 36)[0]) with:
                 gas gas_remaining wei
                args Mask(224, 32, _11205) << 480, mem[_11161 + 417 len 4]
            if not return_data.size:
                if not ext_call.success:
                    revert with 0, 
                                32,
                                49,
                                0x545472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472616e7366657246726f6d206661696c65,
                                mem[_11161 + 438 len 7],
                                Mask(32, 64, _11205) >> 64,
                                mem[_11161 + 449 len 4]
                if not mem[96]:
                    mem[64] = _11161 + (32 * ('cd', 36).length) + 353
                    mem[_11161 + 321] = ('cd', 36).length
                    mem[_11161 + 353 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
                    mem[_11161 + (32 * ('cd', 36).length) + 353] = 0
                    idx = 0
                    while idx < ('cd', 36).length - 1:
                        require idx < mem[_11161 + 321]
                        _31829 = mem[(32 * idx) + _11161 + 353]
                        require idx + 1 < mem[_11161 + 321]
                        _31864 = mem[(32 * idx + 1) + _11161 + 353]
                        if mem[(32 * idx) + _11161 + 365 len 20] == mem[(32 * idx + 1) + _11161 + 365 len 20]:
                            revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _11161 + 365 len 20] < mem[(32 * idx + 1) + _11161 + 365 len 20]:
                            if not mem[(32 * idx) + _11161 + 365 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                            _32085 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                            if mem[(32 * idx) + _11161 + 365 len 20] == mem[(32 * idx) + _11161 + 365 len 20]:
                                if idx >= mem[_11161 + 321] - 2:
                                    mem[0] = factoryAddress
                                    mem[32] = 5
                                    if mem[(32 * idx) + _11161 + 365 len 20] == mem[(32 * idx + 1) + _11161 + 365 len 20]:
                                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                    if mem[(32 * idx) + _11161 + 365 len 20] < mem[(32 * idx + 1) + _11161 + 365 len 20]:
                                        if not mem[(32 * idx) + _11161 + 365 len 20]:
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        _33221 = mem[64]
                                        mem[mem[64] + 32] = address(mem[(32 * idx) + _11161 + 353])
                                        mem[mem[64] + 52] = address(_31864)
                                        _33222 = mem[64]
                                        mem[mem[64]] = 40
                                        mem[64] = mem[64] + 72
                                        _33224 = sha3(mem[_33222 + 32 len mem[_33222]])
                                        mem[_33221 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33221 + 105] = factoryAddress
                                        mem[_33221 + 125] = _33224
                                        mem[_33221 + 157] = sub_acaed29c[stor3]
                                        mem[_33221 + 72] = 85
                                        mem[_33221 + 189] = 0
                                        mem[64] = _33221 + 221
                                        mem[_33221 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_33221 + 225] = 0
                                        mem[_33221 + 257] = _32085
                                        mem[_33221 + 289] = address(cd[4])
                                        mem[_33221 + 321] = 128
                                        mem[_33221 + 353] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_33221 + s + 385] = mem[_33221 + s + 221]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, _33224, sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, _33224, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _32085, address(cd[4]), 128, 0
                                    else:
                                        if not mem[(32 * idx + 1) + _11161 + 365 len 20]:
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        _33229 = mem[64]
                                        mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11161 + 353])
                                        mem[mem[64] + 52] = address(_31829)
                                        _33230 = mem[64]
                                        mem[mem[64]] = 40
                                        mem[64] = mem[64] + 72
                                        _33232 = sha3(mem[_33230 + 32 len mem[_33230]])
                                        mem[_33229 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33229 + 105] = factoryAddress
                                        mem[_33229 + 125] = _33232
                                        mem[_33229 + 157] = sub_acaed29c[stor3]
                                        mem[_33229 + 72] = 85
                                        mem[_33229 + 189] = 0
                                        mem[64] = _33229 + 221
                                        mem[_33229 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_33229 + 225] = 0
                                        mem[_33229 + 257] = _32085
                                        mem[_33229 + 289] = address(cd[4])
                                        mem[_33229 + 321] = 128
                                        mem[_33229 + 353] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_33229 + s + 385] = mem[_33229 + s + 221]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, _33232, sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, _33232, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _32085, address(cd[4]), 128, 0
                                else:
                                    require idx + 2 < mem[_11161 + 321]
                                    _32245 = mem[(32 * idx + 2) + _11161 + 353]
                                    mem[0] = factoryAddress
                                    mem[32] = 5
                                    if mem[(32 * idx + 1) + _11161 + 365 len 20] == mem[(32 * idx + 2) + _11161 + 365 len 20]:
                                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                    if mem[(32 * idx + 1) + _11161 + 365 len 20] < mem[(32 * idx + 2) + _11161 + 365 len 20]:
                                        if not mem[(32 * idx + 1) + _11161 + 365 len 20]:
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        _33205 = mem[64]
                                        mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11161 + 353])
                                        mem[mem[64] + 52] = address(_32245)
                                        _33206 = mem[64]
                                        mem[mem[64]] = 40
                                        mem[64] = mem[64] + 72
                                        _33208 = sha3(mem[_33206 + 32 len mem[_33206]])
                                        mem[_33205 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33205 + 105] = factoryAddress
                                        mem[_33205 + 125] = _33208
                                        mem[_33205 + 157] = sub_acaed29c[stor3]
                                        mem[_33205 + 72] = 85
                                        mem[0] = factoryAddress
                                        mem[32] = 5
                                        if address(_31829) == address(_31864):
                                            revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_33205 + 292 len 29]
                                        if address(_31829) < address(_31864):
                                            if not address(_31829):
                                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                            mem[_33205 + 221] = address(_31829)
                                            mem[_33205 + 241] = address(_31864)
                                            mem[_33205 + 189] = 40
                                            mem[_33205 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_33205 + 294] = factoryAddress
                                            mem[_33205 + 314] = sha3(address(_31829), address(_31864))
                                            mem[_33205 + 346] = sub_acaed29c[stor3]
                                            mem[_33205 + 261] = 85
                                            mem[_33205 + 378] = 0
                                            mem[64] = _33205 + 410
                                            mem[_33205 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_33205 + 414] = 0
                                            mem[_33205 + 446] = _32085
                                            mem[_33205 + 478] = address(sha3(0, factoryAddress, _33208, sub_acaed29c[stor3]))
                                            mem[_33205 + 510] = 128
                                            mem[_33205 + 542] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_33205 + s + 574] = mem[_33205 + s + 410]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31829), address(_31864)), sub_acaed29c[stor3])))
                                            call address(sha3(0, factoryAddress, sha3(address(_31829), address(_31864)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _32085, address(sha3(0, factoryAddress, _33208, sub_acaed29c[stor3])), 128, 0
                                        else:
                                            if not address(_31864):
                                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                            mem[_33205 + 221] = address(_31864)
                                            mem[_33205 + 241] = address(_31829)
                                            mem[_33205 + 189] = 40
                                            mem[_33205 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_33205 + 294] = factoryAddress
                                            mem[_33205 + 314] = sha3(address(_31864), address(_31829))
                                            mem[_33205 + 346] = sub_acaed29c[stor3]
                                            mem[_33205 + 261] = 85
                                            mem[_33205 + 378] = 0
                                            mem[64] = _33205 + 410
                                            mem[_33205 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_33205 + 414] = 0
                                            mem[_33205 + 446] = _32085
                                            mem[_33205 + 478] = address(sha3(0, factoryAddress, _33208, sub_acaed29c[stor3]))
                                            mem[_33205 + 510] = 128
                                            mem[_33205 + 542] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_33205 + s + 574] = mem[_33205 + s + 410]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31864), address(_31829)), sub_acaed29c[stor3])))
                                            call address(sha3(0, factoryAddress, sha3(address(_31864), address(_31829)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _32085, address(sha3(0, factoryAddress, _33208, sub_acaed29c[stor3])), 128, 0
                                    else:
                                        if not mem[(32 * idx + 2) + _11161 + 365 len 20]:
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        _33213 = mem[64]
                                        mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11161 + 353])
                                        mem[mem[64] + 52] = address(_31864)
                                        _33214 = mem[64]
                                        mem[mem[64]] = 40
                                        mem[64] = mem[64] + 72
                                        _33216 = sha3(mem[_33214 + 32 len mem[_33214]])
                                        mem[_33213 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33213 + 105] = factoryAddress
                                        mem[_33213 + 125] = _33216
                                        mem[_33213 + 157] = sub_acaed29c[stor3]
                                        mem[_33213 + 72] = 85
                                        mem[0] = factoryAddress
                                        mem[32] = 5
                                        if address(_31829) == address(_31864):
                                            revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_33213 + 292 len 29]
                                        if address(_31829) < address(_31864):
                                            if not address(_31829):
                                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                            mem[_33213 + 221] = address(_31829)
                                            mem[_33213 + 241] = address(_31864)
                                            mem[_33213 + 189] = 40
                                            mem[_33213 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_33213 + 294] = factoryAddress
                                            mem[_33213 + 314] = sha3(address(_31829), address(_31864))
                                            mem[_33213 + 346] = sub_acaed29c[stor3]
                                            mem[_33213 + 261] = 85
                                            mem[_33213 + 378] = 0
                                            mem[64] = _33213 + 410
                                            mem[_33213 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_33213 + 414] = 0
                                            mem[_33213 + 446] = _32085
                                            mem[_33213 + 478] = address(sha3(0, factoryAddress, _33216, sub_acaed29c[stor3]))
                                            mem[_33213 + 510] = 128
                                            mem[_33213 + 542] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_33213 + s + 574] = mem[_33213 + s + 410]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31829), address(_31864)), sub_acaed29c[stor3])))
                                            call address(sha3(0, factoryAddress, sha3(address(_31829), address(_31864)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _32085, address(sha3(0, factoryAddress, _33216, sub_acaed29c[stor3])), 128, 0
                                        else:
                                            if not address(_31864):
                                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                            mem[_33213 + 221] = address(_31864)
                                            mem[_33213 + 241] = address(_31829)
                                            mem[_33213 + 189] = 40
                                            mem[_33213 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_33213 + 294] = factoryAddress
                                            mem[_33213 + 314] = sha3(address(_31864), address(_31829))
                                            mem[_33213 + 346] = sub_acaed29c[stor3]
                                            mem[_33213 + 261] = 85
                                            mem[_33213 + 378] = 0
                                            mem[64] = _33213 + 410
                                            mem[_33213 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_33213 + 414] = 0
                                            mem[_33213 + 446] = _32085
                                            mem[_33213 + 478] = address(sha3(0, factoryAddress, _33216, sub_acaed29c[stor3]))
                                            mem[_33213 + 510] = 128
                                            mem[_33213 + 542] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_33213 + s + 574] = mem[_33213 + s + 410]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31864), address(_31829)), sub_acaed29c[stor3])))
                                            call address(sha3(0, factoryAddress, sha3(address(_31864), address(_31829)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _32085, address(sha3(0, factoryAddress, _33216, sub_acaed29c[stor3])), 128, 0
                            else:
                                if idx >= mem[_11161 + 321] - 2:
                                    mem[0] = factoryAddress
                                    mem[32] = 5
                                    if mem[(32 * idx) + _11161 + 365 len 20] == mem[(32 * idx + 1) + _11161 + 365 len 20]:
                                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                    if mem[(32 * idx) + _11161 + 365 len 20] < mem[(32 * idx + 1) + _11161 + 365 len 20]:
                                        if not mem[(32 * idx) + _11161 + 365 len 20]:
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        _33253 = mem[64]
                                        mem[mem[64] + 32] = address(mem[(32 * idx) + _11161 + 353])
                                        mem[mem[64] + 52] = address(_31864)
                                        _33254 = mem[64]
                                        mem[mem[64]] = 40
                                        mem[64] = mem[64] + 72
                                        _33256 = sha3(mem[_33254 + 32 len mem[_33254]])
                                        mem[_33253 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33253 + 105] = factoryAddress
                                        mem[_33253 + 125] = _33256
                                        mem[_33253 + 157] = sub_acaed29c[stor3]
                                        mem[_33253 + 72] = 85
                                        mem[_33253 + 189] = 0
                                        mem[64] = _33253 + 221
                                        mem[_33253 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_33253 + 225] = _32085
                                        mem[_33253 + 257] = 0
                                        mem[_33253 + 289] = address(cd[4])
                                        mem[_33253 + 321] = 128
                                        mem[_33253 + 353] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_33253 + s + 385] = mem[_33253 + s + 221]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, _33256, sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, _33256, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _32085, 0, address(cd[4]), 128, 0
                                    else:
                                        if not mem[(32 * idx + 1) + _11161 + 365 len 20]:
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        _33261 = mem[64]
                                        mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11161 + 353])
                                        mem[mem[64] + 52] = address(_31829)
                                        _33262 = mem[64]
                                        mem[mem[64]] = 40
                                        mem[64] = mem[64] + 72
                                        _33264 = sha3(mem[_33262 + 32 len mem[_33262]])
                                        mem[_33261 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33261 + 105] = factoryAddress
                                        mem[_33261 + 125] = _33264
                                        mem[_33261 + 157] = sub_acaed29c[stor3]
                                        mem[_33261 + 72] = 85
                                        mem[_33261 + 189] = 0
                                        mem[64] = _33261 + 221
                                        mem[_33261 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_33261 + 225] = _32085
                                        mem[_33261 + 257] = 0
                                        mem[_33261 + 289] = address(cd[4])
                                        mem[_33261 + 321] = 128
                                        mem[_33261 + 353] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_33261 + s + 385] = mem[_33261 + s + 221]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, _33264, sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, _33264, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _32085, 0, address(cd[4]), 128, 0
                                else:
                                    require idx + 2 < mem[_11161 + 321]
                                    _32248 = mem[(32 * idx + 2) + _11161 + 353]
                                    mem[0] = factoryAddress
                                    mem[32] = 5
                                    if mem[(32 * idx + 1) + _11161 + 365 len 20] == mem[(32 * idx + 2) + _11161 + 365 len 20]:
                                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                    if mem[(32 * idx + 1) + _11161 + 365 len 20] < mem[(32 * idx + 2) + _11161 + 365 len 20]:
                                        if not mem[(32 * idx + 1) + _11161 + 365 len 20]:
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        _33237 = mem[64]
                                        mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11161 + 353])
                                        mem[mem[64] + 52] = address(_32248)
                                        _33238 = mem[64]
                                        mem[mem[64]] = 40
                                        mem[64] = mem[64] + 72
                                        _33240 = sha3(mem[_33238 + 32 len mem[_33238]])
                                        mem[_33237 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33237 + 105] = factoryAddress
                                        mem[_33237 + 125] = _33240
                                        mem[_33237 + 157] = sub_acaed29c[stor3]
                                        mem[_33237 + 72] = 85
                                        mem[0] = factoryAddress
                                        mem[32] = 5
                                        if address(_31829) == address(_31864):
                                            revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_33237 + 292 len 29]
                                        if address(_31829) < address(_31864):
                                            if not address(_31829):
                                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                            mem[_33237 + 221] = address(_31829)
                                            mem[_33237 + 241] = address(_31864)
                                            mem[_33237 + 189] = 40
                                            mem[_33237 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_33237 + 294] = factoryAddress
                                            mem[_33237 + 314] = sha3(address(_31829), address(_31864))
                                            mem[_33237 + 346] = sub_acaed29c[stor3]
                                            mem[_33237 + 261] = 85
                                            mem[_33237 + 378] = 0
                                            mem[64] = _33237 + 410
                                            mem[_33237 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_33237 + 414] = _32085
                                            mem[_33237 + 446] = 0
                                            mem[_33237 + 478] = address(sha3(0, factoryAddress, _33240, sub_acaed29c[stor3]))
                                            mem[_33237 + 510] = 128
                                            mem[_33237 + 542] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_33237 + s + 574] = mem[_33237 + s + 410]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31829), address(_31864)), sub_acaed29c[stor3])))
                                            call address(sha3(0, factoryAddress, sha3(address(_31829), address(_31864)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _32085, 0, address(sha3(0, factoryAddress, _33240, sub_acaed29c[stor3])), 128, 0
                                        else:
                                            if not address(_31864):
                                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                            mem[_33237 + 221] = address(_31864)
                                            mem[_33237 + 241] = address(_31829)
                                            mem[_33237 + 189] = 40
                                            mem[_33237 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_33237 + 294] = factoryAddress
                                            mem[_33237 + 314] = sha3(address(_31864), address(_31829))
                                            mem[_33237 + 346] = sub_acaed29c[stor3]
                                            mem[_33237 + 261] = 85
                                            mem[_33237 + 378] = 0
                                            mem[64] = _33237 + 410
                                            mem[_33237 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_33237 + 414] = _32085
                                            mem[_33237 + 446] = 0
                                            mem[_33237 + 478] = address(sha3(0, factoryAddress, _33240, sub_acaed29c[stor3]))
                                            mem[_33237 + 510] = 128
                                            mem[_33237 + 542] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_33237 + s + 574] = mem[_33237 + s + 410]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31864), address(_31829)), sub_acaed29c[stor3])))
                                            call address(sha3(0, factoryAddress, sha3(address(_31864), address(_31829)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _32085, 0, address(sha3(0, factoryAddress, _33240, sub_acaed29c[stor3])), 128, 0
                                    else:
                                        if not mem[(32 * idx + 2) + _11161 + 365 len 20]:
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        _33245 = mem[64]
                                        mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11161 + 353])
                                        mem[mem[64] + 52] = address(_31864)
                                        _33246 = mem[64]
                                        mem[mem[64]] = 40
                                        mem[64] = mem[64] + 72
                                        _33248 = sha3(mem[_33246 + 32 len mem[_33246]])
                                        mem[_33245 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33245 + 105] = factoryAddress
                                        mem[_33245 + 125] = _33248
                                        mem[_33245 + 157] = sub_acaed29c[stor3]
                                        mem[_33245 + 72] = 85
                                        mem[0] = factoryAddress
                                        mem[32] = 5
                                        if address(_31829) == address(_31864):
                                            revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_33245 + 292 len 29]
                                        if address(_31829) < address(_31864):
                                            if not address(_31829):
                                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                            mem[_33245 + 221] = address(_31829)
                                            mem[_33245 + 241] = address(_31864)
                                            mem[_33245 + 189] = 40
                                            mem[_33245 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_33245 + 294] = factoryAddress
                                            mem[_33245 + 314] = sha3(address(_31829), address(_31864))
                                            mem[_33245 + 346] = sub_acaed29c[stor3]
                                            mem[_33245 + 261] = 85
                                            mem[_33245 + 378] = 0
                                            mem[64] = _33245 + 410
                                            mem[_33245 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_33245 + 414] = _32085
                                            mem[_33245 + 446] = 0
                                            mem[_33245 + 478] = address(sha3(0, factoryAddress, _33248, sub_acaed29c[stor3]))
                                            mem[_33245 + 510] = 128
                                            mem[_33245 + 542] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_33245 + s + 574] = mem[_33245 + s + 410]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31829), address(_31864)), sub_acaed29c[stor3])))
                                            call address(sha3(0, factoryAddress, sha3(address(_31829), address(_31864)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _32085, 0, address(sha3(0, factoryAddress, _33248, sub_acaed29c[stor3])), 128, 0
                                        else:
                                            if not address(_31864):
                                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                            mem[_33245 + 221] = address(_31864)
                                            mem[_33245 + 241] = address(_31829)
                                            mem[_33245 + 189] = 40
                                            mem[_33245 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_33245 + 294] = factoryAddress
                                            mem[_33245 + 314] = sha3(address(_31864), address(_31829))
                                            mem[_33245 + 346] = sub_acaed29c[stor3]
                                            mem[_33245 + 261] = 85
                                            mem[_33245 + 378] = 0
                                            mem[64] = _33245 + 410
                                            mem[_33245 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_33245 + 414] = _32085
                                            mem[_33245 + 446] = 0
                                            mem[_33245 + 478] = address(sha3(0, factoryAddress, _33248, sub_acaed29c[stor3]))
                                            mem[_33245 + 510] = 128
                                            mem[_33245 + 542] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_33245 + s + 574] = mem[_33245 + s + 410]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31864), address(_31829)), sub_acaed29c[stor3])))
                                            call address(sha3(0, factoryAddress, sha3(address(_31864), address(_31829)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _32085, 0, address(sha3(0, factoryAddress, _33248, sub_acaed29c[stor3])), 128, 0
                        else:
                            if not mem[(32 * idx + 1) + _11161 + 365 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                            _32086 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                            if mem[(32 * idx) + _11161 + 365 len 20] == mem[(32 * idx + 1) + _11161 + 365 len 20]:
                                if idx >= mem[_11161 + 321] - 2:
                                    mem[0] = factoryAddress
                                    mem[32] = 5
                                    if mem[(32 * idx) + _11161 + 365 len 20] == mem[(32 * idx + 1) + _11161 + 365 len 20]:
                                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                    if mem[(32 * idx) + _11161 + 365 len 20] < mem[(32 * idx + 1) + _11161 + 365 len 20]:
                                        if not mem[(32 * idx) + _11161 + 365 len 20]:
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        _33285 = mem[64]
                                        mem[mem[64] + 32] = address(mem[(32 * idx) + _11161 + 353])
                                        mem[mem[64] + 52] = address(_31864)
                                        _33286 = mem[64]
                                        mem[mem[64]] = 40
                                        mem[64] = mem[64] + 72
                                        _33288 = sha3(mem[_33286 + 32 len mem[_33286]])
                                        mem[_33285 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33285 + 105] = factoryAddress
                                        mem[_33285 + 125] = _33288
                                        mem[_33285 + 157] = sub_acaed29c[stor3]
                                        mem[_33285 + 72] = 85
                                        mem[_33285 + 189] = 0
                                        mem[64] = _33285 + 221
                                        mem[_33285 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_33285 + 225] = 0
                                        mem[_33285 + 257] = _32086
                                        mem[_33285 + 289] = address(cd[4])
                                        mem[_33285 + 321] = 128
                                        mem[_33285 + 353] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_33285 + s + 385] = mem[_33285 + s + 221]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, _33288, sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, _33288, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _32086, address(cd[4]), 128, 0
                                    else:
                                        if not mem[(32 * idx + 1) + _11161 + 365 len 20]:
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        _33293 = mem[64]
                                        mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11161 + 353])
                                        mem[mem[64] + 52] = address(_31829)
                                        _33294 = mem[64]
                                        mem[mem[64]] = 40
                                        mem[64] = mem[64] + 72
                                        _33296 = sha3(mem[_33294 + 32 len mem[_33294]])
                                        mem[_33293 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33293 + 105] = factoryAddress
                                        mem[_33293 + 125] = _33296
                                        mem[_33293 + 157] = sub_acaed29c[stor3]
                                        mem[_33293 + 72] = 85
                                        mem[_33293 + 189] = 0
                                        mem[64] = _33293 + 221
                                        mem[_33293 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_33293 + 225] = 0
                                        mem[_33293 + 257] = _32086
                                        mem[_33293 + 289] = address(cd[4])
                                        mem[_33293 + 321] = 128
                                        mem[_33293 + 353] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_33293 + s + 385] = mem[_33293 + s + 221]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, _33296, sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, _33296, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _32086, address(cd[4]), 128, 0
                                else:
                                    require idx + 2 < mem[_11161 + 321]
                                    _32251 = mem[(32 * idx + 2) + _11161 + 353]
                                    mem[0] = factoryAddress
                                    mem[32] = 5
                                    if mem[(32 * idx + 1) + _11161 + 365 len 20] == mem[(32 * idx + 2) + _11161 + 365 len 20]:
                                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                    if mem[(32 * idx + 1) + _11161 + 365 len 20] < mem[(32 * idx + 2) + _11161 + 365 len 20]:
                                        if not mem[(32 * idx + 1) + _11161 + 365 len 20]:
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        _33269 = mem[64]
                                        mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11161 + 353])
                                        mem[mem[64] + 52] = address(_32251)
                                        _33270 = mem[64]
                                        mem[mem[64]] = 40
                                        mem[64] = mem[64] + 72
                                        _33272 = sha3(mem[_33270 + 32 len mem[_33270]])
                                        mem[_33269 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33269 + 105] = factoryAddress
                                        mem[_33269 + 125] = _33272
                                        mem[_33269 + 157] = sub_acaed29c[stor3]
                                        mem[_33269 + 72] = 85
                                        mem[0] = factoryAddress
                                        mem[32] = 5
                                        if address(_31829) == address(_31864):
                                            revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_33269 + 292 len 29]
                                        if address(_31829) < address(_31864):
                                            if not address(_31829):
                                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                            mem[_33269 + 221] = address(_31829)
                                            mem[_33269 + 241] = address(_31864)
                                            mem[_33269 + 189] = 40
                                            mem[_33269 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_33269 + 294] = factoryAddress
                                            mem[_33269 + 314] = sha3(address(_31829), address(_31864))
                                            mem[_33269 + 346] = sub_acaed29c[stor3]
                                            mem[_33269 + 261] = 85
                                            mem[_33269 + 378] = 0
                                            mem[64] = _33269 + 410
                                            mem[_33269 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_33269 + 414] = 0
                                            mem[_33269 + 446] = _32086
                                            mem[_33269 + 478] = address(sha3(0, factoryAddress, _33272, sub_acaed29c[stor3]))
                                            mem[_33269 + 510] = 128
                                            mem[_33269 + 542] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_33269 + s + 574] = mem[_33269 + s + 410]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31829), address(_31864)), sub_acaed29c[stor3])))
                                            call address(sha3(0, factoryAddress, sha3(address(_31829), address(_31864)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _32086, address(sha3(0, factoryAddress, _33272, sub_acaed29c[stor3])), 128, 0
                                        else:
                                            if not address(_31864):
                                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                            mem[_33269 + 221] = address(_31864)
                                            mem[_33269 + 241] = address(_31829)
                                            mem[_33269 + 189] = 40
                                            mem[_33269 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_33269 + 294] = factoryAddress
                                            mem[_33269 + 314] = sha3(address(_31864), address(_31829))
                                            mem[_33269 + 346] = sub_acaed29c[stor3]
                                            mem[_33269 + 261] = 85
                                            mem[_33269 + 378] = 0
                                            mem[64] = _33269 + 410
                                            mem[_33269 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_33269 + 414] = 0
                                            mem[_33269 + 446] = _32086
                                            mem[_33269 + 478] = address(sha3(0, factoryAddress, _33272, sub_acaed29c[stor3]))
                                            mem[_33269 + 510] = 128
                                            mem[_33269 + 542] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_33269 + s + 574] = mem[_33269 + s + 410]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31864), address(_31829)), sub_acaed29c[stor3])))
                                            call address(sha3(0, factoryAddress, sha3(address(_31864), address(_31829)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _32086, address(sha3(0, factoryAddress, _33272, sub_acaed29c[stor3])), 128, 0
                                    else:
                                        if not mem[(32 * idx + 2) + _11161 + 365 len 20]:
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        _33277 = mem[64]
                                        mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11161 + 353])
                                        mem[mem[64] + 52] = address(_31864)
                                        _33278 = mem[64]
                                        mem[mem[64]] = 40
                                        mem[64] = mem[64] + 72
                                        _33280 = sha3(mem[_33278 + 32 len mem[_33278]])
                                        mem[_33277 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33277 + 105] = factoryAddress
                                        mem[_33277 + 125] = _33280
                                        mem[_33277 + 157] = sub_acaed29c[stor3]
                                        mem[_33277 + 72] = 85
                                        mem[0] = factoryAddress
                                        mem[32] = 5
                                        if address(_31829) == address(_31864):
                                            revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_33277 + 292 len 29]
                                        if address(_31829) < address(_31864):
                                            if not address(_31829):
                                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                            mem[_33277 + 221] = address(_31829)
                                            mem[_33277 + 241] = address(_31864)
                                            mem[_33277 + 189] = 40
                                            mem[_33277 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_33277 + 294] = factoryAddress
                                            mem[_33277 + 314] = sha3(address(_31829), address(_31864))
                                            mem[_33277 + 346] = sub_acaed29c[stor3]
                                            mem[_33277 + 261] = 85
                                            mem[_33277 + 378] = 0
                                            mem[64] = _33277 + 410
                                            mem[_33277 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_33277 + 414] = 0
                                            mem[_33277 + 446] = _32086
                                            mem[_33277 + 478] = address(sha3(0, factoryAddress, _33280, sub_acaed29c[stor3]))
                                            mem[_33277 + 510] = 128
                                            mem[_33277 + 542] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_33277 + s + 574] = mem[_33277 + s + 410]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31829), address(_31864)), sub_acaed29c[stor3])))
                                            call address(sha3(0, factoryAddress, sha3(address(_31829), address(_31864)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _32086, address(sha3(0, factoryAddress, _33280, sub_acaed29c[stor3])), 128, 0
                                        else:
                                            if not address(_31864):
                                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                            mem[_33277 + 221] = address(_31864)
                                            mem[_33277 + 241] = address(_31829)
                                            mem[_33277 + 189] = 40
                                            mem[_33277 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_33277 + 294] = factoryAddress
                                            mem[_33277 + 314] = sha3(address(_31864), address(_31829))
                                            mem[_33277 + 346] = sub_acaed29c[stor3]
                                            mem[_33277 + 261] = 85
                                            mem[_33277 + 378] = 0
                                            mem[64] = _33277 + 410
                                            mem[_33277 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_33277 + 414] = 0
                                            mem[_33277 + 446] = _32086
                                            mem[_33277 + 478] = address(sha3(0, factoryAddress, _33280, sub_acaed29c[stor3]))
                                            mem[_33277 + 510] = 128
                                            mem[_33277 + 542] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_33277 + s + 574] = mem[_33277 + s + 410]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31864), address(_31829)), sub_acaed29c[stor3])))
                                            call address(sha3(0, factoryAddress, sha3(address(_31864), address(_31829)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _32086, address(sha3(0, factoryAddress, _33280, sub_acaed29c[stor3])), 128, 0
                            else:
                                if idx >= mem[_11161 + 321] - 2:
                                    mem[0] = factoryAddress
                                    mem[32] = 5
                                    if mem[(32 * idx) + _11161 + 365 len 20] == mem[(32 * idx + 1) + _11161 + 365 len 20]:
                                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                    if mem[(32 * idx) + _11161 + 365 len 20] < mem[(32 * idx + 1) + _11161 + 365 len 20]:
                                        if not mem[(32 * idx) + _11161 + 365 len 20]:
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        _33317 = mem[64]
                                        mem[mem[64] + 32] = address(mem[(32 * idx) + _11161 + 353])
                                        mem[mem[64] + 52] = address(_31864)
                                        _33318 = mem[64]
                                        mem[mem[64]] = 40
                                        mem[64] = mem[64] + 72
                                        _33320 = sha3(mem[_33318 + 32 len mem[_33318]])
                                        mem[_33317 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33317 + 105] = factoryAddress
                                        mem[_33317 + 125] = _33320
                                        mem[_33317 + 157] = sub_acaed29c[stor3]
                                        mem[_33317 + 72] = 85
                                        mem[_33317 + 189] = 0
                                        mem[64] = _33317 + 221
                                        mem[_33317 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_33317 + 225] = _32086
                                        mem[_33317 + 257] = 0
                                        mem[_33317 + 289] = address(cd[4])
                                        mem[_33317 + 321] = 128
                                        mem[_33317 + 353] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_33317 + s + 385] = mem[_33317 + s + 221]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, _33320, sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, _33320, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _32086, 0, address(cd[4]), 128, 0
                                    else:
                                        if not mem[(32 * idx + 1) + _11161 + 365 len 20]:
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        _33325 = mem[64]
                                        mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11161 + 353])
                                        mem[mem[64] + 52] = address(_31829)
                                        _33326 = mem[64]
                                        mem[mem[64]] = 40
                                        mem[64] = mem[64] + 72
                                        _33328 = sha3(mem[_33326 + 32 len mem[_33326]])
                                        mem[_33325 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33325 + 105] = factoryAddress
                                        mem[_33325 + 125] = _33328
                                        mem[_33325 + 157] = sub_acaed29c[stor3]
                                        mem[_33325 + 72] = 85
                                        mem[_33325 + 189] = 0
                                        mem[64] = _33325 + 221
                                        mem[_33325 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_33325 + 225] = _32086
                                        mem[_33325 + 257] = 0
                                        mem[_33325 + 289] = address(cd[4])
                                        mem[_33325 + 321] = 128
                                        mem[_33325 + 353] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_33325 + s + 385] = mem[_33325 + s + 221]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, _33328, sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, _33328, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _32086, 0, address(cd[4]), 128, 0
                                else:
                                    require idx + 2 < mem[_11161 + 321]
                                    _32254 = mem[(32 * idx + 2) + _11161 + 353]
                                    mem[0] = factoryAddress
                                    mem[32] = 5
                                    if mem[(32 * idx + 1) + _11161 + 365 len 20] == mem[(32 * idx + 2) + _11161 + 365 len 20]:
                                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                    if mem[(32 * idx + 1) + _11161 + 365 len 20] < mem[(32 * idx + 2) + _11161 + 365 len 20]:
                                        if not mem[(32 * idx + 1) + _11161 + 365 len 20]:
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        _33301 = mem[64]
                                        mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11161 + 353])
                                        mem[mem[64] + 52] = address(_32254)
                                        _33302 = mem[64]
                                        mem[mem[64]] = 40
                                        mem[64] = mem[64] + 72
                                        _33304 = sha3(mem[_33302 + 32 len mem[_33302]])
                                        mem[_33301 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33301 + 105] = factoryAddress
                                        mem[_33301 + 125] = _33304
                                        mem[_33301 + 157] = sub_acaed29c[stor3]
                                        mem[_33301 + 72] = 85
                                        mem[0] = factoryAddress
                                        mem[32] = 5
                                        if address(_31829) == address(_31864):
                                            revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_33301 + 292 len 29]
                                        if address(_31829) < address(_31864):
                                            if not address(_31829):
                                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                            mem[_33301 + 221] = address(_31829)
                                            mem[_33301 + 241] = address(_31864)
                                            mem[_33301 + 189] = 40
                                            mem[_33301 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_33301 + 294] = factoryAddress
                                            mem[_33301 + 314] = sha3(address(_31829), address(_31864))
                                            mem[_33301 + 346] = sub_acaed29c[stor3]
                                            mem[_33301 + 261] = 85
                                            mem[_33301 + 378] = 0
                                            mem[64] = _33301 + 410
                                            mem[_33301 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_33301 + 414] = _32086
                                            mem[_33301 + 446] = 0
                                            mem[_33301 + 478] = address(sha3(0, factoryAddress, _33304, sub_acaed29c[stor3]))
                                            mem[_33301 + 510] = 128
                                            mem[_33301 + 542] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_33301 + s + 574] = mem[_33301 + s + 410]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31829), address(_31864)), sub_acaed29c[stor3])))
                                            call address(sha3(0, factoryAddress, sha3(address(_31829), address(_31864)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _32086, 0, address(sha3(0, factoryAddress, _33304, sub_acaed29c[stor3])), 128, 0
                                        else:
                                            if not address(_31864):
                                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                            mem[_33301 + 221] = address(_31864)
                                            mem[_33301 + 241] = address(_31829)
                                            mem[_33301 + 189] = 40
                                            mem[_33301 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_33301 + 294] = factoryAddress
                                            mem[_33301 + 314] = sha3(address(_31864), address(_31829))
                                            mem[_33301 + 346] = sub_acaed29c[stor3]
                                            mem[_33301 + 261] = 85
                                            mem[_33301 + 378] = 0
                                            mem[64] = _33301 + 410
                                            mem[_33301 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_33301 + 414] = _32086
                                            mem[_33301 + 446] = 0
                                            mem[_33301 + 478] = address(sha3(0, factoryAddress, _33304, sub_acaed29c[stor3]))
                                            mem[_33301 + 510] = 128
                                            mem[_33301 + 542] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_33301 + s + 574] = mem[_33301 + s + 410]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31864), address(_31829)), sub_acaed29c[stor3])))
                                            call address(sha3(0, factoryAddress, sha3(address(_31864), address(_31829)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _32086, 0, address(sha3(0, factoryAddress, _33304, sub_acaed29c[stor3])), 128, 0
                                    else:
                                        if not mem[(32 * idx + 2) + _11161 + 365 len 20]:
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        _33309 = mem[64]
                                        mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11161 + 353])
                                        mem[mem[64] + 52] = address(_31864)
                                        _33310 = mem[64]
                                        mem[mem[64]] = 40
                                        mem[64] = mem[64] + 72
                                        _33312 = sha3(mem[_33310 + 32 len mem[_33310]])
                                        mem[_33309 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33309 + 105] = factoryAddress
                                        mem[_33309 + 125] = _33312
                                        mem[_33309 + 157] = sub_acaed29c[stor3]
                                        mem[_33309 + 72] = 85
                                        mem[0] = factoryAddress
                                        mem[32] = 5
                                        if address(_31829) == address(_31864):
                                            revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_33309 + 292 len 29]
                                        if address(_31829) < address(_31864):
                                            if not address(_31829):
                                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                            mem[_33309 + 221] = address(_31829)
                                            mem[_33309 + 241] = address(_31864)
                                            mem[_33309 + 189] = 40
                                            mem[_33309 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_33309 + 294] = factoryAddress
                                            mem[_33309 + 314] = sha3(address(_31829), address(_31864))
                                            mem[_33309 + 346] = sub_acaed29c[stor3]
                                            mem[_33309 + 261] = 85
                                            mem[_33309 + 378] = 0
                                            mem[64] = _33309 + 410
                                            mem[_33309 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_33309 + 414] = _32086
                                            mem[_33309 + 446] = 0
                                            mem[_33309 + 478] = address(sha3(0, factoryAddress, _33312, sub_acaed29c[stor3]))
                                            mem[_33309 + 510] = 128
                                            mem[_33309 + 542] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_33309 + s + 574] = mem[_33309 + s + 410]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31829), address(_31864)), sub_acaed29c[stor3])))
                                            call address(sha3(0, factoryAddress, sha3(address(_31829), address(_31864)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _32086, 0, address(sha3(0, factoryAddress, _33312, sub_acaed29c[stor3])), 128, 0
                                        else:
                                            if not address(_31864):
                                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                            mem[_33309 + 221] = address(_31864)
                                            mem[_33309 + 241] = address(_31829)
                                            mem[_33309 + 189] = 40
                                            mem[_33309 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_33309 + 294] = factoryAddress
                                            mem[_33309 + 314] = sha3(address(_31864), address(_31829))
                                            mem[_33309 + 346] = sub_acaed29c[stor3]
                                            mem[_33309 + 261] = 85
                                            mem[_33309 + 378] = 0
                                            mem[64] = _33309 + 410
                                            mem[_33309 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_33309 + 414] = _32086
                                            mem[_33309 + 446] = 0
                                            mem[_33309 + 478] = address(sha3(0, factoryAddress, _33312, sub_acaed29c[stor3]))
                                            mem[_33309 + 510] = 128
                                            mem[_33309 + 542] = 0
                                            s = 0
                                            while s < 0:
                                                mem[_33309 + s + 574] = mem[_33309 + s + 410]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31864), address(_31829)), sub_acaed29c[stor3])))
                                            call address(sha3(0, factoryAddress, sha3(address(_31864), address(_31829)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _32086, 0, address(sha3(0, factoryAddress, _33312, sub_acaed29c[stor3])), 128, 0
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        continue 
                    mem[mem[64]] = 32
                    mem[mem[64] + 32] = mem[(32 * ('cd', 36).length) + 128]
                    _31863 = mem[(32 * ('cd', 36).length) + 128]
                    mem[mem[64] + 64 len floor32(mem[(32 * ('cd', 36).length) + 128])] = mem[(32 * ('cd', 36).length) + 160 len floor32(mem[(32 * ('cd', 36).length) + 128])]
                    return 32, mem[mem[64] + 32 len (32 * _31863) + 32]
                require mem[96] >= 32
                if not mem[128]:
                    revert with 0, 
                                32,
                                49,
                                0x545472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472616e7366657246726f6d206661696c65,
                                mem[_11161 + 438 len 7],
                                Mask(32, 64, _11205) >> 64,
                                mem[_11161 + 449 len 4]
                mem[64] = _11161 + (32 * ('cd', 36).length) + 353
                mem[_11161 + 321] = ('cd', 36).length
                mem[_11161 + 353 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
                mem[_11161 + (32 * ('cd', 36).length) + 353] = 0
                idx = 0
                while idx < ('cd', 36).length - 1:
                    require idx < mem[_11161 + 321]
                    _31831 = mem[(32 * idx) + _11161 + 353]
                    require idx + 1 < mem[_11161 + 321]
                    _31868 = mem[(32 * idx + 1) + _11161 + 353]
                    if mem[(32 * idx) + _11161 + 365 len 20] == mem[(32 * idx + 1) + _11161 + 365 len 20]:
                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                    if mem[(32 * idx) + _11161 + 365 len 20] < mem[(32 * idx + 1) + _11161 + 365 len 20]:
                        if not mem[(32 * idx) + _11161 + 365 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                        _32087 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                        if mem[(32 * idx) + _11161 + 365 len 20] == mem[(32 * idx) + _11161 + 365 len 20]:
                            if idx >= mem[_11161 + 321] - 2:
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if mem[(32 * idx) + _11161 + 365 len 20] == mem[(32 * idx + 1) + _11161 + 365 len 20]:
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx) + _11161 + 365 len 20] < mem[(32 * idx + 1) + _11161 + 365 len 20]:
                                    if not mem[(32 * idx) + _11161 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _33349 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx) + _11161 + 353])
                                    mem[mem[64] + 52] = address(_31868)
                                    _33350 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _33352 = sha3(mem[_33350 + 32 len mem[_33350]])
                                    mem[_33349 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33349 + 105] = factoryAddress
                                    mem[_33349 + 125] = _33352
                                    mem[_33349 + 157] = sub_acaed29c[stor3]
                                    mem[_33349 + 72] = 85
                                    mem[_33349 + 189] = 0
                                    mem[64] = _33349 + 221
                                    mem[_33349 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_33349 + 225] = 0
                                    mem[_33349 + 257] = _32087
                                    mem[_33349 + 289] = address(cd[4])
                                    mem[_33349 + 321] = 128
                                    mem[_33349 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_33349 + s + 385] = mem[_33349 + s + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _33352, sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, _33352, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32087, address(cd[4]), 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _11161 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _33357 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11161 + 353])
                                    mem[mem[64] + 52] = address(_31831)
                                    _33358 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _33360 = sha3(mem[_33358 + 32 len mem[_33358]])
                                    mem[_33357 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33357 + 105] = factoryAddress
                                    mem[_33357 + 125] = _33360
                                    mem[_33357 + 157] = sub_acaed29c[stor3]
                                    mem[_33357 + 72] = 85
                                    mem[_33357 + 189] = 0
                                    mem[64] = _33357 + 221
                                    mem[_33357 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_33357 + 225] = 0
                                    mem[_33357 + 257] = _32087
                                    mem[_33357 + 289] = address(cd[4])
                                    mem[_33357 + 321] = 128
                                    mem[_33357 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_33357 + s + 385] = mem[_33357 + s + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _33360, sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, _33360, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32087, address(cd[4]), 128, 0
                            else:
                                require idx + 2 < mem[_11161 + 321]
                                _32257 = mem[(32 * idx + 2) + _11161 + 353]
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if mem[(32 * idx + 1) + _11161 + 365 len 20] == mem[(32 * idx + 2) + _11161 + 365 len 20]:
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx + 1) + _11161 + 365 len 20] < mem[(32 * idx + 2) + _11161 + 365 len 20]:
                                    if not mem[(32 * idx + 1) + _11161 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _33333 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11161 + 353])
                                    mem[mem[64] + 52] = address(_32257)
                                    _33334 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _33336 = sha3(mem[_33334 + 32 len mem[_33334]])
                                    mem[_33333 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33333 + 105] = factoryAddress
                                    mem[_33333 + 125] = _33336
                                    mem[_33333 + 157] = sub_acaed29c[stor3]
                                    mem[_33333 + 72] = 85
                                    mem[0] = factoryAddress
                                    mem[32] = 5
                                    if address(_31831) == address(_31868):
                                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_33333 + 292 len 29]
                                    if address(_31831) < address(_31868):
                                        if not address(_31831):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_33333 + 221] = address(_31831)
                                        mem[_33333 + 241] = address(_31868)
                                        mem[_33333 + 189] = 40
                                        mem[_33333 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33333 + 294] = factoryAddress
                                        mem[_33333 + 314] = sha3(address(_31831), address(_31868))
                                        mem[_33333 + 346] = sub_acaed29c[stor3]
                                        mem[_33333 + 261] = 85
                                        mem[_33333 + 378] = 0
                                        mem[64] = _33333 + 410
                                        mem[_33333 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_33333 + 414] = 0
                                        mem[_33333 + 446] = _32087
                                        mem[_33333 + 478] = address(sha3(0, factoryAddress, _33336, sub_acaed29c[stor3]))
                                        mem[_33333 + 510] = 128
                                        mem[_33333 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_33333 + s + 574] = mem[_33333 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31831), address(_31868)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31831), address(_31868)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _32087, address(sha3(0, factoryAddress, _33336, sub_acaed29c[stor3])), 128, 0
                                    else:
                                        if not address(_31868):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_33333 + 221] = address(_31868)
                                        mem[_33333 + 241] = address(_31831)
                                        mem[_33333 + 189] = 40
                                        mem[_33333 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33333 + 294] = factoryAddress
                                        mem[_33333 + 314] = sha3(address(_31868), address(_31831))
                                        mem[_33333 + 346] = sub_acaed29c[stor3]
                                        mem[_33333 + 261] = 85
                                        mem[_33333 + 378] = 0
                                        mem[64] = _33333 + 410
                                        mem[_33333 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_33333 + 414] = 0
                                        mem[_33333 + 446] = _32087
                                        mem[_33333 + 478] = address(sha3(0, factoryAddress, _33336, sub_acaed29c[stor3]))
                                        mem[_33333 + 510] = 128
                                        mem[_33333 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_33333 + s + 574] = mem[_33333 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31868), address(_31831)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31868), address(_31831)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _32087, address(sha3(0, factoryAddress, _33336, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _11161 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _33341 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11161 + 353])
                                    mem[mem[64] + 52] = address(_31868)
                                    _33342 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _33344 = sha3(mem[_33342 + 32 len mem[_33342]])
                                    mem[_33341 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33341 + 105] = factoryAddress
                                    mem[_33341 + 125] = _33344
                                    mem[_33341 + 157] = sub_acaed29c[stor3]
                                    mem[_33341 + 72] = 85
                                    mem[0] = factoryAddress
                                    mem[32] = 5
                                    if address(_31831) == address(_31868):
                                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_33341 + 292 len 29]
                                    if address(_31831) < address(_31868):
                                        if not address(_31831):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_33341 + 221] = address(_31831)
                                        mem[_33341 + 241] = address(_31868)
                                        mem[_33341 + 189] = 40
                                        mem[_33341 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33341 + 294] = factoryAddress
                                        mem[_33341 + 314] = sha3(address(_31831), address(_31868))
                                        mem[_33341 + 346] = sub_acaed29c[stor3]
                                        mem[_33341 + 261] = 85
                                        mem[_33341 + 378] = 0
                                        mem[64] = _33341 + 410
                                        mem[_33341 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_33341 + 414] = 0
                                        mem[_33341 + 446] = _32087
                                        mem[_33341 + 478] = address(sha3(0, factoryAddress, _33344, sub_acaed29c[stor3]))
                                        mem[_33341 + 510] = 128
                                        mem[_33341 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_33341 + s + 574] = mem[_33341 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31831), address(_31868)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31831), address(_31868)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _32087, address(sha3(0, factoryAddress, _33344, sub_acaed29c[stor3])), 128, 0
                                    else:
                                        if not address(_31868):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_33341 + 221] = address(_31868)
                                        mem[_33341 + 241] = address(_31831)
                                        mem[_33341 + 189] = 40
                                        mem[_33341 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33341 + 294] = factoryAddress
                                        mem[_33341 + 314] = sha3(address(_31868), address(_31831))
                                        mem[_33341 + 346] = sub_acaed29c[stor3]
                                        mem[_33341 + 261] = 85
                                        mem[_33341 + 378] = 0
                                        mem[64] = _33341 + 410
                                        mem[_33341 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_33341 + 414] = 0
                                        mem[_33341 + 446] = _32087
                                        mem[_33341 + 478] = address(sha3(0, factoryAddress, _33344, sub_acaed29c[stor3]))
                                        mem[_33341 + 510] = 128
                                        mem[_33341 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_33341 + s + 574] = mem[_33341 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31868), address(_31831)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31868), address(_31831)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _32087, address(sha3(0, factoryAddress, _33344, sub_acaed29c[stor3])), 128, 0
                        else:
                            if idx >= mem[_11161 + 321] - 2:
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if mem[(32 * idx) + _11161 + 365 len 20] == mem[(32 * idx + 1) + _11161 + 365 len 20]:
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx) + _11161 + 365 len 20] < mem[(32 * idx + 1) + _11161 + 365 len 20]:
                                    if not mem[(32 * idx) + _11161 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _33381 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx) + _11161 + 353])
                                    mem[mem[64] + 52] = address(_31868)
                                    _33382 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _33384 = sha3(mem[_33382 + 32 len mem[_33382]])
                                    mem[_33381 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33381 + 105] = factoryAddress
                                    mem[_33381 + 125] = _33384
                                    mem[_33381 + 157] = sub_acaed29c[stor3]
                                    mem[_33381 + 72] = 85
                                    mem[_33381 + 189] = 0
                                    mem[64] = _33381 + 221
                                    mem[_33381 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_33381 + 225] = _32087
                                    mem[_33381 + 257] = 0
                                    mem[_33381 + 289] = address(cd[4])
                                    mem[_33381 + 321] = 128
                                    mem[_33381 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_33381 + s + 385] = mem[_33381 + s + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _33384, sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, _33384, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32087, 0, address(cd[4]), 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _11161 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _33389 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11161 + 353])
                                    mem[mem[64] + 52] = address(_31831)
                                    _33390 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _33392 = sha3(mem[_33390 + 32 len mem[_33390]])
                                    mem[_33389 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33389 + 105] = factoryAddress
                                    mem[_33389 + 125] = _33392
                                    mem[_33389 + 157] = sub_acaed29c[stor3]
                                    mem[_33389 + 72] = 85
                                    mem[_33389 + 189] = 0
                                    mem[64] = _33389 + 221
                                    mem[_33389 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_33389 + 225] = _32087
                                    mem[_33389 + 257] = 0
                                    mem[_33389 + 289] = address(cd[4])
                                    mem[_33389 + 321] = 128
                                    mem[_33389 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_33389 + s + 385] = mem[_33389 + s + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _33392, sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, _33392, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32087, 0, address(cd[4]), 128, 0
                            else:
                                require idx + 2 < mem[_11161 + 321]
                                _32260 = mem[(32 * idx + 2) + _11161 + 353]
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if mem[(32 * idx + 1) + _11161 + 365 len 20] == mem[(32 * idx + 2) + _11161 + 365 len 20]:
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx + 1) + _11161 + 365 len 20] < mem[(32 * idx + 2) + _11161 + 365 len 20]:
                                    if not mem[(32 * idx + 1) + _11161 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _33365 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11161 + 353])
                                    mem[mem[64] + 52] = address(_32260)
                                    _33366 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _33368 = sha3(mem[_33366 + 32 len mem[_33366]])
                                    mem[_33365 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33365 + 105] = factoryAddress
                                    mem[_33365 + 125] = _33368
                                    mem[_33365 + 157] = sub_acaed29c[stor3]
                                    mem[_33365 + 72] = 85
                                    mem[0] = factoryAddress
                                    mem[32] = 5
                                    if address(_31831) == address(_31868):
                                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_33365 + 292 len 29]
                                    if address(_31831) < address(_31868):
                                        if not address(_31831):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_33365 + 221] = address(_31831)
                                        mem[_33365 + 241] = address(_31868)
                                        mem[_33365 + 189] = 40
                                        mem[_33365 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33365 + 294] = factoryAddress
                                        mem[_33365 + 314] = sha3(address(_31831), address(_31868))
                                        mem[_33365 + 346] = sub_acaed29c[stor3]
                                        mem[_33365 + 261] = 85
                                        mem[_33365 + 378] = 0
                                        mem[64] = _33365 + 410
                                        mem[_33365 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_33365 + 414] = _32087
                                        mem[_33365 + 446] = 0
                                        mem[_33365 + 478] = address(sha3(0, factoryAddress, _33368, sub_acaed29c[stor3]))
                                        mem[_33365 + 510] = 128
                                        mem[_33365 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_33365 + s + 574] = mem[_33365 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31831), address(_31868)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31831), address(_31868)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _32087, 0, address(sha3(0, factoryAddress, _33368, sub_acaed29c[stor3])), 128, 0
                                    else:
                                        if not address(_31868):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_33365 + 221] = address(_31868)
                                        mem[_33365 + 241] = address(_31831)
                                        mem[_33365 + 189] = 40
                                        mem[_33365 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33365 + 294] = factoryAddress
                                        mem[_33365 + 314] = sha3(address(_31868), address(_31831))
                                        mem[_33365 + 346] = sub_acaed29c[stor3]
                                        mem[_33365 + 261] = 85
                                        mem[_33365 + 378] = 0
                                        mem[64] = _33365 + 410
                                        mem[_33365 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_33365 + 414] = _32087
                                        mem[_33365 + 446] = 0
                                        mem[_33365 + 478] = address(sha3(0, factoryAddress, _33368, sub_acaed29c[stor3]))
                                        mem[_33365 + 510] = 128
                                        mem[_33365 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_33365 + s + 574] = mem[_33365 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31868), address(_31831)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31868), address(_31831)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _32087, 0, address(sha3(0, factoryAddress, _33368, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _11161 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _33373 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11161 + 353])
                                    mem[mem[64] + 52] = address(_31868)
                                    _33374 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _33376 = sha3(mem[_33374 + 32 len mem[_33374]])
                                    mem[_33373 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33373 + 105] = factoryAddress
                                    mem[_33373 + 125] = _33376
                                    mem[_33373 + 157] = sub_acaed29c[stor3]
                                    mem[_33373 + 72] = 85
                                    mem[0] = factoryAddress
                                    mem[32] = 5
                                    if address(_31831) == address(_31868):
                                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_33373 + 292 len 29]
                                    if address(_31831) < address(_31868):
                                        if not address(_31831):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_33373 + 221] = address(_31831)
                                        mem[_33373 + 241] = address(_31868)
                                        mem[_33373 + 189] = 40
                                        mem[_33373 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33373 + 294] = factoryAddress
                                        mem[_33373 + 314] = sha3(address(_31831), address(_31868))
                                        mem[_33373 + 346] = sub_acaed29c[stor3]
                                        mem[_33373 + 261] = 85
                                        mem[_33373 + 378] = 0
                                        mem[64] = _33373 + 410
                                        mem[_33373 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_33373 + 414] = _32087
                                        mem[_33373 + 446] = 0
                                        mem[_33373 + 478] = address(sha3(0, factoryAddress, _33376, sub_acaed29c[stor3]))
                                        mem[_33373 + 510] = 128
                                        mem[_33373 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_33373 + s + 574] = mem[_33373 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31831), address(_31868)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31831), address(_31868)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _32087, 0, address(sha3(0, factoryAddress, _33376, sub_acaed29c[stor3])), 128, 0
                                    else:
                                        if not address(_31868):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_33373 + 221] = address(_31868)
                                        mem[_33373 + 241] = address(_31831)
                                        mem[_33373 + 189] = 40
                                        mem[_33373 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33373 + 294] = factoryAddress
                                        mem[_33373 + 314] = sha3(address(_31868), address(_31831))
                                        mem[_33373 + 346] = sub_acaed29c[stor3]
                                        mem[_33373 + 261] = 85
                                        mem[_33373 + 378] = 0
                                        mem[64] = _33373 + 410
                                        mem[_33373 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_33373 + 414] = _32087
                                        mem[_33373 + 446] = 0
                                        mem[_33373 + 478] = address(sha3(0, factoryAddress, _33376, sub_acaed29c[stor3]))
                                        mem[_33373 + 510] = 128
                                        mem[_33373 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_33373 + s + 574] = mem[_33373 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31868), address(_31831)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31868), address(_31831)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _32087, 0, address(sha3(0, factoryAddress, _33376, sub_acaed29c[stor3])), 128, 0
                    else:
                        if not mem[(32 * idx + 1) + _11161 + 365 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                        _32088 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                        if mem[(32 * idx) + _11161 + 365 len 20] == mem[(32 * idx + 1) + _11161 + 365 len 20]:
                            if idx >= mem[_11161 + 321] - 2:
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if mem[(32 * idx) + _11161 + 365 len 20] == mem[(32 * idx + 1) + _11161 + 365 len 20]:
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx) + _11161 + 365 len 20] < mem[(32 * idx + 1) + _11161 + 365 len 20]:
                                    if not mem[(32 * idx) + _11161 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _33413 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx) + _11161 + 353])
                                    mem[mem[64] + 52] = address(_31868)
                                    _33414 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _33416 = sha3(mem[_33414 + 32 len mem[_33414]])
                                    mem[_33413 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33413 + 105] = factoryAddress
                                    mem[_33413 + 125] = _33416
                                    mem[_33413 + 157] = sub_acaed29c[stor3]
                                    mem[_33413 + 72] = 85
                                    mem[_33413 + 189] = 0
                                    mem[64] = _33413 + 221
                                    mem[_33413 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_33413 + 225] = 0
                                    mem[_33413 + 257] = _32088
                                    mem[_33413 + 289] = address(cd[4])
                                    mem[_33413 + 321] = 128
                                    mem[_33413 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_33413 + s + 385] = mem[_33413 + s + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _33416, sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, _33416, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32088, address(cd[4]), 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _11161 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _33421 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11161 + 353])
                                    mem[mem[64] + 52] = address(_31831)
                                    _33422 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _33424 = sha3(mem[_33422 + 32 len mem[_33422]])
                                    mem[_33421 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33421 + 105] = factoryAddress
                                    mem[_33421 + 125] = _33424
                                    mem[_33421 + 157] = sub_acaed29c[stor3]
                                    mem[_33421 + 72] = 85
                                    mem[_33421 + 189] = 0
                                    mem[64] = _33421 + 221
                                    mem[_33421 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_33421 + 225] = 0
                                    mem[_33421 + 257] = _32088
                                    mem[_33421 + 289] = address(cd[4])
                                    mem[_33421 + 321] = 128
                                    mem[_33421 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_33421 + s + 385] = mem[_33421 + s + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _33424, sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, _33424, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32088, address(cd[4]), 128, 0
                            else:
                                require idx + 2 < mem[_11161 + 321]
                                _32263 = mem[(32 * idx + 2) + _11161 + 353]
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if mem[(32 * idx + 1) + _11161 + 365 len 20] == mem[(32 * idx + 2) + _11161 + 365 len 20]:
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx + 1) + _11161 + 365 len 20] < mem[(32 * idx + 2) + _11161 + 365 len 20]:
                                    if not mem[(32 * idx + 1) + _11161 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _33397 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11161 + 353])
                                    mem[mem[64] + 52] = address(_32263)
                                    _33398 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _33400 = sha3(mem[_33398 + 32 len mem[_33398]])
                                    mem[_33397 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33397 + 105] = factoryAddress
                                    mem[_33397 + 125] = _33400
                                    mem[_33397 + 157] = sub_acaed29c[stor3]
                                    mem[_33397 + 72] = 85
                                    mem[0] = factoryAddress
                                    mem[32] = 5
                                    if address(_31831) == address(_31868):
                                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_33397 + 292 len 29]
                                    if address(_31831) < address(_31868):
                                        if not address(_31831):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_33397 + 221] = address(_31831)
                                        mem[_33397 + 241] = address(_31868)
                                        mem[_33397 + 189] = 40
                                        mem[_33397 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33397 + 294] = factoryAddress
                                        mem[_33397 + 314] = sha3(address(_31831), address(_31868))
                                        mem[_33397 + 346] = sub_acaed29c[stor3]
                                        mem[_33397 + 261] = 85
                                        mem[_33397 + 378] = 0
                                        mem[64] = _33397 + 410
                                        mem[_33397 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_33397 + 414] = 0
                                        mem[_33397 + 446] = _32088
                                        mem[_33397 + 478] = address(sha3(0, factoryAddress, _33400, sub_acaed29c[stor3]))
                                        mem[_33397 + 510] = 128
                                        mem[_33397 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_33397 + s + 574] = mem[_33397 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31831), address(_31868)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31831), address(_31868)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _32088, address(sha3(0, factoryAddress, _33400, sub_acaed29c[stor3])), 128, 0
                                    else:
                                        if not address(_31868):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_33397 + 221] = address(_31868)
                                        mem[_33397 + 241] = address(_31831)
                                        mem[_33397 + 189] = 40
                                        mem[_33397 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33397 + 294] = factoryAddress
                                        mem[_33397 + 314] = sha3(address(_31868), address(_31831))
                                        mem[_33397 + 346] = sub_acaed29c[stor3]
                                        mem[_33397 + 261] = 85
                                        mem[_33397 + 378] = 0
                                        mem[64] = _33397 + 410
                                        mem[_33397 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_33397 + 414] = 0
                                        mem[_33397 + 446] = _32088
                                        mem[_33397 + 478] = address(sha3(0, factoryAddress, _33400, sub_acaed29c[stor3]))
                                        mem[_33397 + 510] = 128
                                        mem[_33397 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_33397 + s + 574] = mem[_33397 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31868), address(_31831)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31868), address(_31831)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _32088, address(sha3(0, factoryAddress, _33400, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _11161 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _33405 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11161 + 353])
                                    mem[mem[64] + 52] = address(_31868)
                                    _33406 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _33408 = sha3(mem[_33406 + 32 len mem[_33406]])
                                    mem[_33405 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33405 + 105] = factoryAddress
                                    mem[_33405 + 125] = _33408
                                    mem[_33405 + 157] = sub_acaed29c[stor3]
                                    mem[_33405 + 72] = 85
                                    mem[0] = factoryAddress
                                    mem[32] = 5
                                    if address(_31831) == address(_31868):
                                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_33405 + 292 len 29]
                                    if address(_31831) < address(_31868):
                                        if not address(_31831):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_33405 + 221] = address(_31831)
                                        mem[_33405 + 241] = address(_31868)
                                        mem[_33405 + 189] = 40
                                        mem[_33405 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33405 + 294] = factoryAddress
                                        mem[_33405 + 314] = sha3(address(_31831), address(_31868))
                                        mem[_33405 + 346] = sub_acaed29c[stor3]
                                        mem[_33405 + 261] = 85
                                        mem[_33405 + 378] = 0
                                        mem[64] = _33405 + 410
                                        mem[_33405 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_33405 + 414] = 0
                                        mem[_33405 + 446] = _32088
                                        mem[_33405 + 478] = address(sha3(0, factoryAddress, _33408, sub_acaed29c[stor3]))
                                        mem[_33405 + 510] = 128
                                        mem[_33405 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_33405 + s + 574] = mem[_33405 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31831), address(_31868)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31831), address(_31868)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _32088, address(sha3(0, factoryAddress, _33408, sub_acaed29c[stor3])), 128, 0
                                    else:
                                        if not address(_31868):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_33405 + 221] = address(_31868)
                                        mem[_33405 + 241] = address(_31831)
                                        mem[_33405 + 189] = 40
                                        mem[_33405 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33405 + 294] = factoryAddress
                                        mem[_33405 + 314] = sha3(address(_31868), address(_31831))
                                        mem[_33405 + 346] = sub_acaed29c[stor3]
                                        mem[_33405 + 261] = 85
                                        mem[_33405 + 378] = 0
                                        mem[64] = _33405 + 410
                                        mem[_33405 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_33405 + 414] = 0
                                        mem[_33405 + 446] = _32088
                                        mem[_33405 + 478] = address(sha3(0, factoryAddress, _33408, sub_acaed29c[stor3]))
                                        mem[_33405 + 510] = 128
                                        mem[_33405 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_33405 + s + 574] = mem[_33405 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31868), address(_31831)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31868), address(_31831)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _32088, address(sha3(0, factoryAddress, _33408, sub_acaed29c[stor3])), 128, 0
                        else:
                            if idx >= mem[_11161 + 321] - 2:
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if mem[(32 * idx) + _11161 + 365 len 20] == mem[(32 * idx + 1) + _11161 + 365 len 20]:
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx) + _11161 + 365 len 20] < mem[(32 * idx + 1) + _11161 + 365 len 20]:
                                    if not mem[(32 * idx) + _11161 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _33445 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx) + _11161 + 353])
                                    mem[mem[64] + 52] = address(_31868)
                                    _33446 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _33448 = sha3(mem[_33446 + 32 len mem[_33446]])
                                    mem[_33445 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33445 + 105] = factoryAddress
                                    mem[_33445 + 125] = _33448
                                    mem[_33445 + 157] = sub_acaed29c[stor3]
                                    mem[_33445 + 72] = 85
                                    mem[_33445 + 189] = 0
                                    mem[64] = _33445 + 221
                                    mem[_33445 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_33445 + 225] = _32088
                                    mem[_33445 + 257] = 0
                                    mem[_33445 + 289] = address(cd[4])
                                    mem[_33445 + 321] = 128
                                    mem[_33445 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_33445 + s + 385] = mem[_33445 + s + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _33448, sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, _33448, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32088, 0, address(cd[4]), 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _11161 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _33453 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11161 + 353])
                                    mem[mem[64] + 52] = address(_31831)
                                    _33454 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _33456 = sha3(mem[_33454 + 32 len mem[_33454]])
                                    mem[_33453 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33453 + 105] = factoryAddress
                                    mem[_33453 + 125] = _33456
                                    mem[_33453 + 157] = sub_acaed29c[stor3]
                                    mem[_33453 + 72] = 85
                                    mem[_33453 + 189] = 0
                                    mem[64] = _33453 + 221
                                    mem[_33453 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_33453 + 225] = _32088
                                    mem[_33453 + 257] = 0
                                    mem[_33453 + 289] = address(cd[4])
                                    mem[_33453 + 321] = 128
                                    mem[_33453 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_33453 + s + 385] = mem[_33453 + s + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _33456, sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, _33456, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32088, 0, address(cd[4]), 128, 0
                            else:
                                require idx + 2 < mem[_11161 + 321]
                                _32266 = mem[(32 * idx + 2) + _11161 + 353]
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if mem[(32 * idx + 1) + _11161 + 365 len 20] == mem[(32 * idx + 2) + _11161 + 365 len 20]:
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx + 1) + _11161 + 365 len 20] < mem[(32 * idx + 2) + _11161 + 365 len 20]:
                                    if not mem[(32 * idx + 1) + _11161 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _33429 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11161 + 353])
                                    mem[mem[64] + 52] = address(_32266)
                                    _33430 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _33432 = sha3(mem[_33430 + 32 len mem[_33430]])
                                    mem[_33429 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33429 + 105] = factoryAddress
                                    mem[_33429 + 125] = _33432
                                    mem[_33429 + 157] = sub_acaed29c[stor3]
                                    mem[_33429 + 72] = 85
                                    mem[0] = factoryAddress
                                    mem[32] = 5
                                    if address(_31831) == address(_31868):
                                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_33429 + 292 len 29]
                                    if address(_31831) < address(_31868):
                                        if not address(_31831):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_33429 + 221] = address(_31831)
                                        mem[_33429 + 241] = address(_31868)
                                        mem[_33429 + 189] = 40
                                        mem[_33429 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33429 + 294] = factoryAddress
                                        mem[_33429 + 314] = sha3(address(_31831), address(_31868))
                                        mem[_33429 + 346] = sub_acaed29c[stor3]
                                        mem[_33429 + 261] = 85
                                        mem[_33429 + 378] = 0
                                        mem[64] = _33429 + 410
                                        mem[_33429 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_33429 + 414] = _32088
                                        mem[_33429 + 446] = 0
                                        mem[_33429 + 478] = address(sha3(0, factoryAddress, _33432, sub_acaed29c[stor3]))
                                        mem[_33429 + 510] = 128
                                        mem[_33429 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_33429 + s + 574] = mem[_33429 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31831), address(_31868)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31831), address(_31868)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _32088, 0, address(sha3(0, factoryAddress, _33432, sub_acaed29c[stor3])), 128, 0
                                    else:
                                        if not address(_31868):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_33429 + 221] = address(_31868)
                                        mem[_33429 + 241] = address(_31831)
                                        mem[_33429 + 189] = 40
                                        mem[_33429 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33429 + 294] = factoryAddress
                                        mem[_33429 + 314] = sha3(address(_31868), address(_31831))
                                        mem[_33429 + 346] = sub_acaed29c[stor3]
                                        mem[_33429 + 261] = 85
                                        mem[_33429 + 378] = 0
                                        mem[64] = _33429 + 410
                                        mem[_33429 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_33429 + 414] = _32088
                                        mem[_33429 + 446] = 0
                                        mem[_33429 + 478] = address(sha3(0, factoryAddress, _33432, sub_acaed29c[stor3]))
                                        mem[_33429 + 510] = 128
                                        mem[_33429 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_33429 + s + 574] = mem[_33429 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31868), address(_31831)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31868), address(_31831)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _32088, 0, address(sha3(0, factoryAddress, _33432, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _11161 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _33437 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11161 + 353])
                                    mem[mem[64] + 52] = address(_31868)
                                    _33438 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _33440 = sha3(mem[_33438 + 32 len mem[_33438]])
                                    mem[_33437 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33437 + 105] = factoryAddress
                                    mem[_33437 + 125] = _33440
                                    mem[_33437 + 157] = sub_acaed29c[stor3]
                                    mem[_33437 + 72] = 85
                                    mem[0] = factoryAddress
                                    mem[32] = 5
                                    if address(_31831) == address(_31868):
                                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_33437 + 292 len 29]
                                    if address(_31831) < address(_31868):
                                        if not address(_31831):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_33437 + 221] = address(_31831)
                                        mem[_33437 + 241] = address(_31868)
                                        mem[_33437 + 189] = 40
                                        mem[_33437 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33437 + 294] = factoryAddress
                                        mem[_33437 + 314] = sha3(address(_31831), address(_31868))
                                        mem[_33437 + 346] = sub_acaed29c[stor3]
                                        mem[_33437 + 261] = 85
                                        mem[_33437 + 378] = 0
                                        mem[64] = _33437 + 410
                                        mem[_33437 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_33437 + 414] = _32088
                                        mem[_33437 + 446] = 0
                                        mem[_33437 + 478] = address(sha3(0, factoryAddress, _33440, sub_acaed29c[stor3]))
                                        mem[_33437 + 510] = 128
                                        mem[_33437 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_33437 + s + 574] = mem[_33437 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31831), address(_31868)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31831), address(_31868)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _32088, 0, address(sha3(0, factoryAddress, _33440, sub_acaed29c[stor3])), 128, 0
                                    else:
                                        if not address(_31868):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_33437 + 221] = address(_31868)
                                        mem[_33437 + 241] = address(_31831)
                                        mem[_33437 + 189] = 40
                                        mem[_33437 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33437 + 294] = factoryAddress
                                        mem[_33437 + 314] = sha3(address(_31868), address(_31831))
                                        mem[_33437 + 346] = sub_acaed29c[stor3]
                                        mem[_33437 + 261] = 85
                                        mem[_33437 + 378] = 0
                                        mem[64] = _33437 + 410
                                        mem[_33437 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_33437 + 414] = _32088
                                        mem[_33437 + 446] = 0
                                        mem[_33437 + 478] = address(sha3(0, factoryAddress, _33440, sub_acaed29c[stor3]))
                                        mem[_33437 + 510] = 128
                                        mem[_33437 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_33437 + s + 574] = mem[_33437 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31868), address(_31831)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31868), address(_31831)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _32088, 0, address(sha3(0, factoryAddress, _33440, sub_acaed29c[stor3])), 128, 0
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    continue 
                mem[mem[64]] = 32
                mem[mem[64] + 32] = mem[(32 * ('cd', 36).length) + 128]
                _31867 = mem[(32 * ('cd', 36).length) + 128]
                mem[mem[64] + 64 len floor32(mem[(32 * ('cd', 36).length) + 128])] = mem[(32 * ('cd', 36).length) + 160 len floor32(mem[(32 * ('cd', 36).length) + 128])]
                return 32, mem[mem[64] + 32 len (32 * _31867) + 32]
            mem[_11161 + 321] = return_data.size
            mem[_11161 + 353 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                revert with 0, 
                            32,
                            49,
                            0x545472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472616e7366657246726f6d206661696c65,
                            mem[_11161 + ceil32(return_data.size) + 439 len 15]
            if not return_data.size:
                mem[64] = _11161 + ceil32(return_data.size) + (32 * ('cd', 36).length) + 354
                mem[_11161 + ceil32(return_data.size) + 322] = ('cd', 36).length
                mem[_11161 + ceil32(return_data.size) + 354 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
                mem[_11161 + ceil32(return_data.size) + (32 * ('cd', 36).length) + 354] = 0
                idx = 0
                while idx < ('cd', 36).length - 1:
                    require idx < mem[_11161 + ceil32(return_data.size) + 322]
                    _31833 = mem[(32 * idx) + _11161 + ceil32(return_data.size) + 354]
                    require idx + 1 < mem[_11161 + ceil32(return_data.size) + 322]
                    _31872 = mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 354]
                    if mem[(32 * idx) + _11161 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 366 len 20]:
                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                    if mem[(32 * idx) + _11161 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 366 len 20]:
                        if not mem[(32 * idx) + _11161 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                        _32089 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                        if mem[(32 * idx) + _11161 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx) + _11161 + ceil32(return_data.size) + 366 len 20]:
                            if idx >= mem[_11161 + ceil32(return_data.size) + 322] - 2:
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if mem[(32 * idx) + _11161 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx) + _11161 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                    if not mem[(32 * idx) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _33477 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx) + _11161 + ceil32(return_data.size) + 354])
                                    mem[mem[64] + 52] = address(_31872)
                                    _33478 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _33480 = sha3(mem[_33478 + 32 len mem[_33478]])
                                    mem[_33477 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33477 + 105] = factoryAddress
                                    mem[_33477 + 125] = _33480
                                    mem[_33477 + 157] = sub_acaed29c[stor3]
                                    mem[_33477 + 72] = 85
                                    mem[_33477 + 189] = 0
                                    mem[64] = _33477 + 221
                                    mem[_33477 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_33477 + 225] = 0
                                    mem[_33477 + 257] = _32089
                                    mem[_33477 + 289] = address(cd[4])
                                    mem[_33477 + 321] = 128
                                    mem[_33477 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_33477 + s + 385] = mem[_33477 + s + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _33480, sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, _33480, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32089, address(cd[4]), 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _33485 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 354])
                                    mem[mem[64] + 52] = address(_31833)
                                    _33486 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _33488 = sha3(mem[_33486 + 32 len mem[_33486]])
                                    mem[_33485 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33485 + 105] = factoryAddress
                                    mem[_33485 + 125] = _33488
                                    mem[_33485 + 157] = sub_acaed29c[stor3]
                                    mem[_33485 + 72] = 85
                                    mem[_33485 + 189] = 0
                                    mem[64] = _33485 + 221
                                    mem[_33485 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_33485 + 225] = 0
                                    mem[_33485 + 257] = _32089
                                    mem[_33485 + 289] = address(cd[4])
                                    mem[_33485 + 321] = 128
                                    mem[_33485 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_33485 + s + 385] = mem[_33485 + s + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _33488, sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, _33488, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32089, address(cd[4]), 128, 0
                            else:
                                require idx + 2 < mem[_11161 + ceil32(return_data.size) + 322]
                                _32269 = mem[(32 * idx + 2) + _11161 + ceil32(return_data.size) + 354]
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                    if not mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _33461 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 354])
                                    mem[mem[64] + 52] = address(_32269)
                                    _33462 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _33464 = sha3(mem[_33462 + 32 len mem[_33462]])
                                    mem[_33461 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33461 + 105] = factoryAddress
                                    mem[_33461 + 125] = _33464
                                    mem[_33461 + 157] = sub_acaed29c[stor3]
                                    mem[_33461 + 72] = 85
                                    mem[0] = factoryAddress
                                    mem[32] = 5
                                    if address(_31833) == address(_31872):
                                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_33461 + 292 len 29]
                                    if address(_31833) < address(_31872):
                                        if not address(_31833):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_33461 + 221] = address(_31833)
                                        mem[_33461 + 241] = address(_31872)
                                        mem[_33461 + 189] = 40
                                        mem[_33461 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33461 + 294] = factoryAddress
                                        mem[_33461 + 314] = sha3(address(_31833), address(_31872))
                                        mem[_33461 + 346] = sub_acaed29c[stor3]
                                        mem[_33461 + 261] = 85
                                        mem[_33461 + 378] = 0
                                        mem[64] = _33461 + 410
                                        mem[_33461 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_33461 + 414] = 0
                                        mem[_33461 + 446] = _32089
                                        mem[_33461 + 478] = address(sha3(0, factoryAddress, _33464, sub_acaed29c[stor3]))
                                        mem[_33461 + 510] = 128
                                        mem[_33461 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_33461 + s + 574] = mem[_33461 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31833), address(_31872)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31833), address(_31872)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _32089, address(sha3(0, factoryAddress, _33464, sub_acaed29c[stor3])), 128, 0
                                    else:
                                        if not address(_31872):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_33461 + 221] = address(_31872)
                                        mem[_33461 + 241] = address(_31833)
                                        mem[_33461 + 189] = 40
                                        mem[_33461 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33461 + 294] = factoryAddress
                                        mem[_33461 + 314] = sha3(address(_31872), address(_31833))
                                        mem[_33461 + 346] = sub_acaed29c[stor3]
                                        mem[_33461 + 261] = 85
                                        mem[_33461 + 378] = 0
                                        mem[64] = _33461 + 410
                                        mem[_33461 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_33461 + 414] = 0
                                        mem[_33461 + 446] = _32089
                                        mem[_33461 + 478] = address(sha3(0, factoryAddress, _33464, sub_acaed29c[stor3]))
                                        mem[_33461 + 510] = 128
                                        mem[_33461 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_33461 + s + 574] = mem[_33461 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31872), address(_31833)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31872), address(_31833)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _32089, address(sha3(0, factoryAddress, _33464, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _33469 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11161 + ceil32(return_data.size) + 354])
                                    mem[mem[64] + 52] = address(_31872)
                                    _33470 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _33472 = sha3(mem[_33470 + 32 len mem[_33470]])
                                    mem[_33469 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33469 + 105] = factoryAddress
                                    mem[_33469 + 125] = _33472
                                    mem[_33469 + 157] = sub_acaed29c[stor3]
                                    mem[_33469 + 72] = 85
                                    mem[0] = factoryAddress
                                    mem[32] = 5
                                    if address(_31833) == address(_31872):
                                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_33469 + 292 len 29]
                                    if address(_31833) < address(_31872):
                                        if not address(_31833):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_33469 + 221] = address(_31833)
                                        mem[_33469 + 241] = address(_31872)
                                        mem[_33469 + 189] = 40
                                        mem[_33469 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33469 + 294] = factoryAddress
                                        mem[_33469 + 314] = sha3(address(_31833), address(_31872))
                                        mem[_33469 + 346] = sub_acaed29c[stor3]
                                        mem[_33469 + 261] = 85
                                        mem[_33469 + 378] = 0
                                        mem[64] = _33469 + 410
                                        mem[_33469 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_33469 + 414] = 0
                                        mem[_33469 + 446] = _32089
                                        mem[_33469 + 478] = address(sha3(0, factoryAddress, _33472, sub_acaed29c[stor3]))
                                        mem[_33469 + 510] = 128
                                        mem[_33469 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_33469 + s + 574] = mem[_33469 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31833), address(_31872)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31833), address(_31872)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _32089, address(sha3(0, factoryAddress, _33472, sub_acaed29c[stor3])), 128, 0
                                    else:
                                        if not address(_31872):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_33469 + 221] = address(_31872)
                                        mem[_33469 + 241] = address(_31833)
                                        mem[_33469 + 189] = 40
                                        mem[_33469 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33469 + 294] = factoryAddress
                                        mem[_33469 + 314] = sha3(address(_31872), address(_31833))
                                        mem[_33469 + 346] = sub_acaed29c[stor3]
                                        mem[_33469 + 261] = 85
                                        mem[_33469 + 378] = 0
                                        mem[64] = _33469 + 410
                                        mem[_33469 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_33469 + 414] = 0
                                        mem[_33469 + 446] = _32089
                                        mem[_33469 + 478] = address(sha3(0, factoryAddress, _33472, sub_acaed29c[stor3]))
                                        mem[_33469 + 510] = 128
                                        mem[_33469 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_33469 + s + 574] = mem[_33469 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31872), address(_31833)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31872), address(_31833)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _32089, address(sha3(0, factoryAddress, _33472, sub_acaed29c[stor3])), 128, 0
                        else:
                            if idx >= mem[_11161 + ceil32(return_data.size) + 322] - 2:
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if mem[(32 * idx) + _11161 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx) + _11161 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                    if not mem[(32 * idx) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _33509 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx) + _11161 + ceil32(return_data.size) + 354])
                                    mem[mem[64] + 52] = address(_31872)
                                    _33510 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _33512 = sha3(mem[_33510 + 32 len mem[_33510]])
                                    mem[_33509 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33509 + 105] = factoryAddress
                                    mem[_33509 + 125] = _33512
                                    mem[_33509 + 157] = sub_acaed29c[stor3]
                                    mem[_33509 + 72] = 85
                                    mem[_33509 + 189] = 0
                                    mem[64] = _33509 + 221
                                    mem[_33509 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_33509 + 225] = _32089
                                    mem[_33509 + 257] = 0
                                    mem[_33509 + 289] = address(cd[4])
                                    mem[_33509 + 321] = 128
                                    mem[_33509 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_33509 + s + 385] = mem[_33509 + s + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _33512, sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, _33512, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32089, 0, address(cd[4]), 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _33517 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 354])
                                    mem[mem[64] + 52] = address(_31833)
                                    _33518 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _33520 = sha3(mem[_33518 + 32 len mem[_33518]])
                                    mem[_33517 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33517 + 105] = factoryAddress
                                    mem[_33517 + 125] = _33520
                                    mem[_33517 + 157] = sub_acaed29c[stor3]
                                    mem[_33517 + 72] = 85
                                    mem[_33517 + 189] = 0
                                    mem[64] = _33517 + 221
                                    mem[_33517 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_33517 + 225] = _32089
                                    mem[_33517 + 257] = 0
                                    mem[_33517 + 289] = address(cd[4])
                                    mem[_33517 + 321] = 128
                                    mem[_33517 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_33517 + s + 385] = mem[_33517 + s + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _33520, sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, _33520, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32089, 0, address(cd[4]), 128, 0
                            else:
                                require idx + 2 < mem[_11161 + ceil32(return_data.size) + 322]
                                _32272 = mem[(32 * idx + 2) + _11161 + ceil32(return_data.size) + 354]
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                    if not mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _33493 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 354])
                                    mem[mem[64] + 52] = address(_32272)
                                    _33494 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _33496 = sha3(mem[_33494 + 32 len mem[_33494]])
                                    mem[_33493 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33493 + 105] = factoryAddress
                                    mem[_33493 + 125] = _33496
                                    mem[_33493 + 157] = sub_acaed29c[stor3]
                                    mem[_33493 + 72] = 85
                                    mem[0] = factoryAddress
                                    mem[32] = 5
                                    if address(_31833) == address(_31872):
                                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_33493 + 292 len 29]
                                    if address(_31833) < address(_31872):
                                        if not address(_31833):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_33493 + 221] = address(_31833)
                                        mem[_33493 + 241] = address(_31872)
                                        mem[_33493 + 189] = 40
                                        mem[_33493 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33493 + 294] = factoryAddress
                                        mem[_33493 + 314] = sha3(address(_31833), address(_31872))
                                        mem[_33493 + 346] = sub_acaed29c[stor3]
                                        mem[_33493 + 261] = 85
                                        mem[_33493 + 378] = 0
                                        mem[64] = _33493 + 410
                                        mem[_33493 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_33493 + 414] = _32089
                                        mem[_33493 + 446] = 0
                                        mem[_33493 + 478] = address(sha3(0, factoryAddress, _33496, sub_acaed29c[stor3]))
                                        mem[_33493 + 510] = 128
                                        mem[_33493 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_33493 + s + 574] = mem[_33493 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31833), address(_31872)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31833), address(_31872)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _32089, 0, address(sha3(0, factoryAddress, _33496, sub_acaed29c[stor3])), 128, 0
                                    else:
                                        if not address(_31872):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_33493 + 221] = address(_31872)
                                        mem[_33493 + 241] = address(_31833)
                                        mem[_33493 + 189] = 40
                                        mem[_33493 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33493 + 294] = factoryAddress
                                        mem[_33493 + 314] = sha3(address(_31872), address(_31833))
                                        mem[_33493 + 346] = sub_acaed29c[stor3]
                                        mem[_33493 + 261] = 85
                                        mem[_33493 + 378] = 0
                                        mem[64] = _33493 + 410
                                        mem[_33493 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_33493 + 414] = _32089
                                        mem[_33493 + 446] = 0
                                        mem[_33493 + 478] = address(sha3(0, factoryAddress, _33496, sub_acaed29c[stor3]))
                                        mem[_33493 + 510] = 128
                                        mem[_33493 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_33493 + s + 574] = mem[_33493 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31872), address(_31833)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31872), address(_31833)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _32089, 0, address(sha3(0, factoryAddress, _33496, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _33501 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11161 + ceil32(return_data.size) + 354])
                                    mem[mem[64] + 52] = address(_31872)
                                    _33502 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _33504 = sha3(mem[_33502 + 32 len mem[_33502]])
                                    mem[_33501 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33501 + 105] = factoryAddress
                                    mem[_33501 + 125] = _33504
                                    mem[_33501 + 157] = sub_acaed29c[stor3]
                                    mem[_33501 + 72] = 85
                                    mem[0] = factoryAddress
                                    mem[32] = 5
                                    if address(_31833) == address(_31872):
                                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_33501 + 292 len 29]
                                    if address(_31833) < address(_31872):
                                        if not address(_31833):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_33501 + 221] = address(_31833)
                                        mem[_33501 + 241] = address(_31872)
                                        mem[_33501 + 189] = 40
                                        mem[_33501 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33501 + 294] = factoryAddress
                                        mem[_33501 + 314] = sha3(address(_31833), address(_31872))
                                        mem[_33501 + 346] = sub_acaed29c[stor3]
                                        mem[_33501 + 261] = 85
                                        mem[_33501 + 378] = 0
                                        mem[64] = _33501 + 410
                                        mem[_33501 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_33501 + 414] = _32089
                                        mem[_33501 + 446] = 0
                                        mem[_33501 + 478] = address(sha3(0, factoryAddress, _33504, sub_acaed29c[stor3]))
                                        mem[_33501 + 510] = 128
                                        mem[_33501 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_33501 + s + 574] = mem[_33501 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31833), address(_31872)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31833), address(_31872)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _32089, 0, address(sha3(0, factoryAddress, _33504, sub_acaed29c[stor3])), 128, 0
                                    else:
                                        if not address(_31872):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_33501 + 221] = address(_31872)
                                        mem[_33501 + 241] = address(_31833)
                                        mem[_33501 + 189] = 40
                                        mem[_33501 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33501 + 294] = factoryAddress
                                        mem[_33501 + 314] = sha3(address(_31872), address(_31833))
                                        mem[_33501 + 346] = sub_acaed29c[stor3]
                                        mem[_33501 + 261] = 85
                                        mem[_33501 + 378] = 0
                                        mem[64] = _33501 + 410
                                        mem[_33501 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_33501 + 414] = _32089
                                        mem[_33501 + 446] = 0
                                        mem[_33501 + 478] = address(sha3(0, factoryAddress, _33504, sub_acaed29c[stor3]))
                                        mem[_33501 + 510] = 128
                                        mem[_33501 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_33501 + s + 574] = mem[_33501 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31872), address(_31833)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31872), address(_31833)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _32089, 0, address(sha3(0, factoryAddress, _33504, sub_acaed29c[stor3])), 128, 0
                    else:
                        if not mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                        _32090 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                        if mem[(32 * idx) + _11161 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 366 len 20]:
                            if idx >= mem[_11161 + ceil32(return_data.size) + 322] - 2:
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if mem[(32 * idx) + _11161 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx) + _11161 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                    if not mem[(32 * idx) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _33541 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx) + _11161 + ceil32(return_data.size) + 354])
                                    mem[mem[64] + 52] = address(_31872)
                                    _33542 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _33544 = sha3(mem[_33542 + 32 len mem[_33542]])
                                    mem[_33541 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33541 + 105] = factoryAddress
                                    mem[_33541 + 125] = _33544
                                    mem[_33541 + 157] = sub_acaed29c[stor3]
                                    mem[_33541 + 72] = 85
                                    mem[_33541 + 189] = 0
                                    mem[64] = _33541 + 221
                                    mem[_33541 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_33541 + 225] = 0
                                    mem[_33541 + 257] = _32090
                                    mem[_33541 + 289] = address(cd[4])
                                    mem[_33541 + 321] = 128
                                    mem[_33541 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_33541 + s + 385] = mem[_33541 + s + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _33544, sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, _33544, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32090, address(cd[4]), 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _33549 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 354])
                                    mem[mem[64] + 52] = address(_31833)
                                    _33550 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _33552 = sha3(mem[_33550 + 32 len mem[_33550]])
                                    mem[_33549 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33549 + 105] = factoryAddress
                                    mem[_33549 + 125] = _33552
                                    mem[_33549 + 157] = sub_acaed29c[stor3]
                                    mem[_33549 + 72] = 85
                                    mem[_33549 + 189] = 0
                                    mem[64] = _33549 + 221
                                    mem[_33549 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_33549 + 225] = 0
                                    mem[_33549 + 257] = _32090
                                    mem[_33549 + 289] = address(cd[4])
                                    mem[_33549 + 321] = 128
                                    mem[_33549 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_33549 + s + 385] = mem[_33549 + s + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _33552, sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, _33552, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32090, address(cd[4]), 128, 0
                            else:
                                require idx + 2 < mem[_11161 + ceil32(return_data.size) + 322]
                                _32275 = mem[(32 * idx + 2) + _11161 + ceil32(return_data.size) + 354]
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                    if not mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _33525 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 354])
                                    mem[mem[64] + 52] = address(_32275)
                                    _33526 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _33528 = sha3(mem[_33526 + 32 len mem[_33526]])
                                    mem[_33525 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33525 + 105] = factoryAddress
                                    mem[_33525 + 125] = _33528
                                    mem[_33525 + 157] = sub_acaed29c[stor3]
                                    mem[_33525 + 72] = 85
                                    mem[0] = factoryAddress
                                    mem[32] = 5
                                    if address(_31833) == address(_31872):
                                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_33525 + 292 len 29]
                                    if address(_31833) < address(_31872):
                                        if not address(_31833):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_33525 + 221] = address(_31833)
                                        mem[_33525 + 241] = address(_31872)
                                        mem[_33525 + 189] = 40
                                        mem[_33525 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33525 + 294] = factoryAddress
                                        mem[_33525 + 314] = sha3(address(_31833), address(_31872))
                                        mem[_33525 + 346] = sub_acaed29c[stor3]
                                        mem[_33525 + 261] = 85
                                        mem[_33525 + 378] = 0
                                        mem[64] = _33525 + 410
                                        mem[_33525 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_33525 + 414] = 0
                                        mem[_33525 + 446] = _32090
                                        mem[_33525 + 478] = address(sha3(0, factoryAddress, _33528, sub_acaed29c[stor3]))
                                        mem[_33525 + 510] = 128
                                        mem[_33525 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_33525 + s + 574] = mem[_33525 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31833), address(_31872)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31833), address(_31872)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _32090, address(sha3(0, factoryAddress, _33528, sub_acaed29c[stor3])), 128, 0
                                    else:
                                        if not address(_31872):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_33525 + 221] = address(_31872)
                                        mem[_33525 + 241] = address(_31833)
                                        mem[_33525 + 189] = 40
                                        mem[_33525 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33525 + 294] = factoryAddress
                                        mem[_33525 + 314] = sha3(address(_31872), address(_31833))
                                        mem[_33525 + 346] = sub_acaed29c[stor3]
                                        mem[_33525 + 261] = 85
                                        mem[_33525 + 378] = 0
                                        mem[64] = _33525 + 410
                                        mem[_33525 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_33525 + 414] = 0
                                        mem[_33525 + 446] = _32090
                                        mem[_33525 + 478] = address(sha3(0, factoryAddress, _33528, sub_acaed29c[stor3]))
                                        mem[_33525 + 510] = 128
                                        mem[_33525 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_33525 + s + 574] = mem[_33525 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31872), address(_31833)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31872), address(_31833)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _32090, address(sha3(0, factoryAddress, _33528, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _33533 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11161 + ceil32(return_data.size) + 354])
                                    mem[mem[64] + 52] = address(_31872)
                                    _33534 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _33536 = sha3(mem[_33534 + 32 len mem[_33534]])
                                    mem[_33533 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33533 + 105] = factoryAddress
                                    mem[_33533 + 125] = _33536
                                    mem[_33533 + 157] = sub_acaed29c[stor3]
                                    mem[_33533 + 72] = 85
                                    mem[0] = factoryAddress
                                    mem[32] = 5
                                    if address(_31833) == address(_31872):
                                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_33533 + 292 len 29]
                                    if address(_31833) < address(_31872):
                                        if not address(_31833):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_33533 + 221] = address(_31833)
                                        mem[_33533 + 241] = address(_31872)
                                        mem[_33533 + 189] = 40
                                        mem[_33533 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33533 + 294] = factoryAddress
                                        mem[_33533 + 314] = sha3(address(_31833), address(_31872))
                                        mem[_33533 + 346] = sub_acaed29c[stor3]
                                        mem[_33533 + 261] = 85
                                        mem[_33533 + 378] = 0
                                        mem[64] = _33533 + 410
                                        mem[_33533 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_33533 + 414] = 0
                                        mem[_33533 + 446] = _32090
                                        mem[_33533 + 478] = address(sha3(0, factoryAddress, _33536, sub_acaed29c[stor3]))
                                        mem[_33533 + 510] = 128
                                        mem[_33533 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_33533 + s + 574] = mem[_33533 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31833), address(_31872)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31833), address(_31872)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _32090, address(sha3(0, factoryAddress, _33536, sub_acaed29c[stor3])), 128, 0
                                    else:
                                        if not address(_31872):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_33533 + 221] = address(_31872)
                                        mem[_33533 + 241] = address(_31833)
                                        mem[_33533 + 189] = 40
                                        mem[_33533 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33533 + 294] = factoryAddress
                                        mem[_33533 + 314] = sha3(address(_31872), address(_31833))
                                        mem[_33533 + 346] = sub_acaed29c[stor3]
                                        mem[_33533 + 261] = 85
                                        mem[_33533 + 378] = 0
                                        mem[64] = _33533 + 410
                                        mem[_33533 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_33533 + 414] = 0
                                        mem[_33533 + 446] = _32090
                                        mem[_33533 + 478] = address(sha3(0, factoryAddress, _33536, sub_acaed29c[stor3]))
                                        mem[_33533 + 510] = 128
                                        mem[_33533 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_33533 + s + 574] = mem[_33533 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31872), address(_31833)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31872), address(_31833)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _32090, address(sha3(0, factoryAddress, _33536, sub_acaed29c[stor3])), 128, 0
                        else:
                            if idx >= mem[_11161 + ceil32(return_data.size) + 322] - 2:
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if mem[(32 * idx) + _11161 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx) + _11161 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                    if not mem[(32 * idx) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _33573 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx) + _11161 + ceil32(return_data.size) + 354])
                                    mem[mem[64] + 52] = address(_31872)
                                    _33574 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _33576 = sha3(mem[_33574 + 32 len mem[_33574]])
                                    mem[_33573 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33573 + 105] = factoryAddress
                                    mem[_33573 + 125] = _33576
                                    mem[_33573 + 157] = sub_acaed29c[stor3]
                                    mem[_33573 + 72] = 85
                                    mem[_33573 + 189] = 0
                                    mem[64] = _33573 + 221
                                    mem[_33573 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_33573 + 225] = _32090
                                    mem[_33573 + 257] = 0
                                    mem[_33573 + 289] = address(cd[4])
                                    mem[_33573 + 321] = 128
                                    mem[_33573 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_33573 + s + 385] = mem[_33573 + s + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _33576, sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, _33576, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32090, 0, address(cd[4]), 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _33581 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 354])
                                    mem[mem[64] + 52] = address(_31833)
                                    _33582 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _33584 = sha3(mem[_33582 + 32 len mem[_33582]])
                                    mem[_33581 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33581 + 105] = factoryAddress
                                    mem[_33581 + 125] = _33584
                                    mem[_33581 + 157] = sub_acaed29c[stor3]
                                    mem[_33581 + 72] = 85
                                    mem[_33581 + 189] = 0
                                    mem[64] = _33581 + 221
                                    mem[_33581 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_33581 + 225] = _32090
                                    mem[_33581 + 257] = 0
                                    mem[_33581 + 289] = address(cd[4])
                                    mem[_33581 + 321] = 128
                                    mem[_33581 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_33581 + s + 385] = mem[_33581 + s + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _33584, sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, _33584, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32090, 0, address(cd[4]), 128, 0
                            else:
                                require idx + 2 < mem[_11161 + ceil32(return_data.size) + 322]
                                _32278 = mem[(32 * idx + 2) + _11161 + ceil32(return_data.size) + 354]
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                    if not mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _33557 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 354])
                                    mem[mem[64] + 52] = address(_32278)
                                    _33558 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _33560 = sha3(mem[_33558 + 32 len mem[_33558]])
                                    mem[_33557 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33557 + 105] = factoryAddress
                                    mem[_33557 + 125] = _33560
                                    mem[_33557 + 157] = sub_acaed29c[stor3]
                                    mem[_33557 + 72] = 85
                                    mem[0] = factoryAddress
                                    mem[32] = 5
                                    if address(_31833) == address(_31872):
                                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_33557 + 292 len 29]
                                    if address(_31833) < address(_31872):
                                        if not address(_31833):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_33557 + 221] = address(_31833)
                                        mem[_33557 + 241] = address(_31872)
                                        mem[_33557 + 189] = 40
                                        mem[_33557 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33557 + 294] = factoryAddress
                                        mem[_33557 + 314] = sha3(address(_31833), address(_31872))
                                        mem[_33557 + 346] = sub_acaed29c[stor3]
                                        mem[_33557 + 261] = 85
                                        mem[_33557 + 378] = 0
                                        mem[64] = _33557 + 410
                                        mem[_33557 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_33557 + 414] = _32090
                                        mem[_33557 + 446] = 0
                                        mem[_33557 + 478] = address(sha3(0, factoryAddress, _33560, sub_acaed29c[stor3]))
                                        mem[_33557 + 510] = 128
                                        mem[_33557 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_33557 + s + 574] = mem[_33557 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31833), address(_31872)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31833), address(_31872)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _32090, 0, address(sha3(0, factoryAddress, _33560, sub_acaed29c[stor3])), 128, 0
                                    else:
                                        if not address(_31872):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_33557 + 221] = address(_31872)
                                        mem[_33557 + 241] = address(_31833)
                                        mem[_33557 + 189] = 40
                                        mem[_33557 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33557 + 294] = factoryAddress
                                        mem[_33557 + 314] = sha3(address(_31872), address(_31833))
                                        mem[_33557 + 346] = sub_acaed29c[stor3]
                                        mem[_33557 + 261] = 85
                                        mem[_33557 + 378] = 0
                                        mem[64] = _33557 + 410
                                        mem[_33557 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_33557 + 414] = _32090
                                        mem[_33557 + 446] = 0
                                        mem[_33557 + 478] = address(sha3(0, factoryAddress, _33560, sub_acaed29c[stor3]))
                                        mem[_33557 + 510] = 128
                                        mem[_33557 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_33557 + s + 574] = mem[_33557 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31872), address(_31833)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31872), address(_31833)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _32090, 0, address(sha3(0, factoryAddress, _33560, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _33565 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11161 + ceil32(return_data.size) + 354])
                                    mem[mem[64] + 52] = address(_31872)
                                    _33566 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _33568 = sha3(mem[_33566 + 32 len mem[_33566]])
                                    mem[_33565 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33565 + 105] = factoryAddress
                                    mem[_33565 + 125] = _33568
                                    mem[_33565 + 157] = sub_acaed29c[stor3]
                                    mem[_33565 + 72] = 85
                                    mem[0] = factoryAddress
                                    mem[32] = 5
                                    if address(_31833) == address(_31872):
                                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_33565 + 292 len 29]
                                    if address(_31833) < address(_31872):
                                        if not address(_31833):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_33565 + 221] = address(_31833)
                                        mem[_33565 + 241] = address(_31872)
                                        mem[_33565 + 189] = 40
                                        mem[_33565 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33565 + 294] = factoryAddress
                                        mem[_33565 + 314] = sha3(address(_31833), address(_31872))
                                        mem[_33565 + 346] = sub_acaed29c[stor3]
                                        mem[_33565 + 261] = 85
                                        mem[_33565 + 378] = 0
                                        mem[64] = _33565 + 410
                                        mem[_33565 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_33565 + 414] = _32090
                                        mem[_33565 + 446] = 0
                                        mem[_33565 + 478] = address(sha3(0, factoryAddress, _33568, sub_acaed29c[stor3]))
                                        mem[_33565 + 510] = 128
                                        mem[_33565 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_33565 + s + 574] = mem[_33565 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31833), address(_31872)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31833), address(_31872)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _32090, 0, address(sha3(0, factoryAddress, _33568, sub_acaed29c[stor3])), 128, 0
                                    else:
                                        if not address(_31872):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_33565 + 221] = address(_31872)
                                        mem[_33565 + 241] = address(_31833)
                                        mem[_33565 + 189] = 40
                                        mem[_33565 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33565 + 294] = factoryAddress
                                        mem[_33565 + 314] = sha3(address(_31872), address(_31833))
                                        mem[_33565 + 346] = sub_acaed29c[stor3]
                                        mem[_33565 + 261] = 85
                                        mem[_33565 + 378] = 0
                                        mem[64] = _33565 + 410
                                        mem[_33565 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_33565 + 414] = _32090
                                        mem[_33565 + 446] = 0
                                        mem[_33565 + 478] = address(sha3(0, factoryAddress, _33568, sub_acaed29c[stor3]))
                                        mem[_33565 + 510] = 128
                                        mem[_33565 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_33565 + s + 574] = mem[_33565 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31872), address(_31833)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31872), address(_31833)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _32090, 0, address(sha3(0, factoryAddress, _33568, sub_acaed29c[stor3])), 128, 0
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    continue 
                mem[mem[64]] = 32
                mem[mem[64] + 32] = mem[(32 * ('cd', 36).length) + 128]
                _31871 = mem[(32 * ('cd', 36).length) + 128]
                mem[mem[64] + 64 len floor32(mem[(32 * ('cd', 36).length) + 128])] = mem[(32 * ('cd', 36).length) + 160 len floor32(mem[(32 * ('cd', 36).length) + 128])]
                return 32, mem[mem[64] + 32 len (32 * _31871) + 32]
            require return_data.size >= 32
            if not mem[_11161 + 353]:
                revert with 0, 
                            32,
                            49,
                            0x545472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472616e7366657246726f6d206661696c65,
                            mem[_11161 + ceil32(return_data.size) + 439 len 15]
            mem[64] = _11161 + ceil32(return_data.size) + (32 * ('cd', 36).length) + 354
            mem[_11161 + ceil32(return_data.size) + 322] = ('cd', 36).length
            mem[_11161 + ceil32(return_data.size) + 354 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
            mem[_11161 + ceil32(return_data.size) + (32 * ('cd', 36).length) + 354] = 0
            idx = 0
            while idx < ('cd', 36).length - 1:
                require idx < mem[_11161 + ceil32(return_data.size) + 322]
                _31835 = mem[(32 * idx) + _11161 + ceil32(return_data.size) + 354]
                require idx + 1 < mem[_11161 + ceil32(return_data.size) + 322]
                _31876 = mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 354]
                if mem[(32 * idx) + _11161 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 366 len 20]:
                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                if mem[(32 * idx) + _11161 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 366 len 20]:
                    if not mem[(32 * idx) + _11161 + ceil32(return_data.size) + 366 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                    _32091 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                    if mem[(32 * idx) + _11161 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx) + _11161 + ceil32(return_data.size) + 366 len 20]:
                        if idx >= mem[_11161 + ceil32(return_data.size) + 322] - 2:
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if mem[(32 * idx) + _11161 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx) + _11161 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                if not mem[(32 * idx) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _33605 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _11161 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_31876)
                                _33606 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _33608 = sha3(mem[_33606 + 32 len mem[_33606]])
                                mem[_33605 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_33605 + 105] = factoryAddress
                                mem[_33605 + 125] = _33608
                                mem[_33605 + 157] = sub_acaed29c[stor3]
                                mem[_33605 + 72] = 85
                                mem[_33605 + 189] = 0
                                mem[64] = _33605 + 221
                                mem[_33605 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_33605 + 225] = 0
                                mem[_33605 + 257] = _32091
                                mem[_33605 + 289] = address(cd[4])
                                mem[_33605 + 321] = 128
                                mem[_33605 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[_33605 + s + 385] = mem[_33605 + s + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _33608, sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, _33608, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _32091, address(cd[4]), 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _33613 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_31835)
                                _33614 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _33616 = sha3(mem[_33614 + 32 len mem[_33614]])
                                mem[_33613 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_33613 + 105] = factoryAddress
                                mem[_33613 + 125] = _33616
                                mem[_33613 + 157] = sub_acaed29c[stor3]
                                mem[_33613 + 72] = 85
                                mem[_33613 + 189] = 0
                                mem[64] = _33613 + 221
                                mem[_33613 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_33613 + 225] = 0
                                mem[_33613 + 257] = _32091
                                mem[_33613 + 289] = address(cd[4])
                                mem[_33613 + 321] = 128
                                mem[_33613 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[_33613 + s + 385] = mem[_33613 + s + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _33616, sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, _33616, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _32091, address(cd[4]), 128, 0
                        else:
                            require idx + 2 < mem[_11161 + ceil32(return_data.size) + 322]
                            _32281 = mem[(32 * idx + 2) + _11161 + ceil32(return_data.size) + 354]
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                if not mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _33589 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_32281)
                                _33590 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _33592 = sha3(mem[_33590 + 32 len mem[_33590]])
                                mem[_33589 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_33589 + 105] = factoryAddress
                                mem[_33589 + 125] = _33592
                                mem[_33589 + 157] = sub_acaed29c[stor3]
                                mem[_33589 + 72] = 85
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if address(_31835) == address(_31876):
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_33589 + 292 len 29]
                                if address(_31835) < address(_31876):
                                    if not address(_31835):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_33589 + 221] = address(_31835)
                                    mem[_33589 + 241] = address(_31876)
                                    mem[_33589 + 189] = 40
                                    mem[_33589 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33589 + 294] = factoryAddress
                                    mem[_33589 + 314] = sha3(address(_31835), address(_31876))
                                    mem[_33589 + 346] = sub_acaed29c[stor3]
                                    mem[_33589 + 261] = 85
                                    mem[_33589 + 378] = 0
                                    mem[64] = _33589 + 410
                                    mem[_33589 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_33589 + 414] = 0
                                    mem[_33589 + 446] = _32091
                                    mem[_33589 + 478] = address(sha3(0, factoryAddress, _33592, sub_acaed29c[stor3]))
                                    mem[_33589 + 510] = 128
                                    mem[_33589 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_33589 + s + 574] = mem[_33589 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31835), address(_31876)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31835), address(_31876)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32091, address(sha3(0, factoryAddress, _33592, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not address(_31876):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_33589 + 221] = address(_31876)
                                    mem[_33589 + 241] = address(_31835)
                                    mem[_33589 + 189] = 40
                                    mem[_33589 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33589 + 294] = factoryAddress
                                    mem[_33589 + 314] = sha3(address(_31876), address(_31835))
                                    mem[_33589 + 346] = sub_acaed29c[stor3]
                                    mem[_33589 + 261] = 85
                                    mem[_33589 + 378] = 0
                                    mem[64] = _33589 + 410
                                    mem[_33589 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_33589 + 414] = 0
                                    mem[_33589 + 446] = _32091
                                    mem[_33589 + 478] = address(sha3(0, factoryAddress, _33592, sub_acaed29c[stor3]))
                                    mem[_33589 + 510] = 128
                                    mem[_33589 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_33589 + s + 574] = mem[_33589 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31876), address(_31835)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31876), address(_31835)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32091, address(sha3(0, factoryAddress, _33592, sub_acaed29c[stor3])), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _33597 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11161 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_31876)
                                _33598 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _33600 = sha3(mem[_33598 + 32 len mem[_33598]])
                                mem[_33597 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_33597 + 105] = factoryAddress
                                mem[_33597 + 125] = _33600
                                mem[_33597 + 157] = sub_acaed29c[stor3]
                                mem[_33597 + 72] = 85
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if address(_31835) == address(_31876):
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_33597 + 292 len 29]
                                if address(_31835) < address(_31876):
                                    if not address(_31835):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_33597 + 221] = address(_31835)
                                    mem[_33597 + 241] = address(_31876)
                                    mem[_33597 + 189] = 40
                                    mem[_33597 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33597 + 294] = factoryAddress
                                    mem[_33597 + 314] = sha3(address(_31835), address(_31876))
                                    mem[_33597 + 346] = sub_acaed29c[stor3]
                                    mem[_33597 + 261] = 85
                                    mem[_33597 + 378] = 0
                                    mem[64] = _33597 + 410
                                    mem[_33597 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_33597 + 414] = 0
                                    mem[_33597 + 446] = _32091
                                    mem[_33597 + 478] = address(sha3(0, factoryAddress, _33600, sub_acaed29c[stor3]))
                                    mem[_33597 + 510] = 128
                                    mem[_33597 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_33597 + s + 574] = mem[_33597 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31835), address(_31876)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31835), address(_31876)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32091, address(sha3(0, factoryAddress, _33600, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not address(_31876):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_33597 + 221] = address(_31876)
                                    mem[_33597 + 241] = address(_31835)
                                    mem[_33597 + 189] = 40
                                    mem[_33597 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33597 + 294] = factoryAddress
                                    mem[_33597 + 314] = sha3(address(_31876), address(_31835))
                                    mem[_33597 + 346] = sub_acaed29c[stor3]
                                    mem[_33597 + 261] = 85
                                    mem[_33597 + 378] = 0
                                    mem[64] = _33597 + 410
                                    mem[_33597 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_33597 + 414] = 0
                                    mem[_33597 + 446] = _32091
                                    mem[_33597 + 478] = address(sha3(0, factoryAddress, _33600, sub_acaed29c[stor3]))
                                    mem[_33597 + 510] = 128
                                    mem[_33597 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_33597 + s + 574] = mem[_33597 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31876), address(_31835)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31876), address(_31835)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32091, address(sha3(0, factoryAddress, _33600, sub_acaed29c[stor3])), 128, 0
                    else:
                        if idx >= mem[_11161 + ceil32(return_data.size) + 322] - 2:
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if mem[(32 * idx) + _11161 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx) + _11161 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                if not mem[(32 * idx) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _33637 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _11161 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_31876)
                                _33638 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _33640 = sha3(mem[_33638 + 32 len mem[_33638]])
                                mem[_33637 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_33637 + 105] = factoryAddress
                                mem[_33637 + 125] = _33640
                                mem[_33637 + 157] = sub_acaed29c[stor3]
                                mem[_33637 + 72] = 85
                                mem[_33637 + 189] = 0
                                mem[64] = _33637 + 221
                                mem[_33637 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_33637 + 225] = _32091
                                mem[_33637 + 257] = 0
                                mem[_33637 + 289] = address(cd[4])
                                mem[_33637 + 321] = 128
                                mem[_33637 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[_33637 + s + 385] = mem[_33637 + s + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _33640, sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, _33640, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _32091, 0, address(cd[4]), 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _33645 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_31835)
                                _33646 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _33648 = sha3(mem[_33646 + 32 len mem[_33646]])
                                mem[_33645 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_33645 + 105] = factoryAddress
                                mem[_33645 + 125] = _33648
                                mem[_33645 + 157] = sub_acaed29c[stor3]
                                mem[_33645 + 72] = 85
                                mem[_33645 + 189] = 0
                                mem[64] = _33645 + 221
                                mem[_33645 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_33645 + 225] = _32091
                                mem[_33645 + 257] = 0
                                mem[_33645 + 289] = address(cd[4])
                                mem[_33645 + 321] = 128
                                mem[_33645 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[_33645 + s + 385] = mem[_33645 + s + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _33648, sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, _33648, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _32091, 0, address(cd[4]), 128, 0
                        else:
                            require idx + 2 < mem[_11161 + ceil32(return_data.size) + 322]
                            _32284 = mem[(32 * idx + 2) + _11161 + ceil32(return_data.size) + 354]
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                if not mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _33621 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_32284)
                                _33622 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _33624 = sha3(mem[_33622 + 32 len mem[_33622]])
                                mem[_33621 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_33621 + 105] = factoryAddress
                                mem[_33621 + 125] = _33624
                                mem[_33621 + 157] = sub_acaed29c[stor3]
                                mem[_33621 + 72] = 85
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if address(_31835) == address(_31876):
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_33621 + 292 len 29]
                                if address(_31835) < address(_31876):
                                    if not address(_31835):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_33621 + 221] = address(_31835)
                                    mem[_33621 + 241] = address(_31876)
                                    mem[_33621 + 189] = 40
                                    mem[_33621 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33621 + 294] = factoryAddress
                                    mem[_33621 + 314] = sha3(address(_31835), address(_31876))
                                    mem[_33621 + 346] = sub_acaed29c[stor3]
                                    mem[_33621 + 261] = 85
                                    mem[_33621 + 378] = 0
                                    mem[64] = _33621 + 410
                                    mem[_33621 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_33621 + 414] = _32091
                                    mem[_33621 + 446] = 0
                                    mem[_33621 + 478] = address(sha3(0, factoryAddress, _33624, sub_acaed29c[stor3]))
                                    mem[_33621 + 510] = 128
                                    mem[_33621 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_33621 + s + 574] = mem[_33621 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31835), address(_31876)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31835), address(_31876)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32091, 0, address(sha3(0, factoryAddress, _33624, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not address(_31876):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_33621 + 221] = address(_31876)
                                    mem[_33621 + 241] = address(_31835)
                                    mem[_33621 + 189] = 40
                                    mem[_33621 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33621 + 294] = factoryAddress
                                    mem[_33621 + 314] = sha3(address(_31876), address(_31835))
                                    mem[_33621 + 346] = sub_acaed29c[stor3]
                                    mem[_33621 + 261] = 85
                                    mem[_33621 + 378] = 0
                                    mem[64] = _33621 + 410
                                    mem[_33621 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_33621 + 414] = _32091
                                    mem[_33621 + 446] = 0
                                    mem[_33621 + 478] = address(sha3(0, factoryAddress, _33624, sub_acaed29c[stor3]))
                                    mem[_33621 + 510] = 128
                                    mem[_33621 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_33621 + s + 574] = mem[_33621 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31876), address(_31835)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31876), address(_31835)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32091, 0, address(sha3(0, factoryAddress, _33624, sub_acaed29c[stor3])), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _33629 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11161 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_31876)
                                _33630 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _33632 = sha3(mem[_33630 + 32 len mem[_33630]])
                                mem[_33629 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_33629 + 105] = factoryAddress
                                mem[_33629 + 125] = _33632
                                mem[_33629 + 157] = sub_acaed29c[stor3]
                                mem[_33629 + 72] = 85
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if address(_31835) == address(_31876):
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_33629 + 292 len 29]
                                if address(_31835) < address(_31876):
                                    if not address(_31835):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_33629 + 221] = address(_31835)
                                    mem[_33629 + 241] = address(_31876)
                                    mem[_33629 + 189] = 40
                                    mem[_33629 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33629 + 294] = factoryAddress
                                    mem[_33629 + 314] = sha3(address(_31835), address(_31876))
                                    mem[_33629 + 346] = sub_acaed29c[stor3]
                                    mem[_33629 + 261] = 85
                                    mem[_33629 + 378] = 0
                                    mem[64] = _33629 + 410
                                    mem[_33629 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_33629 + 414] = _32091
                                    mem[_33629 + 446] = 0
                                    mem[_33629 + 478] = address(sha3(0, factoryAddress, _33632, sub_acaed29c[stor3]))
                                    mem[_33629 + 510] = 128
                                    mem[_33629 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_33629 + s + 574] = mem[_33629 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31835), address(_31876)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31835), address(_31876)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32091, 0, address(sha3(0, factoryAddress, _33632, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not address(_31876):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_33629 + 221] = address(_31876)
                                    mem[_33629 + 241] = address(_31835)
                                    mem[_33629 + 189] = 40
                                    mem[_33629 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33629 + 294] = factoryAddress
                                    mem[_33629 + 314] = sha3(address(_31876), address(_31835))
                                    mem[_33629 + 346] = sub_acaed29c[stor3]
                                    mem[_33629 + 261] = 85
                                    mem[_33629 + 378] = 0
                                    mem[64] = _33629 + 410
                                    mem[_33629 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_33629 + 414] = _32091
                                    mem[_33629 + 446] = 0
                                    mem[_33629 + 478] = address(sha3(0, factoryAddress, _33632, sub_acaed29c[stor3]))
                                    mem[_33629 + 510] = 128
                                    mem[_33629 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_33629 + s + 574] = mem[_33629 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31876), address(_31835)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31876), address(_31835)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32091, 0, address(sha3(0, factoryAddress, _33632, sub_acaed29c[stor3])), 128, 0
                else:
                    if not mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 366 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                    _32092 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                    if mem[(32 * idx) + _11161 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 366 len 20]:
                        if idx >= mem[_11161 + ceil32(return_data.size) + 322] - 2:
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if mem[(32 * idx) + _11161 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx) + _11161 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                if not mem[(32 * idx) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _33669 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _11161 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_31876)
                                _33670 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _33672 = sha3(mem[_33670 + 32 len mem[_33670]])
                                mem[_33669 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_33669 + 105] = factoryAddress
                                mem[_33669 + 125] = _33672
                                mem[_33669 + 157] = sub_acaed29c[stor3]
                                mem[_33669 + 72] = 85
                                mem[_33669 + 189] = 0
                                mem[64] = _33669 + 221
                                mem[_33669 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_33669 + 225] = 0
                                mem[_33669 + 257] = _32092
                                mem[_33669 + 289] = address(cd[4])
                                mem[_33669 + 321] = 128
                                mem[_33669 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[_33669 + s + 385] = mem[_33669 + s + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _33672, sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, _33672, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _32092, address(cd[4]), 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _33677 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_31835)
                                _33678 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _33680 = sha3(mem[_33678 + 32 len mem[_33678]])
                                mem[_33677 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_33677 + 105] = factoryAddress
                                mem[_33677 + 125] = _33680
                                mem[_33677 + 157] = sub_acaed29c[stor3]
                                mem[_33677 + 72] = 85
                                mem[_33677 + 189] = 0
                                mem[64] = _33677 + 221
                                mem[_33677 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_33677 + 225] = 0
                                mem[_33677 + 257] = _32092
                                mem[_33677 + 289] = address(cd[4])
                                mem[_33677 + 321] = 128
                                mem[_33677 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[_33677 + s + 385] = mem[_33677 + s + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _33680, sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, _33680, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _32092, address(cd[4]), 128, 0
                        else:
                            require idx + 2 < mem[_11161 + ceil32(return_data.size) + 322]
                            _32287 = mem[(32 * idx + 2) + _11161 + ceil32(return_data.size) + 354]
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                if not mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _33653 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_32287)
                                _33654 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _33656 = sha3(mem[_33654 + 32 len mem[_33654]])
                                mem[_33653 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_33653 + 105] = factoryAddress
                                mem[_33653 + 125] = _33656
                                mem[_33653 + 157] = sub_acaed29c[stor3]
                                mem[_33653 + 72] = 85
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if address(_31835) == address(_31876):
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_33653 + 292 len 29]
                                if address(_31835) < address(_31876):
                                    if not address(_31835):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_33653 + 221] = address(_31835)
                                    mem[_33653 + 241] = address(_31876)
                                    mem[_33653 + 189] = 40
                                    mem[_33653 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33653 + 294] = factoryAddress
                                    mem[_33653 + 314] = sha3(address(_31835), address(_31876))
                                    mem[_33653 + 346] = sub_acaed29c[stor3]
                                    mem[_33653 + 261] = 85
                                    mem[_33653 + 378] = 0
                                    mem[64] = _33653 + 410
                                    mem[_33653 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_33653 + 414] = 0
                                    mem[_33653 + 446] = _32092
                                    mem[_33653 + 478] = address(sha3(0, factoryAddress, _33656, sub_acaed29c[stor3]))
                                    mem[_33653 + 510] = 128
                                    mem[_33653 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_33653 + s + 574] = mem[_33653 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31835), address(_31876)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31835), address(_31876)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32092, address(sha3(0, factoryAddress, _33656, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not address(_31876):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_33653 + 221] = address(_31876)
                                    mem[_33653 + 241] = address(_31835)
                                    mem[_33653 + 189] = 40
                                    mem[_33653 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33653 + 294] = factoryAddress
                                    mem[_33653 + 314] = sha3(address(_31876), address(_31835))
                                    mem[_33653 + 346] = sub_acaed29c[stor3]
                                    mem[_33653 + 261] = 85
                                    mem[_33653 + 378] = 0
                                    mem[64] = _33653 + 410
                                    mem[_33653 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_33653 + 414] = 0
                                    mem[_33653 + 446] = _32092
                                    mem[_33653 + 478] = address(sha3(0, factoryAddress, _33656, sub_acaed29c[stor3]))
                                    mem[_33653 + 510] = 128
                                    mem[_33653 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_33653 + s + 574] = mem[_33653 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31876), address(_31835)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31876), address(_31835)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32092, address(sha3(0, factoryAddress, _33656, sub_acaed29c[stor3])), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _33661 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11161 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_31876)
                                _33662 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _33664 = sha3(mem[_33662 + 32 len mem[_33662]])
                                mem[_33661 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_33661 + 105] = factoryAddress
                                mem[_33661 + 125] = _33664
                                mem[_33661 + 157] = sub_acaed29c[stor3]
                                mem[_33661 + 72] = 85
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if address(_31835) == address(_31876):
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_33661 + 292 len 29]
                                if address(_31835) < address(_31876):
                                    if not address(_31835):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_33661 + 221] = address(_31835)
                                    mem[_33661 + 241] = address(_31876)
                                    mem[_33661 + 189] = 40
                                    mem[_33661 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33661 + 294] = factoryAddress
                                    mem[_33661 + 314] = sha3(address(_31835), address(_31876))
                                    mem[_33661 + 346] = sub_acaed29c[stor3]
                                    mem[_33661 + 261] = 85
                                    mem[_33661 + 378] = 0
                                    mem[64] = _33661 + 410
                                    mem[_33661 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_33661 + 414] = 0
                                    mem[_33661 + 446] = _32092
                                    mem[_33661 + 478] = address(sha3(0, factoryAddress, _33664, sub_acaed29c[stor3]))
                                    mem[_33661 + 510] = 128
                                    mem[_33661 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_33661 + s + 574] = mem[_33661 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31835), address(_31876)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31835), address(_31876)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32092, address(sha3(0, factoryAddress, _33664, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not address(_31876):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_33661 + 221] = address(_31876)
                                    mem[_33661 + 241] = address(_31835)
                                    mem[_33661 + 189] = 40
                                    mem[_33661 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33661 + 294] = factoryAddress
                                    mem[_33661 + 314] = sha3(address(_31876), address(_31835))
                                    mem[_33661 + 346] = sub_acaed29c[stor3]
                                    mem[_33661 + 261] = 85
                                    mem[_33661 + 378] = 0
                                    mem[64] = _33661 + 410
                                    mem[_33661 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_33661 + 414] = 0
                                    mem[_33661 + 446] = _32092
                                    mem[_33661 + 478] = address(sha3(0, factoryAddress, _33664, sub_acaed29c[stor3]))
                                    mem[_33661 + 510] = 128
                                    mem[_33661 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_33661 + s + 574] = mem[_33661 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31876), address(_31835)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31876), address(_31835)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32092, address(sha3(0, factoryAddress, _33664, sub_acaed29c[stor3])), 128, 0
                    else:
                        if idx >= mem[_11161 + ceil32(return_data.size) + 322] - 2:
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if mem[(32 * idx) + _11161 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx) + _11161 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                if not mem[(32 * idx) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _33701 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _11161 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_31876)
                                _33702 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _33704 = sha3(mem[_33702 + 32 len mem[_33702]])
                                mem[_33701 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_33701 + 105] = factoryAddress
                                mem[_33701 + 125] = _33704
                                mem[_33701 + 157] = sub_acaed29c[stor3]
                                mem[_33701 + 72] = 85
                                mem[_33701 + 189] = 0
                                mem[64] = _33701 + 221
                                mem[_33701 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_33701 + 225] = _32092
                                mem[_33701 + 257] = 0
                                mem[_33701 + 289] = address(cd[4])
                                mem[_33701 + 321] = 128
                                mem[_33701 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[_33701 + s + 385] = mem[_33701 + s + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _33704, sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, _33704, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _32092, 0, address(cd[4]), 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _33709 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_31835)
                                _33710 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _33712 = sha3(mem[_33710 + 32 len mem[_33710]])
                                mem[_33709 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_33709 + 105] = factoryAddress
                                mem[_33709 + 125] = _33712
                                mem[_33709 + 157] = sub_acaed29c[stor3]
                                mem[_33709 + 72] = 85
                                mem[_33709 + 189] = 0
                                mem[64] = _33709 + 221
                                mem[_33709 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_33709 + 225] = _32092
                                mem[_33709 + 257] = 0
                                mem[_33709 + 289] = address(cd[4])
                                mem[_33709 + 321] = 128
                                mem[_33709 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[_33709 + s + 385] = mem[_33709 + s + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _33712, sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, _33712, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _32092, 0, address(cd[4]), 128, 0
                        else:
                            require idx + 2 < mem[_11161 + ceil32(return_data.size) + 322]
                            _32290 = mem[(32 * idx + 2) + _11161 + ceil32(return_data.size) + 354]
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                if not mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _33685 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11161 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_32290)
                                _33686 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _33688 = sha3(mem[_33686 + 32 len mem[_33686]])
                                mem[_33685 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_33685 + 105] = factoryAddress
                                mem[_33685 + 125] = _33688
                                mem[_33685 + 157] = sub_acaed29c[stor3]
                                mem[_33685 + 72] = 85
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if address(_31835) == address(_31876):
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_33685 + 292 len 29]
                                if address(_31835) < address(_31876):
                                    if not address(_31835):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_33685 + 221] = address(_31835)
                                    mem[_33685 + 241] = address(_31876)
                                    mem[_33685 + 189] = 40
                                    mem[_33685 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33685 + 294] = factoryAddress
                                    mem[_33685 + 314] = sha3(address(_31835), address(_31876))
                                    mem[_33685 + 346] = sub_acaed29c[stor3]
                                    mem[_33685 + 261] = 85
                                    mem[_33685 + 378] = 0
                                    mem[64] = _33685 + 410
                                    mem[_33685 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_33685 + 414] = _32092
                                    mem[_33685 + 446] = 0
                                    mem[_33685 + 478] = address(sha3(0, factoryAddress, _33688, sub_acaed29c[stor3]))
                                    mem[_33685 + 510] = 128
                                    mem[_33685 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_33685 + s + 574] = mem[_33685 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31835), address(_31876)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31835), address(_31876)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32092, 0, address(sha3(0, factoryAddress, _33688, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not address(_31876):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_33685 + 221] = address(_31876)
                                    mem[_33685 + 241] = address(_31835)
                                    mem[_33685 + 189] = 40
                                    mem[_33685 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33685 + 294] = factoryAddress
                                    mem[_33685 + 314] = sha3(address(_31876), address(_31835))
                                    mem[_33685 + 346] = sub_acaed29c[stor3]
                                    mem[_33685 + 261] = 85
                                    mem[_33685 + 378] = 0
                                    mem[64] = _33685 + 410
                                    mem[_33685 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_33685 + 414] = _32092
                                    mem[_33685 + 446] = 0
                                    mem[_33685 + 478] = address(sha3(0, factoryAddress, _33688, sub_acaed29c[stor3]))
                                    mem[_33685 + 510] = 128
                                    mem[_33685 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_33685 + s + 574] = mem[_33685 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31876), address(_31835)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31876), address(_31835)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32092, 0, address(sha3(0, factoryAddress, _33688, sub_acaed29c[stor3])), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _11161 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _33693 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11161 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_31876)
                                _33694 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _33696 = sha3(mem[_33694 + 32 len mem[_33694]])
                                mem[_33693 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_33693 + 105] = factoryAddress
                                mem[_33693 + 125] = _33696
                                mem[_33693 + 157] = sub_acaed29c[stor3]
                                mem[_33693 + 72] = 85
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if address(_31835) == address(_31876):
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_33693 + 292 len 29]
                                if address(_31835) < address(_31876):
                                    if not address(_31835):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_33693 + 221] = address(_31835)
                                    mem[_33693 + 241] = address(_31876)
                                    mem[_33693 + 189] = 40
                                    mem[_33693 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33693 + 294] = factoryAddress
                                    mem[_33693 + 314] = sha3(address(_31835), address(_31876))
                                    mem[_33693 + 346] = sub_acaed29c[stor3]
                                    mem[_33693 + 261] = 85
                                    mem[_33693 + 378] = 0
                                    mem[64] = _33693 + 410
                                    mem[_33693 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_33693 + 414] = _32092
                                    mem[_33693 + 446] = 0
                                    mem[_33693 + 478] = address(sha3(0, factoryAddress, _33696, sub_acaed29c[stor3]))
                                    mem[_33693 + 510] = 128
                                    mem[_33693 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_33693 + s + 574] = mem[_33693 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31835), address(_31876)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31835), address(_31876)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32092, 0, address(sha3(0, factoryAddress, _33696, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not address(_31876):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_33693 + 221] = address(_31876)
                                    mem[_33693 + 241] = address(_31835)
                                    mem[_33693 + 189] = 40
                                    mem[_33693 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33693 + 294] = factoryAddress
                                    mem[_33693 + 314] = sha3(address(_31876), address(_31835))
                                    mem[_33693 + 346] = sub_acaed29c[stor3]
                                    mem[_33693 + 261] = 85
                                    mem[_33693 + 378] = 0
                                    mem[64] = _33693 + 410
                                    mem[_33693 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_33693 + 414] = _32092
                                    mem[_33693 + 446] = 0
                                    mem[_33693 + 478] = address(sha3(0, factoryAddress, _33696, sub_acaed29c[stor3]))
                                    mem[_33693 + 510] = 128
                                    mem[_33693 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_33693 + s + 574] = mem[_33693 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31876), address(_31835)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31876), address(_31835)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32092, 0, address(sha3(0, factoryAddress, _33696, sub_acaed29c[stor3])), 128, 0
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                idx = idx + 1
                continue 
            mem[mem[64]] = 32
            mem[mem[64] + 32] = mem[(32 * ('cd', 36).length) + 128]
            _31875 = mem[(32 * ('cd', 36).length) + 128]
            mem[mem[64] + 64 len floor32(mem[(32 * ('cd', 36).length) + 128])] = mem[(32 * ('cd', 36).length) + 160 len floor32(mem[(32 * ('cd', 36).length) + 128])]
            return 32, mem[mem[64] + 32 len (32 * _31875) + 32]
        if not address(('cd', 36)[1]):
            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
        _11169 = mem[64]
        mem[mem[64] + 32] = address(('cd', 36)[1])
        mem[mem[64] + 52] = address(('cd', 36)[0])
        _11170 = mem[64]
        mem[mem[64]] = 40
        mem[64] = mem[64] + 72
        _11172 = sha3(mem[_11170 + 32 len mem[_11170]])
        mem[_11169 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
        mem[_11169 + 105] = factoryAddress
        mem[_11169 + 125] = _11172
        mem[_11169 + 157] = sub_acaed29c[stor3]
        mem[_11169 + 72] = 85
        require 0 < mem[(32 * ('cd', 36).length) + 128]
        _11206 = mem[(32 * ('cd', 36).length) + 160]
        mem[_11169 + 225] = this.address
        mem[_11169 + 257] = address(sha3(0, factoryAddress, _11172, sub_acaed29c[stor3]))
        mem[_11169 + 289] = _11206
        mem[_11169 + 189] = 100
        mem[_11169 + 225 len 28] = address(this.address) << 64
        mem[_11169 + 221 len 4] = unknown_0x23b872dd(?????)
        mem[_11169 + 321 len 96] = unknown_0x23b872dd(?????), address(this.address) << 64, 0, address(sha3(0, factoryAddress, _11172, sub_acaed29c[stor3])), Mask(224, 32, _11206) >> 32
        mem[_11169 + 445 len 4] = Mask(32, 64, _11206) >> 64
        call address(('cd', 36)[0]) with:
             gas gas_remaining wei
            args Mask(224, 32, _11206) << 480, mem[_11169 + 417 len 4]
        if not return_data.size:
            if not ext_call.success:
                revert with 0, 
                            32,
                            49,
                            0x545472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472616e7366657246726f6d206661696c65,
                            mem[_11169 + 438 len 7],
                            Mask(32, 64, _11206) >> 64,
                            mem[_11169 + 449 len 4]
            if not mem[96]:
                mem[64] = _11169 + (32 * ('cd', 36).length) + 353
                mem[_11169 + 321] = ('cd', 36).length
                mem[_11169 + 353 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
                mem[_11169 + (32 * ('cd', 36).length) + 353] = 0
                idx = 0
                while idx < ('cd', 36).length - 1:
                    require idx < mem[_11169 + 321]
                    _31837 = mem[(32 * idx) + _11169 + 353]
                    require idx + 1 < mem[_11169 + 321]
                    _31880 = mem[(32 * idx + 1) + _11169 + 353]
                    if mem[(32 * idx) + _11169 + 365 len 20] == mem[(32 * idx + 1) + _11169 + 365 len 20]:
                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                    if mem[(32 * idx) + _11169 + 365 len 20] < mem[(32 * idx + 1) + _11169 + 365 len 20]:
                        if not mem[(32 * idx) + _11169 + 365 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                        _32093 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                        if mem[(32 * idx) + _11169 + 365 len 20] == mem[(32 * idx) + _11169 + 365 len 20]:
                            if idx >= mem[_11169 + 321] - 2:
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if mem[(32 * idx) + _11169 + 365 len 20] == mem[(32 * idx + 1) + _11169 + 365 len 20]:
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx) + _11169 + 365 len 20] < mem[(32 * idx + 1) + _11169 + 365 len 20]:
                                    if not mem[(32 * idx) + _11169 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _33733 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx) + _11169 + 353])
                                    mem[mem[64] + 52] = address(_31880)
                                    _33734 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _33736 = sha3(mem[_33734 + 32 len mem[_33734]])
                                    mem[_33733 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33733 + 105] = factoryAddress
                                    mem[_33733 + 125] = _33736
                                    mem[_33733 + 157] = sub_acaed29c[stor3]
                                    mem[_33733 + 72] = 85
                                    mem[_33733 + 189] = 0
                                    mem[64] = _33733 + 221
                                    mem[_33733 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_33733 + 225] = 0
                                    mem[_33733 + 257] = _32093
                                    mem[_33733 + 289] = address(cd[4])
                                    mem[_33733 + 321] = 128
                                    mem[_33733 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_33733 + s + 385] = mem[_33733 + s + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _33736, sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, _33736, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32093, address(cd[4]), 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _11169 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _33741 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11169 + 353])
                                    mem[mem[64] + 52] = address(_31837)
                                    _33742 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _33744 = sha3(mem[_33742 + 32 len mem[_33742]])
                                    mem[_33741 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33741 + 105] = factoryAddress
                                    mem[_33741 + 125] = _33744
                                    mem[_33741 + 157] = sub_acaed29c[stor3]
                                    mem[_33741 + 72] = 85
                                    mem[_33741 + 189] = 0
                                    mem[64] = _33741 + 221
                                    mem[_33741 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_33741 + 225] = 0
                                    mem[_33741 + 257] = _32093
                                    mem[_33741 + 289] = address(cd[4])
                                    mem[_33741 + 321] = 128
                                    mem[_33741 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_33741 + s + 385] = mem[_33741 + s + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _33744, sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, _33744, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32093, address(cd[4]), 128, 0
                            else:
                                require idx + 2 < mem[_11169 + 321]
                                _32293 = mem[(32 * idx + 2) + _11169 + 353]
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if mem[(32 * idx + 1) + _11169 + 365 len 20] == mem[(32 * idx + 2) + _11169 + 365 len 20]:
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx + 1) + _11169 + 365 len 20] < mem[(32 * idx + 2) + _11169 + 365 len 20]:
                                    if not mem[(32 * idx + 1) + _11169 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _33717 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11169 + 353])
                                    mem[mem[64] + 52] = address(_32293)
                                    _33718 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _33720 = sha3(mem[_33718 + 32 len mem[_33718]])
                                    mem[_33717 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33717 + 105] = factoryAddress
                                    mem[_33717 + 125] = _33720
                                    mem[_33717 + 157] = sub_acaed29c[stor3]
                                    mem[_33717 + 72] = 85
                                    mem[0] = factoryAddress
                                    mem[32] = 5
                                    if address(_31837) == address(_31880):
                                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_33717 + 292 len 29]
                                    if address(_31837) < address(_31880):
                                        if not address(_31837):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_33717 + 221] = address(_31837)
                                        mem[_33717 + 241] = address(_31880)
                                        mem[_33717 + 189] = 40
                                        mem[_33717 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33717 + 294] = factoryAddress
                                        mem[_33717 + 314] = sha3(address(_31837), address(_31880))
                                        mem[_33717 + 346] = sub_acaed29c[stor3]
                                        mem[_33717 + 261] = 85
                                        mem[_33717 + 378] = 0
                                        mem[64] = _33717 + 410
                                        mem[_33717 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_33717 + 414] = 0
                                        mem[_33717 + 446] = _32093
                                        mem[_33717 + 478] = address(sha3(0, factoryAddress, _33720, sub_acaed29c[stor3]))
                                        mem[_33717 + 510] = 128
                                        mem[_33717 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_33717 + s + 574] = mem[_33717 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31837), address(_31880)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31837), address(_31880)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _32093, address(sha3(0, factoryAddress, _33720, sub_acaed29c[stor3])), 128, 0
                                    else:
                                        if not address(_31880):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_33717 + 221] = address(_31880)
                                        mem[_33717 + 241] = address(_31837)
                                        mem[_33717 + 189] = 40
                                        mem[_33717 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33717 + 294] = factoryAddress
                                        mem[_33717 + 314] = sha3(address(_31880), address(_31837))
                                        mem[_33717 + 346] = sub_acaed29c[stor3]
                                        mem[_33717 + 261] = 85
                                        mem[_33717 + 378] = 0
                                        mem[64] = _33717 + 410
                                        mem[_33717 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_33717 + 414] = 0
                                        mem[_33717 + 446] = _32093
                                        mem[_33717 + 478] = address(sha3(0, factoryAddress, _33720, sub_acaed29c[stor3]))
                                        mem[_33717 + 510] = 128
                                        mem[_33717 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_33717 + s + 574] = mem[_33717 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31880), address(_31837)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31880), address(_31837)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _32093, address(sha3(0, factoryAddress, _33720, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _11169 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _33725 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11169 + 353])
                                    mem[mem[64] + 52] = address(_31880)
                                    _33726 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _33728 = sha3(mem[_33726 + 32 len mem[_33726]])
                                    mem[_33725 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33725 + 105] = factoryAddress
                                    mem[_33725 + 125] = _33728
                                    mem[_33725 + 157] = sub_acaed29c[stor3]
                                    mem[_33725 + 72] = 85
                                    mem[0] = factoryAddress
                                    mem[32] = 5
                                    if address(_31837) == address(_31880):
                                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_33725 + 292 len 29]
                                    if address(_31837) < address(_31880):
                                        if not address(_31837):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_33725 + 221] = address(_31837)
                                        mem[_33725 + 241] = address(_31880)
                                        mem[_33725 + 189] = 40
                                        mem[_33725 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33725 + 294] = factoryAddress
                                        mem[_33725 + 314] = sha3(address(_31837), address(_31880))
                                        mem[_33725 + 346] = sub_acaed29c[stor3]
                                        mem[_33725 + 261] = 85
                                        mem[_33725 + 378] = 0
                                        mem[64] = _33725 + 410
                                        mem[_33725 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_33725 + 414] = 0
                                        mem[_33725 + 446] = _32093
                                        mem[_33725 + 478] = address(sha3(0, factoryAddress, _33728, sub_acaed29c[stor3]))
                                        mem[_33725 + 510] = 128
                                        mem[_33725 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_33725 + s + 574] = mem[_33725 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31837), address(_31880)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31837), address(_31880)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _32093, address(sha3(0, factoryAddress, _33728, sub_acaed29c[stor3])), 128, 0
                                    else:
                                        if not address(_31880):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_33725 + 221] = address(_31880)
                                        mem[_33725 + 241] = address(_31837)
                                        mem[_33725 + 189] = 40
                                        mem[_33725 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33725 + 294] = factoryAddress
                                        mem[_33725 + 314] = sha3(address(_31880), address(_31837))
                                        mem[_33725 + 346] = sub_acaed29c[stor3]
                                        mem[_33725 + 261] = 85
                                        mem[_33725 + 378] = 0
                                        mem[64] = _33725 + 410
                                        mem[_33725 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_33725 + 414] = 0
                                        mem[_33725 + 446] = _32093
                                        mem[_33725 + 478] = address(sha3(0, factoryAddress, _33728, sub_acaed29c[stor3]))
                                        mem[_33725 + 510] = 128
                                        mem[_33725 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_33725 + s + 574] = mem[_33725 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31880), address(_31837)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31880), address(_31837)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _32093, address(sha3(0, factoryAddress, _33728, sub_acaed29c[stor3])), 128, 0
                        else:
                            if idx >= mem[_11169 + 321] - 2:
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if mem[(32 * idx) + _11169 + 365 len 20] == mem[(32 * idx + 1) + _11169 + 365 len 20]:
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx) + _11169 + 365 len 20] < mem[(32 * idx + 1) + _11169 + 365 len 20]:
                                    if not mem[(32 * idx) + _11169 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _33765 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx) + _11169 + 353])
                                    mem[mem[64] + 52] = address(_31880)
                                    _33766 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _33768 = sha3(mem[_33766 + 32 len mem[_33766]])
                                    mem[_33765 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33765 + 105] = factoryAddress
                                    mem[_33765 + 125] = _33768
                                    mem[_33765 + 157] = sub_acaed29c[stor3]
                                    mem[_33765 + 72] = 85
                                    mem[_33765 + 189] = 0
                                    mem[64] = _33765 + 221
                                    mem[_33765 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_33765 + 225] = _32093
                                    mem[_33765 + 257] = 0
                                    mem[_33765 + 289] = address(cd[4])
                                    mem[_33765 + 321] = 128
                                    mem[_33765 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_33765 + s + 385] = mem[_33765 + s + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _33768, sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, _33768, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32093, 0, address(cd[4]), 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _11169 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _33773 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11169 + 353])
                                    mem[mem[64] + 52] = address(_31837)
                                    _33774 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _33776 = sha3(mem[_33774 + 32 len mem[_33774]])
                                    mem[_33773 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33773 + 105] = factoryAddress
                                    mem[_33773 + 125] = _33776
                                    mem[_33773 + 157] = sub_acaed29c[stor3]
                                    mem[_33773 + 72] = 85
                                    mem[_33773 + 189] = 0
                                    mem[64] = _33773 + 221
                                    mem[_33773 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_33773 + 225] = _32093
                                    mem[_33773 + 257] = 0
                                    mem[_33773 + 289] = address(cd[4])
                                    mem[_33773 + 321] = 128
                                    mem[_33773 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_33773 + s + 385] = mem[_33773 + s + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _33776, sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, _33776, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32093, 0, address(cd[4]), 128, 0
                            else:
                                require idx + 2 < mem[_11169 + 321]
                                _32296 = mem[(32 * idx + 2) + _11169 + 353]
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if mem[(32 * idx + 1) + _11169 + 365 len 20] == mem[(32 * idx + 2) + _11169 + 365 len 20]:
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx + 1) + _11169 + 365 len 20] < mem[(32 * idx + 2) + _11169 + 365 len 20]:
                                    if not mem[(32 * idx + 1) + _11169 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _33749 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11169 + 353])
                                    mem[mem[64] + 52] = address(_32296)
                                    _33750 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _33752 = sha3(mem[_33750 + 32 len mem[_33750]])
                                    mem[_33749 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33749 + 105] = factoryAddress
                                    mem[_33749 + 125] = _33752
                                    mem[_33749 + 157] = sub_acaed29c[stor3]
                                    mem[_33749 + 72] = 85
                                    mem[0] = factoryAddress
                                    mem[32] = 5
                                    if address(_31837) == address(_31880):
                                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_33749 + 292 len 29]
                                    if address(_31837) < address(_31880):
                                        if not address(_31837):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_33749 + 221] = address(_31837)
                                        mem[_33749 + 241] = address(_31880)
                                        mem[_33749 + 189] = 40
                                        mem[_33749 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33749 + 294] = factoryAddress
                                        mem[_33749 + 314] = sha3(address(_31837), address(_31880))
                                        mem[_33749 + 346] = sub_acaed29c[stor3]
                                        mem[_33749 + 261] = 85
                                        mem[_33749 + 378] = 0
                                        mem[64] = _33749 + 410
                                        mem[_33749 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_33749 + 414] = _32093
                                        mem[_33749 + 446] = 0
                                        mem[_33749 + 478] = address(sha3(0, factoryAddress, _33752, sub_acaed29c[stor3]))
                                        mem[_33749 + 510] = 128
                                        mem[_33749 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_33749 + s + 574] = mem[_33749 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31837), address(_31880)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31837), address(_31880)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _32093, 0, address(sha3(0, factoryAddress, _33752, sub_acaed29c[stor3])), 128, 0
                                    else:
                                        if not address(_31880):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_33749 + 221] = address(_31880)
                                        mem[_33749 + 241] = address(_31837)
                                        mem[_33749 + 189] = 40
                                        mem[_33749 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33749 + 294] = factoryAddress
                                        mem[_33749 + 314] = sha3(address(_31880), address(_31837))
                                        mem[_33749 + 346] = sub_acaed29c[stor3]
                                        mem[_33749 + 261] = 85
                                        mem[_33749 + 378] = 0
                                        mem[64] = _33749 + 410
                                        mem[_33749 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_33749 + 414] = _32093
                                        mem[_33749 + 446] = 0
                                        mem[_33749 + 478] = address(sha3(0, factoryAddress, _33752, sub_acaed29c[stor3]))
                                        mem[_33749 + 510] = 128
                                        mem[_33749 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_33749 + s + 574] = mem[_33749 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31880), address(_31837)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31880), address(_31837)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _32093, 0, address(sha3(0, factoryAddress, _33752, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _11169 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _33757 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11169 + 353])
                                    mem[mem[64] + 52] = address(_31880)
                                    _33758 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _33760 = sha3(mem[_33758 + 32 len mem[_33758]])
                                    mem[_33757 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33757 + 105] = factoryAddress
                                    mem[_33757 + 125] = _33760
                                    mem[_33757 + 157] = sub_acaed29c[stor3]
                                    mem[_33757 + 72] = 85
                                    mem[0] = factoryAddress
                                    mem[32] = 5
                                    if address(_31837) == address(_31880):
                                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_33757 + 292 len 29]
                                    if address(_31837) < address(_31880):
                                        if not address(_31837):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_33757 + 221] = address(_31837)
                                        mem[_33757 + 241] = address(_31880)
                                        mem[_33757 + 189] = 40
                                        mem[_33757 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33757 + 294] = factoryAddress
                                        mem[_33757 + 314] = sha3(address(_31837), address(_31880))
                                        mem[_33757 + 346] = sub_acaed29c[stor3]
                                        mem[_33757 + 261] = 85
                                        mem[_33757 + 378] = 0
                                        mem[64] = _33757 + 410
                                        mem[_33757 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_33757 + 414] = _32093
                                        mem[_33757 + 446] = 0
                                        mem[_33757 + 478] = address(sha3(0, factoryAddress, _33760, sub_acaed29c[stor3]))
                                        mem[_33757 + 510] = 128
                                        mem[_33757 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_33757 + s + 574] = mem[_33757 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31837), address(_31880)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31837), address(_31880)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _32093, 0, address(sha3(0, factoryAddress, _33760, sub_acaed29c[stor3])), 128, 0
                                    else:
                                        if not address(_31880):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_33757 + 221] = address(_31880)
                                        mem[_33757 + 241] = address(_31837)
                                        mem[_33757 + 189] = 40
                                        mem[_33757 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33757 + 294] = factoryAddress
                                        mem[_33757 + 314] = sha3(address(_31880), address(_31837))
                                        mem[_33757 + 346] = sub_acaed29c[stor3]
                                        mem[_33757 + 261] = 85
                                        mem[_33757 + 378] = 0
                                        mem[64] = _33757 + 410
                                        mem[_33757 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_33757 + 414] = _32093
                                        mem[_33757 + 446] = 0
                                        mem[_33757 + 478] = address(sha3(0, factoryAddress, _33760, sub_acaed29c[stor3]))
                                        mem[_33757 + 510] = 128
                                        mem[_33757 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_33757 + s + 574] = mem[_33757 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31880), address(_31837)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31880), address(_31837)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _32093, 0, address(sha3(0, factoryAddress, _33760, sub_acaed29c[stor3])), 128, 0
                    else:
                        if not mem[(32 * idx + 1) + _11169 + 365 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                        _32094 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                        if mem[(32 * idx) + _11169 + 365 len 20] == mem[(32 * idx + 1) + _11169 + 365 len 20]:
                            if idx >= mem[_11169 + 321] - 2:
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if mem[(32 * idx) + _11169 + 365 len 20] == mem[(32 * idx + 1) + _11169 + 365 len 20]:
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx) + _11169 + 365 len 20] < mem[(32 * idx + 1) + _11169 + 365 len 20]:
                                    if not mem[(32 * idx) + _11169 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _33797 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx) + _11169 + 353])
                                    mem[mem[64] + 52] = address(_31880)
                                    _33798 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _33800 = sha3(mem[_33798 + 32 len mem[_33798]])
                                    mem[_33797 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33797 + 105] = factoryAddress
                                    mem[_33797 + 125] = _33800
                                    mem[_33797 + 157] = sub_acaed29c[stor3]
                                    mem[_33797 + 72] = 85
                                    mem[_33797 + 189] = 0
                                    mem[64] = _33797 + 221
                                    mem[_33797 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_33797 + 225] = 0
                                    mem[_33797 + 257] = _32094
                                    mem[_33797 + 289] = address(cd[4])
                                    mem[_33797 + 321] = 128
                                    mem[_33797 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_33797 + s + 385] = mem[_33797 + s + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _33800, sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, _33800, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32094, address(cd[4]), 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _11169 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _33805 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11169 + 353])
                                    mem[mem[64] + 52] = address(_31837)
                                    _33806 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _33808 = sha3(mem[_33806 + 32 len mem[_33806]])
                                    mem[_33805 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33805 + 105] = factoryAddress
                                    mem[_33805 + 125] = _33808
                                    mem[_33805 + 157] = sub_acaed29c[stor3]
                                    mem[_33805 + 72] = 85
                                    mem[_33805 + 189] = 0
                                    mem[64] = _33805 + 221
                                    mem[_33805 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_33805 + 225] = 0
                                    mem[_33805 + 257] = _32094
                                    mem[_33805 + 289] = address(cd[4])
                                    mem[_33805 + 321] = 128
                                    mem[_33805 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_33805 + s + 385] = mem[_33805 + s + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _33808, sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, _33808, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32094, address(cd[4]), 128, 0
                            else:
                                require idx + 2 < mem[_11169 + 321]
                                _32299 = mem[(32 * idx + 2) + _11169 + 353]
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if mem[(32 * idx + 1) + _11169 + 365 len 20] == mem[(32 * idx + 2) + _11169 + 365 len 20]:
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx + 1) + _11169 + 365 len 20] < mem[(32 * idx + 2) + _11169 + 365 len 20]:
                                    if not mem[(32 * idx + 1) + _11169 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _33781 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11169 + 353])
                                    mem[mem[64] + 52] = address(_32299)
                                    _33782 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _33784 = sha3(mem[_33782 + 32 len mem[_33782]])
                                    mem[_33781 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33781 + 105] = factoryAddress
                                    mem[_33781 + 125] = _33784
                                    mem[_33781 + 157] = sub_acaed29c[stor3]
                                    mem[_33781 + 72] = 85
                                    mem[0] = factoryAddress
                                    mem[32] = 5
                                    if address(_31837) == address(_31880):
                                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_33781 + 292 len 29]
                                    if address(_31837) < address(_31880):
                                        if not address(_31837):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_33781 + 221] = address(_31837)
                                        mem[_33781 + 241] = address(_31880)
                                        mem[_33781 + 189] = 40
                                        mem[_33781 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33781 + 294] = factoryAddress
                                        mem[_33781 + 314] = sha3(address(_31837), address(_31880))
                                        mem[_33781 + 346] = sub_acaed29c[stor3]
                                        mem[_33781 + 261] = 85
                                        mem[_33781 + 378] = 0
                                        mem[64] = _33781 + 410
                                        mem[_33781 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_33781 + 414] = 0
                                        mem[_33781 + 446] = _32094
                                        mem[_33781 + 478] = address(sha3(0, factoryAddress, _33784, sub_acaed29c[stor3]))
                                        mem[_33781 + 510] = 128
                                        mem[_33781 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_33781 + s + 574] = mem[_33781 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31837), address(_31880)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31837), address(_31880)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _32094, address(sha3(0, factoryAddress, _33784, sub_acaed29c[stor3])), 128, 0
                                    else:
                                        if not address(_31880):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_33781 + 221] = address(_31880)
                                        mem[_33781 + 241] = address(_31837)
                                        mem[_33781 + 189] = 40
                                        mem[_33781 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33781 + 294] = factoryAddress
                                        mem[_33781 + 314] = sha3(address(_31880), address(_31837))
                                        mem[_33781 + 346] = sub_acaed29c[stor3]
                                        mem[_33781 + 261] = 85
                                        mem[_33781 + 378] = 0
                                        mem[64] = _33781 + 410
                                        mem[_33781 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_33781 + 414] = 0
                                        mem[_33781 + 446] = _32094
                                        mem[_33781 + 478] = address(sha3(0, factoryAddress, _33784, sub_acaed29c[stor3]))
                                        mem[_33781 + 510] = 128
                                        mem[_33781 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_33781 + s + 574] = mem[_33781 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31880), address(_31837)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31880), address(_31837)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _32094, address(sha3(0, factoryAddress, _33784, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _11169 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _33789 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11169 + 353])
                                    mem[mem[64] + 52] = address(_31880)
                                    _33790 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _33792 = sha3(mem[_33790 + 32 len mem[_33790]])
                                    mem[_33789 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33789 + 105] = factoryAddress
                                    mem[_33789 + 125] = _33792
                                    mem[_33789 + 157] = sub_acaed29c[stor3]
                                    mem[_33789 + 72] = 85
                                    mem[0] = factoryAddress
                                    mem[32] = 5
                                    if address(_31837) == address(_31880):
                                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_33789 + 292 len 29]
                                    if address(_31837) < address(_31880):
                                        if not address(_31837):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_33789 + 221] = address(_31837)
                                        mem[_33789 + 241] = address(_31880)
                                        mem[_33789 + 189] = 40
                                        mem[_33789 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33789 + 294] = factoryAddress
                                        mem[_33789 + 314] = sha3(address(_31837), address(_31880))
                                        mem[_33789 + 346] = sub_acaed29c[stor3]
                                        mem[_33789 + 261] = 85
                                        mem[_33789 + 378] = 0
                                        mem[64] = _33789 + 410
                                        mem[_33789 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_33789 + 414] = 0
                                        mem[_33789 + 446] = _32094
                                        mem[_33789 + 478] = address(sha3(0, factoryAddress, _33792, sub_acaed29c[stor3]))
                                        mem[_33789 + 510] = 128
                                        mem[_33789 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_33789 + s + 574] = mem[_33789 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31837), address(_31880)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31837), address(_31880)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _32094, address(sha3(0, factoryAddress, _33792, sub_acaed29c[stor3])), 128, 0
                                    else:
                                        if not address(_31880):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_33789 + 221] = address(_31880)
                                        mem[_33789 + 241] = address(_31837)
                                        mem[_33789 + 189] = 40
                                        mem[_33789 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33789 + 294] = factoryAddress
                                        mem[_33789 + 314] = sha3(address(_31880), address(_31837))
                                        mem[_33789 + 346] = sub_acaed29c[stor3]
                                        mem[_33789 + 261] = 85
                                        mem[_33789 + 378] = 0
                                        mem[64] = _33789 + 410
                                        mem[_33789 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_33789 + 414] = 0
                                        mem[_33789 + 446] = _32094
                                        mem[_33789 + 478] = address(sha3(0, factoryAddress, _33792, sub_acaed29c[stor3]))
                                        mem[_33789 + 510] = 128
                                        mem[_33789 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_33789 + s + 574] = mem[_33789 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31880), address(_31837)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31880), address(_31837)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _32094, address(sha3(0, factoryAddress, _33792, sub_acaed29c[stor3])), 128, 0
                        else:
                            if idx >= mem[_11169 + 321] - 2:
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if mem[(32 * idx) + _11169 + 365 len 20] == mem[(32 * idx + 1) + _11169 + 365 len 20]:
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx) + _11169 + 365 len 20] < mem[(32 * idx + 1) + _11169 + 365 len 20]:
                                    if not mem[(32 * idx) + _11169 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _33829 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx) + _11169 + 353])
                                    mem[mem[64] + 52] = address(_31880)
                                    _33830 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _33832 = sha3(mem[_33830 + 32 len mem[_33830]])
                                    mem[_33829 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33829 + 105] = factoryAddress
                                    mem[_33829 + 125] = _33832
                                    mem[_33829 + 157] = sub_acaed29c[stor3]
                                    mem[_33829 + 72] = 85
                                    mem[_33829 + 189] = 0
                                    mem[64] = _33829 + 221
                                    mem[_33829 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_33829 + 225] = _32094
                                    mem[_33829 + 257] = 0
                                    mem[_33829 + 289] = address(cd[4])
                                    mem[_33829 + 321] = 128
                                    mem[_33829 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_33829 + s + 385] = mem[_33829 + s + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _33832, sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, _33832, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32094, 0, address(cd[4]), 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _11169 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _33837 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11169 + 353])
                                    mem[mem[64] + 52] = address(_31837)
                                    _33838 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _33840 = sha3(mem[_33838 + 32 len mem[_33838]])
                                    mem[_33837 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33837 + 105] = factoryAddress
                                    mem[_33837 + 125] = _33840
                                    mem[_33837 + 157] = sub_acaed29c[stor3]
                                    mem[_33837 + 72] = 85
                                    mem[_33837 + 189] = 0
                                    mem[64] = _33837 + 221
                                    mem[_33837 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_33837 + 225] = _32094
                                    mem[_33837 + 257] = 0
                                    mem[_33837 + 289] = address(cd[4])
                                    mem[_33837 + 321] = 128
                                    mem[_33837 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_33837 + s + 385] = mem[_33837 + s + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _33840, sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, _33840, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32094, 0, address(cd[4]), 128, 0
                            else:
                                require idx + 2 < mem[_11169 + 321]
                                _32302 = mem[(32 * idx + 2) + _11169 + 353]
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if mem[(32 * idx + 1) + _11169 + 365 len 20] == mem[(32 * idx + 2) + _11169 + 365 len 20]:
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx + 1) + _11169 + 365 len 20] < mem[(32 * idx + 2) + _11169 + 365 len 20]:
                                    if not mem[(32 * idx + 1) + _11169 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _33813 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11169 + 353])
                                    mem[mem[64] + 52] = address(_32302)
                                    _33814 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _33816 = sha3(mem[_33814 + 32 len mem[_33814]])
                                    mem[_33813 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33813 + 105] = factoryAddress
                                    mem[_33813 + 125] = _33816
                                    mem[_33813 + 157] = sub_acaed29c[stor3]
                                    mem[_33813 + 72] = 85
                                    mem[0] = factoryAddress
                                    mem[32] = 5
                                    if address(_31837) == address(_31880):
                                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_33813 + 292 len 29]
                                    if address(_31837) < address(_31880):
                                        if not address(_31837):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_33813 + 221] = address(_31837)
                                        mem[_33813 + 241] = address(_31880)
                                        mem[_33813 + 189] = 40
                                        mem[_33813 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33813 + 294] = factoryAddress
                                        mem[_33813 + 314] = sha3(address(_31837), address(_31880))
                                        mem[_33813 + 346] = sub_acaed29c[stor3]
                                        mem[_33813 + 261] = 85
                                        mem[_33813 + 378] = 0
                                        mem[64] = _33813 + 410
                                        mem[_33813 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_33813 + 414] = _32094
                                        mem[_33813 + 446] = 0
                                        mem[_33813 + 478] = address(sha3(0, factoryAddress, _33816, sub_acaed29c[stor3]))
                                        mem[_33813 + 510] = 128
                                        mem[_33813 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_33813 + s + 574] = mem[_33813 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31837), address(_31880)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31837), address(_31880)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _32094, 0, address(sha3(0, factoryAddress, _33816, sub_acaed29c[stor3])), 128, 0
                                    else:
                                        if not address(_31880):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_33813 + 221] = address(_31880)
                                        mem[_33813 + 241] = address(_31837)
                                        mem[_33813 + 189] = 40
                                        mem[_33813 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33813 + 294] = factoryAddress
                                        mem[_33813 + 314] = sha3(address(_31880), address(_31837))
                                        mem[_33813 + 346] = sub_acaed29c[stor3]
                                        mem[_33813 + 261] = 85
                                        mem[_33813 + 378] = 0
                                        mem[64] = _33813 + 410
                                        mem[_33813 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_33813 + 414] = _32094
                                        mem[_33813 + 446] = 0
                                        mem[_33813 + 478] = address(sha3(0, factoryAddress, _33816, sub_acaed29c[stor3]))
                                        mem[_33813 + 510] = 128
                                        mem[_33813 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_33813 + s + 574] = mem[_33813 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31880), address(_31837)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31880), address(_31837)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _32094, 0, address(sha3(0, factoryAddress, _33816, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _11169 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _33821 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11169 + 353])
                                    mem[mem[64] + 52] = address(_31880)
                                    _33822 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _33824 = sha3(mem[_33822 + 32 len mem[_33822]])
                                    mem[_33821 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33821 + 105] = factoryAddress
                                    mem[_33821 + 125] = _33824
                                    mem[_33821 + 157] = sub_acaed29c[stor3]
                                    mem[_33821 + 72] = 85
                                    mem[0] = factoryAddress
                                    mem[32] = 5
                                    if address(_31837) == address(_31880):
                                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_33821 + 292 len 29]
                                    if address(_31837) < address(_31880):
                                        if not address(_31837):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_33821 + 221] = address(_31837)
                                        mem[_33821 + 241] = address(_31880)
                                        mem[_33821 + 189] = 40
                                        mem[_33821 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33821 + 294] = factoryAddress
                                        mem[_33821 + 314] = sha3(address(_31837), address(_31880))
                                        mem[_33821 + 346] = sub_acaed29c[stor3]
                                        mem[_33821 + 261] = 85
                                        mem[_33821 + 378] = 0
                                        mem[64] = _33821 + 410
                                        mem[_33821 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_33821 + 414] = _32094
                                        mem[_33821 + 446] = 0
                                        mem[_33821 + 478] = address(sha3(0, factoryAddress, _33824, sub_acaed29c[stor3]))
                                        mem[_33821 + 510] = 128
                                        mem[_33821 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_33821 + s + 574] = mem[_33821 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31837), address(_31880)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31837), address(_31880)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _32094, 0, address(sha3(0, factoryAddress, _33824, sub_acaed29c[stor3])), 128, 0
                                    else:
                                        if not address(_31880):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_33821 + 221] = address(_31880)
                                        mem[_33821 + 241] = address(_31837)
                                        mem[_33821 + 189] = 40
                                        mem[_33821 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_33821 + 294] = factoryAddress
                                        mem[_33821 + 314] = sha3(address(_31880), address(_31837))
                                        mem[_33821 + 346] = sub_acaed29c[stor3]
                                        mem[_33821 + 261] = 85
                                        mem[_33821 + 378] = 0
                                        mem[64] = _33821 + 410
                                        mem[_33821 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_33821 + 414] = _32094
                                        mem[_33821 + 446] = 0
                                        mem[_33821 + 478] = address(sha3(0, factoryAddress, _33824, sub_acaed29c[stor3]))
                                        mem[_33821 + 510] = 128
                                        mem[_33821 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_33821 + s + 574] = mem[_33821 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31880), address(_31837)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31880), address(_31837)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _32094, 0, address(sha3(0, factoryAddress, _33824, sub_acaed29c[stor3])), 128, 0
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    continue 
                mem[mem[64]] = 32
                mem[mem[64] + 32] = mem[(32 * ('cd', 36).length) + 128]
                _31879 = mem[(32 * ('cd', 36).length) + 128]
                mem[mem[64] + 64 len floor32(mem[(32 * ('cd', 36).length) + 128])] = mem[(32 * ('cd', 36).length) + 160 len floor32(mem[(32 * ('cd', 36).length) + 128])]
                return 32, mem[mem[64] + 32 len (32 * _31879) + 32]
            require mem[96] >= 32
            if not mem[128]:
                revert with 0, 
                            32,
                            49,
                            0x545472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472616e7366657246726f6d206661696c65,
                            mem[_11169 + 438 len 7],
                            Mask(32, 64, _11206) >> 64,
                            mem[_11169 + 449 len 4]
            mem[64] = _11169 + (32 * ('cd', 36).length) + 353
            mem[_11169 + 321] = ('cd', 36).length
            mem[_11169 + 353 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
            mem[_11169 + (32 * ('cd', 36).length) + 353] = 0
            idx = 0
            while idx < ('cd', 36).length - 1:
                require idx < mem[_11169 + 321]
                _31839 = mem[(32 * idx) + _11169 + 353]
                require idx + 1 < mem[_11169 + 321]
                _31884 = mem[(32 * idx + 1) + _11169 + 353]
                if mem[(32 * idx) + _11169 + 365 len 20] == mem[(32 * idx + 1) + _11169 + 365 len 20]:
                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                if mem[(32 * idx) + _11169 + 365 len 20] < mem[(32 * idx + 1) + _11169 + 365 len 20]:
                    if not mem[(32 * idx) + _11169 + 365 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                    _32095 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                    if mem[(32 * idx) + _11169 + 365 len 20] == mem[(32 * idx) + _11169 + 365 len 20]:
                        if idx >= mem[_11169 + 321] - 2:
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if mem[(32 * idx) + _11169 + 365 len 20] == mem[(32 * idx + 1) + _11169 + 365 len 20]:
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx) + _11169 + 365 len 20] < mem[(32 * idx + 1) + _11169 + 365 len 20]:
                                if not mem[(32 * idx) + _11169 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _33861 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _11169 + 353])
                                mem[mem[64] + 52] = address(_31884)
                                _33862 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _33864 = sha3(mem[_33862 + 32 len mem[_33862]])
                                mem[_33861 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_33861 + 105] = factoryAddress
                                mem[_33861 + 125] = _33864
                                mem[_33861 + 157] = sub_acaed29c[stor3]
                                mem[_33861 + 72] = 85
                                mem[_33861 + 189] = 0
                                mem[64] = _33861 + 221
                                mem[_33861 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_33861 + 225] = 0
                                mem[_33861 + 257] = _32095
                                mem[_33861 + 289] = address(cd[4])
                                mem[_33861 + 321] = 128
                                mem[_33861 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[_33861 + s + 385] = mem[_33861 + s + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _33864, sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, _33864, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _32095, address(cd[4]), 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _11169 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _33869 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11169 + 353])
                                mem[mem[64] + 52] = address(_31839)
                                _33870 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _33872 = sha3(mem[_33870 + 32 len mem[_33870]])
                                mem[_33869 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_33869 + 105] = factoryAddress
                                mem[_33869 + 125] = _33872
                                mem[_33869 + 157] = sub_acaed29c[stor3]
                                mem[_33869 + 72] = 85
                                mem[_33869 + 189] = 0
                                mem[64] = _33869 + 221
                                mem[_33869 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_33869 + 225] = 0
                                mem[_33869 + 257] = _32095
                                mem[_33869 + 289] = address(cd[4])
                                mem[_33869 + 321] = 128
                                mem[_33869 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[_33869 + s + 385] = mem[_33869 + s + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _33872, sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, _33872, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _32095, address(cd[4]), 128, 0
                        else:
                            require idx + 2 < mem[_11169 + 321]
                            _32305 = mem[(32 * idx + 2) + _11169 + 353]
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if mem[(32 * idx + 1) + _11169 + 365 len 20] == mem[(32 * idx + 2) + _11169 + 365 len 20]:
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx + 1) + _11169 + 365 len 20] < mem[(32 * idx + 2) + _11169 + 365 len 20]:
                                if not mem[(32 * idx + 1) + _11169 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _33845 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11169 + 353])
                                mem[mem[64] + 52] = address(_32305)
                                _33846 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _33848 = sha3(mem[_33846 + 32 len mem[_33846]])
                                mem[_33845 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_33845 + 105] = factoryAddress
                                mem[_33845 + 125] = _33848
                                mem[_33845 + 157] = sub_acaed29c[stor3]
                                mem[_33845 + 72] = 85
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if address(_31839) == address(_31884):
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_33845 + 292 len 29]
                                if address(_31839) < address(_31884):
                                    if not address(_31839):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_33845 + 221] = address(_31839)
                                    mem[_33845 + 241] = address(_31884)
                                    mem[_33845 + 189] = 40
                                    mem[_33845 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33845 + 294] = factoryAddress
                                    mem[_33845 + 314] = sha3(address(_31839), address(_31884))
                                    mem[_33845 + 346] = sub_acaed29c[stor3]
                                    mem[_33845 + 261] = 85
                                    mem[_33845 + 378] = 0
                                    mem[64] = _33845 + 410
                                    mem[_33845 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_33845 + 414] = 0
                                    mem[_33845 + 446] = _32095
                                    mem[_33845 + 478] = address(sha3(0, factoryAddress, _33848, sub_acaed29c[stor3]))
                                    mem[_33845 + 510] = 128
                                    mem[_33845 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_33845 + s + 574] = mem[_33845 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31839), address(_31884)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31839), address(_31884)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32095, address(sha3(0, factoryAddress, _33848, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not address(_31884):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_33845 + 221] = address(_31884)
                                    mem[_33845 + 241] = address(_31839)
                                    mem[_33845 + 189] = 40
                                    mem[_33845 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33845 + 294] = factoryAddress
                                    mem[_33845 + 314] = sha3(address(_31884), address(_31839))
                                    mem[_33845 + 346] = sub_acaed29c[stor3]
                                    mem[_33845 + 261] = 85
                                    mem[_33845 + 378] = 0
                                    mem[64] = _33845 + 410
                                    mem[_33845 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_33845 + 414] = 0
                                    mem[_33845 + 446] = _32095
                                    mem[_33845 + 478] = address(sha3(0, factoryAddress, _33848, sub_acaed29c[stor3]))
                                    mem[_33845 + 510] = 128
                                    mem[_33845 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_33845 + s + 574] = mem[_33845 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31884), address(_31839)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31884), address(_31839)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32095, address(sha3(0, factoryAddress, _33848, sub_acaed29c[stor3])), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _11169 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _33853 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11169 + 353])
                                mem[mem[64] + 52] = address(_31884)
                                _33854 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _33856 = sha3(mem[_33854 + 32 len mem[_33854]])
                                mem[_33853 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_33853 + 105] = factoryAddress
                                mem[_33853 + 125] = _33856
                                mem[_33853 + 157] = sub_acaed29c[stor3]
                                mem[_33853 + 72] = 85
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if address(_31839) == address(_31884):
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_33853 + 292 len 29]
                                if address(_31839) < address(_31884):
                                    if not address(_31839):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_33853 + 221] = address(_31839)
                                    mem[_33853 + 241] = address(_31884)
                                    mem[_33853 + 189] = 40
                                    mem[_33853 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33853 + 294] = factoryAddress
                                    mem[_33853 + 314] = sha3(address(_31839), address(_31884))
                                    mem[_33853 + 346] = sub_acaed29c[stor3]
                                    mem[_33853 + 261] = 85
                                    mem[_33853 + 378] = 0
                                    mem[64] = _33853 + 410
                                    mem[_33853 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_33853 + 414] = 0
                                    mem[_33853 + 446] = _32095
                                    mem[_33853 + 478] = address(sha3(0, factoryAddress, _33856, sub_acaed29c[stor3]))
                                    mem[_33853 + 510] = 128
                                    mem[_33853 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_33853 + s + 574] = mem[_33853 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31839), address(_31884)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31839), address(_31884)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32095, address(sha3(0, factoryAddress, _33856, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not address(_31884):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_33853 + 221] = address(_31884)
                                    mem[_33853 + 241] = address(_31839)
                                    mem[_33853 + 189] = 40
                                    mem[_33853 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33853 + 294] = factoryAddress
                                    mem[_33853 + 314] = sha3(address(_31884), address(_31839))
                                    mem[_33853 + 346] = sub_acaed29c[stor3]
                                    mem[_33853 + 261] = 85
                                    mem[_33853 + 378] = 0
                                    mem[64] = _33853 + 410
                                    mem[_33853 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_33853 + 414] = 0
                                    mem[_33853 + 446] = _32095
                                    mem[_33853 + 478] = address(sha3(0, factoryAddress, _33856, sub_acaed29c[stor3]))
                                    mem[_33853 + 510] = 128
                                    mem[_33853 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_33853 + s + 574] = mem[_33853 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31884), address(_31839)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31884), address(_31839)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32095, address(sha3(0, factoryAddress, _33856, sub_acaed29c[stor3])), 128, 0
                    else:
                        if idx >= mem[_11169 + 321] - 2:
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if mem[(32 * idx) + _11169 + 365 len 20] == mem[(32 * idx + 1) + _11169 + 365 len 20]:
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx) + _11169 + 365 len 20] < mem[(32 * idx + 1) + _11169 + 365 len 20]:
                                if not mem[(32 * idx) + _11169 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _33893 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _11169 + 353])
                                mem[mem[64] + 52] = address(_31884)
                                _33894 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _33896 = sha3(mem[_33894 + 32 len mem[_33894]])
                                mem[_33893 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_33893 + 105] = factoryAddress
                                mem[_33893 + 125] = _33896
                                mem[_33893 + 157] = sub_acaed29c[stor3]
                                mem[_33893 + 72] = 85
                                mem[_33893 + 189] = 0
                                mem[64] = _33893 + 221
                                mem[_33893 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_33893 + 225] = _32095
                                mem[_33893 + 257] = 0
                                mem[_33893 + 289] = address(cd[4])
                                mem[_33893 + 321] = 128
                                mem[_33893 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[_33893 + s + 385] = mem[_33893 + s + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _33896, sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, _33896, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _32095, 0, address(cd[4]), 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _11169 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _33901 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11169 + 353])
                                mem[mem[64] + 52] = address(_31839)
                                _33902 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _33904 = sha3(mem[_33902 + 32 len mem[_33902]])
                                mem[_33901 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_33901 + 105] = factoryAddress
                                mem[_33901 + 125] = _33904
                                mem[_33901 + 157] = sub_acaed29c[stor3]
                                mem[_33901 + 72] = 85
                                mem[_33901 + 189] = 0
                                mem[64] = _33901 + 221
                                mem[_33901 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_33901 + 225] = _32095
                                mem[_33901 + 257] = 0
                                mem[_33901 + 289] = address(cd[4])
                                mem[_33901 + 321] = 128
                                mem[_33901 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[_33901 + s + 385] = mem[_33901 + s + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _33904, sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, _33904, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _32095, 0, address(cd[4]), 128, 0
                        else:
                            require idx + 2 < mem[_11169 + 321]
                            _32308 = mem[(32 * idx + 2) + _11169 + 353]
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if mem[(32 * idx + 1) + _11169 + 365 len 20] == mem[(32 * idx + 2) + _11169 + 365 len 20]:
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx + 1) + _11169 + 365 len 20] < mem[(32 * idx + 2) + _11169 + 365 len 20]:
                                if not mem[(32 * idx + 1) + _11169 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _33877 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11169 + 353])
                                mem[mem[64] + 52] = address(_32308)
                                _33878 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _33880 = sha3(mem[_33878 + 32 len mem[_33878]])
                                mem[_33877 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_33877 + 105] = factoryAddress
                                mem[_33877 + 125] = _33880
                                mem[_33877 + 157] = sub_acaed29c[stor3]
                                mem[_33877 + 72] = 85
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if address(_31839) == address(_31884):
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_33877 + 292 len 29]
                                if address(_31839) < address(_31884):
                                    if not address(_31839):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_33877 + 221] = address(_31839)
                                    mem[_33877 + 241] = address(_31884)
                                    mem[_33877 + 189] = 40
                                    mem[_33877 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33877 + 294] = factoryAddress
                                    mem[_33877 + 314] = sha3(address(_31839), address(_31884))
                                    mem[_33877 + 346] = sub_acaed29c[stor3]
                                    mem[_33877 + 261] = 85
                                    mem[_33877 + 378] = 0
                                    mem[64] = _33877 + 410
                                    mem[_33877 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_33877 + 414] = _32095
                                    mem[_33877 + 446] = 0
                                    mem[_33877 + 478] = address(sha3(0, factoryAddress, _33880, sub_acaed29c[stor3]))
                                    mem[_33877 + 510] = 128
                                    mem[_33877 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_33877 + s + 574] = mem[_33877 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31839), address(_31884)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31839), address(_31884)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32095, 0, address(sha3(0, factoryAddress, _33880, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not address(_31884):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_33877 + 221] = address(_31884)
                                    mem[_33877 + 241] = address(_31839)
                                    mem[_33877 + 189] = 40
                                    mem[_33877 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33877 + 294] = factoryAddress
                                    mem[_33877 + 314] = sha3(address(_31884), address(_31839))
                                    mem[_33877 + 346] = sub_acaed29c[stor3]
                                    mem[_33877 + 261] = 85
                                    mem[_33877 + 378] = 0
                                    mem[64] = _33877 + 410
                                    mem[_33877 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_33877 + 414] = _32095
                                    mem[_33877 + 446] = 0
                                    mem[_33877 + 478] = address(sha3(0, factoryAddress, _33880, sub_acaed29c[stor3]))
                                    mem[_33877 + 510] = 128
                                    mem[_33877 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_33877 + s + 574] = mem[_33877 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31884), address(_31839)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31884), address(_31839)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32095, 0, address(sha3(0, factoryAddress, _33880, sub_acaed29c[stor3])), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _11169 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _33885 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11169 + 353])
                                mem[mem[64] + 52] = address(_31884)
                                _33886 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _33888 = sha3(mem[_33886 + 32 len mem[_33886]])
                                mem[_33885 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_33885 + 105] = factoryAddress
                                mem[_33885 + 125] = _33888
                                mem[_33885 + 157] = sub_acaed29c[stor3]
                                mem[_33885 + 72] = 85
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if address(_31839) == address(_31884):
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_33885 + 292 len 29]
                                if address(_31839) < address(_31884):
                                    if not address(_31839):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_33885 + 221] = address(_31839)
                                    mem[_33885 + 241] = address(_31884)
                                    mem[_33885 + 189] = 40
                                    mem[_33885 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33885 + 294] = factoryAddress
                                    mem[_33885 + 314] = sha3(address(_31839), address(_31884))
                                    mem[_33885 + 346] = sub_acaed29c[stor3]
                                    mem[_33885 + 261] = 85
                                    mem[_33885 + 378] = 0
                                    mem[64] = _33885 + 410
                                    mem[_33885 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_33885 + 414] = _32095
                                    mem[_33885 + 446] = 0
                                    mem[_33885 + 478] = address(sha3(0, factoryAddress, _33888, sub_acaed29c[stor3]))
                                    mem[_33885 + 510] = 128
                                    mem[_33885 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_33885 + s + 574] = mem[_33885 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31839), address(_31884)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31839), address(_31884)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32095, 0, address(sha3(0, factoryAddress, _33888, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not address(_31884):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_33885 + 221] = address(_31884)
                                    mem[_33885 + 241] = address(_31839)
                                    mem[_33885 + 189] = 40
                                    mem[_33885 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33885 + 294] = factoryAddress
                                    mem[_33885 + 314] = sha3(address(_31884), address(_31839))
                                    mem[_33885 + 346] = sub_acaed29c[stor3]
                                    mem[_33885 + 261] = 85
                                    mem[_33885 + 378] = 0
                                    mem[64] = _33885 + 410
                                    mem[_33885 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_33885 + 414] = _32095
                                    mem[_33885 + 446] = 0
                                    mem[_33885 + 478] = address(sha3(0, factoryAddress, _33888, sub_acaed29c[stor3]))
                                    mem[_33885 + 510] = 128
                                    mem[_33885 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_33885 + s + 574] = mem[_33885 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31884), address(_31839)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31884), address(_31839)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32095, 0, address(sha3(0, factoryAddress, _33888, sub_acaed29c[stor3])), 128, 0
                else:
                    if not mem[(32 * idx + 1) + _11169 + 365 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                    _32096 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                    if mem[(32 * idx) + _11169 + 365 len 20] == mem[(32 * idx + 1) + _11169 + 365 len 20]:
                        if idx >= mem[_11169 + 321] - 2:
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if mem[(32 * idx) + _11169 + 365 len 20] == mem[(32 * idx + 1) + _11169 + 365 len 20]:
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx) + _11169 + 365 len 20] < mem[(32 * idx + 1) + _11169 + 365 len 20]:
                                if not mem[(32 * idx) + _11169 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _33925 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _11169 + 353])
                                mem[mem[64] + 52] = address(_31884)
                                _33926 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _33928 = sha3(mem[_33926 + 32 len mem[_33926]])
                                mem[_33925 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_33925 + 105] = factoryAddress
                                mem[_33925 + 125] = _33928
                                mem[_33925 + 157] = sub_acaed29c[stor3]
                                mem[_33925 + 72] = 85
                                mem[_33925 + 189] = 0
                                mem[64] = _33925 + 221
                                mem[_33925 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_33925 + 225] = 0
                                mem[_33925 + 257] = _32096
                                mem[_33925 + 289] = address(cd[4])
                                mem[_33925 + 321] = 128
                                mem[_33925 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[_33925 + s + 385] = mem[_33925 + s + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _33928, sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, _33928, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _32096, address(cd[4]), 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _11169 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _33933 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11169 + 353])
                                mem[mem[64] + 52] = address(_31839)
                                _33934 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _33936 = sha3(mem[_33934 + 32 len mem[_33934]])
                                mem[_33933 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_33933 + 105] = factoryAddress
                                mem[_33933 + 125] = _33936
                                mem[_33933 + 157] = sub_acaed29c[stor3]
                                mem[_33933 + 72] = 85
                                mem[_33933 + 189] = 0
                                mem[64] = _33933 + 221
                                mem[_33933 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_33933 + 225] = 0
                                mem[_33933 + 257] = _32096
                                mem[_33933 + 289] = address(cd[4])
                                mem[_33933 + 321] = 128
                                mem[_33933 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[_33933 + s + 385] = mem[_33933 + s + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _33936, sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, _33936, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _32096, address(cd[4]), 128, 0
                        else:
                            require idx + 2 < mem[_11169 + 321]
                            _32311 = mem[(32 * idx + 2) + _11169 + 353]
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if mem[(32 * idx + 1) + _11169 + 365 len 20] == mem[(32 * idx + 2) + _11169 + 365 len 20]:
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx + 1) + _11169 + 365 len 20] < mem[(32 * idx + 2) + _11169 + 365 len 20]:
                                if not mem[(32 * idx + 1) + _11169 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _33909 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11169 + 353])
                                mem[mem[64] + 52] = address(_32311)
                                _33910 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _33912 = sha3(mem[_33910 + 32 len mem[_33910]])
                                mem[_33909 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_33909 + 105] = factoryAddress
                                mem[_33909 + 125] = _33912
                                mem[_33909 + 157] = sub_acaed29c[stor3]
                                mem[_33909 + 72] = 85
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if address(_31839) == address(_31884):
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_33909 + 292 len 29]
                                if address(_31839) < address(_31884):
                                    if not address(_31839):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_33909 + 221] = address(_31839)
                                    mem[_33909 + 241] = address(_31884)
                                    mem[_33909 + 189] = 40
                                    mem[_33909 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33909 + 294] = factoryAddress
                                    mem[_33909 + 314] = sha3(address(_31839), address(_31884))
                                    mem[_33909 + 346] = sub_acaed29c[stor3]
                                    mem[_33909 + 261] = 85
                                    mem[_33909 + 378] = 0
                                    mem[64] = _33909 + 410
                                    mem[_33909 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_33909 + 414] = 0
                                    mem[_33909 + 446] = _32096
                                    mem[_33909 + 478] = address(sha3(0, factoryAddress, _33912, sub_acaed29c[stor3]))
                                    mem[_33909 + 510] = 128
                                    mem[_33909 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_33909 + s + 574] = mem[_33909 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31839), address(_31884)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31839), address(_31884)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32096, address(sha3(0, factoryAddress, _33912, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not address(_31884):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_33909 + 221] = address(_31884)
                                    mem[_33909 + 241] = address(_31839)
                                    mem[_33909 + 189] = 40
                                    mem[_33909 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33909 + 294] = factoryAddress
                                    mem[_33909 + 314] = sha3(address(_31884), address(_31839))
                                    mem[_33909 + 346] = sub_acaed29c[stor3]
                                    mem[_33909 + 261] = 85
                                    mem[_33909 + 378] = 0
                                    mem[64] = _33909 + 410
                                    mem[_33909 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_33909 + 414] = 0
                                    mem[_33909 + 446] = _32096
                                    mem[_33909 + 478] = address(sha3(0, factoryAddress, _33912, sub_acaed29c[stor3]))
                                    mem[_33909 + 510] = 128
                                    mem[_33909 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_33909 + s + 574] = mem[_33909 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31884), address(_31839)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31884), address(_31839)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32096, address(sha3(0, factoryAddress, _33912, sub_acaed29c[stor3])), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _11169 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _33917 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11169 + 353])
                                mem[mem[64] + 52] = address(_31884)
                                _33918 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _33920 = sha3(mem[_33918 + 32 len mem[_33918]])
                                mem[_33917 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_33917 + 105] = factoryAddress
                                mem[_33917 + 125] = _33920
                                mem[_33917 + 157] = sub_acaed29c[stor3]
                                mem[_33917 + 72] = 85
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if address(_31839) == address(_31884):
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_33917 + 292 len 29]
                                if address(_31839) < address(_31884):
                                    if not address(_31839):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_33917 + 221] = address(_31839)
                                    mem[_33917 + 241] = address(_31884)
                                    mem[_33917 + 189] = 40
                                    mem[_33917 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33917 + 294] = factoryAddress
                                    mem[_33917 + 314] = sha3(address(_31839), address(_31884))
                                    mem[_33917 + 346] = sub_acaed29c[stor3]
                                    mem[_33917 + 261] = 85
                                    mem[_33917 + 378] = 0
                                    mem[64] = _33917 + 410
                                    mem[_33917 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_33917 + 414] = 0
                                    mem[_33917 + 446] = _32096
                                    mem[_33917 + 478] = address(sha3(0, factoryAddress, _33920, sub_acaed29c[stor3]))
                                    mem[_33917 + 510] = 128
                                    mem[_33917 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_33917 + s + 574] = mem[_33917 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31839), address(_31884)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31839), address(_31884)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32096, address(sha3(0, factoryAddress, _33920, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not address(_31884):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_33917 + 221] = address(_31884)
                                    mem[_33917 + 241] = address(_31839)
                                    mem[_33917 + 189] = 40
                                    mem[_33917 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33917 + 294] = factoryAddress
                                    mem[_33917 + 314] = sha3(address(_31884), address(_31839))
                                    mem[_33917 + 346] = sub_acaed29c[stor3]
                                    mem[_33917 + 261] = 85
                                    mem[_33917 + 378] = 0
                                    mem[64] = _33917 + 410
                                    mem[_33917 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_33917 + 414] = 0
                                    mem[_33917 + 446] = _32096
                                    mem[_33917 + 478] = address(sha3(0, factoryAddress, _33920, sub_acaed29c[stor3]))
                                    mem[_33917 + 510] = 128
                                    mem[_33917 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_33917 + s + 574] = mem[_33917 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31884), address(_31839)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31884), address(_31839)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32096, address(sha3(0, factoryAddress, _33920, sub_acaed29c[stor3])), 128, 0
                    else:
                        if idx >= mem[_11169 + 321] - 2:
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if mem[(32 * idx) + _11169 + 365 len 20] == mem[(32 * idx + 1) + _11169 + 365 len 20]:
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx) + _11169 + 365 len 20] < mem[(32 * idx + 1) + _11169 + 365 len 20]:
                                if not mem[(32 * idx) + _11169 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _33957 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _11169 + 353])
                                mem[mem[64] + 52] = address(_31884)
                                _33958 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _33960 = sha3(mem[_33958 + 32 len mem[_33958]])
                                mem[_33957 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_33957 + 105] = factoryAddress
                                mem[_33957 + 125] = _33960
                                mem[_33957 + 157] = sub_acaed29c[stor3]
                                mem[_33957 + 72] = 85
                                mem[_33957 + 189] = 0
                                mem[64] = _33957 + 221
                                mem[_33957 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_33957 + 225] = _32096
                                mem[_33957 + 257] = 0
                                mem[_33957 + 289] = address(cd[4])
                                mem[_33957 + 321] = 128
                                mem[_33957 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[_33957 + s + 385] = mem[_33957 + s + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _33960, sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, _33960, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _32096, 0, address(cd[4]), 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _11169 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _33965 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11169 + 353])
                                mem[mem[64] + 52] = address(_31839)
                                _33966 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _33968 = sha3(mem[_33966 + 32 len mem[_33966]])
                                mem[_33965 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_33965 + 105] = factoryAddress
                                mem[_33965 + 125] = _33968
                                mem[_33965 + 157] = sub_acaed29c[stor3]
                                mem[_33965 + 72] = 85
                                mem[_33965 + 189] = 0
                                mem[64] = _33965 + 221
                                mem[_33965 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_33965 + 225] = _32096
                                mem[_33965 + 257] = 0
                                mem[_33965 + 289] = address(cd[4])
                                mem[_33965 + 321] = 128
                                mem[_33965 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[_33965 + s + 385] = mem[_33965 + s + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _33968, sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, _33968, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _32096, 0, address(cd[4]), 128, 0
                        else:
                            require idx + 2 < mem[_11169 + 321]
                            _32314 = mem[(32 * idx + 2) + _11169 + 353]
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if mem[(32 * idx + 1) + _11169 + 365 len 20] == mem[(32 * idx + 2) + _11169 + 365 len 20]:
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx + 1) + _11169 + 365 len 20] < mem[(32 * idx + 2) + _11169 + 365 len 20]:
                                if not mem[(32 * idx + 1) + _11169 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _33941 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11169 + 353])
                                mem[mem[64] + 52] = address(_32314)
                                _33942 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _33944 = sha3(mem[_33942 + 32 len mem[_33942]])
                                mem[_33941 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_33941 + 105] = factoryAddress
                                mem[_33941 + 125] = _33944
                                mem[_33941 + 157] = sub_acaed29c[stor3]
                                mem[_33941 + 72] = 85
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if address(_31839) == address(_31884):
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_33941 + 292 len 29]
                                if address(_31839) < address(_31884):
                                    if not address(_31839):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_33941 + 221] = address(_31839)
                                    mem[_33941 + 241] = address(_31884)
                                    mem[_33941 + 189] = 40
                                    mem[_33941 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33941 + 294] = factoryAddress
                                    mem[_33941 + 314] = sha3(address(_31839), address(_31884))
                                    mem[_33941 + 346] = sub_acaed29c[stor3]
                                    mem[_33941 + 261] = 85
                                    mem[_33941 + 378] = 0
                                    mem[64] = _33941 + 410
                                    mem[_33941 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_33941 + 414] = _32096
                                    mem[_33941 + 446] = 0
                                    mem[_33941 + 478] = address(sha3(0, factoryAddress, _33944, sub_acaed29c[stor3]))
                                    mem[_33941 + 510] = 128
                                    mem[_33941 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_33941 + s + 574] = mem[_33941 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31839), address(_31884)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31839), address(_31884)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32096, 0, address(sha3(0, factoryAddress, _33944, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not address(_31884):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_33941 + 221] = address(_31884)
                                    mem[_33941 + 241] = address(_31839)
                                    mem[_33941 + 189] = 40
                                    mem[_33941 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33941 + 294] = factoryAddress
                                    mem[_33941 + 314] = sha3(address(_31884), address(_31839))
                                    mem[_33941 + 346] = sub_acaed29c[stor3]
                                    mem[_33941 + 261] = 85
                                    mem[_33941 + 378] = 0
                                    mem[64] = _33941 + 410
                                    mem[_33941 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_33941 + 414] = _32096
                                    mem[_33941 + 446] = 0
                                    mem[_33941 + 478] = address(sha3(0, factoryAddress, _33944, sub_acaed29c[stor3]))
                                    mem[_33941 + 510] = 128
                                    mem[_33941 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_33941 + s + 574] = mem[_33941 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31884), address(_31839)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31884), address(_31839)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32096, 0, address(sha3(0, factoryAddress, _33944, sub_acaed29c[stor3])), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _11169 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _33949 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11169 + 353])
                                mem[mem[64] + 52] = address(_31884)
                                _33950 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _33952 = sha3(mem[_33950 + 32 len mem[_33950]])
                                mem[_33949 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_33949 + 105] = factoryAddress
                                mem[_33949 + 125] = _33952
                                mem[_33949 + 157] = sub_acaed29c[stor3]
                                mem[_33949 + 72] = 85
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if address(_31839) == address(_31884):
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_33949 + 292 len 29]
                                if address(_31839) < address(_31884):
                                    if not address(_31839):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_33949 + 221] = address(_31839)
                                    mem[_33949 + 241] = address(_31884)
                                    mem[_33949 + 189] = 40
                                    mem[_33949 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33949 + 294] = factoryAddress
                                    mem[_33949 + 314] = sha3(address(_31839), address(_31884))
                                    mem[_33949 + 346] = sub_acaed29c[stor3]
                                    mem[_33949 + 261] = 85
                                    mem[_33949 + 378] = 0
                                    mem[64] = _33949 + 410
                                    mem[_33949 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_33949 + 414] = _32096
                                    mem[_33949 + 446] = 0
                                    mem[_33949 + 478] = address(sha3(0, factoryAddress, _33952, sub_acaed29c[stor3]))
                                    mem[_33949 + 510] = 128
                                    mem[_33949 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_33949 + s + 574] = mem[_33949 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31839), address(_31884)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31839), address(_31884)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32096, 0, address(sha3(0, factoryAddress, _33952, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not address(_31884):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_33949 + 221] = address(_31884)
                                    mem[_33949 + 241] = address(_31839)
                                    mem[_33949 + 189] = 40
                                    mem[_33949 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33949 + 294] = factoryAddress
                                    mem[_33949 + 314] = sha3(address(_31884), address(_31839))
                                    mem[_33949 + 346] = sub_acaed29c[stor3]
                                    mem[_33949 + 261] = 85
                                    mem[_33949 + 378] = 0
                                    mem[64] = _33949 + 410
                                    mem[_33949 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_33949 + 414] = _32096
                                    mem[_33949 + 446] = 0
                                    mem[_33949 + 478] = address(sha3(0, factoryAddress, _33952, sub_acaed29c[stor3]))
                                    mem[_33949 + 510] = 128
                                    mem[_33949 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_33949 + s + 574] = mem[_33949 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31884), address(_31839)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31884), address(_31839)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32096, 0, address(sha3(0, factoryAddress, _33952, sub_acaed29c[stor3])), 128, 0
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                idx = idx + 1
                continue 
            mem[mem[64]] = 32
            mem[mem[64] + 32] = mem[(32 * ('cd', 36).length) + 128]
            _31883 = mem[(32 * ('cd', 36).length) + 128]
            mem[mem[64] + 64 len floor32(mem[(32 * ('cd', 36).length) + 128])] = mem[(32 * ('cd', 36).length) + 160 len floor32(mem[(32 * ('cd', 36).length) + 128])]
            return 32, mem[mem[64] + 32 len (32 * _31883) + 32]
        mem[_11169 + 321] = return_data.size
        mem[_11169 + 353 len return_data.size] = ext_call.return_data[0 len return_data.size]
        if not ext_call.success:
            revert with 0, 
                        32,
                        49,
                        0x545472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472616e7366657246726f6d206661696c65,
                        mem[_11169 + ceil32(return_data.size) + 439 len 15]
        if not return_data.size:
            mem[64] = _11169 + ceil32(return_data.size) + (32 * ('cd', 36).length) + 354
            mem[_11169 + ceil32(return_data.size) + 322] = ('cd', 36).length
            mem[_11169 + ceil32(return_data.size) + 354 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
            mem[_11169 + ceil32(return_data.size) + (32 * ('cd', 36).length) + 354] = 0
            idx = 0
            while idx < ('cd', 36).length - 1:
                require idx < mem[_11169 + ceil32(return_data.size) + 322]
                _31841 = mem[(32 * idx) + _11169 + ceil32(return_data.size) + 354]
                require idx + 1 < mem[_11169 + ceil32(return_data.size) + 322]
                _31888 = mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 354]
                if mem[(32 * idx) + _11169 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 366 len 20]:
                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                if mem[(32 * idx) + _11169 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 366 len 20]:
                    if not mem[(32 * idx) + _11169 + ceil32(return_data.size) + 366 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                    _32097 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                    if mem[(32 * idx) + _11169 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx) + _11169 + ceil32(return_data.size) + 366 len 20]:
                        if idx >= mem[_11169 + ceil32(return_data.size) + 322] - 2:
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if mem[(32 * idx) + _11169 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx) + _11169 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 366 len 20]:
                                if not mem[(32 * idx) + _11169 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _33989 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _11169 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_31888)
                                _33990 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _33992 = sha3(mem[_33990 + 32 len mem[_33990]])
                                mem[_33989 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_33989 + 105] = factoryAddress
                                mem[_33989 + 125] = _33992
                                mem[_33989 + 157] = sub_acaed29c[stor3]
                                mem[_33989 + 72] = 85
                                mem[_33989 + 189] = 0
                                mem[64] = _33989 + 221
                                mem[_33989 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_33989 + 225] = 0
                                mem[_33989 + 257] = _32097
                                mem[_33989 + 289] = address(cd[4])
                                mem[_33989 + 321] = 128
                                mem[_33989 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[_33989 + s + 385] = mem[_33989 + s + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _33992, sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, _33992, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _32097, address(cd[4]), 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _33997 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_31841)
                                _33998 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _34000 = sha3(mem[_33998 + 32 len mem[_33998]])
                                mem[_33997 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_33997 + 105] = factoryAddress
                                mem[_33997 + 125] = _34000
                                mem[_33997 + 157] = sub_acaed29c[stor3]
                                mem[_33997 + 72] = 85
                                mem[_33997 + 189] = 0
                                mem[64] = _33997 + 221
                                mem[_33997 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_33997 + 225] = 0
                                mem[_33997 + 257] = _32097
                                mem[_33997 + 289] = address(cd[4])
                                mem[_33997 + 321] = 128
                                mem[_33997 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[_33997 + s + 385] = mem[_33997 + s + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _34000, sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, _34000, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _32097, address(cd[4]), 128, 0
                        else:
                            require idx + 2 < mem[_11169 + ceil32(return_data.size) + 322]
                            _32317 = mem[(32 * idx + 2) + _11169 + ceil32(return_data.size) + 354]
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _11169 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _11169 + ceil32(return_data.size) + 366 len 20]:
                                if not mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _33973 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_32317)
                                _33974 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _33976 = sha3(mem[_33974 + 32 len mem[_33974]])
                                mem[_33973 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_33973 + 105] = factoryAddress
                                mem[_33973 + 125] = _33976
                                mem[_33973 + 157] = sub_acaed29c[stor3]
                                mem[_33973 + 72] = 85
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if address(_31841) == address(_31888):
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_33973 + 292 len 29]
                                if address(_31841) < address(_31888):
                                    if not address(_31841):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_33973 + 221] = address(_31841)
                                    mem[_33973 + 241] = address(_31888)
                                    mem[_33973 + 189] = 40
                                    mem[_33973 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33973 + 294] = factoryAddress
                                    mem[_33973 + 314] = sha3(address(_31841), address(_31888))
                                    mem[_33973 + 346] = sub_acaed29c[stor3]
                                    mem[_33973 + 261] = 85
                                    mem[_33973 + 378] = 0
                                    mem[64] = _33973 + 410
                                    mem[_33973 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_33973 + 414] = 0
                                    mem[_33973 + 446] = _32097
                                    mem[_33973 + 478] = address(sha3(0, factoryAddress, _33976, sub_acaed29c[stor3]))
                                    mem[_33973 + 510] = 128
                                    mem[_33973 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_33973 + s + 574] = mem[_33973 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31841), address(_31888)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31841), address(_31888)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32097, address(sha3(0, factoryAddress, _33976, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not address(_31888):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_33973 + 221] = address(_31888)
                                    mem[_33973 + 241] = address(_31841)
                                    mem[_33973 + 189] = 40
                                    mem[_33973 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33973 + 294] = factoryAddress
                                    mem[_33973 + 314] = sha3(address(_31888), address(_31841))
                                    mem[_33973 + 346] = sub_acaed29c[stor3]
                                    mem[_33973 + 261] = 85
                                    mem[_33973 + 378] = 0
                                    mem[64] = _33973 + 410
                                    mem[_33973 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_33973 + 414] = 0
                                    mem[_33973 + 446] = _32097
                                    mem[_33973 + 478] = address(sha3(0, factoryAddress, _33976, sub_acaed29c[stor3]))
                                    mem[_33973 + 510] = 128
                                    mem[_33973 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_33973 + s + 574] = mem[_33973 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31888), address(_31841)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31888), address(_31841)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32097, address(sha3(0, factoryAddress, _33976, sub_acaed29c[stor3])), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _11169 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _33981 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11169 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_31888)
                                _33982 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _33984 = sha3(mem[_33982 + 32 len mem[_33982]])
                                mem[_33981 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_33981 + 105] = factoryAddress
                                mem[_33981 + 125] = _33984
                                mem[_33981 + 157] = sub_acaed29c[stor3]
                                mem[_33981 + 72] = 85
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if address(_31841) == address(_31888):
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_33981 + 292 len 29]
                                if address(_31841) < address(_31888):
                                    if not address(_31841):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_33981 + 221] = address(_31841)
                                    mem[_33981 + 241] = address(_31888)
                                    mem[_33981 + 189] = 40
                                    mem[_33981 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33981 + 294] = factoryAddress
                                    mem[_33981 + 314] = sha3(address(_31841), address(_31888))
                                    mem[_33981 + 346] = sub_acaed29c[stor3]
                                    mem[_33981 + 261] = 85
                                    mem[_33981 + 378] = 0
                                    mem[64] = _33981 + 410
                                    mem[_33981 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_33981 + 414] = 0
                                    mem[_33981 + 446] = _32097
                                    mem[_33981 + 478] = address(sha3(0, factoryAddress, _33984, sub_acaed29c[stor3]))
                                    mem[_33981 + 510] = 128
                                    mem[_33981 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_33981 + s + 574] = mem[_33981 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31841), address(_31888)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31841), address(_31888)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32097, address(sha3(0, factoryAddress, _33984, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not address(_31888):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_33981 + 221] = address(_31888)
                                    mem[_33981 + 241] = address(_31841)
                                    mem[_33981 + 189] = 40
                                    mem[_33981 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_33981 + 294] = factoryAddress
                                    mem[_33981 + 314] = sha3(address(_31888), address(_31841))
                                    mem[_33981 + 346] = sub_acaed29c[stor3]
                                    mem[_33981 + 261] = 85
                                    mem[_33981 + 378] = 0
                                    mem[64] = _33981 + 410
                                    mem[_33981 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_33981 + 414] = 0
                                    mem[_33981 + 446] = _32097
                                    mem[_33981 + 478] = address(sha3(0, factoryAddress, _33984, sub_acaed29c[stor3]))
                                    mem[_33981 + 510] = 128
                                    mem[_33981 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_33981 + s + 574] = mem[_33981 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31888), address(_31841)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31888), address(_31841)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32097, address(sha3(0, factoryAddress, _33984, sub_acaed29c[stor3])), 128, 0
                    else:
                        if idx >= mem[_11169 + ceil32(return_data.size) + 322] - 2:
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if mem[(32 * idx) + _11169 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx) + _11169 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 366 len 20]:
                                if not mem[(32 * idx) + _11169 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _34021 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _11169 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_31888)
                                _34022 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _34024 = sha3(mem[_34022 + 32 len mem[_34022]])
                                mem[_34021 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34021 + 105] = factoryAddress
                                mem[_34021 + 125] = _34024
                                mem[_34021 + 157] = sub_acaed29c[stor3]
                                mem[_34021 + 72] = 85
                                mem[_34021 + 189] = 0
                                mem[64] = _34021 + 221
                                mem[_34021 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34021 + 225] = _32097
                                mem[_34021 + 257] = 0
                                mem[_34021 + 289] = address(cd[4])
                                mem[_34021 + 321] = 128
                                mem[_34021 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[_34021 + s + 385] = mem[_34021 + s + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _34024, sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, _34024, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _32097, 0, address(cd[4]), 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _34029 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_31841)
                                _34030 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _34032 = sha3(mem[_34030 + 32 len mem[_34030]])
                                mem[_34029 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34029 + 105] = factoryAddress
                                mem[_34029 + 125] = _34032
                                mem[_34029 + 157] = sub_acaed29c[stor3]
                                mem[_34029 + 72] = 85
                                mem[_34029 + 189] = 0
                                mem[64] = _34029 + 221
                                mem[_34029 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34029 + 225] = _32097
                                mem[_34029 + 257] = 0
                                mem[_34029 + 289] = address(cd[4])
                                mem[_34029 + 321] = 128
                                mem[_34029 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[_34029 + s + 385] = mem[_34029 + s + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _34032, sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, _34032, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _32097, 0, address(cd[4]), 128, 0
                        else:
                            require idx + 2 < mem[_11169 + ceil32(return_data.size) + 322]
                            _32320 = mem[(32 * idx + 2) + _11169 + ceil32(return_data.size) + 354]
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _11169 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _11169 + ceil32(return_data.size) + 366 len 20]:
                                if not mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _34005 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_32320)
                                _34006 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _34008 = sha3(mem[_34006 + 32 len mem[_34006]])
                                mem[_34005 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34005 + 105] = factoryAddress
                                mem[_34005 + 125] = _34008
                                mem[_34005 + 157] = sub_acaed29c[stor3]
                                mem[_34005 + 72] = 85
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if address(_31841) == address(_31888):
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34005 + 292 len 29]
                                if address(_31841) < address(_31888):
                                    if not address(_31841):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_34005 + 221] = address(_31841)
                                    mem[_34005 + 241] = address(_31888)
                                    mem[_34005 + 189] = 40
                                    mem[_34005 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34005 + 294] = factoryAddress
                                    mem[_34005 + 314] = sha3(address(_31841), address(_31888))
                                    mem[_34005 + 346] = sub_acaed29c[stor3]
                                    mem[_34005 + 261] = 85
                                    mem[_34005 + 378] = 0
                                    mem[64] = _34005 + 410
                                    mem[_34005 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34005 + 414] = _32097
                                    mem[_34005 + 446] = 0
                                    mem[_34005 + 478] = address(sha3(0, factoryAddress, _34008, sub_acaed29c[stor3]))
                                    mem[_34005 + 510] = 128
                                    mem[_34005 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34005 + s + 574] = mem[_34005 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31841), address(_31888)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31841), address(_31888)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32097, 0, address(sha3(0, factoryAddress, _34008, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not address(_31888):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_34005 + 221] = address(_31888)
                                    mem[_34005 + 241] = address(_31841)
                                    mem[_34005 + 189] = 40
                                    mem[_34005 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34005 + 294] = factoryAddress
                                    mem[_34005 + 314] = sha3(address(_31888), address(_31841))
                                    mem[_34005 + 346] = sub_acaed29c[stor3]
                                    mem[_34005 + 261] = 85
                                    mem[_34005 + 378] = 0
                                    mem[64] = _34005 + 410
                                    mem[_34005 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34005 + 414] = _32097
                                    mem[_34005 + 446] = 0
                                    mem[_34005 + 478] = address(sha3(0, factoryAddress, _34008, sub_acaed29c[stor3]))
                                    mem[_34005 + 510] = 128
                                    mem[_34005 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34005 + s + 574] = mem[_34005 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31888), address(_31841)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31888), address(_31841)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32097, 0, address(sha3(0, factoryAddress, _34008, sub_acaed29c[stor3])), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _11169 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _34013 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11169 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_31888)
                                _34014 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _34016 = sha3(mem[_34014 + 32 len mem[_34014]])
                                mem[_34013 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34013 + 105] = factoryAddress
                                mem[_34013 + 125] = _34016
                                mem[_34013 + 157] = sub_acaed29c[stor3]
                                mem[_34013 + 72] = 85
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if address(_31841) == address(_31888):
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34013 + 292 len 29]
                                if address(_31841) < address(_31888):
                                    if not address(_31841):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_34013 + 221] = address(_31841)
                                    mem[_34013 + 241] = address(_31888)
                                    mem[_34013 + 189] = 40
                                    mem[_34013 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34013 + 294] = factoryAddress
                                    mem[_34013 + 314] = sha3(address(_31841), address(_31888))
                                    mem[_34013 + 346] = sub_acaed29c[stor3]
                                    mem[_34013 + 261] = 85
                                    mem[_34013 + 378] = 0
                                    mem[64] = _34013 + 410
                                    mem[_34013 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34013 + 414] = _32097
                                    mem[_34013 + 446] = 0
                                    mem[_34013 + 478] = address(sha3(0, factoryAddress, _34016, sub_acaed29c[stor3]))
                                    mem[_34013 + 510] = 128
                                    mem[_34013 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34013 + s + 574] = mem[_34013 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31841), address(_31888)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31841), address(_31888)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32097, 0, address(sha3(0, factoryAddress, _34016, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not address(_31888):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_34013 + 221] = address(_31888)
                                    mem[_34013 + 241] = address(_31841)
                                    mem[_34013 + 189] = 40
                                    mem[_34013 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34013 + 294] = factoryAddress
                                    mem[_34013 + 314] = sha3(address(_31888), address(_31841))
                                    mem[_34013 + 346] = sub_acaed29c[stor3]
                                    mem[_34013 + 261] = 85
                                    mem[_34013 + 378] = 0
                                    mem[64] = _34013 + 410
                                    mem[_34013 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34013 + 414] = _32097
                                    mem[_34013 + 446] = 0
                                    mem[_34013 + 478] = address(sha3(0, factoryAddress, _34016, sub_acaed29c[stor3]))
                                    mem[_34013 + 510] = 128
                                    mem[_34013 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34013 + s + 574] = mem[_34013 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31888), address(_31841)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31888), address(_31841)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32097, 0, address(sha3(0, factoryAddress, _34016, sub_acaed29c[stor3])), 128, 0
                else:
                    if not mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 366 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                    _32098 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                    if mem[(32 * idx) + _11169 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 366 len 20]:
                        if idx >= mem[_11169 + ceil32(return_data.size) + 322] - 2:
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if mem[(32 * idx) + _11169 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx) + _11169 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 366 len 20]:
                                if not mem[(32 * idx) + _11169 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _34053 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _11169 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_31888)
                                _34054 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _34056 = sha3(mem[_34054 + 32 len mem[_34054]])
                                mem[_34053 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34053 + 105] = factoryAddress
                                mem[_34053 + 125] = _34056
                                mem[_34053 + 157] = sub_acaed29c[stor3]
                                mem[_34053 + 72] = 85
                                mem[_34053 + 189] = 0
                                mem[64] = _34053 + 221
                                mem[_34053 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34053 + 225] = 0
                                mem[_34053 + 257] = _32098
                                mem[_34053 + 289] = address(cd[4])
                                mem[_34053 + 321] = 128
                                mem[_34053 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[_34053 + s + 385] = mem[_34053 + s + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _34056, sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, _34056, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _32098, address(cd[4]), 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _34061 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_31841)
                                _34062 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _34064 = sha3(mem[_34062 + 32 len mem[_34062]])
                                mem[_34061 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34061 + 105] = factoryAddress
                                mem[_34061 + 125] = _34064
                                mem[_34061 + 157] = sub_acaed29c[stor3]
                                mem[_34061 + 72] = 85
                                mem[_34061 + 189] = 0
                                mem[64] = _34061 + 221
                                mem[_34061 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34061 + 225] = 0
                                mem[_34061 + 257] = _32098
                                mem[_34061 + 289] = address(cd[4])
                                mem[_34061 + 321] = 128
                                mem[_34061 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[_34061 + s + 385] = mem[_34061 + s + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _34064, sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, _34064, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _32098, address(cd[4]), 128, 0
                        else:
                            require idx + 2 < mem[_11169 + ceil32(return_data.size) + 322]
                            _32323 = mem[(32 * idx + 2) + _11169 + ceil32(return_data.size) + 354]
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _11169 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _11169 + ceil32(return_data.size) + 366 len 20]:
                                if not mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _34037 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_32323)
                                _34038 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _34040 = sha3(mem[_34038 + 32 len mem[_34038]])
                                mem[_34037 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34037 + 105] = factoryAddress
                                mem[_34037 + 125] = _34040
                                mem[_34037 + 157] = sub_acaed29c[stor3]
                                mem[_34037 + 72] = 85
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if address(_31841) == address(_31888):
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34037 + 292 len 29]
                                if address(_31841) < address(_31888):
                                    if not address(_31841):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_34037 + 221] = address(_31841)
                                    mem[_34037 + 241] = address(_31888)
                                    mem[_34037 + 189] = 40
                                    mem[_34037 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34037 + 294] = factoryAddress
                                    mem[_34037 + 314] = sha3(address(_31841), address(_31888))
                                    mem[_34037 + 346] = sub_acaed29c[stor3]
                                    mem[_34037 + 261] = 85
                                    mem[_34037 + 378] = 0
                                    mem[64] = _34037 + 410
                                    mem[_34037 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34037 + 414] = 0
                                    mem[_34037 + 446] = _32098
                                    mem[_34037 + 478] = address(sha3(0, factoryAddress, _34040, sub_acaed29c[stor3]))
                                    mem[_34037 + 510] = 128
                                    mem[_34037 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34037 + s + 574] = mem[_34037 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31841), address(_31888)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31841), address(_31888)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32098, address(sha3(0, factoryAddress, _34040, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not address(_31888):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_34037 + 221] = address(_31888)
                                    mem[_34037 + 241] = address(_31841)
                                    mem[_34037 + 189] = 40
                                    mem[_34037 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34037 + 294] = factoryAddress
                                    mem[_34037 + 314] = sha3(address(_31888), address(_31841))
                                    mem[_34037 + 346] = sub_acaed29c[stor3]
                                    mem[_34037 + 261] = 85
                                    mem[_34037 + 378] = 0
                                    mem[64] = _34037 + 410
                                    mem[_34037 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34037 + 414] = 0
                                    mem[_34037 + 446] = _32098
                                    mem[_34037 + 478] = address(sha3(0, factoryAddress, _34040, sub_acaed29c[stor3]))
                                    mem[_34037 + 510] = 128
                                    mem[_34037 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34037 + s + 574] = mem[_34037 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31888), address(_31841)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31888), address(_31841)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32098, address(sha3(0, factoryAddress, _34040, sub_acaed29c[stor3])), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _11169 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _34045 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11169 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_31888)
                                _34046 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _34048 = sha3(mem[_34046 + 32 len mem[_34046]])
                                mem[_34045 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34045 + 105] = factoryAddress
                                mem[_34045 + 125] = _34048
                                mem[_34045 + 157] = sub_acaed29c[stor3]
                                mem[_34045 + 72] = 85
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if address(_31841) == address(_31888):
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34045 + 292 len 29]
                                if address(_31841) < address(_31888):
                                    if not address(_31841):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_34045 + 221] = address(_31841)
                                    mem[_34045 + 241] = address(_31888)
                                    mem[_34045 + 189] = 40
                                    mem[_34045 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34045 + 294] = factoryAddress
                                    mem[_34045 + 314] = sha3(address(_31841), address(_31888))
                                    mem[_34045 + 346] = sub_acaed29c[stor3]
                                    mem[_34045 + 261] = 85
                                    mem[_34045 + 378] = 0
                                    mem[64] = _34045 + 410
                                    mem[_34045 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34045 + 414] = 0
                                    mem[_34045 + 446] = _32098
                                    mem[_34045 + 478] = address(sha3(0, factoryAddress, _34048, sub_acaed29c[stor3]))
                                    mem[_34045 + 510] = 128
                                    mem[_34045 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34045 + s + 574] = mem[_34045 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31841), address(_31888)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31841), address(_31888)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32098, address(sha3(0, factoryAddress, _34048, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not address(_31888):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_34045 + 221] = address(_31888)
                                    mem[_34045 + 241] = address(_31841)
                                    mem[_34045 + 189] = 40
                                    mem[_34045 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34045 + 294] = factoryAddress
                                    mem[_34045 + 314] = sha3(address(_31888), address(_31841))
                                    mem[_34045 + 346] = sub_acaed29c[stor3]
                                    mem[_34045 + 261] = 85
                                    mem[_34045 + 378] = 0
                                    mem[64] = _34045 + 410
                                    mem[_34045 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34045 + 414] = 0
                                    mem[_34045 + 446] = _32098
                                    mem[_34045 + 478] = address(sha3(0, factoryAddress, _34048, sub_acaed29c[stor3]))
                                    mem[_34045 + 510] = 128
                                    mem[_34045 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34045 + s + 574] = mem[_34045 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31888), address(_31841)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31888), address(_31841)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32098, address(sha3(0, factoryAddress, _34048, sub_acaed29c[stor3])), 128, 0
                    else:
                        if idx >= mem[_11169 + ceil32(return_data.size) + 322] - 2:
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if mem[(32 * idx) + _11169 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx) + _11169 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 366 len 20]:
                                if not mem[(32 * idx) + _11169 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _34085 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _11169 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_31888)
                                _34086 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _34088 = sha3(mem[_34086 + 32 len mem[_34086]])
                                mem[_34085 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34085 + 105] = factoryAddress
                                mem[_34085 + 125] = _34088
                                mem[_34085 + 157] = sub_acaed29c[stor3]
                                mem[_34085 + 72] = 85
                                mem[_34085 + 189] = 0
                                mem[64] = _34085 + 221
                                mem[_34085 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34085 + 225] = _32098
                                mem[_34085 + 257] = 0
                                mem[_34085 + 289] = address(cd[4])
                                mem[_34085 + 321] = 128
                                mem[_34085 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[_34085 + s + 385] = mem[_34085 + s + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _34088, sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, _34088, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _32098, 0, address(cd[4]), 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _34093 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_31841)
                                _34094 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _34096 = sha3(mem[_34094 + 32 len mem[_34094]])
                                mem[_34093 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34093 + 105] = factoryAddress
                                mem[_34093 + 125] = _34096
                                mem[_34093 + 157] = sub_acaed29c[stor3]
                                mem[_34093 + 72] = 85
                                mem[_34093 + 189] = 0
                                mem[64] = _34093 + 221
                                mem[_34093 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34093 + 225] = _32098
                                mem[_34093 + 257] = 0
                                mem[_34093 + 289] = address(cd[4])
                                mem[_34093 + 321] = 128
                                mem[_34093 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[_34093 + s + 385] = mem[_34093 + s + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _34096, sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, _34096, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _32098, 0, address(cd[4]), 128, 0
                        else:
                            require idx + 2 < mem[_11169 + ceil32(return_data.size) + 322]
                            _32326 = mem[(32 * idx + 2) + _11169 + ceil32(return_data.size) + 354]
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _11169 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _11169 + ceil32(return_data.size) + 366 len 20]:
                                if not mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _34069 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_32326)
                                _34070 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _34072 = sha3(mem[_34070 + 32 len mem[_34070]])
                                mem[_34069 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34069 + 105] = factoryAddress
                                mem[_34069 + 125] = _34072
                                mem[_34069 + 157] = sub_acaed29c[stor3]
                                mem[_34069 + 72] = 85
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if address(_31841) == address(_31888):
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34069 + 292 len 29]
                                if address(_31841) < address(_31888):
                                    if not address(_31841):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_34069 + 221] = address(_31841)
                                    mem[_34069 + 241] = address(_31888)
                                    mem[_34069 + 189] = 40
                                    mem[_34069 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34069 + 294] = factoryAddress
                                    mem[_34069 + 314] = sha3(address(_31841), address(_31888))
                                    mem[_34069 + 346] = sub_acaed29c[stor3]
                                    mem[_34069 + 261] = 85
                                    mem[_34069 + 378] = 0
                                    mem[64] = _34069 + 410
                                    mem[_34069 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34069 + 414] = _32098
                                    mem[_34069 + 446] = 0
                                    mem[_34069 + 478] = address(sha3(0, factoryAddress, _34072, sub_acaed29c[stor3]))
                                    mem[_34069 + 510] = 128
                                    mem[_34069 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34069 + s + 574] = mem[_34069 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31841), address(_31888)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31841), address(_31888)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32098, 0, address(sha3(0, factoryAddress, _34072, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not address(_31888):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_34069 + 221] = address(_31888)
                                    mem[_34069 + 241] = address(_31841)
                                    mem[_34069 + 189] = 40
                                    mem[_34069 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34069 + 294] = factoryAddress
                                    mem[_34069 + 314] = sha3(address(_31888), address(_31841))
                                    mem[_34069 + 346] = sub_acaed29c[stor3]
                                    mem[_34069 + 261] = 85
                                    mem[_34069 + 378] = 0
                                    mem[64] = _34069 + 410
                                    mem[_34069 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34069 + 414] = _32098
                                    mem[_34069 + 446] = 0
                                    mem[_34069 + 478] = address(sha3(0, factoryAddress, _34072, sub_acaed29c[stor3]))
                                    mem[_34069 + 510] = 128
                                    mem[_34069 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34069 + s + 574] = mem[_34069 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31888), address(_31841)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31888), address(_31841)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32098, 0, address(sha3(0, factoryAddress, _34072, sub_acaed29c[stor3])), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _11169 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _34077 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11169 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_31888)
                                _34078 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _34080 = sha3(mem[_34078 + 32 len mem[_34078]])
                                mem[_34077 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34077 + 105] = factoryAddress
                                mem[_34077 + 125] = _34080
                                mem[_34077 + 157] = sub_acaed29c[stor3]
                                mem[_34077 + 72] = 85
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if address(_31841) == address(_31888):
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34077 + 292 len 29]
                                if address(_31841) < address(_31888):
                                    if not address(_31841):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_34077 + 221] = address(_31841)
                                    mem[_34077 + 241] = address(_31888)
                                    mem[_34077 + 189] = 40
                                    mem[_34077 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34077 + 294] = factoryAddress
                                    mem[_34077 + 314] = sha3(address(_31841), address(_31888))
                                    mem[_34077 + 346] = sub_acaed29c[stor3]
                                    mem[_34077 + 261] = 85
                                    mem[_34077 + 378] = 0
                                    mem[64] = _34077 + 410
                                    mem[_34077 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34077 + 414] = _32098
                                    mem[_34077 + 446] = 0
                                    mem[_34077 + 478] = address(sha3(0, factoryAddress, _34080, sub_acaed29c[stor3]))
                                    mem[_34077 + 510] = 128
                                    mem[_34077 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34077 + s + 574] = mem[_34077 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31841), address(_31888)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31841), address(_31888)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32098, 0, address(sha3(0, factoryAddress, _34080, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not address(_31888):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_34077 + 221] = address(_31888)
                                    mem[_34077 + 241] = address(_31841)
                                    mem[_34077 + 189] = 40
                                    mem[_34077 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34077 + 294] = factoryAddress
                                    mem[_34077 + 314] = sha3(address(_31888), address(_31841))
                                    mem[_34077 + 346] = sub_acaed29c[stor3]
                                    mem[_34077 + 261] = 85
                                    mem[_34077 + 378] = 0
                                    mem[64] = _34077 + 410
                                    mem[_34077 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34077 + 414] = _32098
                                    mem[_34077 + 446] = 0
                                    mem[_34077 + 478] = address(sha3(0, factoryAddress, _34080, sub_acaed29c[stor3]))
                                    mem[_34077 + 510] = 128
                                    mem[_34077 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34077 + s + 574] = mem[_34077 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31888), address(_31841)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31888), address(_31841)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32098, 0, address(sha3(0, factoryAddress, _34080, sub_acaed29c[stor3])), 128, 0
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                idx = idx + 1
                continue 
            mem[mem[64]] = 32
            mem[mem[64] + 32] = mem[(32 * ('cd', 36).length) + 128]
            _31887 = mem[(32 * ('cd', 36).length) + 128]
            mem[mem[64] + 64 len floor32(mem[(32 * ('cd', 36).length) + 128])] = mem[(32 * ('cd', 36).length) + 160 len floor32(mem[(32 * ('cd', 36).length) + 128])]
            return 32, mem[mem[64] + 32 len (32 * _31887) + 32]
        require return_data.size >= 32
        if not mem[_11169 + 353]:
            revert with 0, 
                        32,
                        49,
                        0x545472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472616e7366657246726f6d206661696c65,
                        mem[_11169 + ceil32(return_data.size) + 439 len 15]
        mem[64] = _11169 + ceil32(return_data.size) + (32 * ('cd', 36).length) + 354
        mem[_11169 + ceil32(return_data.size) + 322] = ('cd', 36).length
        mem[_11169 + ceil32(return_data.size) + 354 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
        mem[_11169 + ceil32(return_data.size) + (32 * ('cd', 36).length) + 354] = 0
        idx = 0
        while idx < ('cd', 36).length - 1:
            require idx < mem[_11169 + ceil32(return_data.size) + 322]
            _31843 = mem[(32 * idx) + _11169 + ceil32(return_data.size) + 354]
            require idx + 1 < mem[_11169 + ceil32(return_data.size) + 322]
            _31892 = mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 354]
            if mem[(32 * idx) + _11169 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 366 len 20]:
                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
            if mem[(32 * idx) + _11169 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 366 len 20]:
                if not mem[(32 * idx) + _11169 + ceil32(return_data.size) + 366 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                _32099 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                if mem[(32 * idx) + _11169 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx) + _11169 + ceil32(return_data.size) + 366 len 20]:
                    if idx >= mem[_11169 + ceil32(return_data.size) + 322] - 2:
                        mem[0] = factoryAddress
                        mem[32] = 5
                        if mem[(32 * idx) + _11169 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _11169 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 366 len 20]:
                            if not mem[(32 * idx) + _11169 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _34117 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx) + _11169 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_31892)
                            _34118 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _34120 = sha3(mem[_34118 + 32 len mem[_34118]])
                            mem[_34117 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_34117 + 105] = factoryAddress
                            mem[_34117 + 125] = _34120
                            mem[_34117 + 157] = sub_acaed29c[stor3]
                            mem[_34117 + 72] = 85
                            mem[_34117 + 189] = 0
                            mem[64] = _34117 + 221
                            mem[_34117 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_34117 + 225] = 0
                            mem[_34117 + 257] = _32099
                            mem[_34117 + 289] = address(cd[4])
                            mem[_34117 + 321] = 128
                            mem[_34117 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[_34117 + s + 385] = mem[_34117 + s + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _34120, sub_acaed29c[stor3])))
                            call address(sha3(0, factoryAddress, _34120, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _32099, address(cd[4]), 128, 0
                        else:
                            if not mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _34125 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_31843)
                            _34126 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _34128 = sha3(mem[_34126 + 32 len mem[_34126]])
                            mem[_34125 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_34125 + 105] = factoryAddress
                            mem[_34125 + 125] = _34128
                            mem[_34125 + 157] = sub_acaed29c[stor3]
                            mem[_34125 + 72] = 85
                            mem[_34125 + 189] = 0
                            mem[64] = _34125 + 221
                            mem[_34125 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_34125 + 225] = 0
                            mem[_34125 + 257] = _32099
                            mem[_34125 + 289] = address(cd[4])
                            mem[_34125 + 321] = 128
                            mem[_34125 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[_34125 + s + 385] = mem[_34125 + s + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _34128, sub_acaed29c[stor3])))
                            call address(sha3(0, factoryAddress, _34128, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _32099, address(cd[4]), 128, 0
                    else:
                        require idx + 2 < mem[_11169 + ceil32(return_data.size) + 322]
                        _32329 = mem[(32 * idx + 2) + _11169 + ceil32(return_data.size) + 354]
                        mem[0] = factoryAddress
                        mem[32] = 5
                        if mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _11169 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _11169 + ceil32(return_data.size) + 366 len 20]:
                            if not mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _34101 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_32329)
                            _34102 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _34104 = sha3(mem[_34102 + 32 len mem[_34102]])
                            mem[_34101 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_34101 + 105] = factoryAddress
                            mem[_34101 + 125] = _34104
                            mem[_34101 + 157] = sub_acaed29c[stor3]
                            mem[_34101 + 72] = 85
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if address(_31843) == address(_31892):
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34101 + 292 len 29]
                            if address(_31843) < address(_31892):
                                if not address(_31843):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_34101 + 221] = address(_31843)
                                mem[_34101 + 241] = address(_31892)
                                mem[_34101 + 189] = 40
                                mem[_34101 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34101 + 294] = factoryAddress
                                mem[_34101 + 314] = sha3(address(_31843), address(_31892))
                                mem[_34101 + 346] = sub_acaed29c[stor3]
                                mem[_34101 + 261] = 85
                                mem[_34101 + 378] = 0
                                mem[64] = _34101 + 410
                                mem[_34101 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34101 + 414] = 0
                                mem[_34101 + 446] = _32099
                                mem[_34101 + 478] = address(sha3(0, factoryAddress, _34104, sub_acaed29c[stor3]))
                                mem[_34101 + 510] = 128
                                mem[_34101 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_34101 + s + 574] = mem[_34101 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31843), address(_31892)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31843), address(_31892)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _32099, address(sha3(0, factoryAddress, _34104, sub_acaed29c[stor3])), 128, 0
                            else:
                                if not address(_31892):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_34101 + 221] = address(_31892)
                                mem[_34101 + 241] = address(_31843)
                                mem[_34101 + 189] = 40
                                mem[_34101 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34101 + 294] = factoryAddress
                                mem[_34101 + 314] = sha3(address(_31892), address(_31843))
                                mem[_34101 + 346] = sub_acaed29c[stor3]
                                mem[_34101 + 261] = 85
                                mem[_34101 + 378] = 0
                                mem[64] = _34101 + 410
                                mem[_34101 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34101 + 414] = 0
                                mem[_34101 + 446] = _32099
                                mem[_34101 + 478] = address(sha3(0, factoryAddress, _34104, sub_acaed29c[stor3]))
                                mem[_34101 + 510] = 128
                                mem[_34101 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_34101 + s + 574] = mem[_34101 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31892), address(_31843)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31892), address(_31843)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _32099, address(sha3(0, factoryAddress, _34104, sub_acaed29c[stor3])), 128, 0
                        else:
                            if not mem[(32 * idx + 2) + _11169 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _34109 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11169 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_31892)
                            _34110 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _34112 = sha3(mem[_34110 + 32 len mem[_34110]])
                            mem[_34109 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_34109 + 105] = factoryAddress
                            mem[_34109 + 125] = _34112
                            mem[_34109 + 157] = sub_acaed29c[stor3]
                            mem[_34109 + 72] = 85
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if address(_31843) == address(_31892):
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34109 + 292 len 29]
                            if address(_31843) < address(_31892):
                                if not address(_31843):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_34109 + 221] = address(_31843)
                                mem[_34109 + 241] = address(_31892)
                                mem[_34109 + 189] = 40
                                mem[_34109 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34109 + 294] = factoryAddress
                                mem[_34109 + 314] = sha3(address(_31843), address(_31892))
                                mem[_34109 + 346] = sub_acaed29c[stor3]
                                mem[_34109 + 261] = 85
                                mem[_34109 + 378] = 0
                                mem[64] = _34109 + 410
                                mem[_34109 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34109 + 414] = 0
                                mem[_34109 + 446] = _32099
                                mem[_34109 + 478] = address(sha3(0, factoryAddress, _34112, sub_acaed29c[stor3]))
                                mem[_34109 + 510] = 128
                                mem[_34109 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_34109 + s + 574] = mem[_34109 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31843), address(_31892)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31843), address(_31892)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _32099, address(sha3(0, factoryAddress, _34112, sub_acaed29c[stor3])), 128, 0
                            else:
                                if not address(_31892):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_34109 + 221] = address(_31892)
                                mem[_34109 + 241] = address(_31843)
                                mem[_34109 + 189] = 40
                                mem[_34109 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34109 + 294] = factoryAddress
                                mem[_34109 + 314] = sha3(address(_31892), address(_31843))
                                mem[_34109 + 346] = sub_acaed29c[stor3]
                                mem[_34109 + 261] = 85
                                mem[_34109 + 378] = 0
                                mem[64] = _34109 + 410
                                mem[_34109 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34109 + 414] = 0
                                mem[_34109 + 446] = _32099
                                mem[_34109 + 478] = address(sha3(0, factoryAddress, _34112, sub_acaed29c[stor3]))
                                mem[_34109 + 510] = 128
                                mem[_34109 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_34109 + s + 574] = mem[_34109 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31892), address(_31843)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31892), address(_31843)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _32099, address(sha3(0, factoryAddress, _34112, sub_acaed29c[stor3])), 128, 0
                else:
                    if idx >= mem[_11169 + ceil32(return_data.size) + 322] - 2:
                        mem[0] = factoryAddress
                        mem[32] = 5
                        if mem[(32 * idx) + _11169 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _11169 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 366 len 20]:
                            if not mem[(32 * idx) + _11169 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _34149 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx) + _11169 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_31892)
                            _34150 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _34152 = sha3(mem[_34150 + 32 len mem[_34150]])
                            mem[_34149 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_34149 + 105] = factoryAddress
                            mem[_34149 + 125] = _34152
                            mem[_34149 + 157] = sub_acaed29c[stor3]
                            mem[_34149 + 72] = 85
                            mem[_34149 + 189] = 0
                            mem[64] = _34149 + 221
                            mem[_34149 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_34149 + 225] = _32099
                            mem[_34149 + 257] = 0
                            mem[_34149 + 289] = address(cd[4])
                            mem[_34149 + 321] = 128
                            mem[_34149 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[_34149 + s + 385] = mem[_34149 + s + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _34152, sub_acaed29c[stor3])))
                            call address(sha3(0, factoryAddress, _34152, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _32099, 0, address(cd[4]), 128, 0
                        else:
                            if not mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _34157 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_31843)
                            _34158 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _34160 = sha3(mem[_34158 + 32 len mem[_34158]])
                            mem[_34157 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_34157 + 105] = factoryAddress
                            mem[_34157 + 125] = _34160
                            mem[_34157 + 157] = sub_acaed29c[stor3]
                            mem[_34157 + 72] = 85
                            mem[_34157 + 189] = 0
                            mem[64] = _34157 + 221
                            mem[_34157 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_34157 + 225] = _32099
                            mem[_34157 + 257] = 0
                            mem[_34157 + 289] = address(cd[4])
                            mem[_34157 + 321] = 128
                            mem[_34157 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[_34157 + s + 385] = mem[_34157 + s + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _34160, sub_acaed29c[stor3])))
                            call address(sha3(0, factoryAddress, _34160, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _32099, 0, address(cd[4]), 128, 0
                    else:
                        require idx + 2 < mem[_11169 + ceil32(return_data.size) + 322]
                        _32332 = mem[(32 * idx + 2) + _11169 + ceil32(return_data.size) + 354]
                        mem[0] = factoryAddress
                        mem[32] = 5
                        if mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _11169 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _11169 + ceil32(return_data.size) + 366 len 20]:
                            if not mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _34133 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_32332)
                            _34134 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _34136 = sha3(mem[_34134 + 32 len mem[_34134]])
                            mem[_34133 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_34133 + 105] = factoryAddress
                            mem[_34133 + 125] = _34136
                            mem[_34133 + 157] = sub_acaed29c[stor3]
                            mem[_34133 + 72] = 85
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if address(_31843) == address(_31892):
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34133 + 292 len 29]
                            if address(_31843) < address(_31892):
                                if not address(_31843):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_34133 + 221] = address(_31843)
                                mem[_34133 + 241] = address(_31892)
                                mem[_34133 + 189] = 40
                                mem[_34133 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34133 + 294] = factoryAddress
                                mem[_34133 + 314] = sha3(address(_31843), address(_31892))
                                mem[_34133 + 346] = sub_acaed29c[stor3]
                                mem[_34133 + 261] = 85
                                mem[_34133 + 378] = 0
                                mem[64] = _34133 + 410
                                mem[_34133 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34133 + 414] = _32099
                                mem[_34133 + 446] = 0
                                mem[_34133 + 478] = address(sha3(0, factoryAddress, _34136, sub_acaed29c[stor3]))
                                mem[_34133 + 510] = 128
                                mem[_34133 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_34133 + s + 574] = mem[_34133 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31843), address(_31892)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31843), address(_31892)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _32099, 0, address(sha3(0, factoryAddress, _34136, sub_acaed29c[stor3])), 128, 0
                            else:
                                if not address(_31892):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_34133 + 221] = address(_31892)
                                mem[_34133 + 241] = address(_31843)
                                mem[_34133 + 189] = 40
                                mem[_34133 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34133 + 294] = factoryAddress
                                mem[_34133 + 314] = sha3(address(_31892), address(_31843))
                                mem[_34133 + 346] = sub_acaed29c[stor3]
                                mem[_34133 + 261] = 85
                                mem[_34133 + 378] = 0
                                mem[64] = _34133 + 410
                                mem[_34133 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34133 + 414] = _32099
                                mem[_34133 + 446] = 0
                                mem[_34133 + 478] = address(sha3(0, factoryAddress, _34136, sub_acaed29c[stor3]))
                                mem[_34133 + 510] = 128
                                mem[_34133 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_34133 + s + 574] = mem[_34133 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31892), address(_31843)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31892), address(_31843)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _32099, 0, address(sha3(0, factoryAddress, _34136, sub_acaed29c[stor3])), 128, 0
                        else:
                            if not mem[(32 * idx + 2) + _11169 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _34141 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11169 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_31892)
                            _34142 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _34144 = sha3(mem[_34142 + 32 len mem[_34142]])
                            mem[_34141 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_34141 + 105] = factoryAddress
                            mem[_34141 + 125] = _34144
                            mem[_34141 + 157] = sub_acaed29c[stor3]
                            mem[_34141 + 72] = 85
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if address(_31843) == address(_31892):
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34141 + 292 len 29]
                            if address(_31843) < address(_31892):
                                if not address(_31843):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_34141 + 221] = address(_31843)
                                mem[_34141 + 241] = address(_31892)
                                mem[_34141 + 189] = 40
                                mem[_34141 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34141 + 294] = factoryAddress
                                mem[_34141 + 314] = sha3(address(_31843), address(_31892))
                                mem[_34141 + 346] = sub_acaed29c[stor3]
                                mem[_34141 + 261] = 85
                                mem[_34141 + 378] = 0
                                mem[64] = _34141 + 410
                                mem[_34141 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34141 + 414] = _32099
                                mem[_34141 + 446] = 0
                                mem[_34141 + 478] = address(sha3(0, factoryAddress, _34144, sub_acaed29c[stor3]))
                                mem[_34141 + 510] = 128
                                mem[_34141 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_34141 + s + 574] = mem[_34141 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31843), address(_31892)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31843), address(_31892)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _32099, 0, address(sha3(0, factoryAddress, _34144, sub_acaed29c[stor3])), 128, 0
                            else:
                                if not address(_31892):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_34141 + 221] = address(_31892)
                                mem[_34141 + 241] = address(_31843)
                                mem[_34141 + 189] = 40
                                mem[_34141 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34141 + 294] = factoryAddress
                                mem[_34141 + 314] = sha3(address(_31892), address(_31843))
                                mem[_34141 + 346] = sub_acaed29c[stor3]
                                mem[_34141 + 261] = 85
                                mem[_34141 + 378] = 0
                                mem[64] = _34141 + 410
                                mem[_34141 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34141 + 414] = _32099
                                mem[_34141 + 446] = 0
                                mem[_34141 + 478] = address(sha3(0, factoryAddress, _34144, sub_acaed29c[stor3]))
                                mem[_34141 + 510] = 128
                                mem[_34141 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_34141 + s + 574] = mem[_34141 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31892), address(_31843)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31892), address(_31843)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _32099, 0, address(sha3(0, factoryAddress, _34144, sub_acaed29c[stor3])), 128, 0
            else:
                if not mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 366 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                _32100 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                if mem[(32 * idx) + _11169 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 366 len 20]:
                    if idx >= mem[_11169 + ceil32(return_data.size) + 322] - 2:
                        mem[0] = factoryAddress
                        mem[32] = 5
                        if mem[(32 * idx) + _11169 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _11169 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 366 len 20]:
                            if not mem[(32 * idx) + _11169 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _34181 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx) + _11169 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_31892)
                            _34182 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _34184 = sha3(mem[_34182 + 32 len mem[_34182]])
                            mem[_34181 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_34181 + 105] = factoryAddress
                            mem[_34181 + 125] = _34184
                            mem[_34181 + 157] = sub_acaed29c[stor3]
                            mem[_34181 + 72] = 85
                            mem[_34181 + 189] = 0
                            mem[64] = _34181 + 221
                            mem[_34181 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_34181 + 225] = 0
                            mem[_34181 + 257] = _32100
                            mem[_34181 + 289] = address(cd[4])
                            mem[_34181 + 321] = 128
                            mem[_34181 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[_34181 + s + 385] = mem[_34181 + s + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _34184, sub_acaed29c[stor3])))
                            call address(sha3(0, factoryAddress, _34184, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _32100, address(cd[4]), 128, 0
                        else:
                            if not mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _34189 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_31843)
                            _34190 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _34192 = sha3(mem[_34190 + 32 len mem[_34190]])
                            mem[_34189 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_34189 + 105] = factoryAddress
                            mem[_34189 + 125] = _34192
                            mem[_34189 + 157] = sub_acaed29c[stor3]
                            mem[_34189 + 72] = 85
                            mem[_34189 + 189] = 0
                            mem[64] = _34189 + 221
                            mem[_34189 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_34189 + 225] = 0
                            mem[_34189 + 257] = _32100
                            mem[_34189 + 289] = address(cd[4])
                            mem[_34189 + 321] = 128
                            mem[_34189 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[_34189 + s + 385] = mem[_34189 + s + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _34192, sub_acaed29c[stor3])))
                            call address(sha3(0, factoryAddress, _34192, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _32100, address(cd[4]), 128, 0
                    else:
                        require idx + 2 < mem[_11169 + ceil32(return_data.size) + 322]
                        _32335 = mem[(32 * idx + 2) + _11169 + ceil32(return_data.size) + 354]
                        mem[0] = factoryAddress
                        mem[32] = 5
                        if mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _11169 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _11169 + ceil32(return_data.size) + 366 len 20]:
                            if not mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _34165 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_32335)
                            _34166 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _34168 = sha3(mem[_34166 + 32 len mem[_34166]])
                            mem[_34165 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_34165 + 105] = factoryAddress
                            mem[_34165 + 125] = _34168
                            mem[_34165 + 157] = sub_acaed29c[stor3]
                            mem[_34165 + 72] = 85
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if address(_31843) == address(_31892):
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34165 + 292 len 29]
                            if address(_31843) < address(_31892):
                                if not address(_31843):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_34165 + 221] = address(_31843)
                                mem[_34165 + 241] = address(_31892)
                                mem[_34165 + 189] = 40
                                mem[_34165 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34165 + 294] = factoryAddress
                                mem[_34165 + 314] = sha3(address(_31843), address(_31892))
                                mem[_34165 + 346] = sub_acaed29c[stor3]
                                mem[_34165 + 261] = 85
                                mem[_34165 + 378] = 0
                                mem[64] = _34165 + 410
                                mem[_34165 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34165 + 414] = 0
                                mem[_34165 + 446] = _32100
                                mem[_34165 + 478] = address(sha3(0, factoryAddress, _34168, sub_acaed29c[stor3]))
                                mem[_34165 + 510] = 128
                                mem[_34165 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_34165 + s + 574] = mem[_34165 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31843), address(_31892)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31843), address(_31892)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _32100, address(sha3(0, factoryAddress, _34168, sub_acaed29c[stor3])), 128, 0
                            else:
                                if not address(_31892):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_34165 + 221] = address(_31892)
                                mem[_34165 + 241] = address(_31843)
                                mem[_34165 + 189] = 40
                                mem[_34165 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34165 + 294] = factoryAddress
                                mem[_34165 + 314] = sha3(address(_31892), address(_31843))
                                mem[_34165 + 346] = sub_acaed29c[stor3]
                                mem[_34165 + 261] = 85
                                mem[_34165 + 378] = 0
                                mem[64] = _34165 + 410
                                mem[_34165 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34165 + 414] = 0
                                mem[_34165 + 446] = _32100
                                mem[_34165 + 478] = address(sha3(0, factoryAddress, _34168, sub_acaed29c[stor3]))
                                mem[_34165 + 510] = 128
                                mem[_34165 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_34165 + s + 574] = mem[_34165 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31892), address(_31843)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31892), address(_31843)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _32100, address(sha3(0, factoryAddress, _34168, sub_acaed29c[stor3])), 128, 0
                        else:
                            if not mem[(32 * idx + 2) + _11169 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _34173 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11169 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_31892)
                            _34174 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _34176 = sha3(mem[_34174 + 32 len mem[_34174]])
                            mem[_34173 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_34173 + 105] = factoryAddress
                            mem[_34173 + 125] = _34176
                            mem[_34173 + 157] = sub_acaed29c[stor3]
                            mem[_34173 + 72] = 85
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if address(_31843) == address(_31892):
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34173 + 292 len 29]
                            if address(_31843) < address(_31892):
                                if not address(_31843):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_34173 + 221] = address(_31843)
                                mem[_34173 + 241] = address(_31892)
                                mem[_34173 + 189] = 40
                                mem[_34173 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34173 + 294] = factoryAddress
                                mem[_34173 + 314] = sha3(address(_31843), address(_31892))
                                mem[_34173 + 346] = sub_acaed29c[stor3]
                                mem[_34173 + 261] = 85
                                mem[_34173 + 378] = 0
                                mem[64] = _34173 + 410
                                mem[_34173 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34173 + 414] = 0
                                mem[_34173 + 446] = _32100
                                mem[_34173 + 478] = address(sha3(0, factoryAddress, _34176, sub_acaed29c[stor3]))
                                mem[_34173 + 510] = 128
                                mem[_34173 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_34173 + s + 574] = mem[_34173 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31843), address(_31892)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31843), address(_31892)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _32100, address(sha3(0, factoryAddress, _34176, sub_acaed29c[stor3])), 128, 0
                            else:
                                if not address(_31892):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_34173 + 221] = address(_31892)
                                mem[_34173 + 241] = address(_31843)
                                mem[_34173 + 189] = 40
                                mem[_34173 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34173 + 294] = factoryAddress
                                mem[_34173 + 314] = sha3(address(_31892), address(_31843))
                                mem[_34173 + 346] = sub_acaed29c[stor3]
                                mem[_34173 + 261] = 85
                                mem[_34173 + 378] = 0
                                mem[64] = _34173 + 410
                                mem[_34173 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34173 + 414] = 0
                                mem[_34173 + 446] = _32100
                                mem[_34173 + 478] = address(sha3(0, factoryAddress, _34176, sub_acaed29c[stor3]))
                                mem[_34173 + 510] = 128
                                mem[_34173 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_34173 + s + 574] = mem[_34173 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31892), address(_31843)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31892), address(_31843)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _32100, address(sha3(0, factoryAddress, _34176, sub_acaed29c[stor3])), 128, 0
                else:
                    if idx >= mem[_11169 + ceil32(return_data.size) + 322] - 2:
                        mem[0] = factoryAddress
                        mem[32] = 5
                        if mem[(32 * idx) + _11169 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _11169 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 366 len 20]:
                            if not mem[(32 * idx) + _11169 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _34213 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx) + _11169 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_31892)
                            _34214 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _34216 = sha3(mem[_34214 + 32 len mem[_34214]])
                            mem[_34213 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_34213 + 105] = factoryAddress
                            mem[_34213 + 125] = _34216
                            mem[_34213 + 157] = sub_acaed29c[stor3]
                            mem[_34213 + 72] = 85
                            mem[_34213 + 189] = 0
                            mem[64] = _34213 + 221
                            mem[_34213 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_34213 + 225] = _32100
                            mem[_34213 + 257] = 0
                            mem[_34213 + 289] = address(cd[4])
                            mem[_34213 + 321] = 128
                            mem[_34213 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[_34213 + s + 385] = mem[_34213 + s + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _34216, sub_acaed29c[stor3])))
                            call address(sha3(0, factoryAddress, _34216, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _32100, 0, address(cd[4]), 128, 0
                        else:
                            if not mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _34221 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_31843)
                            _34222 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _34224 = sha3(mem[_34222 + 32 len mem[_34222]])
                            mem[_34221 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_34221 + 105] = factoryAddress
                            mem[_34221 + 125] = _34224
                            mem[_34221 + 157] = sub_acaed29c[stor3]
                            mem[_34221 + 72] = 85
                            mem[_34221 + 189] = 0
                            mem[64] = _34221 + 221
                            mem[_34221 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_34221 + 225] = _32100
                            mem[_34221 + 257] = 0
                            mem[_34221 + 289] = address(cd[4])
                            mem[_34221 + 321] = 128
                            mem[_34221 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[_34221 + s + 385] = mem[_34221 + s + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _34224, sub_acaed29c[stor3])))
                            call address(sha3(0, factoryAddress, _34224, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _32100, 0, address(cd[4]), 128, 0
                    else:
                        require idx + 2 < mem[_11169 + ceil32(return_data.size) + 322]
                        _32338 = mem[(32 * idx + 2) + _11169 + ceil32(return_data.size) + 354]
                        mem[0] = factoryAddress
                        mem[32] = 5
                        if mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _11169 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _11169 + ceil32(return_data.size) + 366 len 20]:
                            if not mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _34197 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11169 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_32338)
                            _34198 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _34200 = sha3(mem[_34198 + 32 len mem[_34198]])
                            mem[_34197 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_34197 + 105] = factoryAddress
                            mem[_34197 + 125] = _34200
                            mem[_34197 + 157] = sub_acaed29c[stor3]
                            mem[_34197 + 72] = 85
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if address(_31843) == address(_31892):
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34197 + 292 len 29]
                            if address(_31843) < address(_31892):
                                if not address(_31843):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_34197 + 221] = address(_31843)
                                mem[_34197 + 241] = address(_31892)
                                mem[_34197 + 189] = 40
                                mem[_34197 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34197 + 294] = factoryAddress
                                mem[_34197 + 314] = sha3(address(_31843), address(_31892))
                                mem[_34197 + 346] = sub_acaed29c[stor3]
                                mem[_34197 + 261] = 85
                                mem[_34197 + 378] = 0
                                mem[64] = _34197 + 410
                                mem[_34197 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34197 + 414] = _32100
                                mem[_34197 + 446] = 0
                                mem[_34197 + 478] = address(sha3(0, factoryAddress, _34200, sub_acaed29c[stor3]))
                                mem[_34197 + 510] = 128
                                mem[_34197 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_34197 + s + 574] = mem[_34197 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31843), address(_31892)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31843), address(_31892)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _32100, 0, address(sha3(0, factoryAddress, _34200, sub_acaed29c[stor3])), 128, 0
                            else:
                                if not address(_31892):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_34197 + 221] = address(_31892)
                                mem[_34197 + 241] = address(_31843)
                                mem[_34197 + 189] = 40
                                mem[_34197 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34197 + 294] = factoryAddress
                                mem[_34197 + 314] = sha3(address(_31892), address(_31843))
                                mem[_34197 + 346] = sub_acaed29c[stor3]
                                mem[_34197 + 261] = 85
                                mem[_34197 + 378] = 0
                                mem[64] = _34197 + 410
                                mem[_34197 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34197 + 414] = _32100
                                mem[_34197 + 446] = 0
                                mem[_34197 + 478] = address(sha3(0, factoryAddress, _34200, sub_acaed29c[stor3]))
                                mem[_34197 + 510] = 128
                                mem[_34197 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_34197 + s + 574] = mem[_34197 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31892), address(_31843)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31892), address(_31843)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _32100, 0, address(sha3(0, factoryAddress, _34200, sub_acaed29c[stor3])), 128, 0
                        else:
                            if not mem[(32 * idx + 2) + _11169 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _34205 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11169 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_31892)
                            _34206 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _34208 = sha3(mem[_34206 + 32 len mem[_34206]])
                            mem[_34205 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_34205 + 105] = factoryAddress
                            mem[_34205 + 125] = _34208
                            mem[_34205 + 157] = sub_acaed29c[stor3]
                            mem[_34205 + 72] = 85
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if address(_31843) == address(_31892):
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34205 + 292 len 29]
                            if address(_31843) < address(_31892):
                                if not address(_31843):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_34205 + 221] = address(_31843)
                                mem[_34205 + 241] = address(_31892)
                                mem[_34205 + 189] = 40
                                mem[_34205 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34205 + 294] = factoryAddress
                                mem[_34205 + 314] = sha3(address(_31843), address(_31892))
                                mem[_34205 + 346] = sub_acaed29c[stor3]
                                mem[_34205 + 261] = 85
                                mem[_34205 + 378] = 0
                                mem[64] = _34205 + 410
                                mem[_34205 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34205 + 414] = _32100
                                mem[_34205 + 446] = 0
                                mem[_34205 + 478] = address(sha3(0, factoryAddress, _34208, sub_acaed29c[stor3]))
                                mem[_34205 + 510] = 128
                                mem[_34205 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_34205 + s + 574] = mem[_34205 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31843), address(_31892)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31843), address(_31892)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _32100, 0, address(sha3(0, factoryAddress, _34208, sub_acaed29c[stor3])), 128, 0
                            else:
                                if not address(_31892):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_34205 + 221] = address(_31892)
                                mem[_34205 + 241] = address(_31843)
                                mem[_34205 + 189] = 40
                                mem[_34205 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34205 + 294] = factoryAddress
                                mem[_34205 + 314] = sha3(address(_31892), address(_31843))
                                mem[_34205 + 346] = sub_acaed29c[stor3]
                                mem[_34205 + 261] = 85
                                mem[_34205 + 378] = 0
                                mem[64] = _34205 + 410
                                mem[_34205 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34205 + 414] = _32100
                                mem[_34205 + 446] = 0
                                mem[_34205 + 478] = address(sha3(0, factoryAddress, _34208, sub_acaed29c[stor3]))
                                mem[_34205 + 510] = 128
                                mem[_34205 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_34205 + s + 574] = mem[_34205 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31892), address(_31843)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31892), address(_31843)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _32100, 0, address(sha3(0, factoryAddress, _34208, sub_acaed29c[stor3])), 128, 0
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            idx = idx + 1
            continue 
        mem[mem[64]] = 32
        mem[mem[64] + 32] = mem[(32 * ('cd', 36).length) + 128]
        _31891 = mem[(32 * ('cd', 36).length) + 128]
        mem[mem[64] + 64 len floor32(mem[(32 * ('cd', 36).length) + 128])] = mem[(32 * ('cd', 36).length) + 160 len floor32(mem[(32 * ('cd', 36).length) + 128])]
        return 32, mem[mem[64] + 32 len (32 * _31891) + 32]
    mem[(32 * ('cd', 36).length) + 160 len 32 * ('cd', 36).length] = call.data[calldata.size len 32 * ('cd', 36).length]
    require 0 < ('cd', 36).length
    mem[(32 * ('cd', 36).length) + 160] = ext_call.return_data[0]
    idx = 0
    while idx < ('cd', 36).length - 1:
        require idx < mem[96]
        _11131 = mem[(32 * idx) + 128]
        require idx + 1 < mem[96]
        _11134 = mem[(32 * idx + 1) + 128]
        if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
            revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
        if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
            if not mem[(32 * idx) + 140 len 20]:
                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
            if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
            if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                if not mem[(32 * idx) + 140 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                _11293 = mem[64]
                mem[mem[64] + 32] = address(mem[(32 * idx) + 128])
                mem[mem[64] + 52] = address(_11134)
                _11294 = mem[64]
                mem[mem[64]] = 40
                mem[64] = mem[64] + 72
                _11296 = sha3(mem[_11294 + 32 len mem[_11294]])
                mem[_11293 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                mem[_11293 + 105] = factoryAddress
                mem[_11293 + 125] = _11296
                mem[_11293 + 157] = sub_acaed29c[stor3]
                mem[_11293 + 72] = 85
                if address(_11131) == address(_11134):
                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_11293 + 292 len 29]
                if address(_11131) < address(_11134):
                    if not address(_11131):
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    mem[_11293 + 221] = address(_11131)
                    mem[_11293 + 241] = address(_11134)
                    mem[_11293 + 189] = 40
                    mem[_11293 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_11293 + 294] = factoryAddress
                    mem[_11293 + 314] = sha3(address(_11131), address(_11134))
                    mem[_11293 + 346] = sub_acaed29c[stor3]
                    mem[_11293 + 261] = 85
                    mem[64] = _11293 + 378
                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_11131), address(_11134)), sub_acaed29c[stor3])))
                    staticcall address(sha3(0, factoryAddress, sha3(address(_11131), address(_11134)), sub_acaed29c[stor3])).getReserves() with:
                            gas gas_remaining wei
                else:
                    if not address(_11134):
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    mem[_11293 + 221] = address(_11134)
                    mem[_11293 + 241] = address(_11131)
                    mem[_11293 + 189] = 40
                    mem[_11293 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_11293 + 294] = factoryAddress
                    mem[_11293 + 314] = sha3(address(_11134), address(_11131))
                    mem[_11293 + 346] = sub_acaed29c[stor3]
                    mem[_11293 + 261] = 85
                    mem[64] = _11293 + 378
                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_11134), address(_11131)), sub_acaed29c[stor3])))
                    staticcall address(sha3(0, factoryAddress, sha3(address(_11134), address(_11131)), sub_acaed29c[stor3])).getReserves() with:
                            gas gas_remaining wei
                mem[_11293 + 378 len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 96
                require idx < mem[(32 * ('cd', 36).length) + 128]
                if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] <= 0:
                    revert with 0, 
                                32,
                                41,
                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                mem[_11293 + 487 len 23]
                if address(_11131) == address(_11131):
                    if ext_call.return_data[18 len 14] <= 0:
                        revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_11293 + 484 len 26]
                    if ext_call.return_data[50 len 14] <= 0:
                        revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_11293 + 484 len 26]
                    if not sub_f6692c0a[stor3]:
                        if ext_call.return_data[50 len 14]:
                            require ext_call.return_data[50 len 14]
                            if 0 / ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[18 len 14] < 10000 * ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require 10000 * ext_call.return_data[18 len 14]
                        require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                        mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = 0 / 10000 * ext_call.return_data[18 len 14]
                    else:
                        require sub_f6692c0a[stor3]
                        if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3] / sub_f6692c0a[stor3] != mem[(32 * idx) + (32 * ('cd', 36).length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not ext_call.return_data[50 len 14]:
                            if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
                            require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                            mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = 0 / (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
                        else:
                            require ext_call.return_data[50 len 14]
                            if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
                            require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                            mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[50 len 14] / (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
                else:
                    if ext_call.return_data[50 len 14] <= 0:
                        revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_11293 + 484 len 26]
                    if ext_call.return_data[18 len 14] <= 0:
                        revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_11293 + 484 len 26]
                    if not sub_f6692c0a[stor3]:
                        if ext_call.return_data[18 len 14]:
                            require ext_call.return_data[18 len 14]
                            if 0 / ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[50 len 14] < 10000 * ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require 10000 * ext_call.return_data[50 len 14]
                        require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                        mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = 0 / 10000 * ext_call.return_data[50 len 14]
                    else:
                        require sub_f6692c0a[stor3]
                        if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3] / sub_f6692c0a[stor3] != mem[(32 * idx) + (32 * ('cd', 36).length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not ext_call.return_data[18 len 14]:
                            if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
                            require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                            mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = 0 / (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
                        else:
                            require ext_call.return_data[18 len 14]
                            if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
                            require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                            mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[18 len 14] / (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
            else:
                if not mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                _11301 = mem[64]
                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + 128])
                mem[mem[64] + 52] = address(_11131)
                _11302 = mem[64]
                mem[mem[64]] = 40
                mem[64] = mem[64] + 72
                _11304 = sha3(mem[_11302 + 32 len mem[_11302]])
                mem[_11301 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                mem[_11301 + 105] = factoryAddress
                mem[_11301 + 125] = _11304
                mem[_11301 + 157] = sub_acaed29c[stor3]
                mem[_11301 + 72] = 85
                if address(_11131) == address(_11134):
                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_11301 + 292 len 29]
                if address(_11131) < address(_11134):
                    if not address(_11131):
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    mem[_11301 + 221] = address(_11131)
                    mem[_11301 + 241] = address(_11134)
                    mem[_11301 + 189] = 40
                    mem[_11301 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_11301 + 294] = factoryAddress
                    mem[_11301 + 314] = sha3(address(_11131), address(_11134))
                    mem[_11301 + 346] = sub_acaed29c[stor3]
                    mem[_11301 + 261] = 85
                    mem[64] = _11301 + 378
                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_11131), address(_11134)), sub_acaed29c[stor3])))
                    staticcall address(sha3(0, factoryAddress, sha3(address(_11131), address(_11134)), sub_acaed29c[stor3])).getReserves() with:
                            gas gas_remaining wei
                else:
                    if not address(_11134):
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    mem[_11301 + 221] = address(_11134)
                    mem[_11301 + 241] = address(_11131)
                    mem[_11301 + 189] = 40
                    mem[_11301 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_11301 + 294] = factoryAddress
                    mem[_11301 + 314] = sha3(address(_11134), address(_11131))
                    mem[_11301 + 346] = sub_acaed29c[stor3]
                    mem[_11301 + 261] = 85
                    mem[64] = _11301 + 378
                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_11134), address(_11131)), sub_acaed29c[stor3])))
                    staticcall address(sha3(0, factoryAddress, sha3(address(_11134), address(_11131)), sub_acaed29c[stor3])).getReserves() with:
                            gas gas_remaining wei
                mem[_11301 + 378 len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 96
                require idx < mem[(32 * ('cd', 36).length) + 128]
                if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] <= 0:
                    revert with 0, 
                                32,
                                41,
                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                mem[_11301 + 487 len 23]
                if address(_11131) == address(_11131):
                    if ext_call.return_data[18 len 14] <= 0:
                        revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_11301 + 484 len 26]
                    if ext_call.return_data[50 len 14] <= 0:
                        revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_11301 + 484 len 26]
                    if not sub_f6692c0a[stor3]:
                        if ext_call.return_data[50 len 14]:
                            require ext_call.return_data[50 len 14]
                            if 0 / ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[18 len 14] < 10000 * ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require 10000 * ext_call.return_data[18 len 14]
                        require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                        mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = 0 / 10000 * ext_call.return_data[18 len 14]
                    else:
                        require sub_f6692c0a[stor3]
                        if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3] / sub_f6692c0a[stor3] != mem[(32 * idx) + (32 * ('cd', 36).length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not ext_call.return_data[50 len 14]:
                            if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
                            require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                            mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = 0 / (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
                        else:
                            require ext_call.return_data[50 len 14]
                            if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
                            require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                            mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[50 len 14] / (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
                else:
                    if ext_call.return_data[50 len 14] <= 0:
                        revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_11301 + 484 len 26]
                    if ext_call.return_data[18 len 14] <= 0:
                        revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_11301 + 484 len 26]
                    if not sub_f6692c0a[stor3]:
                        if ext_call.return_data[18 len 14]:
                            require ext_call.return_data[18 len 14]
                            if 0 / ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[50 len 14] < 10000 * ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require 10000 * ext_call.return_data[50 len 14]
                        require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                        mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = 0 / 10000 * ext_call.return_data[50 len 14]
                    else:
                        require sub_f6692c0a[stor3]
                        if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3] / sub_f6692c0a[stor3] != mem[(32 * idx) + (32 * ('cd', 36).length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not ext_call.return_data[18 len 14]:
                            if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
                            require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                            mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = 0 / (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
                        else:
                            require ext_call.return_data[18 len 14]
                            if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
                            require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                            mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[18 len 14] / (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
        else:
            if not mem[(32 * idx + 1) + 140 len 20]:
                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
            if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
            if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                if not mem[(32 * idx) + 140 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                _11309 = mem[64]
                mem[mem[64] + 32] = address(mem[(32 * idx) + 128])
                mem[mem[64] + 52] = address(_11134)
                _11310 = mem[64]
                mem[mem[64]] = 40
                mem[64] = mem[64] + 72
                _11312 = sha3(mem[_11310 + 32 len mem[_11310]])
                mem[_11309 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                mem[_11309 + 105] = factoryAddress
                mem[_11309 + 125] = _11312
                mem[_11309 + 157] = sub_acaed29c[stor3]
                mem[_11309 + 72] = 85
                if address(_11131) == address(_11134):
                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_11309 + 292 len 29]
                if address(_11131) < address(_11134):
                    if not address(_11131):
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    mem[_11309 + 221] = address(_11131)
                    mem[_11309 + 241] = address(_11134)
                    mem[_11309 + 189] = 40
                    mem[_11309 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_11309 + 294] = factoryAddress
                    mem[_11309 + 314] = sha3(address(_11131), address(_11134))
                    mem[_11309 + 346] = sub_acaed29c[stor3]
                    mem[_11309 + 261] = 85
                    mem[64] = _11309 + 378
                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_11131), address(_11134)), sub_acaed29c[stor3])))
                    staticcall address(sha3(0, factoryAddress, sha3(address(_11131), address(_11134)), sub_acaed29c[stor3])).getReserves() with:
                            gas gas_remaining wei
                else:
                    if not address(_11134):
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    mem[_11309 + 221] = address(_11134)
                    mem[_11309 + 241] = address(_11131)
                    mem[_11309 + 189] = 40
                    mem[_11309 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_11309 + 294] = factoryAddress
                    mem[_11309 + 314] = sha3(address(_11134), address(_11131))
                    mem[_11309 + 346] = sub_acaed29c[stor3]
                    mem[_11309 + 261] = 85
                    mem[64] = _11309 + 378
                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_11134), address(_11131)), sub_acaed29c[stor3])))
                    staticcall address(sha3(0, factoryAddress, sha3(address(_11134), address(_11131)), sub_acaed29c[stor3])).getReserves() with:
                            gas gas_remaining wei
                mem[_11309 + 378 len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 96
                require idx < mem[(32 * ('cd', 36).length) + 128]
                if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] <= 0:
                    revert with 0, 
                                32,
                                41,
                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                mem[_11309 + 487 len 23]
                if address(_11131) == address(_11134):
                    if ext_call.return_data[18 len 14] <= 0:
                        revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_11309 + 484 len 26]
                    if ext_call.return_data[50 len 14] <= 0:
                        revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_11309 + 484 len 26]
                    if not sub_f6692c0a[stor3]:
                        if ext_call.return_data[50 len 14]:
                            require ext_call.return_data[50 len 14]
                            if 0 / ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[18 len 14] < 10000 * ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require 10000 * ext_call.return_data[18 len 14]
                        require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                        mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = 0 / 10000 * ext_call.return_data[18 len 14]
                    else:
                        require sub_f6692c0a[stor3]
                        if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3] / sub_f6692c0a[stor3] != mem[(32 * idx) + (32 * ('cd', 36).length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not ext_call.return_data[50 len 14]:
                            if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
                            require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                            mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = 0 / (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
                        else:
                            require ext_call.return_data[50 len 14]
                            if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
                            require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                            mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[50 len 14] / (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
                else:
                    if ext_call.return_data[50 len 14] <= 0:
                        revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_11309 + 484 len 26]
                    if ext_call.return_data[18 len 14] <= 0:
                        revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_11309 + 484 len 26]
                    if not sub_f6692c0a[stor3]:
                        if ext_call.return_data[18 len 14]:
                            require ext_call.return_data[18 len 14]
                            if 0 / ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[50 len 14] < 10000 * ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require 10000 * ext_call.return_data[50 len 14]
                        require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                        mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = 0 / 10000 * ext_call.return_data[50 len 14]
                    else:
                        require sub_f6692c0a[stor3]
                        if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3] / sub_f6692c0a[stor3] != mem[(32 * idx) + (32 * ('cd', 36).length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not ext_call.return_data[18 len 14]:
                            if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
                            require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                            mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = 0 / (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
                        else:
                            require ext_call.return_data[18 len 14]
                            if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
                            require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                            mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[18 len 14] / (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
            else:
                if not mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                _11317 = mem[64]
                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + 128])
                mem[mem[64] + 52] = address(_11131)
                _11318 = mem[64]
                mem[mem[64]] = 40
                mem[64] = mem[64] + 72
                _11320 = sha3(mem[_11318 + 32 len mem[_11318]])
                mem[_11317 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                mem[_11317 + 105] = factoryAddress
                mem[_11317 + 125] = _11320
                mem[_11317 + 157] = sub_acaed29c[stor3]
                mem[_11317 + 72] = 85
                if address(_11131) == address(_11134):
                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_11317 + 292 len 29]
                if address(_11131) < address(_11134):
                    if not address(_11131):
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    mem[_11317 + 221] = address(_11131)
                    mem[_11317 + 241] = address(_11134)
                    mem[_11317 + 189] = 40
                    mem[_11317 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_11317 + 294] = factoryAddress
                    mem[_11317 + 314] = sha3(address(_11131), address(_11134))
                    mem[_11317 + 346] = sub_acaed29c[stor3]
                    mem[_11317 + 261] = 85
                    mem[64] = _11317 + 378
                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_11131), address(_11134)), sub_acaed29c[stor3])))
                    staticcall address(sha3(0, factoryAddress, sha3(address(_11131), address(_11134)), sub_acaed29c[stor3])).getReserves() with:
                            gas gas_remaining wei
                else:
                    if not address(_11134):
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    mem[_11317 + 221] = address(_11134)
                    mem[_11317 + 241] = address(_11131)
                    mem[_11317 + 189] = 40
                    mem[_11317 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_11317 + 294] = factoryAddress
                    mem[_11317 + 314] = sha3(address(_11134), address(_11131))
                    mem[_11317 + 346] = sub_acaed29c[stor3]
                    mem[_11317 + 261] = 85
                    mem[64] = _11317 + 378
                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_11134), address(_11131)), sub_acaed29c[stor3])))
                    staticcall address(sha3(0, factoryAddress, sha3(address(_11134), address(_11131)), sub_acaed29c[stor3])).getReserves() with:
                            gas gas_remaining wei
                mem[_11317 + 378 len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 96
                require idx < mem[(32 * ('cd', 36).length) + 128]
                if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] <= 0:
                    revert with 0, 
                                32,
                                41,
                                0xfe50616e63616b654c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                mem[_11317 + 487 len 23]
                if address(_11131) == address(_11134):
                    if ext_call.return_data[18 len 14] <= 0:
                        revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_11317 + 484 len 26]
                    if ext_call.return_data[50 len 14] <= 0:
                        revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_11317 + 484 len 26]
                    if not sub_f6692c0a[stor3]:
                        if ext_call.return_data[50 len 14]:
                            require ext_call.return_data[50 len 14]
                            if 0 / ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[18 len 14] < 10000 * ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require 10000 * ext_call.return_data[18 len 14]
                        require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                        mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = 0 / 10000 * ext_call.return_data[18 len 14]
                    else:
                        require sub_f6692c0a[stor3]
                        if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3] / sub_f6692c0a[stor3] != mem[(32 * idx) + (32 * ('cd', 36).length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not ext_call.return_data[50 len 14]:
                            if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
                            require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                            mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = 0 / (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
                        else:
                            require ext_call.return_data[50 len 14]
                            if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
                            require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                            mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[50 len 14] / (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
                else:
                    if ext_call.return_data[50 len 14] <= 0:
                        revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_11317 + 484 len 26]
                    if ext_call.return_data[18 len 14] <= 0:
                        revert with 0, 32, 38, 0x6450616e63616b654c6962726172793a20494e53554646494349454e545f4c49515549444954, mem[_11317 + 484 len 26]
                    if not sub_f6692c0a[stor3]:
                        if ext_call.return_data[18 len 14]:
                            require ext_call.return_data[18 len 14]
                            if 0 / ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[50 len 14] < 10000 * ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require 10000 * ext_call.return_data[50 len 14]
                        require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                        mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = 0 / 10000 * ext_call.return_data[50 len 14]
                    else:
                        require sub_f6692c0a[stor3]
                        if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3] / sub_f6692c0a[stor3] != mem[(32 * idx) + (32 * ('cd', 36).length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not ext_call.return_data[18 len 14]:
                            if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
                            require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                            mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = 0 / (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
                        else:
                            require ext_call.return_data[18 len 14]
                            if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3]) < 10000 * ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
                            require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                            mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3] * ext_call.return_data[18 len 14] / (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * sub_f6692c0a[stor3])
        idx = idx + 1
        continue 
    require 0 < ('cd', 36).length
    require 1 < ('cd', 36).length
    mem[0] = factoryAddress
    mem[32] = 5
    if address(('cd', 36)[0]) == address(('cd', 36)[1]):
        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
    if address(('cd', 36)[0]) < address(('cd', 36)[1]):
        if not address(('cd', 36)[0]):
            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
        _11177 = mem[64]
        mem[mem[64] + 32] = address(('cd', 36)[0])
        mem[mem[64] + 52] = address(('cd', 36)[1])
        _11178 = mem[64]
        mem[mem[64]] = 40
        mem[64] = mem[64] + 72
        _11180 = sha3(mem[_11178 + 32 len mem[_11178]])
        mem[_11177 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
        mem[_11177 + 105] = factoryAddress
        mem[_11177 + 125] = _11180
        mem[_11177 + 157] = sub_acaed29c[stor3]
        mem[_11177 + 72] = 85
        require 0 < mem[(32 * ('cd', 36).length) + 128]
        _11207 = mem[(32 * ('cd', 36).length) + 160]
        mem[_11177 + 225] = this.address
        mem[_11177 + 257] = address(sha3(0, factoryAddress, _11180, sub_acaed29c[stor3]))
        mem[_11177 + 289] = _11207
        mem[_11177 + 189] = 100
        mem[_11177 + 225 len 28] = address(this.address) << 64
        mem[_11177 + 221 len 4] = unknown_0x23b872dd(?????)
        mem[_11177 + 321 len 96] = unknown_0x23b872dd(?????), address(this.address) << 64, 0, address(sha3(0, factoryAddress, _11180, sub_acaed29c[stor3])), Mask(224, 32, _11207) >> 32
        mem[_11177 + 445 len 4] = Mask(32, 64, _11207) >> 64
        call address(('cd', 36)[0]) with:
             gas gas_remaining wei
            args Mask(224, 32, _11207) << 480, mem[_11177 + 417 len 4]
        if not return_data.size:
            if not ext_call.success:
                revert with 0, 
                            32,
                            49,
                            0x545472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472616e7366657246726f6d206661696c65,
                            mem[_11177 + 438 len 7],
                            Mask(32, 64, _11207) >> 64,
                            mem[_11177 + 449 len 4]
            if not mem[96]:
                mem[64] = _11177 + (32 * ('cd', 36).length) + 353
                mem[_11177 + 321] = ('cd', 36).length
                mem[_11177 + 353 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
                mem[_11177 + (32 * ('cd', 36).length) + 353] = 0
                idx = 0
                while idx < ('cd', 36).length - 1:
                    require idx < mem[_11177 + 321]
                    _31845 = mem[(32 * idx) + _11177 + 353]
                    require idx + 1 < mem[_11177 + 321]
                    _31896 = mem[(32 * idx + 1) + _11177 + 353]
                    if mem[(32 * idx) + _11177 + 365 len 20] == mem[(32 * idx + 1) + _11177 + 365 len 20]:
                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                    if mem[(32 * idx) + _11177 + 365 len 20] < mem[(32 * idx + 1) + _11177 + 365 len 20]:
                        if not mem[(32 * idx) + _11177 + 365 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                        _32101 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                        if mem[(32 * idx) + _11177 + 365 len 20] == mem[(32 * idx) + _11177 + 365 len 20]:
                            if idx >= mem[_11177 + 321] - 2:
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if mem[(32 * idx) + _11177 + 365 len 20] == mem[(32 * idx + 1) + _11177 + 365 len 20]:
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx) + _11177 + 365 len 20] < mem[(32 * idx + 1) + _11177 + 365 len 20]:
                                    if not mem[(32 * idx) + _11177 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _34245 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx) + _11177 + 353])
                                    mem[mem[64] + 52] = address(_31896)
                                    _34246 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _34248 = sha3(mem[_34246 + 32 len mem[_34246]])
                                    mem[_34245 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34245 + 105] = factoryAddress
                                    mem[_34245 + 125] = _34248
                                    mem[_34245 + 157] = sub_acaed29c[stor3]
                                    mem[_34245 + 72] = 85
                                    mem[_34245 + 189] = 0
                                    mem[64] = _34245 + 221
                                    mem[_34245 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34245 + 225] = 0
                                    mem[_34245 + 257] = _32101
                                    mem[_34245 + 289] = address(cd[4])
                                    mem[_34245 + 321] = 128
                                    mem[_34245 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34245 + s + 385] = mem[_34245 + s + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _34248, sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, _34248, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32101, address(cd[4]), 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _11177 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _34253 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11177 + 353])
                                    mem[mem[64] + 52] = address(_31845)
                                    _34254 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _34256 = sha3(mem[_34254 + 32 len mem[_34254]])
                                    mem[_34253 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34253 + 105] = factoryAddress
                                    mem[_34253 + 125] = _34256
                                    mem[_34253 + 157] = sub_acaed29c[stor3]
                                    mem[_34253 + 72] = 85
                                    mem[_34253 + 189] = 0
                                    mem[64] = _34253 + 221
                                    mem[_34253 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34253 + 225] = 0
                                    mem[_34253 + 257] = _32101
                                    mem[_34253 + 289] = address(cd[4])
                                    mem[_34253 + 321] = 128
                                    mem[_34253 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34253 + s + 385] = mem[_34253 + s + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _34256, sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, _34256, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32101, address(cd[4]), 128, 0
                            else:
                                require idx + 2 < mem[_11177 + 321]
                                _32341 = mem[(32 * idx + 2) + _11177 + 353]
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if mem[(32 * idx + 1) + _11177 + 365 len 20] == mem[(32 * idx + 2) + _11177 + 365 len 20]:
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx + 1) + _11177 + 365 len 20] < mem[(32 * idx + 2) + _11177 + 365 len 20]:
                                    if not mem[(32 * idx + 1) + _11177 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _34229 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11177 + 353])
                                    mem[mem[64] + 52] = address(_32341)
                                    _34230 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _34232 = sha3(mem[_34230 + 32 len mem[_34230]])
                                    mem[_34229 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34229 + 105] = factoryAddress
                                    mem[_34229 + 125] = _34232
                                    mem[_34229 + 157] = sub_acaed29c[stor3]
                                    mem[_34229 + 72] = 85
                                    mem[0] = factoryAddress
                                    mem[32] = 5
                                    if address(_31845) == address(_31896):
                                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34229 + 292 len 29]
                                    if address(_31845) < address(_31896):
                                        if not address(_31845):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_34229 + 221] = address(_31845)
                                        mem[_34229 + 241] = address(_31896)
                                        mem[_34229 + 189] = 40
                                        mem[_34229 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_34229 + 294] = factoryAddress
                                        mem[_34229 + 314] = sha3(address(_31845), address(_31896))
                                        mem[_34229 + 346] = sub_acaed29c[stor3]
                                        mem[_34229 + 261] = 85
                                        mem[_34229 + 378] = 0
                                        mem[64] = _34229 + 410
                                        mem[_34229 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_34229 + 414] = 0
                                        mem[_34229 + 446] = _32101
                                        mem[_34229 + 478] = address(sha3(0, factoryAddress, _34232, sub_acaed29c[stor3]))
                                        mem[_34229 + 510] = 128
                                        mem[_34229 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_34229 + s + 574] = mem[_34229 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31845), address(_31896)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31845), address(_31896)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _32101, address(sha3(0, factoryAddress, _34232, sub_acaed29c[stor3])), 128, 0
                                    else:
                                        if not address(_31896):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_34229 + 221] = address(_31896)
                                        mem[_34229 + 241] = address(_31845)
                                        mem[_34229 + 189] = 40
                                        mem[_34229 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_34229 + 294] = factoryAddress
                                        mem[_34229 + 314] = sha3(address(_31896), address(_31845))
                                        mem[_34229 + 346] = sub_acaed29c[stor3]
                                        mem[_34229 + 261] = 85
                                        mem[_34229 + 378] = 0
                                        mem[64] = _34229 + 410
                                        mem[_34229 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_34229 + 414] = 0
                                        mem[_34229 + 446] = _32101
                                        mem[_34229 + 478] = address(sha3(0, factoryAddress, _34232, sub_acaed29c[stor3]))
                                        mem[_34229 + 510] = 128
                                        mem[_34229 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_34229 + s + 574] = mem[_34229 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31896), address(_31845)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31896), address(_31845)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _32101, address(sha3(0, factoryAddress, _34232, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _11177 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _34237 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11177 + 353])
                                    mem[mem[64] + 52] = address(_31896)
                                    _34238 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _34240 = sha3(mem[_34238 + 32 len mem[_34238]])
                                    mem[_34237 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34237 + 105] = factoryAddress
                                    mem[_34237 + 125] = _34240
                                    mem[_34237 + 157] = sub_acaed29c[stor3]
                                    mem[_34237 + 72] = 85
                                    mem[0] = factoryAddress
                                    mem[32] = 5
                                    if address(_31845) == address(_31896):
                                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34237 + 292 len 29]
                                    if address(_31845) < address(_31896):
                                        if not address(_31845):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_34237 + 221] = address(_31845)
                                        mem[_34237 + 241] = address(_31896)
                                        mem[_34237 + 189] = 40
                                        mem[_34237 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_34237 + 294] = factoryAddress
                                        mem[_34237 + 314] = sha3(address(_31845), address(_31896))
                                        mem[_34237 + 346] = sub_acaed29c[stor3]
                                        mem[_34237 + 261] = 85
                                        mem[_34237 + 378] = 0
                                        mem[64] = _34237 + 410
                                        mem[_34237 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_34237 + 414] = 0
                                        mem[_34237 + 446] = _32101
                                        mem[_34237 + 478] = address(sha3(0, factoryAddress, _34240, sub_acaed29c[stor3]))
                                        mem[_34237 + 510] = 128
                                        mem[_34237 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_34237 + s + 574] = mem[_34237 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31845), address(_31896)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31845), address(_31896)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _32101, address(sha3(0, factoryAddress, _34240, sub_acaed29c[stor3])), 128, 0
                                    else:
                                        if not address(_31896):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_34237 + 221] = address(_31896)
                                        mem[_34237 + 241] = address(_31845)
                                        mem[_34237 + 189] = 40
                                        mem[_34237 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_34237 + 294] = factoryAddress
                                        mem[_34237 + 314] = sha3(address(_31896), address(_31845))
                                        mem[_34237 + 346] = sub_acaed29c[stor3]
                                        mem[_34237 + 261] = 85
                                        mem[_34237 + 378] = 0
                                        mem[64] = _34237 + 410
                                        mem[_34237 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_34237 + 414] = 0
                                        mem[_34237 + 446] = _32101
                                        mem[_34237 + 478] = address(sha3(0, factoryAddress, _34240, sub_acaed29c[stor3]))
                                        mem[_34237 + 510] = 128
                                        mem[_34237 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_34237 + s + 574] = mem[_34237 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31896), address(_31845)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31896), address(_31845)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _32101, address(sha3(0, factoryAddress, _34240, sub_acaed29c[stor3])), 128, 0
                        else:
                            if idx >= mem[_11177 + 321] - 2:
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if mem[(32 * idx) + _11177 + 365 len 20] == mem[(32 * idx + 1) + _11177 + 365 len 20]:
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx) + _11177 + 365 len 20] < mem[(32 * idx + 1) + _11177 + 365 len 20]:
                                    if not mem[(32 * idx) + _11177 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _34277 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx) + _11177 + 353])
                                    mem[mem[64] + 52] = address(_31896)
                                    _34278 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _34280 = sha3(mem[_34278 + 32 len mem[_34278]])
                                    mem[_34277 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34277 + 105] = factoryAddress
                                    mem[_34277 + 125] = _34280
                                    mem[_34277 + 157] = sub_acaed29c[stor3]
                                    mem[_34277 + 72] = 85
                                    mem[_34277 + 189] = 0
                                    mem[64] = _34277 + 221
                                    mem[_34277 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34277 + 225] = _32101
                                    mem[_34277 + 257] = 0
                                    mem[_34277 + 289] = address(cd[4])
                                    mem[_34277 + 321] = 128
                                    mem[_34277 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34277 + s + 385] = mem[_34277 + s + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _34280, sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, _34280, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32101, 0, address(cd[4]), 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _11177 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _34285 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11177 + 353])
                                    mem[mem[64] + 52] = address(_31845)
                                    _34286 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _34288 = sha3(mem[_34286 + 32 len mem[_34286]])
                                    mem[_34285 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34285 + 105] = factoryAddress
                                    mem[_34285 + 125] = _34288
                                    mem[_34285 + 157] = sub_acaed29c[stor3]
                                    mem[_34285 + 72] = 85
                                    mem[_34285 + 189] = 0
                                    mem[64] = _34285 + 221
                                    mem[_34285 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34285 + 225] = _32101
                                    mem[_34285 + 257] = 0
                                    mem[_34285 + 289] = address(cd[4])
                                    mem[_34285 + 321] = 128
                                    mem[_34285 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34285 + s + 385] = mem[_34285 + s + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _34288, sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, _34288, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32101, 0, address(cd[4]), 128, 0
                            else:
                                require idx + 2 < mem[_11177 + 321]
                                _32344 = mem[(32 * idx + 2) + _11177 + 353]
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if mem[(32 * idx + 1) + _11177 + 365 len 20] == mem[(32 * idx + 2) + _11177 + 365 len 20]:
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx + 1) + _11177 + 365 len 20] < mem[(32 * idx + 2) + _11177 + 365 len 20]:
                                    if not mem[(32 * idx + 1) + _11177 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _34261 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11177 + 353])
                                    mem[mem[64] + 52] = address(_32344)
                                    _34262 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _34264 = sha3(mem[_34262 + 32 len mem[_34262]])
                                    mem[_34261 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34261 + 105] = factoryAddress
                                    mem[_34261 + 125] = _34264
                                    mem[_34261 + 157] = sub_acaed29c[stor3]
                                    mem[_34261 + 72] = 85
                                    mem[0] = factoryAddress
                                    mem[32] = 5
                                    if address(_31845) == address(_31896):
                                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34261 + 292 len 29]
                                    if address(_31845) < address(_31896):
                                        if not address(_31845):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_34261 + 221] = address(_31845)
                                        mem[_34261 + 241] = address(_31896)
                                        mem[_34261 + 189] = 40
                                        mem[_34261 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_34261 + 294] = factoryAddress
                                        mem[_34261 + 314] = sha3(address(_31845), address(_31896))
                                        mem[_34261 + 346] = sub_acaed29c[stor3]
                                        mem[_34261 + 261] = 85
                                        mem[_34261 + 378] = 0
                                        mem[64] = _34261 + 410
                                        mem[_34261 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_34261 + 414] = _32101
                                        mem[_34261 + 446] = 0
                                        mem[_34261 + 478] = address(sha3(0, factoryAddress, _34264, sub_acaed29c[stor3]))
                                        mem[_34261 + 510] = 128
                                        mem[_34261 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_34261 + s + 574] = mem[_34261 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31845), address(_31896)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31845), address(_31896)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _32101, 0, address(sha3(0, factoryAddress, _34264, sub_acaed29c[stor3])), 128, 0
                                    else:
                                        if not address(_31896):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_34261 + 221] = address(_31896)
                                        mem[_34261 + 241] = address(_31845)
                                        mem[_34261 + 189] = 40
                                        mem[_34261 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_34261 + 294] = factoryAddress
                                        mem[_34261 + 314] = sha3(address(_31896), address(_31845))
                                        mem[_34261 + 346] = sub_acaed29c[stor3]
                                        mem[_34261 + 261] = 85
                                        mem[_34261 + 378] = 0
                                        mem[64] = _34261 + 410
                                        mem[_34261 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_34261 + 414] = _32101
                                        mem[_34261 + 446] = 0
                                        mem[_34261 + 478] = address(sha3(0, factoryAddress, _34264, sub_acaed29c[stor3]))
                                        mem[_34261 + 510] = 128
                                        mem[_34261 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_34261 + s + 574] = mem[_34261 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31896), address(_31845)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31896), address(_31845)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _32101, 0, address(sha3(0, factoryAddress, _34264, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _11177 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _34269 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11177 + 353])
                                    mem[mem[64] + 52] = address(_31896)
                                    _34270 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _34272 = sha3(mem[_34270 + 32 len mem[_34270]])
                                    mem[_34269 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34269 + 105] = factoryAddress
                                    mem[_34269 + 125] = _34272
                                    mem[_34269 + 157] = sub_acaed29c[stor3]
                                    mem[_34269 + 72] = 85
                                    mem[0] = factoryAddress
                                    mem[32] = 5
                                    if address(_31845) == address(_31896):
                                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34269 + 292 len 29]
                                    if address(_31845) < address(_31896):
                                        if not address(_31845):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_34269 + 221] = address(_31845)
                                        mem[_34269 + 241] = address(_31896)
                                        mem[_34269 + 189] = 40
                                        mem[_34269 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_34269 + 294] = factoryAddress
                                        mem[_34269 + 314] = sha3(address(_31845), address(_31896))
                                        mem[_34269 + 346] = sub_acaed29c[stor3]
                                        mem[_34269 + 261] = 85
                                        mem[_34269 + 378] = 0
                                        mem[64] = _34269 + 410
                                        mem[_34269 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_34269 + 414] = _32101
                                        mem[_34269 + 446] = 0
                                        mem[_34269 + 478] = address(sha3(0, factoryAddress, _34272, sub_acaed29c[stor3]))
                                        mem[_34269 + 510] = 128
                                        mem[_34269 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_34269 + s + 574] = mem[_34269 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31845), address(_31896)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31845), address(_31896)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _32101, 0, address(sha3(0, factoryAddress, _34272, sub_acaed29c[stor3])), 128, 0
                                    else:
                                        if not address(_31896):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_34269 + 221] = address(_31896)
                                        mem[_34269 + 241] = address(_31845)
                                        mem[_34269 + 189] = 40
                                        mem[_34269 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_34269 + 294] = factoryAddress
                                        mem[_34269 + 314] = sha3(address(_31896), address(_31845))
                                        mem[_34269 + 346] = sub_acaed29c[stor3]
                                        mem[_34269 + 261] = 85
                                        mem[_34269 + 378] = 0
                                        mem[64] = _34269 + 410
                                        mem[_34269 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_34269 + 414] = _32101
                                        mem[_34269 + 446] = 0
                                        mem[_34269 + 478] = address(sha3(0, factoryAddress, _34272, sub_acaed29c[stor3]))
                                        mem[_34269 + 510] = 128
                                        mem[_34269 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_34269 + s + 574] = mem[_34269 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31896), address(_31845)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31896), address(_31845)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _32101, 0, address(sha3(0, factoryAddress, _34272, sub_acaed29c[stor3])), 128, 0
                    else:
                        if not mem[(32 * idx + 1) + _11177 + 365 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                        _32102 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                        if mem[(32 * idx) + _11177 + 365 len 20] == mem[(32 * idx + 1) + _11177 + 365 len 20]:
                            if idx >= mem[_11177 + 321] - 2:
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if mem[(32 * idx) + _11177 + 365 len 20] == mem[(32 * idx + 1) + _11177 + 365 len 20]:
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx) + _11177 + 365 len 20] < mem[(32 * idx + 1) + _11177 + 365 len 20]:
                                    if not mem[(32 * idx) + _11177 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _34309 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx) + _11177 + 353])
                                    mem[mem[64] + 52] = address(_31896)
                                    _34310 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _34312 = sha3(mem[_34310 + 32 len mem[_34310]])
                                    mem[_34309 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34309 + 105] = factoryAddress
                                    mem[_34309 + 125] = _34312
                                    mem[_34309 + 157] = sub_acaed29c[stor3]
                                    mem[_34309 + 72] = 85
                                    mem[_34309 + 189] = 0
                                    mem[64] = _34309 + 221
                                    mem[_34309 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34309 + 225] = 0
                                    mem[_34309 + 257] = _32102
                                    mem[_34309 + 289] = address(cd[4])
                                    mem[_34309 + 321] = 128
                                    mem[_34309 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34309 + s + 385] = mem[_34309 + s + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _34312, sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, _34312, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32102, address(cd[4]), 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _11177 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _34317 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11177 + 353])
                                    mem[mem[64] + 52] = address(_31845)
                                    _34318 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _34320 = sha3(mem[_34318 + 32 len mem[_34318]])
                                    mem[_34317 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34317 + 105] = factoryAddress
                                    mem[_34317 + 125] = _34320
                                    mem[_34317 + 157] = sub_acaed29c[stor3]
                                    mem[_34317 + 72] = 85
                                    mem[_34317 + 189] = 0
                                    mem[64] = _34317 + 221
                                    mem[_34317 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34317 + 225] = 0
                                    mem[_34317 + 257] = _32102
                                    mem[_34317 + 289] = address(cd[4])
                                    mem[_34317 + 321] = 128
                                    mem[_34317 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34317 + s + 385] = mem[_34317 + s + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _34320, sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, _34320, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32102, address(cd[4]), 128, 0
                            else:
                                require idx + 2 < mem[_11177 + 321]
                                _32347 = mem[(32 * idx + 2) + _11177 + 353]
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if mem[(32 * idx + 1) + _11177 + 365 len 20] == mem[(32 * idx + 2) + _11177 + 365 len 20]:
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx + 1) + _11177 + 365 len 20] < mem[(32 * idx + 2) + _11177 + 365 len 20]:
                                    if not mem[(32 * idx + 1) + _11177 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _34293 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11177 + 353])
                                    mem[mem[64] + 52] = address(_32347)
                                    _34294 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _34296 = sha3(mem[_34294 + 32 len mem[_34294]])
                                    mem[_34293 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34293 + 105] = factoryAddress
                                    mem[_34293 + 125] = _34296
                                    mem[_34293 + 157] = sub_acaed29c[stor3]
                                    mem[_34293 + 72] = 85
                                    mem[0] = factoryAddress
                                    mem[32] = 5
                                    if address(_31845) == address(_31896):
                                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34293 + 292 len 29]
                                    if address(_31845) < address(_31896):
                                        if not address(_31845):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_34293 + 221] = address(_31845)
                                        mem[_34293 + 241] = address(_31896)
                                        mem[_34293 + 189] = 40
                                        mem[_34293 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_34293 + 294] = factoryAddress
                                        mem[_34293 + 314] = sha3(address(_31845), address(_31896))
                                        mem[_34293 + 346] = sub_acaed29c[stor3]
                                        mem[_34293 + 261] = 85
                                        mem[_34293 + 378] = 0
                                        mem[64] = _34293 + 410
                                        mem[_34293 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_34293 + 414] = 0
                                        mem[_34293 + 446] = _32102
                                        mem[_34293 + 478] = address(sha3(0, factoryAddress, _34296, sub_acaed29c[stor3]))
                                        mem[_34293 + 510] = 128
                                        mem[_34293 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_34293 + s + 574] = mem[_34293 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31845), address(_31896)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31845), address(_31896)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _32102, address(sha3(0, factoryAddress, _34296, sub_acaed29c[stor3])), 128, 0
                                    else:
                                        if not address(_31896):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_34293 + 221] = address(_31896)
                                        mem[_34293 + 241] = address(_31845)
                                        mem[_34293 + 189] = 40
                                        mem[_34293 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_34293 + 294] = factoryAddress
                                        mem[_34293 + 314] = sha3(address(_31896), address(_31845))
                                        mem[_34293 + 346] = sub_acaed29c[stor3]
                                        mem[_34293 + 261] = 85
                                        mem[_34293 + 378] = 0
                                        mem[64] = _34293 + 410
                                        mem[_34293 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_34293 + 414] = 0
                                        mem[_34293 + 446] = _32102
                                        mem[_34293 + 478] = address(sha3(0, factoryAddress, _34296, sub_acaed29c[stor3]))
                                        mem[_34293 + 510] = 128
                                        mem[_34293 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_34293 + s + 574] = mem[_34293 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31896), address(_31845)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31896), address(_31845)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _32102, address(sha3(0, factoryAddress, _34296, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _11177 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _34301 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11177 + 353])
                                    mem[mem[64] + 52] = address(_31896)
                                    _34302 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _34304 = sha3(mem[_34302 + 32 len mem[_34302]])
                                    mem[_34301 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34301 + 105] = factoryAddress
                                    mem[_34301 + 125] = _34304
                                    mem[_34301 + 157] = sub_acaed29c[stor3]
                                    mem[_34301 + 72] = 85
                                    mem[0] = factoryAddress
                                    mem[32] = 5
                                    if address(_31845) == address(_31896):
                                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34301 + 292 len 29]
                                    if address(_31845) < address(_31896):
                                        if not address(_31845):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_34301 + 221] = address(_31845)
                                        mem[_34301 + 241] = address(_31896)
                                        mem[_34301 + 189] = 40
                                        mem[_34301 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_34301 + 294] = factoryAddress
                                        mem[_34301 + 314] = sha3(address(_31845), address(_31896))
                                        mem[_34301 + 346] = sub_acaed29c[stor3]
                                        mem[_34301 + 261] = 85
                                        mem[_34301 + 378] = 0
                                        mem[64] = _34301 + 410
                                        mem[_34301 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_34301 + 414] = 0
                                        mem[_34301 + 446] = _32102
                                        mem[_34301 + 478] = address(sha3(0, factoryAddress, _34304, sub_acaed29c[stor3]))
                                        mem[_34301 + 510] = 128
                                        mem[_34301 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_34301 + s + 574] = mem[_34301 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31845), address(_31896)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31845), address(_31896)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _32102, address(sha3(0, factoryAddress, _34304, sub_acaed29c[stor3])), 128, 0
                                    else:
                                        if not address(_31896):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_34301 + 221] = address(_31896)
                                        mem[_34301 + 241] = address(_31845)
                                        mem[_34301 + 189] = 40
                                        mem[_34301 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_34301 + 294] = factoryAddress
                                        mem[_34301 + 314] = sha3(address(_31896), address(_31845))
                                        mem[_34301 + 346] = sub_acaed29c[stor3]
                                        mem[_34301 + 261] = 85
                                        mem[_34301 + 378] = 0
                                        mem[64] = _34301 + 410
                                        mem[_34301 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_34301 + 414] = 0
                                        mem[_34301 + 446] = _32102
                                        mem[_34301 + 478] = address(sha3(0, factoryAddress, _34304, sub_acaed29c[stor3]))
                                        mem[_34301 + 510] = 128
                                        mem[_34301 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_34301 + s + 574] = mem[_34301 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31896), address(_31845)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31896), address(_31845)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _32102, address(sha3(0, factoryAddress, _34304, sub_acaed29c[stor3])), 128, 0
                        else:
                            if idx >= mem[_11177 + 321] - 2:
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if mem[(32 * idx) + _11177 + 365 len 20] == mem[(32 * idx + 1) + _11177 + 365 len 20]:
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx) + _11177 + 365 len 20] < mem[(32 * idx + 1) + _11177 + 365 len 20]:
                                    if not mem[(32 * idx) + _11177 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _34341 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx) + _11177 + 353])
                                    mem[mem[64] + 52] = address(_31896)
                                    _34342 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _34344 = sha3(mem[_34342 + 32 len mem[_34342]])
                                    mem[_34341 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34341 + 105] = factoryAddress
                                    mem[_34341 + 125] = _34344
                                    mem[_34341 + 157] = sub_acaed29c[stor3]
                                    mem[_34341 + 72] = 85
                                    mem[_34341 + 189] = 0
                                    mem[64] = _34341 + 221
                                    mem[_34341 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34341 + 225] = _32102
                                    mem[_34341 + 257] = 0
                                    mem[_34341 + 289] = address(cd[4])
                                    mem[_34341 + 321] = 128
                                    mem[_34341 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34341 + s + 385] = mem[_34341 + s + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _34344, sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, _34344, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32102, 0, address(cd[4]), 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _11177 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _34349 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11177 + 353])
                                    mem[mem[64] + 52] = address(_31845)
                                    _34350 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _34352 = sha3(mem[_34350 + 32 len mem[_34350]])
                                    mem[_34349 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34349 + 105] = factoryAddress
                                    mem[_34349 + 125] = _34352
                                    mem[_34349 + 157] = sub_acaed29c[stor3]
                                    mem[_34349 + 72] = 85
                                    mem[_34349 + 189] = 0
                                    mem[64] = _34349 + 221
                                    mem[_34349 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34349 + 225] = _32102
                                    mem[_34349 + 257] = 0
                                    mem[_34349 + 289] = address(cd[4])
                                    mem[_34349 + 321] = 128
                                    mem[_34349 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34349 + s + 385] = mem[_34349 + s + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, _34352, sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, _34352, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32102, 0, address(cd[4]), 128, 0
                            else:
                                require idx + 2 < mem[_11177 + 321]
                                _32350 = mem[(32 * idx + 2) + _11177 + 353]
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if mem[(32 * idx + 1) + _11177 + 365 len 20] == mem[(32 * idx + 2) + _11177 + 365 len 20]:
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                                if mem[(32 * idx + 1) + _11177 + 365 len 20] < mem[(32 * idx + 2) + _11177 + 365 len 20]:
                                    if not mem[(32 * idx + 1) + _11177 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _34325 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11177 + 353])
                                    mem[mem[64] + 52] = address(_32350)
                                    _34326 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _34328 = sha3(mem[_34326 + 32 len mem[_34326]])
                                    mem[_34325 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34325 + 105] = factoryAddress
                                    mem[_34325 + 125] = _34328
                                    mem[_34325 + 157] = sub_acaed29c[stor3]
                                    mem[_34325 + 72] = 85
                                    mem[0] = factoryAddress
                                    mem[32] = 5
                                    if address(_31845) == address(_31896):
                                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34325 + 292 len 29]
                                    if address(_31845) < address(_31896):
                                        if not address(_31845):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_34325 + 221] = address(_31845)
                                        mem[_34325 + 241] = address(_31896)
                                        mem[_34325 + 189] = 40
                                        mem[_34325 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_34325 + 294] = factoryAddress
                                        mem[_34325 + 314] = sha3(address(_31845), address(_31896))
                                        mem[_34325 + 346] = sub_acaed29c[stor3]
                                        mem[_34325 + 261] = 85
                                        mem[_34325 + 378] = 0
                                        mem[64] = _34325 + 410
                                        mem[_34325 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_34325 + 414] = _32102
                                        mem[_34325 + 446] = 0
                                        mem[_34325 + 478] = address(sha3(0, factoryAddress, _34328, sub_acaed29c[stor3]))
                                        mem[_34325 + 510] = 128
                                        mem[_34325 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_34325 + s + 574] = mem[_34325 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31845), address(_31896)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31845), address(_31896)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _32102, 0, address(sha3(0, factoryAddress, _34328, sub_acaed29c[stor3])), 128, 0
                                    else:
                                        if not address(_31896):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_34325 + 221] = address(_31896)
                                        mem[_34325 + 241] = address(_31845)
                                        mem[_34325 + 189] = 40
                                        mem[_34325 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_34325 + 294] = factoryAddress
                                        mem[_34325 + 314] = sha3(address(_31896), address(_31845))
                                        mem[_34325 + 346] = sub_acaed29c[stor3]
                                        mem[_34325 + 261] = 85
                                        mem[_34325 + 378] = 0
                                        mem[64] = _34325 + 410
                                        mem[_34325 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_34325 + 414] = _32102
                                        mem[_34325 + 446] = 0
                                        mem[_34325 + 478] = address(sha3(0, factoryAddress, _34328, sub_acaed29c[stor3]))
                                        mem[_34325 + 510] = 128
                                        mem[_34325 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_34325 + s + 574] = mem[_34325 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31896), address(_31845)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31896), address(_31845)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _32102, 0, address(sha3(0, factoryAddress, _34328, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _11177 + 365 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _34333 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11177 + 353])
                                    mem[mem[64] + 52] = address(_31896)
                                    _34334 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _34336 = sha3(mem[_34334 + 32 len mem[_34334]])
                                    mem[_34333 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34333 + 105] = factoryAddress
                                    mem[_34333 + 125] = _34336
                                    mem[_34333 + 157] = sub_acaed29c[stor3]
                                    mem[_34333 + 72] = 85
                                    mem[0] = factoryAddress
                                    mem[32] = 5
                                    if address(_31845) == address(_31896):
                                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34333 + 292 len 29]
                                    if address(_31845) < address(_31896):
                                        if not address(_31845):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_34333 + 221] = address(_31845)
                                        mem[_34333 + 241] = address(_31896)
                                        mem[_34333 + 189] = 40
                                        mem[_34333 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_34333 + 294] = factoryAddress
                                        mem[_34333 + 314] = sha3(address(_31845), address(_31896))
                                        mem[_34333 + 346] = sub_acaed29c[stor3]
                                        mem[_34333 + 261] = 85
                                        mem[_34333 + 378] = 0
                                        mem[64] = _34333 + 410
                                        mem[_34333 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_34333 + 414] = _32102
                                        mem[_34333 + 446] = 0
                                        mem[_34333 + 478] = address(sha3(0, factoryAddress, _34336, sub_acaed29c[stor3]))
                                        mem[_34333 + 510] = 128
                                        mem[_34333 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_34333 + s + 574] = mem[_34333 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31845), address(_31896)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31845), address(_31896)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _32102, 0, address(sha3(0, factoryAddress, _34336, sub_acaed29c[stor3])), 128, 0
                                    else:
                                        if not address(_31896):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_34333 + 221] = address(_31896)
                                        mem[_34333 + 241] = address(_31845)
                                        mem[_34333 + 189] = 40
                                        mem[_34333 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_34333 + 294] = factoryAddress
                                        mem[_34333 + 314] = sha3(address(_31896), address(_31845))
                                        mem[_34333 + 346] = sub_acaed29c[stor3]
                                        mem[_34333 + 261] = 85
                                        mem[_34333 + 378] = 0
                                        mem[64] = _34333 + 410
                                        mem[_34333 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_34333 + 414] = _32102
                                        mem[_34333 + 446] = 0
                                        mem[_34333 + 478] = address(sha3(0, factoryAddress, _34336, sub_acaed29c[stor3]))
                                        mem[_34333 + 510] = 128
                                        mem[_34333 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[_34333 + s + 574] = mem[_34333 + s + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31896), address(_31845)), sub_acaed29c[stor3])))
                                        call address(sha3(0, factoryAddress, sha3(address(_31896), address(_31845)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _32102, 0, address(sha3(0, factoryAddress, _34336, sub_acaed29c[stor3])), 128, 0
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    continue 
                mem[mem[64]] = 32
                mem[mem[64] + 32] = mem[(32 * ('cd', 36).length) + 128]
                _31895 = mem[(32 * ('cd', 36).length) + 128]
                mem[mem[64] + 64 len floor32(mem[(32 * ('cd', 36).length) + 128])] = mem[(32 * ('cd', 36).length) + 160 len floor32(mem[(32 * ('cd', 36).length) + 128])]
                return 32, mem[mem[64] + 32 len (32 * _31895) + 32]
            require mem[96] >= 32
            if not mem[128]:
                revert with 0, 
                            32,
                            49,
                            0x545472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472616e7366657246726f6d206661696c65,
                            mem[_11177 + 438 len 7],
                            Mask(32, 64, _11207) >> 64,
                            mem[_11177 + 449 len 4]
            mem[64] = _11177 + (32 * ('cd', 36).length) + 353
            mem[_11177 + 321] = ('cd', 36).length
            mem[_11177 + 353 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
            mem[_11177 + (32 * ('cd', 36).length) + 353] = 0
            idx = 0
            while idx < ('cd', 36).length - 1:
                require idx < mem[_11177 + 321]
                _31847 = mem[(32 * idx) + _11177 + 353]
                require idx + 1 < mem[_11177 + 321]
                _31900 = mem[(32 * idx + 1) + _11177 + 353]
                if mem[(32 * idx) + _11177 + 365 len 20] == mem[(32 * idx + 1) + _11177 + 365 len 20]:
                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                if mem[(32 * idx) + _11177 + 365 len 20] < mem[(32 * idx + 1) + _11177 + 365 len 20]:
                    if not mem[(32 * idx) + _11177 + 365 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                    _32103 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                    if mem[(32 * idx) + _11177 + 365 len 20] == mem[(32 * idx) + _11177 + 365 len 20]:
                        if idx >= mem[_11177 + 321] - 2:
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if mem[(32 * idx) + _11177 + 365 len 20] == mem[(32 * idx + 1) + _11177 + 365 len 20]:
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx) + _11177 + 365 len 20] < mem[(32 * idx + 1) + _11177 + 365 len 20]:
                                if not mem[(32 * idx) + _11177 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _34373 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _11177 + 353])
                                mem[mem[64] + 52] = address(_31900)
                                _34374 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _34376 = sha3(mem[_34374 + 32 len mem[_34374]])
                                mem[_34373 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34373 + 105] = factoryAddress
                                mem[_34373 + 125] = _34376
                                mem[_34373 + 157] = sub_acaed29c[stor3]
                                mem[_34373 + 72] = 85
                                mem[_34373 + 189] = 0
                                mem[64] = _34373 + 221
                                mem[_34373 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34373 + 225] = 0
                                mem[_34373 + 257] = _32103
                                mem[_34373 + 289] = address(cd[4])
                                mem[_34373 + 321] = 128
                                mem[_34373 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[_34373 + s + 385] = mem[_34373 + s + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _34376, sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, _34376, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _32103, address(cd[4]), 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _11177 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _34381 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11177 + 353])
                                mem[mem[64] + 52] = address(_31847)
                                _34382 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _34384 = sha3(mem[_34382 + 32 len mem[_34382]])
                                mem[_34381 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34381 + 105] = factoryAddress
                                mem[_34381 + 125] = _34384
                                mem[_34381 + 157] = sub_acaed29c[stor3]
                                mem[_34381 + 72] = 85
                                mem[_34381 + 189] = 0
                                mem[64] = _34381 + 221
                                mem[_34381 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34381 + 225] = 0
                                mem[_34381 + 257] = _32103
                                mem[_34381 + 289] = address(cd[4])
                                mem[_34381 + 321] = 128
                                mem[_34381 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[_34381 + s + 385] = mem[_34381 + s + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _34384, sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, _34384, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _32103, address(cd[4]), 128, 0
                        else:
                            require idx + 2 < mem[_11177 + 321]
                            _32353 = mem[(32 * idx + 2) + _11177 + 353]
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if mem[(32 * idx + 1) + _11177 + 365 len 20] == mem[(32 * idx + 2) + _11177 + 365 len 20]:
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx + 1) + _11177 + 365 len 20] < mem[(32 * idx + 2) + _11177 + 365 len 20]:
                                if not mem[(32 * idx + 1) + _11177 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _34357 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11177 + 353])
                                mem[mem[64] + 52] = address(_32353)
                                _34358 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _34360 = sha3(mem[_34358 + 32 len mem[_34358]])
                                mem[_34357 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34357 + 105] = factoryAddress
                                mem[_34357 + 125] = _34360
                                mem[_34357 + 157] = sub_acaed29c[stor3]
                                mem[_34357 + 72] = 85
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if address(_31847) == address(_31900):
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34357 + 292 len 29]
                                if address(_31847) < address(_31900):
                                    if not address(_31847):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_34357 + 221] = address(_31847)
                                    mem[_34357 + 241] = address(_31900)
                                    mem[_34357 + 189] = 40
                                    mem[_34357 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34357 + 294] = factoryAddress
                                    mem[_34357 + 314] = sha3(address(_31847), address(_31900))
                                    mem[_34357 + 346] = sub_acaed29c[stor3]
                                    mem[_34357 + 261] = 85
                                    mem[_34357 + 378] = 0
                                    mem[64] = _34357 + 410
                                    mem[_34357 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34357 + 414] = 0
                                    mem[_34357 + 446] = _32103
                                    mem[_34357 + 478] = address(sha3(0, factoryAddress, _34360, sub_acaed29c[stor3]))
                                    mem[_34357 + 510] = 128
                                    mem[_34357 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34357 + s + 574] = mem[_34357 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31847), address(_31900)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31847), address(_31900)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32103, address(sha3(0, factoryAddress, _34360, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not address(_31900):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_34357 + 221] = address(_31900)
                                    mem[_34357 + 241] = address(_31847)
                                    mem[_34357 + 189] = 40
                                    mem[_34357 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34357 + 294] = factoryAddress
                                    mem[_34357 + 314] = sha3(address(_31900), address(_31847))
                                    mem[_34357 + 346] = sub_acaed29c[stor3]
                                    mem[_34357 + 261] = 85
                                    mem[_34357 + 378] = 0
                                    mem[64] = _34357 + 410
                                    mem[_34357 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34357 + 414] = 0
                                    mem[_34357 + 446] = _32103
                                    mem[_34357 + 478] = address(sha3(0, factoryAddress, _34360, sub_acaed29c[stor3]))
                                    mem[_34357 + 510] = 128
                                    mem[_34357 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34357 + s + 574] = mem[_34357 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31900), address(_31847)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31900), address(_31847)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32103, address(sha3(0, factoryAddress, _34360, sub_acaed29c[stor3])), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _11177 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _34365 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11177 + 353])
                                mem[mem[64] + 52] = address(_31900)
                                _34366 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _34368 = sha3(mem[_34366 + 32 len mem[_34366]])
                                mem[_34365 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34365 + 105] = factoryAddress
                                mem[_34365 + 125] = _34368
                                mem[_34365 + 157] = sub_acaed29c[stor3]
                                mem[_34365 + 72] = 85
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if address(_31847) == address(_31900):
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34365 + 292 len 29]
                                if address(_31847) < address(_31900):
                                    if not address(_31847):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_34365 + 221] = address(_31847)
                                    mem[_34365 + 241] = address(_31900)
                                    mem[_34365 + 189] = 40
                                    mem[_34365 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34365 + 294] = factoryAddress
                                    mem[_34365 + 314] = sha3(address(_31847), address(_31900))
                                    mem[_34365 + 346] = sub_acaed29c[stor3]
                                    mem[_34365 + 261] = 85
                                    mem[_34365 + 378] = 0
                                    mem[64] = _34365 + 410
                                    mem[_34365 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34365 + 414] = 0
                                    mem[_34365 + 446] = _32103
                                    mem[_34365 + 478] = address(sha3(0, factoryAddress, _34368, sub_acaed29c[stor3]))
                                    mem[_34365 + 510] = 128
                                    mem[_34365 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34365 + s + 574] = mem[_34365 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31847), address(_31900)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31847), address(_31900)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32103, address(sha3(0, factoryAddress, _34368, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not address(_31900):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_34365 + 221] = address(_31900)
                                    mem[_34365 + 241] = address(_31847)
                                    mem[_34365 + 189] = 40
                                    mem[_34365 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34365 + 294] = factoryAddress
                                    mem[_34365 + 314] = sha3(address(_31900), address(_31847))
                                    mem[_34365 + 346] = sub_acaed29c[stor3]
                                    mem[_34365 + 261] = 85
                                    mem[_34365 + 378] = 0
                                    mem[64] = _34365 + 410
                                    mem[_34365 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34365 + 414] = 0
                                    mem[_34365 + 446] = _32103
                                    mem[_34365 + 478] = address(sha3(0, factoryAddress, _34368, sub_acaed29c[stor3]))
                                    mem[_34365 + 510] = 128
                                    mem[_34365 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34365 + s + 574] = mem[_34365 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31900), address(_31847)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31900), address(_31847)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32103, address(sha3(0, factoryAddress, _34368, sub_acaed29c[stor3])), 128, 0
                    else:
                        if idx >= mem[_11177 + 321] - 2:
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if mem[(32 * idx) + _11177 + 365 len 20] == mem[(32 * idx + 1) + _11177 + 365 len 20]:
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx) + _11177 + 365 len 20] < mem[(32 * idx + 1) + _11177 + 365 len 20]:
                                if not mem[(32 * idx) + _11177 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _34405 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _11177 + 353])
                                mem[mem[64] + 52] = address(_31900)
                                _34406 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _34408 = sha3(mem[_34406 + 32 len mem[_34406]])
                                mem[_34405 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34405 + 105] = factoryAddress
                                mem[_34405 + 125] = _34408
                                mem[_34405 + 157] = sub_acaed29c[stor3]
                                mem[_34405 + 72] = 85
                                mem[_34405 + 189] = 0
                                mem[64] = _34405 + 221
                                mem[_34405 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34405 + 225] = _32103
                                mem[_34405 + 257] = 0
                                mem[_34405 + 289] = address(cd[4])
                                mem[_34405 + 321] = 128
                                mem[_34405 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[_34405 + s + 385] = mem[_34405 + s + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _34408, sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, _34408, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _32103, 0, address(cd[4]), 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _11177 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _34413 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11177 + 353])
                                mem[mem[64] + 52] = address(_31847)
                                _34414 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _34416 = sha3(mem[_34414 + 32 len mem[_34414]])
                                mem[_34413 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34413 + 105] = factoryAddress
                                mem[_34413 + 125] = _34416
                                mem[_34413 + 157] = sub_acaed29c[stor3]
                                mem[_34413 + 72] = 85
                                mem[_34413 + 189] = 0
                                mem[64] = _34413 + 221
                                mem[_34413 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34413 + 225] = _32103
                                mem[_34413 + 257] = 0
                                mem[_34413 + 289] = address(cd[4])
                                mem[_34413 + 321] = 128
                                mem[_34413 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[_34413 + s + 385] = mem[_34413 + s + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _34416, sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, _34416, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _32103, 0, address(cd[4]), 128, 0
                        else:
                            require idx + 2 < mem[_11177 + 321]
                            _32356 = mem[(32 * idx + 2) + _11177 + 353]
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if mem[(32 * idx + 1) + _11177 + 365 len 20] == mem[(32 * idx + 2) + _11177 + 365 len 20]:
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx + 1) + _11177 + 365 len 20] < mem[(32 * idx + 2) + _11177 + 365 len 20]:
                                if not mem[(32 * idx + 1) + _11177 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _34389 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11177 + 353])
                                mem[mem[64] + 52] = address(_32356)
                                _34390 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _34392 = sha3(mem[_34390 + 32 len mem[_34390]])
                                mem[_34389 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34389 + 105] = factoryAddress
                                mem[_34389 + 125] = _34392
                                mem[_34389 + 157] = sub_acaed29c[stor3]
                                mem[_34389 + 72] = 85
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if address(_31847) == address(_31900):
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34389 + 292 len 29]
                                if address(_31847) < address(_31900):
                                    if not address(_31847):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_34389 + 221] = address(_31847)
                                    mem[_34389 + 241] = address(_31900)
                                    mem[_34389 + 189] = 40
                                    mem[_34389 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34389 + 294] = factoryAddress
                                    mem[_34389 + 314] = sha3(address(_31847), address(_31900))
                                    mem[_34389 + 346] = sub_acaed29c[stor3]
                                    mem[_34389 + 261] = 85
                                    mem[_34389 + 378] = 0
                                    mem[64] = _34389 + 410
                                    mem[_34389 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34389 + 414] = _32103
                                    mem[_34389 + 446] = 0
                                    mem[_34389 + 478] = address(sha3(0, factoryAddress, _34392, sub_acaed29c[stor3]))
                                    mem[_34389 + 510] = 128
                                    mem[_34389 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34389 + s + 574] = mem[_34389 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31847), address(_31900)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31847), address(_31900)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32103, 0, address(sha3(0, factoryAddress, _34392, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not address(_31900):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_34389 + 221] = address(_31900)
                                    mem[_34389 + 241] = address(_31847)
                                    mem[_34389 + 189] = 40
                                    mem[_34389 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34389 + 294] = factoryAddress
                                    mem[_34389 + 314] = sha3(address(_31900), address(_31847))
                                    mem[_34389 + 346] = sub_acaed29c[stor3]
                                    mem[_34389 + 261] = 85
                                    mem[_34389 + 378] = 0
                                    mem[64] = _34389 + 410
                                    mem[_34389 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34389 + 414] = _32103
                                    mem[_34389 + 446] = 0
                                    mem[_34389 + 478] = address(sha3(0, factoryAddress, _34392, sub_acaed29c[stor3]))
                                    mem[_34389 + 510] = 128
                                    mem[_34389 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34389 + s + 574] = mem[_34389 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31900), address(_31847)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31900), address(_31847)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32103, 0, address(sha3(0, factoryAddress, _34392, sub_acaed29c[stor3])), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _11177 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _34397 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11177 + 353])
                                mem[mem[64] + 52] = address(_31900)
                                _34398 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _34400 = sha3(mem[_34398 + 32 len mem[_34398]])
                                mem[_34397 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34397 + 105] = factoryAddress
                                mem[_34397 + 125] = _34400
                                mem[_34397 + 157] = sub_acaed29c[stor3]
                                mem[_34397 + 72] = 85
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if address(_31847) == address(_31900):
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34397 + 292 len 29]
                                if address(_31847) < address(_31900):
                                    if not address(_31847):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_34397 + 221] = address(_31847)
                                    mem[_34397 + 241] = address(_31900)
                                    mem[_34397 + 189] = 40
                                    mem[_34397 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34397 + 294] = factoryAddress
                                    mem[_34397 + 314] = sha3(address(_31847), address(_31900))
                                    mem[_34397 + 346] = sub_acaed29c[stor3]
                                    mem[_34397 + 261] = 85
                                    mem[_34397 + 378] = 0
                                    mem[64] = _34397 + 410
                                    mem[_34397 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34397 + 414] = _32103
                                    mem[_34397 + 446] = 0
                                    mem[_34397 + 478] = address(sha3(0, factoryAddress, _34400, sub_acaed29c[stor3]))
                                    mem[_34397 + 510] = 128
                                    mem[_34397 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34397 + s + 574] = mem[_34397 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31847), address(_31900)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31847), address(_31900)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32103, 0, address(sha3(0, factoryAddress, _34400, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not address(_31900):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_34397 + 221] = address(_31900)
                                    mem[_34397 + 241] = address(_31847)
                                    mem[_34397 + 189] = 40
                                    mem[_34397 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34397 + 294] = factoryAddress
                                    mem[_34397 + 314] = sha3(address(_31900), address(_31847))
                                    mem[_34397 + 346] = sub_acaed29c[stor3]
                                    mem[_34397 + 261] = 85
                                    mem[_34397 + 378] = 0
                                    mem[64] = _34397 + 410
                                    mem[_34397 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34397 + 414] = _32103
                                    mem[_34397 + 446] = 0
                                    mem[_34397 + 478] = address(sha3(0, factoryAddress, _34400, sub_acaed29c[stor3]))
                                    mem[_34397 + 510] = 128
                                    mem[_34397 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34397 + s + 574] = mem[_34397 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31900), address(_31847)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31900), address(_31847)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32103, 0, address(sha3(0, factoryAddress, _34400, sub_acaed29c[stor3])), 128, 0
                else:
                    if not mem[(32 * idx + 1) + _11177 + 365 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                    _32104 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                    if mem[(32 * idx) + _11177 + 365 len 20] == mem[(32 * idx + 1) + _11177 + 365 len 20]:
                        if idx >= mem[_11177 + 321] - 2:
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if mem[(32 * idx) + _11177 + 365 len 20] == mem[(32 * idx + 1) + _11177 + 365 len 20]:
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx) + _11177 + 365 len 20] < mem[(32 * idx + 1) + _11177 + 365 len 20]:
                                if not mem[(32 * idx) + _11177 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _34437 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _11177 + 353])
                                mem[mem[64] + 52] = address(_31900)
                                _34438 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _34440 = sha3(mem[_34438 + 32 len mem[_34438]])
                                mem[_34437 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34437 + 105] = factoryAddress
                                mem[_34437 + 125] = _34440
                                mem[_34437 + 157] = sub_acaed29c[stor3]
                                mem[_34437 + 72] = 85
                                mem[_34437 + 189] = 0
                                mem[64] = _34437 + 221
                                mem[_34437 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34437 + 225] = 0
                                mem[_34437 + 257] = _32104
                                mem[_34437 + 289] = address(cd[4])
                                mem[_34437 + 321] = 128
                                mem[_34437 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[_34437 + s + 385] = mem[_34437 + s + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _34440, sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, _34440, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _32104, address(cd[4]), 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _11177 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _34445 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11177 + 353])
                                mem[mem[64] + 52] = address(_31847)
                                _34446 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _34448 = sha3(mem[_34446 + 32 len mem[_34446]])
                                mem[_34445 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34445 + 105] = factoryAddress
                                mem[_34445 + 125] = _34448
                                mem[_34445 + 157] = sub_acaed29c[stor3]
                                mem[_34445 + 72] = 85
                                mem[_34445 + 189] = 0
                                mem[64] = _34445 + 221
                                mem[_34445 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34445 + 225] = 0
                                mem[_34445 + 257] = _32104
                                mem[_34445 + 289] = address(cd[4])
                                mem[_34445 + 321] = 128
                                mem[_34445 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[_34445 + s + 385] = mem[_34445 + s + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _34448, sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, _34448, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _32104, address(cd[4]), 128, 0
                        else:
                            require idx + 2 < mem[_11177 + 321]
                            _32359 = mem[(32 * idx + 2) + _11177 + 353]
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if mem[(32 * idx + 1) + _11177 + 365 len 20] == mem[(32 * idx + 2) + _11177 + 365 len 20]:
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx + 1) + _11177 + 365 len 20] < mem[(32 * idx + 2) + _11177 + 365 len 20]:
                                if not mem[(32 * idx + 1) + _11177 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _34421 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11177 + 353])
                                mem[mem[64] + 52] = address(_32359)
                                _34422 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _34424 = sha3(mem[_34422 + 32 len mem[_34422]])
                                mem[_34421 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34421 + 105] = factoryAddress
                                mem[_34421 + 125] = _34424
                                mem[_34421 + 157] = sub_acaed29c[stor3]
                                mem[_34421 + 72] = 85
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if address(_31847) == address(_31900):
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34421 + 292 len 29]
                                if address(_31847) < address(_31900):
                                    if not address(_31847):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_34421 + 221] = address(_31847)
                                    mem[_34421 + 241] = address(_31900)
                                    mem[_34421 + 189] = 40
                                    mem[_34421 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34421 + 294] = factoryAddress
                                    mem[_34421 + 314] = sha3(address(_31847), address(_31900))
                                    mem[_34421 + 346] = sub_acaed29c[stor3]
                                    mem[_34421 + 261] = 85
                                    mem[_34421 + 378] = 0
                                    mem[64] = _34421 + 410
                                    mem[_34421 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34421 + 414] = 0
                                    mem[_34421 + 446] = _32104
                                    mem[_34421 + 478] = address(sha3(0, factoryAddress, _34424, sub_acaed29c[stor3]))
                                    mem[_34421 + 510] = 128
                                    mem[_34421 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34421 + s + 574] = mem[_34421 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31847), address(_31900)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31847), address(_31900)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32104, address(sha3(0, factoryAddress, _34424, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not address(_31900):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_34421 + 221] = address(_31900)
                                    mem[_34421 + 241] = address(_31847)
                                    mem[_34421 + 189] = 40
                                    mem[_34421 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34421 + 294] = factoryAddress
                                    mem[_34421 + 314] = sha3(address(_31900), address(_31847))
                                    mem[_34421 + 346] = sub_acaed29c[stor3]
                                    mem[_34421 + 261] = 85
                                    mem[_34421 + 378] = 0
                                    mem[64] = _34421 + 410
                                    mem[_34421 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34421 + 414] = 0
                                    mem[_34421 + 446] = _32104
                                    mem[_34421 + 478] = address(sha3(0, factoryAddress, _34424, sub_acaed29c[stor3]))
                                    mem[_34421 + 510] = 128
                                    mem[_34421 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34421 + s + 574] = mem[_34421 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31900), address(_31847)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31900), address(_31847)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32104, address(sha3(0, factoryAddress, _34424, sub_acaed29c[stor3])), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _11177 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _34429 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11177 + 353])
                                mem[mem[64] + 52] = address(_31900)
                                _34430 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _34432 = sha3(mem[_34430 + 32 len mem[_34430]])
                                mem[_34429 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34429 + 105] = factoryAddress
                                mem[_34429 + 125] = _34432
                                mem[_34429 + 157] = sub_acaed29c[stor3]
                                mem[_34429 + 72] = 85
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if address(_31847) == address(_31900):
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34429 + 292 len 29]
                                if address(_31847) < address(_31900):
                                    if not address(_31847):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_34429 + 221] = address(_31847)
                                    mem[_34429 + 241] = address(_31900)
                                    mem[_34429 + 189] = 40
                                    mem[_34429 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34429 + 294] = factoryAddress
                                    mem[_34429 + 314] = sha3(address(_31847), address(_31900))
                                    mem[_34429 + 346] = sub_acaed29c[stor3]
                                    mem[_34429 + 261] = 85
                                    mem[_34429 + 378] = 0
                                    mem[64] = _34429 + 410
                                    mem[_34429 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34429 + 414] = 0
                                    mem[_34429 + 446] = _32104
                                    mem[_34429 + 478] = address(sha3(0, factoryAddress, _34432, sub_acaed29c[stor3]))
                                    mem[_34429 + 510] = 128
                                    mem[_34429 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34429 + s + 574] = mem[_34429 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31847), address(_31900)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31847), address(_31900)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32104, address(sha3(0, factoryAddress, _34432, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not address(_31900):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_34429 + 221] = address(_31900)
                                    mem[_34429 + 241] = address(_31847)
                                    mem[_34429 + 189] = 40
                                    mem[_34429 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34429 + 294] = factoryAddress
                                    mem[_34429 + 314] = sha3(address(_31900), address(_31847))
                                    mem[_34429 + 346] = sub_acaed29c[stor3]
                                    mem[_34429 + 261] = 85
                                    mem[_34429 + 378] = 0
                                    mem[64] = _34429 + 410
                                    mem[_34429 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34429 + 414] = 0
                                    mem[_34429 + 446] = _32104
                                    mem[_34429 + 478] = address(sha3(0, factoryAddress, _34432, sub_acaed29c[stor3]))
                                    mem[_34429 + 510] = 128
                                    mem[_34429 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34429 + s + 574] = mem[_34429 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31900), address(_31847)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31900), address(_31847)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32104, address(sha3(0, factoryAddress, _34432, sub_acaed29c[stor3])), 128, 0
                    else:
                        if idx >= mem[_11177 + 321] - 2:
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if mem[(32 * idx) + _11177 + 365 len 20] == mem[(32 * idx + 1) + _11177 + 365 len 20]:
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx) + _11177 + 365 len 20] < mem[(32 * idx + 1) + _11177 + 365 len 20]:
                                if not mem[(32 * idx) + _11177 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _34469 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _11177 + 353])
                                mem[mem[64] + 52] = address(_31900)
                                _34470 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _34472 = sha3(mem[_34470 + 32 len mem[_34470]])
                                mem[_34469 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34469 + 105] = factoryAddress
                                mem[_34469 + 125] = _34472
                                mem[_34469 + 157] = sub_acaed29c[stor3]
                                mem[_34469 + 72] = 85
                                mem[_34469 + 189] = 0
                                mem[64] = _34469 + 221
                                mem[_34469 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34469 + 225] = _32104
                                mem[_34469 + 257] = 0
                                mem[_34469 + 289] = address(cd[4])
                                mem[_34469 + 321] = 128
                                mem[_34469 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[_34469 + s + 385] = mem[_34469 + s + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _34472, sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, _34472, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _32104, 0, address(cd[4]), 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _11177 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _34477 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11177 + 353])
                                mem[mem[64] + 52] = address(_31847)
                                _34478 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _34480 = sha3(mem[_34478 + 32 len mem[_34478]])
                                mem[_34477 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34477 + 105] = factoryAddress
                                mem[_34477 + 125] = _34480
                                mem[_34477 + 157] = sub_acaed29c[stor3]
                                mem[_34477 + 72] = 85
                                mem[_34477 + 189] = 0
                                mem[64] = _34477 + 221
                                mem[_34477 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34477 + 225] = _32104
                                mem[_34477 + 257] = 0
                                mem[_34477 + 289] = address(cd[4])
                                mem[_34477 + 321] = 128
                                mem[_34477 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[_34477 + s + 385] = mem[_34477 + s + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _34480, sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, _34480, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _32104, 0, address(cd[4]), 128, 0
                        else:
                            require idx + 2 < mem[_11177 + 321]
                            _32362 = mem[(32 * idx + 2) + _11177 + 353]
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if mem[(32 * idx + 1) + _11177 + 365 len 20] == mem[(32 * idx + 2) + _11177 + 365 len 20]:
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx + 1) + _11177 + 365 len 20] < mem[(32 * idx + 2) + _11177 + 365 len 20]:
                                if not mem[(32 * idx + 1) + _11177 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _34453 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11177 + 353])
                                mem[mem[64] + 52] = address(_32362)
                                _34454 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _34456 = sha3(mem[_34454 + 32 len mem[_34454]])
                                mem[_34453 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34453 + 105] = factoryAddress
                                mem[_34453 + 125] = _34456
                                mem[_34453 + 157] = sub_acaed29c[stor3]
                                mem[_34453 + 72] = 85
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if address(_31847) == address(_31900):
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34453 + 292 len 29]
                                if address(_31847) < address(_31900):
                                    if not address(_31847):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_34453 + 221] = address(_31847)
                                    mem[_34453 + 241] = address(_31900)
                                    mem[_34453 + 189] = 40
                                    mem[_34453 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34453 + 294] = factoryAddress
                                    mem[_34453 + 314] = sha3(address(_31847), address(_31900))
                                    mem[_34453 + 346] = sub_acaed29c[stor3]
                                    mem[_34453 + 261] = 85
                                    mem[_34453 + 378] = 0
                                    mem[64] = _34453 + 410
                                    mem[_34453 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34453 + 414] = _32104
                                    mem[_34453 + 446] = 0
                                    mem[_34453 + 478] = address(sha3(0, factoryAddress, _34456, sub_acaed29c[stor3]))
                                    mem[_34453 + 510] = 128
                                    mem[_34453 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34453 + s + 574] = mem[_34453 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31847), address(_31900)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31847), address(_31900)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32104, 0, address(sha3(0, factoryAddress, _34456, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not address(_31900):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_34453 + 221] = address(_31900)
                                    mem[_34453 + 241] = address(_31847)
                                    mem[_34453 + 189] = 40
                                    mem[_34453 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34453 + 294] = factoryAddress
                                    mem[_34453 + 314] = sha3(address(_31900), address(_31847))
                                    mem[_34453 + 346] = sub_acaed29c[stor3]
                                    mem[_34453 + 261] = 85
                                    mem[_34453 + 378] = 0
                                    mem[64] = _34453 + 410
                                    mem[_34453 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34453 + 414] = _32104
                                    mem[_34453 + 446] = 0
                                    mem[_34453 + 478] = address(sha3(0, factoryAddress, _34456, sub_acaed29c[stor3]))
                                    mem[_34453 + 510] = 128
                                    mem[_34453 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34453 + s + 574] = mem[_34453 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31900), address(_31847)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31900), address(_31847)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32104, 0, address(sha3(0, factoryAddress, _34456, sub_acaed29c[stor3])), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _11177 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _34461 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11177 + 353])
                                mem[mem[64] + 52] = address(_31900)
                                _34462 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _34464 = sha3(mem[_34462 + 32 len mem[_34462]])
                                mem[_34461 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34461 + 105] = factoryAddress
                                mem[_34461 + 125] = _34464
                                mem[_34461 + 157] = sub_acaed29c[stor3]
                                mem[_34461 + 72] = 85
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if address(_31847) == address(_31900):
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34461 + 292 len 29]
                                if address(_31847) < address(_31900):
                                    if not address(_31847):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_34461 + 221] = address(_31847)
                                    mem[_34461 + 241] = address(_31900)
                                    mem[_34461 + 189] = 40
                                    mem[_34461 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34461 + 294] = factoryAddress
                                    mem[_34461 + 314] = sha3(address(_31847), address(_31900))
                                    mem[_34461 + 346] = sub_acaed29c[stor3]
                                    mem[_34461 + 261] = 85
                                    mem[_34461 + 378] = 0
                                    mem[64] = _34461 + 410
                                    mem[_34461 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34461 + 414] = _32104
                                    mem[_34461 + 446] = 0
                                    mem[_34461 + 478] = address(sha3(0, factoryAddress, _34464, sub_acaed29c[stor3]))
                                    mem[_34461 + 510] = 128
                                    mem[_34461 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34461 + s + 574] = mem[_34461 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31847), address(_31900)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31847), address(_31900)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32104, 0, address(sha3(0, factoryAddress, _34464, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not address(_31900):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_34461 + 221] = address(_31900)
                                    mem[_34461 + 241] = address(_31847)
                                    mem[_34461 + 189] = 40
                                    mem[_34461 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34461 + 294] = factoryAddress
                                    mem[_34461 + 314] = sha3(address(_31900), address(_31847))
                                    mem[_34461 + 346] = sub_acaed29c[stor3]
                                    mem[_34461 + 261] = 85
                                    mem[_34461 + 378] = 0
                                    mem[64] = _34461 + 410
                                    mem[_34461 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34461 + 414] = _32104
                                    mem[_34461 + 446] = 0
                                    mem[_34461 + 478] = address(sha3(0, factoryAddress, _34464, sub_acaed29c[stor3]))
                                    mem[_34461 + 510] = 128
                                    mem[_34461 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34461 + s + 574] = mem[_34461 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31900), address(_31847)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31900), address(_31847)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32104, 0, address(sha3(0, factoryAddress, _34464, sub_acaed29c[stor3])), 128, 0
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                idx = idx + 1
                continue 
            mem[mem[64]] = 32
            mem[mem[64] + 32] = mem[(32 * ('cd', 36).length) + 128]
            _31899 = mem[(32 * ('cd', 36).length) + 128]
            mem[mem[64] + 64 len floor32(mem[(32 * ('cd', 36).length) + 128])] = mem[(32 * ('cd', 36).length) + 160 len floor32(mem[(32 * ('cd', 36).length) + 128])]
            return 32, mem[mem[64] + 32 len (32 * _31899) + 32]
        mem[_11177 + 321] = return_data.size
        mem[_11177 + 353 len return_data.size] = ext_call.return_data[0 len return_data.size]
        if not ext_call.success:
            revert with 0, 
                        32,
                        49,
                        0x545472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472616e7366657246726f6d206661696c65,
                        mem[_11177 + ceil32(return_data.size) + 439 len 15]
        if not return_data.size:
            mem[64] = _11177 + ceil32(return_data.size) + (32 * ('cd', 36).length) + 354
            mem[_11177 + ceil32(return_data.size) + 322] = ('cd', 36).length
            mem[_11177 + ceil32(return_data.size) + 354 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
            mem[_11177 + ceil32(return_data.size) + (32 * ('cd', 36).length) + 354] = 0
            idx = 0
            while idx < ('cd', 36).length - 1:
                require idx < mem[_11177 + ceil32(return_data.size) + 322]
                _31849 = mem[(32 * idx) + _11177 + ceil32(return_data.size) + 354]
                require idx + 1 < mem[_11177 + ceil32(return_data.size) + 322]
                _31904 = mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 354]
                if mem[(32 * idx) + _11177 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 366 len 20]:
                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                if mem[(32 * idx) + _11177 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 366 len 20]:
                    if not mem[(32 * idx) + _11177 + ceil32(return_data.size) + 366 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                    _32105 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                    if mem[(32 * idx) + _11177 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx) + _11177 + ceil32(return_data.size) + 366 len 20]:
                        if idx >= mem[_11177 + ceil32(return_data.size) + 322] - 2:
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if mem[(32 * idx) + _11177 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx) + _11177 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 366 len 20]:
                                if not mem[(32 * idx) + _11177 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _34501 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _11177 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_31904)
                                _34502 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _34504 = sha3(mem[_34502 + 32 len mem[_34502]])
                                mem[_34501 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34501 + 105] = factoryAddress
                                mem[_34501 + 125] = _34504
                                mem[_34501 + 157] = sub_acaed29c[stor3]
                                mem[_34501 + 72] = 85
                                mem[_34501 + 189] = 0
                                mem[64] = _34501 + 221
                                mem[_34501 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34501 + 225] = 0
                                mem[_34501 + 257] = _32105
                                mem[_34501 + 289] = address(cd[4])
                                mem[_34501 + 321] = 128
                                mem[_34501 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[_34501 + s + 385] = mem[_34501 + s + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _34504, sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, _34504, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _32105, address(cd[4]), 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _34509 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_31849)
                                _34510 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _34512 = sha3(mem[_34510 + 32 len mem[_34510]])
                                mem[_34509 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34509 + 105] = factoryAddress
                                mem[_34509 + 125] = _34512
                                mem[_34509 + 157] = sub_acaed29c[stor3]
                                mem[_34509 + 72] = 85
                                mem[_34509 + 189] = 0
                                mem[64] = _34509 + 221
                                mem[_34509 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34509 + 225] = 0
                                mem[_34509 + 257] = _32105
                                mem[_34509 + 289] = address(cd[4])
                                mem[_34509 + 321] = 128
                                mem[_34509 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[_34509 + s + 385] = mem[_34509 + s + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _34512, sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, _34512, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _32105, address(cd[4]), 128, 0
                        else:
                            require idx + 2 < mem[_11177 + ceil32(return_data.size) + 322]
                            _32365 = mem[(32 * idx + 2) + _11177 + ceil32(return_data.size) + 354]
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _11177 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _11177 + ceil32(return_data.size) + 366 len 20]:
                                if not mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _34485 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_32365)
                                _34486 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _34488 = sha3(mem[_34486 + 32 len mem[_34486]])
                                mem[_34485 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34485 + 105] = factoryAddress
                                mem[_34485 + 125] = _34488
                                mem[_34485 + 157] = sub_acaed29c[stor3]
                                mem[_34485 + 72] = 85
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if address(_31849) == address(_31904):
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34485 + 292 len 29]
                                if address(_31849) < address(_31904):
                                    if not address(_31849):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_34485 + 221] = address(_31849)
                                    mem[_34485 + 241] = address(_31904)
                                    mem[_34485 + 189] = 40
                                    mem[_34485 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34485 + 294] = factoryAddress
                                    mem[_34485 + 314] = sha3(address(_31849), address(_31904))
                                    mem[_34485 + 346] = sub_acaed29c[stor3]
                                    mem[_34485 + 261] = 85
                                    mem[_34485 + 378] = 0
                                    mem[64] = _34485 + 410
                                    mem[_34485 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34485 + 414] = 0
                                    mem[_34485 + 446] = _32105
                                    mem[_34485 + 478] = address(sha3(0, factoryAddress, _34488, sub_acaed29c[stor3]))
                                    mem[_34485 + 510] = 128
                                    mem[_34485 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34485 + s + 574] = mem[_34485 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31849), address(_31904)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31849), address(_31904)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32105, address(sha3(0, factoryAddress, _34488, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not address(_31904):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_34485 + 221] = address(_31904)
                                    mem[_34485 + 241] = address(_31849)
                                    mem[_34485 + 189] = 40
                                    mem[_34485 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34485 + 294] = factoryAddress
                                    mem[_34485 + 314] = sha3(address(_31904), address(_31849))
                                    mem[_34485 + 346] = sub_acaed29c[stor3]
                                    mem[_34485 + 261] = 85
                                    mem[_34485 + 378] = 0
                                    mem[64] = _34485 + 410
                                    mem[_34485 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34485 + 414] = 0
                                    mem[_34485 + 446] = _32105
                                    mem[_34485 + 478] = address(sha3(0, factoryAddress, _34488, sub_acaed29c[stor3]))
                                    mem[_34485 + 510] = 128
                                    mem[_34485 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34485 + s + 574] = mem[_34485 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31904), address(_31849)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31904), address(_31849)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32105, address(sha3(0, factoryAddress, _34488, sub_acaed29c[stor3])), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _11177 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _34493 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11177 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_31904)
                                _34494 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _34496 = sha3(mem[_34494 + 32 len mem[_34494]])
                                mem[_34493 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34493 + 105] = factoryAddress
                                mem[_34493 + 125] = _34496
                                mem[_34493 + 157] = sub_acaed29c[stor3]
                                mem[_34493 + 72] = 85
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if address(_31849) == address(_31904):
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34493 + 292 len 29]
                                if address(_31849) < address(_31904):
                                    if not address(_31849):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_34493 + 221] = address(_31849)
                                    mem[_34493 + 241] = address(_31904)
                                    mem[_34493 + 189] = 40
                                    mem[_34493 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34493 + 294] = factoryAddress
                                    mem[_34493 + 314] = sha3(address(_31849), address(_31904))
                                    mem[_34493 + 346] = sub_acaed29c[stor3]
                                    mem[_34493 + 261] = 85
                                    mem[_34493 + 378] = 0
                                    mem[64] = _34493 + 410
                                    mem[_34493 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34493 + 414] = 0
                                    mem[_34493 + 446] = _32105
                                    mem[_34493 + 478] = address(sha3(0, factoryAddress, _34496, sub_acaed29c[stor3]))
                                    mem[_34493 + 510] = 128
                                    mem[_34493 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34493 + s + 574] = mem[_34493 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31849), address(_31904)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31849), address(_31904)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32105, address(sha3(0, factoryAddress, _34496, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not address(_31904):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_34493 + 221] = address(_31904)
                                    mem[_34493 + 241] = address(_31849)
                                    mem[_34493 + 189] = 40
                                    mem[_34493 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34493 + 294] = factoryAddress
                                    mem[_34493 + 314] = sha3(address(_31904), address(_31849))
                                    mem[_34493 + 346] = sub_acaed29c[stor3]
                                    mem[_34493 + 261] = 85
                                    mem[_34493 + 378] = 0
                                    mem[64] = _34493 + 410
                                    mem[_34493 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34493 + 414] = 0
                                    mem[_34493 + 446] = _32105
                                    mem[_34493 + 478] = address(sha3(0, factoryAddress, _34496, sub_acaed29c[stor3]))
                                    mem[_34493 + 510] = 128
                                    mem[_34493 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34493 + s + 574] = mem[_34493 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31904), address(_31849)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31904), address(_31849)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32105, address(sha3(0, factoryAddress, _34496, sub_acaed29c[stor3])), 128, 0
                    else:
                        if idx >= mem[_11177 + ceil32(return_data.size) + 322] - 2:
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if mem[(32 * idx) + _11177 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx) + _11177 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 366 len 20]:
                                if not mem[(32 * idx) + _11177 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _34533 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _11177 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_31904)
                                _34534 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _34536 = sha3(mem[_34534 + 32 len mem[_34534]])
                                mem[_34533 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34533 + 105] = factoryAddress
                                mem[_34533 + 125] = _34536
                                mem[_34533 + 157] = sub_acaed29c[stor3]
                                mem[_34533 + 72] = 85
                                mem[_34533 + 189] = 0
                                mem[64] = _34533 + 221
                                mem[_34533 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34533 + 225] = _32105
                                mem[_34533 + 257] = 0
                                mem[_34533 + 289] = address(cd[4])
                                mem[_34533 + 321] = 128
                                mem[_34533 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[_34533 + s + 385] = mem[_34533 + s + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _34536, sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, _34536, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _32105, 0, address(cd[4]), 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _34541 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_31849)
                                _34542 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _34544 = sha3(mem[_34542 + 32 len mem[_34542]])
                                mem[_34541 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34541 + 105] = factoryAddress
                                mem[_34541 + 125] = _34544
                                mem[_34541 + 157] = sub_acaed29c[stor3]
                                mem[_34541 + 72] = 85
                                mem[_34541 + 189] = 0
                                mem[64] = _34541 + 221
                                mem[_34541 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34541 + 225] = _32105
                                mem[_34541 + 257] = 0
                                mem[_34541 + 289] = address(cd[4])
                                mem[_34541 + 321] = 128
                                mem[_34541 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[_34541 + s + 385] = mem[_34541 + s + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _34544, sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, _34544, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _32105, 0, address(cd[4]), 128, 0
                        else:
                            require idx + 2 < mem[_11177 + ceil32(return_data.size) + 322]
                            _32368 = mem[(32 * idx + 2) + _11177 + ceil32(return_data.size) + 354]
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _11177 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _11177 + ceil32(return_data.size) + 366 len 20]:
                                if not mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _34517 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_32368)
                                _34518 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _34520 = sha3(mem[_34518 + 32 len mem[_34518]])
                                mem[_34517 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34517 + 105] = factoryAddress
                                mem[_34517 + 125] = _34520
                                mem[_34517 + 157] = sub_acaed29c[stor3]
                                mem[_34517 + 72] = 85
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if address(_31849) == address(_31904):
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34517 + 292 len 29]
                                if address(_31849) < address(_31904):
                                    if not address(_31849):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_34517 + 221] = address(_31849)
                                    mem[_34517 + 241] = address(_31904)
                                    mem[_34517 + 189] = 40
                                    mem[_34517 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34517 + 294] = factoryAddress
                                    mem[_34517 + 314] = sha3(address(_31849), address(_31904))
                                    mem[_34517 + 346] = sub_acaed29c[stor3]
                                    mem[_34517 + 261] = 85
                                    mem[_34517 + 378] = 0
                                    mem[64] = _34517 + 410
                                    mem[_34517 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34517 + 414] = _32105
                                    mem[_34517 + 446] = 0
                                    mem[_34517 + 478] = address(sha3(0, factoryAddress, _34520, sub_acaed29c[stor3]))
                                    mem[_34517 + 510] = 128
                                    mem[_34517 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34517 + s + 574] = mem[_34517 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31849), address(_31904)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31849), address(_31904)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32105, 0, address(sha3(0, factoryAddress, _34520, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not address(_31904):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_34517 + 221] = address(_31904)
                                    mem[_34517 + 241] = address(_31849)
                                    mem[_34517 + 189] = 40
                                    mem[_34517 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34517 + 294] = factoryAddress
                                    mem[_34517 + 314] = sha3(address(_31904), address(_31849))
                                    mem[_34517 + 346] = sub_acaed29c[stor3]
                                    mem[_34517 + 261] = 85
                                    mem[_34517 + 378] = 0
                                    mem[64] = _34517 + 410
                                    mem[_34517 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34517 + 414] = _32105
                                    mem[_34517 + 446] = 0
                                    mem[_34517 + 478] = address(sha3(0, factoryAddress, _34520, sub_acaed29c[stor3]))
                                    mem[_34517 + 510] = 128
                                    mem[_34517 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34517 + s + 574] = mem[_34517 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31904), address(_31849)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31904), address(_31849)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32105, 0, address(sha3(0, factoryAddress, _34520, sub_acaed29c[stor3])), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _11177 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _34525 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11177 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_31904)
                                _34526 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _34528 = sha3(mem[_34526 + 32 len mem[_34526]])
                                mem[_34525 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34525 + 105] = factoryAddress
                                mem[_34525 + 125] = _34528
                                mem[_34525 + 157] = sub_acaed29c[stor3]
                                mem[_34525 + 72] = 85
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if address(_31849) == address(_31904):
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34525 + 292 len 29]
                                if address(_31849) < address(_31904):
                                    if not address(_31849):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_34525 + 221] = address(_31849)
                                    mem[_34525 + 241] = address(_31904)
                                    mem[_34525 + 189] = 40
                                    mem[_34525 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34525 + 294] = factoryAddress
                                    mem[_34525 + 314] = sha3(address(_31849), address(_31904))
                                    mem[_34525 + 346] = sub_acaed29c[stor3]
                                    mem[_34525 + 261] = 85
                                    mem[_34525 + 378] = 0
                                    mem[64] = _34525 + 410
                                    mem[_34525 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34525 + 414] = _32105
                                    mem[_34525 + 446] = 0
                                    mem[_34525 + 478] = address(sha3(0, factoryAddress, _34528, sub_acaed29c[stor3]))
                                    mem[_34525 + 510] = 128
                                    mem[_34525 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34525 + s + 574] = mem[_34525 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31849), address(_31904)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31849), address(_31904)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32105, 0, address(sha3(0, factoryAddress, _34528, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not address(_31904):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_34525 + 221] = address(_31904)
                                    mem[_34525 + 241] = address(_31849)
                                    mem[_34525 + 189] = 40
                                    mem[_34525 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34525 + 294] = factoryAddress
                                    mem[_34525 + 314] = sha3(address(_31904), address(_31849))
                                    mem[_34525 + 346] = sub_acaed29c[stor3]
                                    mem[_34525 + 261] = 85
                                    mem[_34525 + 378] = 0
                                    mem[64] = _34525 + 410
                                    mem[_34525 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34525 + 414] = _32105
                                    mem[_34525 + 446] = 0
                                    mem[_34525 + 478] = address(sha3(0, factoryAddress, _34528, sub_acaed29c[stor3]))
                                    mem[_34525 + 510] = 128
                                    mem[_34525 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34525 + s + 574] = mem[_34525 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31904), address(_31849)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31904), address(_31849)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32105, 0, address(sha3(0, factoryAddress, _34528, sub_acaed29c[stor3])), 128, 0
                else:
                    if not mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 366 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                    _32106 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                    if mem[(32 * idx) + _11177 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 366 len 20]:
                        if idx >= mem[_11177 + ceil32(return_data.size) + 322] - 2:
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if mem[(32 * idx) + _11177 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx) + _11177 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 366 len 20]:
                                if not mem[(32 * idx) + _11177 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _34565 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _11177 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_31904)
                                _34566 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _34568 = sha3(mem[_34566 + 32 len mem[_34566]])
                                mem[_34565 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34565 + 105] = factoryAddress
                                mem[_34565 + 125] = _34568
                                mem[_34565 + 157] = sub_acaed29c[stor3]
                                mem[_34565 + 72] = 85
                                mem[_34565 + 189] = 0
                                mem[64] = _34565 + 221
                                mem[_34565 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34565 + 225] = 0
                                mem[_34565 + 257] = _32106
                                mem[_34565 + 289] = address(cd[4])
                                mem[_34565 + 321] = 128
                                mem[_34565 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[_34565 + s + 385] = mem[_34565 + s + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _34568, sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, _34568, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _32106, address(cd[4]), 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _34573 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_31849)
                                _34574 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _34576 = sha3(mem[_34574 + 32 len mem[_34574]])
                                mem[_34573 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34573 + 105] = factoryAddress
                                mem[_34573 + 125] = _34576
                                mem[_34573 + 157] = sub_acaed29c[stor3]
                                mem[_34573 + 72] = 85
                                mem[_34573 + 189] = 0
                                mem[64] = _34573 + 221
                                mem[_34573 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34573 + 225] = 0
                                mem[_34573 + 257] = _32106
                                mem[_34573 + 289] = address(cd[4])
                                mem[_34573 + 321] = 128
                                mem[_34573 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[_34573 + s + 385] = mem[_34573 + s + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _34576, sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, _34576, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _32106, address(cd[4]), 128, 0
                        else:
                            require idx + 2 < mem[_11177 + ceil32(return_data.size) + 322]
                            _32371 = mem[(32 * idx + 2) + _11177 + ceil32(return_data.size) + 354]
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _11177 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _11177 + ceil32(return_data.size) + 366 len 20]:
                                if not mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _34549 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_32371)
                                _34550 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _34552 = sha3(mem[_34550 + 32 len mem[_34550]])
                                mem[_34549 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34549 + 105] = factoryAddress
                                mem[_34549 + 125] = _34552
                                mem[_34549 + 157] = sub_acaed29c[stor3]
                                mem[_34549 + 72] = 85
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if address(_31849) == address(_31904):
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34549 + 292 len 29]
                                if address(_31849) < address(_31904):
                                    if not address(_31849):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_34549 + 221] = address(_31849)
                                    mem[_34549 + 241] = address(_31904)
                                    mem[_34549 + 189] = 40
                                    mem[_34549 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34549 + 294] = factoryAddress
                                    mem[_34549 + 314] = sha3(address(_31849), address(_31904))
                                    mem[_34549 + 346] = sub_acaed29c[stor3]
                                    mem[_34549 + 261] = 85
                                    mem[_34549 + 378] = 0
                                    mem[64] = _34549 + 410
                                    mem[_34549 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34549 + 414] = 0
                                    mem[_34549 + 446] = _32106
                                    mem[_34549 + 478] = address(sha3(0, factoryAddress, _34552, sub_acaed29c[stor3]))
                                    mem[_34549 + 510] = 128
                                    mem[_34549 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34549 + s + 574] = mem[_34549 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31849), address(_31904)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31849), address(_31904)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32106, address(sha3(0, factoryAddress, _34552, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not address(_31904):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_34549 + 221] = address(_31904)
                                    mem[_34549 + 241] = address(_31849)
                                    mem[_34549 + 189] = 40
                                    mem[_34549 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34549 + 294] = factoryAddress
                                    mem[_34549 + 314] = sha3(address(_31904), address(_31849))
                                    mem[_34549 + 346] = sub_acaed29c[stor3]
                                    mem[_34549 + 261] = 85
                                    mem[_34549 + 378] = 0
                                    mem[64] = _34549 + 410
                                    mem[_34549 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34549 + 414] = 0
                                    mem[_34549 + 446] = _32106
                                    mem[_34549 + 478] = address(sha3(0, factoryAddress, _34552, sub_acaed29c[stor3]))
                                    mem[_34549 + 510] = 128
                                    mem[_34549 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34549 + s + 574] = mem[_34549 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31904), address(_31849)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31904), address(_31849)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32106, address(sha3(0, factoryAddress, _34552, sub_acaed29c[stor3])), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _11177 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _34557 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11177 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_31904)
                                _34558 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _34560 = sha3(mem[_34558 + 32 len mem[_34558]])
                                mem[_34557 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34557 + 105] = factoryAddress
                                mem[_34557 + 125] = _34560
                                mem[_34557 + 157] = sub_acaed29c[stor3]
                                mem[_34557 + 72] = 85
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if address(_31849) == address(_31904):
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34557 + 292 len 29]
                                if address(_31849) < address(_31904):
                                    if not address(_31849):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_34557 + 221] = address(_31849)
                                    mem[_34557 + 241] = address(_31904)
                                    mem[_34557 + 189] = 40
                                    mem[_34557 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34557 + 294] = factoryAddress
                                    mem[_34557 + 314] = sha3(address(_31849), address(_31904))
                                    mem[_34557 + 346] = sub_acaed29c[stor3]
                                    mem[_34557 + 261] = 85
                                    mem[_34557 + 378] = 0
                                    mem[64] = _34557 + 410
                                    mem[_34557 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34557 + 414] = 0
                                    mem[_34557 + 446] = _32106
                                    mem[_34557 + 478] = address(sha3(0, factoryAddress, _34560, sub_acaed29c[stor3]))
                                    mem[_34557 + 510] = 128
                                    mem[_34557 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34557 + s + 574] = mem[_34557 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31849), address(_31904)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31849), address(_31904)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32106, address(sha3(0, factoryAddress, _34560, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not address(_31904):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_34557 + 221] = address(_31904)
                                    mem[_34557 + 241] = address(_31849)
                                    mem[_34557 + 189] = 40
                                    mem[_34557 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34557 + 294] = factoryAddress
                                    mem[_34557 + 314] = sha3(address(_31904), address(_31849))
                                    mem[_34557 + 346] = sub_acaed29c[stor3]
                                    mem[_34557 + 261] = 85
                                    mem[_34557 + 378] = 0
                                    mem[64] = _34557 + 410
                                    mem[_34557 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34557 + 414] = 0
                                    mem[_34557 + 446] = _32106
                                    mem[_34557 + 478] = address(sha3(0, factoryAddress, _34560, sub_acaed29c[stor3]))
                                    mem[_34557 + 510] = 128
                                    mem[_34557 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34557 + s + 574] = mem[_34557 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31904), address(_31849)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31904), address(_31849)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32106, address(sha3(0, factoryAddress, _34560, sub_acaed29c[stor3])), 128, 0
                    else:
                        if idx >= mem[_11177 + ceil32(return_data.size) + 322] - 2:
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if mem[(32 * idx) + _11177 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx) + _11177 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 366 len 20]:
                                if not mem[(32 * idx) + _11177 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _34597 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _11177 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_31904)
                                _34598 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _34600 = sha3(mem[_34598 + 32 len mem[_34598]])
                                mem[_34597 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34597 + 105] = factoryAddress
                                mem[_34597 + 125] = _34600
                                mem[_34597 + 157] = sub_acaed29c[stor3]
                                mem[_34597 + 72] = 85
                                mem[_34597 + 189] = 0
                                mem[64] = _34597 + 221
                                mem[_34597 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34597 + 225] = _32106
                                mem[_34597 + 257] = 0
                                mem[_34597 + 289] = address(cd[4])
                                mem[_34597 + 321] = 128
                                mem[_34597 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[_34597 + s + 385] = mem[_34597 + s + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _34600, sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, _34600, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _32106, 0, address(cd[4]), 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _34605 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_31849)
                                _34606 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _34608 = sha3(mem[_34606 + 32 len mem[_34606]])
                                mem[_34605 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34605 + 105] = factoryAddress
                                mem[_34605 + 125] = _34608
                                mem[_34605 + 157] = sub_acaed29c[stor3]
                                mem[_34605 + 72] = 85
                                mem[_34605 + 189] = 0
                                mem[64] = _34605 + 221
                                mem[_34605 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34605 + 225] = _32106
                                mem[_34605 + 257] = 0
                                mem[_34605 + 289] = address(cd[4])
                                mem[_34605 + 321] = 128
                                mem[_34605 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[_34605 + s + 385] = mem[_34605 + s + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _34608, sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, _34608, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _32106, 0, address(cd[4]), 128, 0
                        else:
                            require idx + 2 < mem[_11177 + ceil32(return_data.size) + 322]
                            _32374 = mem[(32 * idx + 2) + _11177 + ceil32(return_data.size) + 354]
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _11177 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _11177 + ceil32(return_data.size) + 366 len 20]:
                                if not mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _34581 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_32374)
                                _34582 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _34584 = sha3(mem[_34582 + 32 len mem[_34582]])
                                mem[_34581 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34581 + 105] = factoryAddress
                                mem[_34581 + 125] = _34584
                                mem[_34581 + 157] = sub_acaed29c[stor3]
                                mem[_34581 + 72] = 85
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if address(_31849) == address(_31904):
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34581 + 292 len 29]
                                if address(_31849) < address(_31904):
                                    if not address(_31849):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_34581 + 221] = address(_31849)
                                    mem[_34581 + 241] = address(_31904)
                                    mem[_34581 + 189] = 40
                                    mem[_34581 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34581 + 294] = factoryAddress
                                    mem[_34581 + 314] = sha3(address(_31849), address(_31904))
                                    mem[_34581 + 346] = sub_acaed29c[stor3]
                                    mem[_34581 + 261] = 85
                                    mem[_34581 + 378] = 0
                                    mem[64] = _34581 + 410
                                    mem[_34581 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34581 + 414] = _32106
                                    mem[_34581 + 446] = 0
                                    mem[_34581 + 478] = address(sha3(0, factoryAddress, _34584, sub_acaed29c[stor3]))
                                    mem[_34581 + 510] = 128
                                    mem[_34581 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34581 + s + 574] = mem[_34581 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31849), address(_31904)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31849), address(_31904)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32106, 0, address(sha3(0, factoryAddress, _34584, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not address(_31904):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_34581 + 221] = address(_31904)
                                    mem[_34581 + 241] = address(_31849)
                                    mem[_34581 + 189] = 40
                                    mem[_34581 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34581 + 294] = factoryAddress
                                    mem[_34581 + 314] = sha3(address(_31904), address(_31849))
                                    mem[_34581 + 346] = sub_acaed29c[stor3]
                                    mem[_34581 + 261] = 85
                                    mem[_34581 + 378] = 0
                                    mem[64] = _34581 + 410
                                    mem[_34581 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34581 + 414] = _32106
                                    mem[_34581 + 446] = 0
                                    mem[_34581 + 478] = address(sha3(0, factoryAddress, _34584, sub_acaed29c[stor3]))
                                    mem[_34581 + 510] = 128
                                    mem[_34581 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34581 + s + 574] = mem[_34581 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31904), address(_31849)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31904), address(_31849)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32106, 0, address(sha3(0, factoryAddress, _34584, sub_acaed29c[stor3])), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _11177 + ceil32(return_data.size) + 366 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _34589 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11177 + ceil32(return_data.size) + 354])
                                mem[mem[64] + 52] = address(_31904)
                                _34590 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _34592 = sha3(mem[_34590 + 32 len mem[_34590]])
                                mem[_34589 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34589 + 105] = factoryAddress
                                mem[_34589 + 125] = _34592
                                mem[_34589 + 157] = sub_acaed29c[stor3]
                                mem[_34589 + 72] = 85
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if address(_31849) == address(_31904):
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34589 + 292 len 29]
                                if address(_31849) < address(_31904):
                                    if not address(_31849):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_34589 + 221] = address(_31849)
                                    mem[_34589 + 241] = address(_31904)
                                    mem[_34589 + 189] = 40
                                    mem[_34589 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34589 + 294] = factoryAddress
                                    mem[_34589 + 314] = sha3(address(_31849), address(_31904))
                                    mem[_34589 + 346] = sub_acaed29c[stor3]
                                    mem[_34589 + 261] = 85
                                    mem[_34589 + 378] = 0
                                    mem[64] = _34589 + 410
                                    mem[_34589 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34589 + 414] = _32106
                                    mem[_34589 + 446] = 0
                                    mem[_34589 + 478] = address(sha3(0, factoryAddress, _34592, sub_acaed29c[stor3]))
                                    mem[_34589 + 510] = 128
                                    mem[_34589 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34589 + s + 574] = mem[_34589 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31849), address(_31904)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31849), address(_31904)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32106, 0, address(sha3(0, factoryAddress, _34592, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not address(_31904):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_34589 + 221] = address(_31904)
                                    mem[_34589 + 241] = address(_31849)
                                    mem[_34589 + 189] = 40
                                    mem[_34589 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34589 + 294] = factoryAddress
                                    mem[_34589 + 314] = sha3(address(_31904), address(_31849))
                                    mem[_34589 + 346] = sub_acaed29c[stor3]
                                    mem[_34589 + 261] = 85
                                    mem[_34589 + 378] = 0
                                    mem[64] = _34589 + 410
                                    mem[_34589 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34589 + 414] = _32106
                                    mem[_34589 + 446] = 0
                                    mem[_34589 + 478] = address(sha3(0, factoryAddress, _34592, sub_acaed29c[stor3]))
                                    mem[_34589 + 510] = 128
                                    mem[_34589 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34589 + s + 574] = mem[_34589 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31904), address(_31849)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31904), address(_31849)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32106, 0, address(sha3(0, factoryAddress, _34592, sub_acaed29c[stor3])), 128, 0
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                idx = idx + 1
                continue 
            mem[mem[64]] = 32
            mem[mem[64] + 32] = mem[(32 * ('cd', 36).length) + 128]
            _31903 = mem[(32 * ('cd', 36).length) + 128]
            mem[mem[64] + 64 len floor32(mem[(32 * ('cd', 36).length) + 128])] = mem[(32 * ('cd', 36).length) + 160 len floor32(mem[(32 * ('cd', 36).length) + 128])]
            return 32, mem[mem[64] + 32 len (32 * _31903) + 32]
        require return_data.size >= 32
        if not mem[_11177 + 353]:
            revert with 0, 
                        32,
                        49,
                        0x545472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472616e7366657246726f6d206661696c65,
                        mem[_11177 + ceil32(return_data.size) + 439 len 15]
        mem[64] = _11177 + ceil32(return_data.size) + (32 * ('cd', 36).length) + 354
        mem[_11177 + ceil32(return_data.size) + 322] = ('cd', 36).length
        mem[_11177 + ceil32(return_data.size) + 354 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
        mem[_11177 + ceil32(return_data.size) + (32 * ('cd', 36).length) + 354] = 0
        idx = 0
        while idx < ('cd', 36).length - 1:
            require idx < mem[_11177 + ceil32(return_data.size) + 322]
            _31851 = mem[(32 * idx) + _11177 + ceil32(return_data.size) + 354]
            require idx + 1 < mem[_11177 + ceil32(return_data.size) + 322]
            _31908 = mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 354]
            if mem[(32 * idx) + _11177 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 366 len 20]:
                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
            if mem[(32 * idx) + _11177 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 366 len 20]:
                if not mem[(32 * idx) + _11177 + ceil32(return_data.size) + 366 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                _32107 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                if mem[(32 * idx) + _11177 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx) + _11177 + ceil32(return_data.size) + 366 len 20]:
                    if idx >= mem[_11177 + ceil32(return_data.size) + 322] - 2:
                        mem[0] = factoryAddress
                        mem[32] = 5
                        if mem[(32 * idx) + _11177 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _11177 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 366 len 20]:
                            if not mem[(32 * idx) + _11177 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _34629 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx) + _11177 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_31908)
                            _34630 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _34632 = sha3(mem[_34630 + 32 len mem[_34630]])
                            mem[_34629 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_34629 + 105] = factoryAddress
                            mem[_34629 + 125] = _34632
                            mem[_34629 + 157] = sub_acaed29c[stor3]
                            mem[_34629 + 72] = 85
                            mem[_34629 + 189] = 0
                            mem[64] = _34629 + 221
                            mem[_34629 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_34629 + 225] = 0
                            mem[_34629 + 257] = _32107
                            mem[_34629 + 289] = address(cd[4])
                            mem[_34629 + 321] = 128
                            mem[_34629 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[_34629 + s + 385] = mem[_34629 + s + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _34632, sub_acaed29c[stor3])))
                            call address(sha3(0, factoryAddress, _34632, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _32107, address(cd[4]), 128, 0
                        else:
                            if not mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _34637 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_31851)
                            _34638 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _34640 = sha3(mem[_34638 + 32 len mem[_34638]])
                            mem[_34637 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_34637 + 105] = factoryAddress
                            mem[_34637 + 125] = _34640
                            mem[_34637 + 157] = sub_acaed29c[stor3]
                            mem[_34637 + 72] = 85
                            mem[_34637 + 189] = 0
                            mem[64] = _34637 + 221
                            mem[_34637 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_34637 + 225] = 0
                            mem[_34637 + 257] = _32107
                            mem[_34637 + 289] = address(cd[4])
                            mem[_34637 + 321] = 128
                            mem[_34637 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[_34637 + s + 385] = mem[_34637 + s + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _34640, sub_acaed29c[stor3])))
                            call address(sha3(0, factoryAddress, _34640, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _32107, address(cd[4]), 128, 0
                    else:
                        require idx + 2 < mem[_11177 + ceil32(return_data.size) + 322]
                        _32377 = mem[(32 * idx + 2) + _11177 + ceil32(return_data.size) + 354]
                        mem[0] = factoryAddress
                        mem[32] = 5
                        if mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _11177 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _11177 + ceil32(return_data.size) + 366 len 20]:
                            if not mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _34613 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_32377)
                            _34614 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _34616 = sha3(mem[_34614 + 32 len mem[_34614]])
                            mem[_34613 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_34613 + 105] = factoryAddress
                            mem[_34613 + 125] = _34616
                            mem[_34613 + 157] = sub_acaed29c[stor3]
                            mem[_34613 + 72] = 85
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if address(_31851) == address(_31908):
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34613 + 292 len 29]
                            if address(_31851) < address(_31908):
                                if not address(_31851):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_34613 + 221] = address(_31851)
                                mem[_34613 + 241] = address(_31908)
                                mem[_34613 + 189] = 40
                                mem[_34613 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34613 + 294] = factoryAddress
                                mem[_34613 + 314] = sha3(address(_31851), address(_31908))
                                mem[_34613 + 346] = sub_acaed29c[stor3]
                                mem[_34613 + 261] = 85
                                mem[_34613 + 378] = 0
                                mem[64] = _34613 + 410
                                mem[_34613 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34613 + 414] = 0
                                mem[_34613 + 446] = _32107
                                mem[_34613 + 478] = address(sha3(0, factoryAddress, _34616, sub_acaed29c[stor3]))
                                mem[_34613 + 510] = 128
                                mem[_34613 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_34613 + s + 574] = mem[_34613 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31851), address(_31908)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31851), address(_31908)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _32107, address(sha3(0, factoryAddress, _34616, sub_acaed29c[stor3])), 128, 0
                            else:
                                if not address(_31908):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_34613 + 221] = address(_31908)
                                mem[_34613 + 241] = address(_31851)
                                mem[_34613 + 189] = 40
                                mem[_34613 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34613 + 294] = factoryAddress
                                mem[_34613 + 314] = sha3(address(_31908), address(_31851))
                                mem[_34613 + 346] = sub_acaed29c[stor3]
                                mem[_34613 + 261] = 85
                                mem[_34613 + 378] = 0
                                mem[64] = _34613 + 410
                                mem[_34613 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34613 + 414] = 0
                                mem[_34613 + 446] = _32107
                                mem[_34613 + 478] = address(sha3(0, factoryAddress, _34616, sub_acaed29c[stor3]))
                                mem[_34613 + 510] = 128
                                mem[_34613 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_34613 + s + 574] = mem[_34613 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31908), address(_31851)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31908), address(_31851)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _32107, address(sha3(0, factoryAddress, _34616, sub_acaed29c[stor3])), 128, 0
                        else:
                            if not mem[(32 * idx + 2) + _11177 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _34621 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11177 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_31908)
                            _34622 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _34624 = sha3(mem[_34622 + 32 len mem[_34622]])
                            mem[_34621 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_34621 + 105] = factoryAddress
                            mem[_34621 + 125] = _34624
                            mem[_34621 + 157] = sub_acaed29c[stor3]
                            mem[_34621 + 72] = 85
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if address(_31851) == address(_31908):
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34621 + 292 len 29]
                            if address(_31851) < address(_31908):
                                if not address(_31851):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_34621 + 221] = address(_31851)
                                mem[_34621 + 241] = address(_31908)
                                mem[_34621 + 189] = 40
                                mem[_34621 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34621 + 294] = factoryAddress
                                mem[_34621 + 314] = sha3(address(_31851), address(_31908))
                                mem[_34621 + 346] = sub_acaed29c[stor3]
                                mem[_34621 + 261] = 85
                                mem[_34621 + 378] = 0
                                mem[64] = _34621 + 410
                                mem[_34621 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34621 + 414] = 0
                                mem[_34621 + 446] = _32107
                                mem[_34621 + 478] = address(sha3(0, factoryAddress, _34624, sub_acaed29c[stor3]))
                                mem[_34621 + 510] = 128
                                mem[_34621 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_34621 + s + 574] = mem[_34621 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31851), address(_31908)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31851), address(_31908)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _32107, address(sha3(0, factoryAddress, _34624, sub_acaed29c[stor3])), 128, 0
                            else:
                                if not address(_31908):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_34621 + 221] = address(_31908)
                                mem[_34621 + 241] = address(_31851)
                                mem[_34621 + 189] = 40
                                mem[_34621 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34621 + 294] = factoryAddress
                                mem[_34621 + 314] = sha3(address(_31908), address(_31851))
                                mem[_34621 + 346] = sub_acaed29c[stor3]
                                mem[_34621 + 261] = 85
                                mem[_34621 + 378] = 0
                                mem[64] = _34621 + 410
                                mem[_34621 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34621 + 414] = 0
                                mem[_34621 + 446] = _32107
                                mem[_34621 + 478] = address(sha3(0, factoryAddress, _34624, sub_acaed29c[stor3]))
                                mem[_34621 + 510] = 128
                                mem[_34621 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_34621 + s + 574] = mem[_34621 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31908), address(_31851)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31908), address(_31851)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _32107, address(sha3(0, factoryAddress, _34624, sub_acaed29c[stor3])), 128, 0
                else:
                    if idx >= mem[_11177 + ceil32(return_data.size) + 322] - 2:
                        mem[0] = factoryAddress
                        mem[32] = 5
                        if mem[(32 * idx) + _11177 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _11177 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 366 len 20]:
                            if not mem[(32 * idx) + _11177 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _34661 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx) + _11177 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_31908)
                            _34662 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _34664 = sha3(mem[_34662 + 32 len mem[_34662]])
                            mem[_34661 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_34661 + 105] = factoryAddress
                            mem[_34661 + 125] = _34664
                            mem[_34661 + 157] = sub_acaed29c[stor3]
                            mem[_34661 + 72] = 85
                            mem[_34661 + 189] = 0
                            mem[64] = _34661 + 221
                            mem[_34661 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_34661 + 225] = _32107
                            mem[_34661 + 257] = 0
                            mem[_34661 + 289] = address(cd[4])
                            mem[_34661 + 321] = 128
                            mem[_34661 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[_34661 + s + 385] = mem[_34661 + s + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _34664, sub_acaed29c[stor3])))
                            call address(sha3(0, factoryAddress, _34664, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _32107, 0, address(cd[4]), 128, 0
                        else:
                            if not mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _34669 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_31851)
                            _34670 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _34672 = sha3(mem[_34670 + 32 len mem[_34670]])
                            mem[_34669 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_34669 + 105] = factoryAddress
                            mem[_34669 + 125] = _34672
                            mem[_34669 + 157] = sub_acaed29c[stor3]
                            mem[_34669 + 72] = 85
                            mem[_34669 + 189] = 0
                            mem[64] = _34669 + 221
                            mem[_34669 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_34669 + 225] = _32107
                            mem[_34669 + 257] = 0
                            mem[_34669 + 289] = address(cd[4])
                            mem[_34669 + 321] = 128
                            mem[_34669 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[_34669 + s + 385] = mem[_34669 + s + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _34672, sub_acaed29c[stor3])))
                            call address(sha3(0, factoryAddress, _34672, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _32107, 0, address(cd[4]), 128, 0
                    else:
                        require idx + 2 < mem[_11177 + ceil32(return_data.size) + 322]
                        _32380 = mem[(32 * idx + 2) + _11177 + ceil32(return_data.size) + 354]
                        mem[0] = factoryAddress
                        mem[32] = 5
                        if mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _11177 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _11177 + ceil32(return_data.size) + 366 len 20]:
                            if not mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _34645 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_32380)
                            _34646 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _34648 = sha3(mem[_34646 + 32 len mem[_34646]])
                            mem[_34645 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_34645 + 105] = factoryAddress
                            mem[_34645 + 125] = _34648
                            mem[_34645 + 157] = sub_acaed29c[stor3]
                            mem[_34645 + 72] = 85
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if address(_31851) == address(_31908):
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34645 + 292 len 29]
                            if address(_31851) < address(_31908):
                                if not address(_31851):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_34645 + 221] = address(_31851)
                                mem[_34645 + 241] = address(_31908)
                                mem[_34645 + 189] = 40
                                mem[_34645 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34645 + 294] = factoryAddress
                                mem[_34645 + 314] = sha3(address(_31851), address(_31908))
                                mem[_34645 + 346] = sub_acaed29c[stor3]
                                mem[_34645 + 261] = 85
                                mem[_34645 + 378] = 0
                                mem[64] = _34645 + 410
                                mem[_34645 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34645 + 414] = _32107
                                mem[_34645 + 446] = 0
                                mem[_34645 + 478] = address(sha3(0, factoryAddress, _34648, sub_acaed29c[stor3]))
                                mem[_34645 + 510] = 128
                                mem[_34645 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_34645 + s + 574] = mem[_34645 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31851), address(_31908)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31851), address(_31908)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _32107, 0, address(sha3(0, factoryAddress, _34648, sub_acaed29c[stor3])), 128, 0
                            else:
                                if not address(_31908):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_34645 + 221] = address(_31908)
                                mem[_34645 + 241] = address(_31851)
                                mem[_34645 + 189] = 40
                                mem[_34645 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34645 + 294] = factoryAddress
                                mem[_34645 + 314] = sha3(address(_31908), address(_31851))
                                mem[_34645 + 346] = sub_acaed29c[stor3]
                                mem[_34645 + 261] = 85
                                mem[_34645 + 378] = 0
                                mem[64] = _34645 + 410
                                mem[_34645 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34645 + 414] = _32107
                                mem[_34645 + 446] = 0
                                mem[_34645 + 478] = address(sha3(0, factoryAddress, _34648, sub_acaed29c[stor3]))
                                mem[_34645 + 510] = 128
                                mem[_34645 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_34645 + s + 574] = mem[_34645 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31908), address(_31851)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31908), address(_31851)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _32107, 0, address(sha3(0, factoryAddress, _34648, sub_acaed29c[stor3])), 128, 0
                        else:
                            if not mem[(32 * idx + 2) + _11177 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _34653 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11177 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_31908)
                            _34654 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _34656 = sha3(mem[_34654 + 32 len mem[_34654]])
                            mem[_34653 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_34653 + 105] = factoryAddress
                            mem[_34653 + 125] = _34656
                            mem[_34653 + 157] = sub_acaed29c[stor3]
                            mem[_34653 + 72] = 85
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if address(_31851) == address(_31908):
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34653 + 292 len 29]
                            if address(_31851) < address(_31908):
                                if not address(_31851):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_34653 + 221] = address(_31851)
                                mem[_34653 + 241] = address(_31908)
                                mem[_34653 + 189] = 40
                                mem[_34653 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34653 + 294] = factoryAddress
                                mem[_34653 + 314] = sha3(address(_31851), address(_31908))
                                mem[_34653 + 346] = sub_acaed29c[stor3]
                                mem[_34653 + 261] = 85
                                mem[_34653 + 378] = 0
                                mem[64] = _34653 + 410
                                mem[_34653 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34653 + 414] = _32107
                                mem[_34653 + 446] = 0
                                mem[_34653 + 478] = address(sha3(0, factoryAddress, _34656, sub_acaed29c[stor3]))
                                mem[_34653 + 510] = 128
                                mem[_34653 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_34653 + s + 574] = mem[_34653 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31851), address(_31908)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31851), address(_31908)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _32107, 0, address(sha3(0, factoryAddress, _34656, sub_acaed29c[stor3])), 128, 0
                            else:
                                if not address(_31908):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_34653 + 221] = address(_31908)
                                mem[_34653 + 241] = address(_31851)
                                mem[_34653 + 189] = 40
                                mem[_34653 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34653 + 294] = factoryAddress
                                mem[_34653 + 314] = sha3(address(_31908), address(_31851))
                                mem[_34653 + 346] = sub_acaed29c[stor3]
                                mem[_34653 + 261] = 85
                                mem[_34653 + 378] = 0
                                mem[64] = _34653 + 410
                                mem[_34653 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34653 + 414] = _32107
                                mem[_34653 + 446] = 0
                                mem[_34653 + 478] = address(sha3(0, factoryAddress, _34656, sub_acaed29c[stor3]))
                                mem[_34653 + 510] = 128
                                mem[_34653 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_34653 + s + 574] = mem[_34653 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31908), address(_31851)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31908), address(_31851)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _32107, 0, address(sha3(0, factoryAddress, _34656, sub_acaed29c[stor3])), 128, 0
            else:
                if not mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 366 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                _32108 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                if mem[(32 * idx) + _11177 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 366 len 20]:
                    if idx >= mem[_11177 + ceil32(return_data.size) + 322] - 2:
                        mem[0] = factoryAddress
                        mem[32] = 5
                        if mem[(32 * idx) + _11177 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _11177 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 366 len 20]:
                            if not mem[(32 * idx) + _11177 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _34693 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx) + _11177 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_31908)
                            _34694 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _34696 = sha3(mem[_34694 + 32 len mem[_34694]])
                            mem[_34693 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_34693 + 105] = factoryAddress
                            mem[_34693 + 125] = _34696
                            mem[_34693 + 157] = sub_acaed29c[stor3]
                            mem[_34693 + 72] = 85
                            mem[_34693 + 189] = 0
                            mem[64] = _34693 + 221
                            mem[_34693 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_34693 + 225] = 0
                            mem[_34693 + 257] = _32108
                            mem[_34693 + 289] = address(cd[4])
                            mem[_34693 + 321] = 128
                            mem[_34693 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[_34693 + s + 385] = mem[_34693 + s + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _34696, sub_acaed29c[stor3])))
                            call address(sha3(0, factoryAddress, _34696, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _32108, address(cd[4]), 128, 0
                        else:
                            if not mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _34701 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_31851)
                            _34702 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _34704 = sha3(mem[_34702 + 32 len mem[_34702]])
                            mem[_34701 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_34701 + 105] = factoryAddress
                            mem[_34701 + 125] = _34704
                            mem[_34701 + 157] = sub_acaed29c[stor3]
                            mem[_34701 + 72] = 85
                            mem[_34701 + 189] = 0
                            mem[64] = _34701 + 221
                            mem[_34701 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_34701 + 225] = 0
                            mem[_34701 + 257] = _32108
                            mem[_34701 + 289] = address(cd[4])
                            mem[_34701 + 321] = 128
                            mem[_34701 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[_34701 + s + 385] = mem[_34701 + s + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _34704, sub_acaed29c[stor3])))
                            call address(sha3(0, factoryAddress, _34704, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _32108, address(cd[4]), 128, 0
                    else:
                        require idx + 2 < mem[_11177 + ceil32(return_data.size) + 322]
                        _32383 = mem[(32 * idx + 2) + _11177 + ceil32(return_data.size) + 354]
                        mem[0] = factoryAddress
                        mem[32] = 5
                        if mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _11177 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _11177 + ceil32(return_data.size) + 366 len 20]:
                            if not mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _34677 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_32383)
                            _34678 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _34680 = sha3(mem[_34678 + 32 len mem[_34678]])
                            mem[_34677 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_34677 + 105] = factoryAddress
                            mem[_34677 + 125] = _34680
                            mem[_34677 + 157] = sub_acaed29c[stor3]
                            mem[_34677 + 72] = 85
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if address(_31851) == address(_31908):
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34677 + 292 len 29]
                            if address(_31851) < address(_31908):
                                if not address(_31851):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_34677 + 221] = address(_31851)
                                mem[_34677 + 241] = address(_31908)
                                mem[_34677 + 189] = 40
                                mem[_34677 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34677 + 294] = factoryAddress
                                mem[_34677 + 314] = sha3(address(_31851), address(_31908))
                                mem[_34677 + 346] = sub_acaed29c[stor3]
                                mem[_34677 + 261] = 85
                                mem[_34677 + 378] = 0
                                mem[64] = _34677 + 410
                                mem[_34677 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34677 + 414] = 0
                                mem[_34677 + 446] = _32108
                                mem[_34677 + 478] = address(sha3(0, factoryAddress, _34680, sub_acaed29c[stor3]))
                                mem[_34677 + 510] = 128
                                mem[_34677 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_34677 + s + 574] = mem[_34677 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31851), address(_31908)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31851), address(_31908)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _32108, address(sha3(0, factoryAddress, _34680, sub_acaed29c[stor3])), 128, 0
                            else:
                                if not address(_31908):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_34677 + 221] = address(_31908)
                                mem[_34677 + 241] = address(_31851)
                                mem[_34677 + 189] = 40
                                mem[_34677 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34677 + 294] = factoryAddress
                                mem[_34677 + 314] = sha3(address(_31908), address(_31851))
                                mem[_34677 + 346] = sub_acaed29c[stor3]
                                mem[_34677 + 261] = 85
                                mem[_34677 + 378] = 0
                                mem[64] = _34677 + 410
                                mem[_34677 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34677 + 414] = 0
                                mem[_34677 + 446] = _32108
                                mem[_34677 + 478] = address(sha3(0, factoryAddress, _34680, sub_acaed29c[stor3]))
                                mem[_34677 + 510] = 128
                                mem[_34677 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_34677 + s + 574] = mem[_34677 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31908), address(_31851)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31908), address(_31851)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _32108, address(sha3(0, factoryAddress, _34680, sub_acaed29c[stor3])), 128, 0
                        else:
                            if not mem[(32 * idx + 2) + _11177 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _34685 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11177 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_31908)
                            _34686 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _34688 = sha3(mem[_34686 + 32 len mem[_34686]])
                            mem[_34685 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_34685 + 105] = factoryAddress
                            mem[_34685 + 125] = _34688
                            mem[_34685 + 157] = sub_acaed29c[stor3]
                            mem[_34685 + 72] = 85
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if address(_31851) == address(_31908):
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34685 + 292 len 29]
                            if address(_31851) < address(_31908):
                                if not address(_31851):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_34685 + 221] = address(_31851)
                                mem[_34685 + 241] = address(_31908)
                                mem[_34685 + 189] = 40
                                mem[_34685 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34685 + 294] = factoryAddress
                                mem[_34685 + 314] = sha3(address(_31851), address(_31908))
                                mem[_34685 + 346] = sub_acaed29c[stor3]
                                mem[_34685 + 261] = 85
                                mem[_34685 + 378] = 0
                                mem[64] = _34685 + 410
                                mem[_34685 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34685 + 414] = 0
                                mem[_34685 + 446] = _32108
                                mem[_34685 + 478] = address(sha3(0, factoryAddress, _34688, sub_acaed29c[stor3]))
                                mem[_34685 + 510] = 128
                                mem[_34685 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_34685 + s + 574] = mem[_34685 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31851), address(_31908)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31851), address(_31908)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _32108, address(sha3(0, factoryAddress, _34688, sub_acaed29c[stor3])), 128, 0
                            else:
                                if not address(_31908):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_34685 + 221] = address(_31908)
                                mem[_34685 + 241] = address(_31851)
                                mem[_34685 + 189] = 40
                                mem[_34685 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34685 + 294] = factoryAddress
                                mem[_34685 + 314] = sha3(address(_31908), address(_31851))
                                mem[_34685 + 346] = sub_acaed29c[stor3]
                                mem[_34685 + 261] = 85
                                mem[_34685 + 378] = 0
                                mem[64] = _34685 + 410
                                mem[_34685 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34685 + 414] = 0
                                mem[_34685 + 446] = _32108
                                mem[_34685 + 478] = address(sha3(0, factoryAddress, _34688, sub_acaed29c[stor3]))
                                mem[_34685 + 510] = 128
                                mem[_34685 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_34685 + s + 574] = mem[_34685 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31908), address(_31851)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31908), address(_31851)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _32108, address(sha3(0, factoryAddress, _34688, sub_acaed29c[stor3])), 128, 0
                else:
                    if idx >= mem[_11177 + ceil32(return_data.size) + 322] - 2:
                        mem[0] = factoryAddress
                        mem[32] = 5
                        if mem[(32 * idx) + _11177 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _11177 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 366 len 20]:
                            if not mem[(32 * idx) + _11177 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _34725 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx) + _11177 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_31908)
                            _34726 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _34728 = sha3(mem[_34726 + 32 len mem[_34726]])
                            mem[_34725 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_34725 + 105] = factoryAddress
                            mem[_34725 + 125] = _34728
                            mem[_34725 + 157] = sub_acaed29c[stor3]
                            mem[_34725 + 72] = 85
                            mem[_34725 + 189] = 0
                            mem[64] = _34725 + 221
                            mem[_34725 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_34725 + 225] = _32108
                            mem[_34725 + 257] = 0
                            mem[_34725 + 289] = address(cd[4])
                            mem[_34725 + 321] = 128
                            mem[_34725 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[_34725 + s + 385] = mem[_34725 + s + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _34728, sub_acaed29c[stor3])))
                            call address(sha3(0, factoryAddress, _34728, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _32108, 0, address(cd[4]), 128, 0
                        else:
                            if not mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _34733 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_31851)
                            _34734 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _34736 = sha3(mem[_34734 + 32 len mem[_34734]])
                            mem[_34733 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_34733 + 105] = factoryAddress
                            mem[_34733 + 125] = _34736
                            mem[_34733 + 157] = sub_acaed29c[stor3]
                            mem[_34733 + 72] = 85
                            mem[_34733 + 189] = 0
                            mem[64] = _34733 + 221
                            mem[_34733 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_34733 + 225] = _32108
                            mem[_34733 + 257] = 0
                            mem[_34733 + 289] = address(cd[4])
                            mem[_34733 + 321] = 128
                            mem[_34733 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[_34733 + s + 385] = mem[_34733 + s + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _34736, sub_acaed29c[stor3])))
                            call address(sha3(0, factoryAddress, _34736, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _32108, 0, address(cd[4]), 128, 0
                    else:
                        require idx + 2 < mem[_11177 + ceil32(return_data.size) + 322]
                        _32386 = mem[(32 * idx + 2) + _11177 + ceil32(return_data.size) + 354]
                        mem[0] = factoryAddress
                        mem[32] = 5
                        if mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _11177 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _11177 + ceil32(return_data.size) + 366 len 20]:
                            if not mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _34709 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11177 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_32386)
                            _34710 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _34712 = sha3(mem[_34710 + 32 len mem[_34710]])
                            mem[_34709 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_34709 + 105] = factoryAddress
                            mem[_34709 + 125] = _34712
                            mem[_34709 + 157] = sub_acaed29c[stor3]
                            mem[_34709 + 72] = 85
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if address(_31851) == address(_31908):
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34709 + 292 len 29]
                            if address(_31851) < address(_31908):
                                if not address(_31851):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_34709 + 221] = address(_31851)
                                mem[_34709 + 241] = address(_31908)
                                mem[_34709 + 189] = 40
                                mem[_34709 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34709 + 294] = factoryAddress
                                mem[_34709 + 314] = sha3(address(_31851), address(_31908))
                                mem[_34709 + 346] = sub_acaed29c[stor3]
                                mem[_34709 + 261] = 85
                                mem[_34709 + 378] = 0
                                mem[64] = _34709 + 410
                                mem[_34709 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34709 + 414] = _32108
                                mem[_34709 + 446] = 0
                                mem[_34709 + 478] = address(sha3(0, factoryAddress, _34712, sub_acaed29c[stor3]))
                                mem[_34709 + 510] = 128
                                mem[_34709 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_34709 + s + 574] = mem[_34709 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31851), address(_31908)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31851), address(_31908)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _32108, 0, address(sha3(0, factoryAddress, _34712, sub_acaed29c[stor3])), 128, 0
                            else:
                                if not address(_31908):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_34709 + 221] = address(_31908)
                                mem[_34709 + 241] = address(_31851)
                                mem[_34709 + 189] = 40
                                mem[_34709 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34709 + 294] = factoryAddress
                                mem[_34709 + 314] = sha3(address(_31908), address(_31851))
                                mem[_34709 + 346] = sub_acaed29c[stor3]
                                mem[_34709 + 261] = 85
                                mem[_34709 + 378] = 0
                                mem[64] = _34709 + 410
                                mem[_34709 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34709 + 414] = _32108
                                mem[_34709 + 446] = 0
                                mem[_34709 + 478] = address(sha3(0, factoryAddress, _34712, sub_acaed29c[stor3]))
                                mem[_34709 + 510] = 128
                                mem[_34709 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_34709 + s + 574] = mem[_34709 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31908), address(_31851)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31908), address(_31851)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _32108, 0, address(sha3(0, factoryAddress, _34712, sub_acaed29c[stor3])), 128, 0
                        else:
                            if not mem[(32 * idx + 2) + _11177 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _34717 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11177 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_31908)
                            _34718 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _34720 = sha3(mem[_34718 + 32 len mem[_34718]])
                            mem[_34717 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_34717 + 105] = factoryAddress
                            mem[_34717 + 125] = _34720
                            mem[_34717 + 157] = sub_acaed29c[stor3]
                            mem[_34717 + 72] = 85
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if address(_31851) == address(_31908):
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34717 + 292 len 29]
                            if address(_31851) < address(_31908):
                                if not address(_31851):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_34717 + 221] = address(_31851)
                                mem[_34717 + 241] = address(_31908)
                                mem[_34717 + 189] = 40
                                mem[_34717 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34717 + 294] = factoryAddress
                                mem[_34717 + 314] = sha3(address(_31851), address(_31908))
                                mem[_34717 + 346] = sub_acaed29c[stor3]
                                mem[_34717 + 261] = 85
                                mem[_34717 + 378] = 0
                                mem[64] = _34717 + 410
                                mem[_34717 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34717 + 414] = _32108
                                mem[_34717 + 446] = 0
                                mem[_34717 + 478] = address(sha3(0, factoryAddress, _34720, sub_acaed29c[stor3]))
                                mem[_34717 + 510] = 128
                                mem[_34717 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_34717 + s + 574] = mem[_34717 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31851), address(_31908)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31851), address(_31908)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _32108, 0, address(sha3(0, factoryAddress, _34720, sub_acaed29c[stor3])), 128, 0
                            else:
                                if not address(_31908):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_34717 + 221] = address(_31908)
                                mem[_34717 + 241] = address(_31851)
                                mem[_34717 + 189] = 40
                                mem[_34717 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34717 + 294] = factoryAddress
                                mem[_34717 + 314] = sha3(address(_31908), address(_31851))
                                mem[_34717 + 346] = sub_acaed29c[stor3]
                                mem[_34717 + 261] = 85
                                mem[_34717 + 378] = 0
                                mem[64] = _34717 + 410
                                mem[_34717 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34717 + 414] = _32108
                                mem[_34717 + 446] = 0
                                mem[_34717 + 478] = address(sha3(0, factoryAddress, _34720, sub_acaed29c[stor3]))
                                mem[_34717 + 510] = 128
                                mem[_34717 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_34717 + s + 574] = mem[_34717 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31908), address(_31851)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31908), address(_31851)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _32108, 0, address(sha3(0, factoryAddress, _34720, sub_acaed29c[stor3])), 128, 0
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            idx = idx + 1
            continue 
        mem[mem[64]] = 32
        mem[mem[64] + 32] = mem[(32 * ('cd', 36).length) + 128]
        _31907 = mem[(32 * ('cd', 36).length) + 128]
        mem[mem[64] + 64 len floor32(mem[(32 * ('cd', 36).length) + 128])] = mem[(32 * ('cd', 36).length) + 160 len floor32(mem[(32 * ('cd', 36).length) + 128])]
        return 32, mem[mem[64] + 32 len (32 * _31907) + 32]
    if not address(('cd', 36)[1]):
        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
    _11185 = mem[64]
    mem[mem[64] + 32] = address(('cd', 36)[1])
    mem[mem[64] + 52] = address(('cd', 36)[0])
    _11186 = mem[64]
    mem[mem[64]] = 40
    mem[64] = mem[64] + 72
    _11188 = sha3(mem[_11186 + 32 len mem[_11186]])
    mem[_11185 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
    mem[_11185 + 105] = factoryAddress
    mem[_11185 + 125] = _11188
    mem[_11185 + 157] = sub_acaed29c[stor3]
    mem[_11185 + 72] = 85
    require 0 < mem[(32 * ('cd', 36).length) + 128]
    _11208 = mem[(32 * ('cd', 36).length) + 160]
    mem[_11185 + 225] = this.address
    mem[_11185 + 257] = address(sha3(0, factoryAddress, _11188, sub_acaed29c[stor3]))
    mem[_11185 + 289] = _11208
    mem[_11185 + 189] = 100
    mem[_11185 + 225 len 28] = address(this.address) << 64
    mem[_11185 + 221 len 4] = unknown_0x23b872dd(?????)
    mem[_11185 + 321 len 96] = unknown_0x23b872dd(?????), address(this.address) << 64, 0, address(sha3(0, factoryAddress, _11188, sub_acaed29c[stor3])), Mask(224, 32, _11208) >> 32
    mem[_11185 + 445 len 4] = Mask(32, 64, _11208) >> 64
    call address(('cd', 36)[0]) with:
         gas gas_remaining wei
        args Mask(224, 32, _11208) << 480, mem[_11185 + 417 len 4]
    if not return_data.size:
        if not ext_call.success:
            revert with 0, 
                        32,
                        49,
                        0x545472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472616e7366657246726f6d206661696c65,
                        mem[_11185 + 438 len 7],
                        Mask(32, 64, _11208) >> 64,
                        mem[_11185 + 449 len 4]
        if not mem[96]:
            mem[64] = _11185 + (32 * ('cd', 36).length) + 353
            mem[_11185 + 321] = ('cd', 36).length
            mem[_11185 + 353 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
            mem[_11185 + (32 * ('cd', 36).length) + 353] = 0
            idx = 0
            while idx < ('cd', 36).length - 1:
                require idx < mem[_11185 + 321]
                _31853 = mem[(32 * idx) + _11185 + 353]
                require idx + 1 < mem[_11185 + 321]
                _31912 = mem[(32 * idx + 1) + _11185 + 353]
                if mem[(32 * idx) + _11185 + 365 len 20] == mem[(32 * idx + 1) + _11185 + 365 len 20]:
                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                if mem[(32 * idx) + _11185 + 365 len 20] < mem[(32 * idx + 1) + _11185 + 365 len 20]:
                    if not mem[(32 * idx) + _11185 + 365 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                    _32109 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                    if mem[(32 * idx) + _11185 + 365 len 20] == mem[(32 * idx) + _11185 + 365 len 20]:
                        if idx >= mem[_11185 + 321] - 2:
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if mem[(32 * idx) + _11185 + 365 len 20] == mem[(32 * idx + 1) + _11185 + 365 len 20]:
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx) + _11185 + 365 len 20] < mem[(32 * idx + 1) + _11185 + 365 len 20]:
                                if not mem[(32 * idx) + _11185 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _34757 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _11185 + 353])
                                mem[mem[64] + 52] = address(_31912)
                                _34758 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _34760 = sha3(mem[_34758 + 32 len mem[_34758]])
                                mem[_34757 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34757 + 105] = factoryAddress
                                mem[_34757 + 125] = _34760
                                mem[_34757 + 157] = sub_acaed29c[stor3]
                                mem[_34757 + 72] = 85
                                mem[_34757 + 189] = 0
                                mem[64] = _34757 + 221
                                mem[_34757 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34757 + 225] = 0
                                mem[_34757 + 257] = _32109
                                mem[_34757 + 289] = address(cd[4])
                                mem[_34757 + 321] = 128
                                mem[_34757 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[_34757 + s + 385] = mem[_34757 + s + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _34760, sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, _34760, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _32109, address(cd[4]), 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _11185 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _34765 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11185 + 353])
                                mem[mem[64] + 52] = address(_31853)
                                _34766 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _34768 = sha3(mem[_34766 + 32 len mem[_34766]])
                                mem[_34765 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34765 + 105] = factoryAddress
                                mem[_34765 + 125] = _34768
                                mem[_34765 + 157] = sub_acaed29c[stor3]
                                mem[_34765 + 72] = 85
                                mem[_34765 + 189] = 0
                                mem[64] = _34765 + 221
                                mem[_34765 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34765 + 225] = 0
                                mem[_34765 + 257] = _32109
                                mem[_34765 + 289] = address(cd[4])
                                mem[_34765 + 321] = 128
                                mem[_34765 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[_34765 + s + 385] = mem[_34765 + s + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _34768, sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, _34768, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _32109, address(cd[4]), 128, 0
                        else:
                            require idx + 2 < mem[_11185 + 321]
                            _32389 = mem[(32 * idx + 2) + _11185 + 353]
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if mem[(32 * idx + 1) + _11185 + 365 len 20] == mem[(32 * idx + 2) + _11185 + 365 len 20]:
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx + 1) + _11185 + 365 len 20] < mem[(32 * idx + 2) + _11185 + 365 len 20]:
                                if not mem[(32 * idx + 1) + _11185 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _34741 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11185 + 353])
                                mem[mem[64] + 52] = address(_32389)
                                _34742 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _34744 = sha3(mem[_34742 + 32 len mem[_34742]])
                                mem[_34741 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34741 + 105] = factoryAddress
                                mem[_34741 + 125] = _34744
                                mem[_34741 + 157] = sub_acaed29c[stor3]
                                mem[_34741 + 72] = 85
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if address(_31853) == address(_31912):
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34741 + 292 len 29]
                                if address(_31853) < address(_31912):
                                    if not address(_31853):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_34741 + 221] = address(_31853)
                                    mem[_34741 + 241] = address(_31912)
                                    mem[_34741 + 189] = 40
                                    mem[_34741 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34741 + 294] = factoryAddress
                                    mem[_34741 + 314] = sha3(address(_31853), address(_31912))
                                    mem[_34741 + 346] = sub_acaed29c[stor3]
                                    mem[_34741 + 261] = 85
                                    mem[_34741 + 378] = 0
                                    mem[64] = _34741 + 410
                                    mem[_34741 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34741 + 414] = 0
                                    mem[_34741 + 446] = _32109
                                    mem[_34741 + 478] = address(sha3(0, factoryAddress, _34744, sub_acaed29c[stor3]))
                                    mem[_34741 + 510] = 128
                                    mem[_34741 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34741 + s + 574] = mem[_34741 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31853), address(_31912)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31853), address(_31912)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32109, address(sha3(0, factoryAddress, _34744, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not address(_31912):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_34741 + 221] = address(_31912)
                                    mem[_34741 + 241] = address(_31853)
                                    mem[_34741 + 189] = 40
                                    mem[_34741 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34741 + 294] = factoryAddress
                                    mem[_34741 + 314] = sha3(address(_31912), address(_31853))
                                    mem[_34741 + 346] = sub_acaed29c[stor3]
                                    mem[_34741 + 261] = 85
                                    mem[_34741 + 378] = 0
                                    mem[64] = _34741 + 410
                                    mem[_34741 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34741 + 414] = 0
                                    mem[_34741 + 446] = _32109
                                    mem[_34741 + 478] = address(sha3(0, factoryAddress, _34744, sub_acaed29c[stor3]))
                                    mem[_34741 + 510] = 128
                                    mem[_34741 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34741 + s + 574] = mem[_34741 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31912), address(_31853)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31912), address(_31853)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32109, address(sha3(0, factoryAddress, _34744, sub_acaed29c[stor3])), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _11185 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _34749 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11185 + 353])
                                mem[mem[64] + 52] = address(_31912)
                                _34750 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _34752 = sha3(mem[_34750 + 32 len mem[_34750]])
                                mem[_34749 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34749 + 105] = factoryAddress
                                mem[_34749 + 125] = _34752
                                mem[_34749 + 157] = sub_acaed29c[stor3]
                                mem[_34749 + 72] = 85
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if address(_31853) == address(_31912):
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34749 + 292 len 29]
                                if address(_31853) < address(_31912):
                                    if not address(_31853):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_34749 + 221] = address(_31853)
                                    mem[_34749 + 241] = address(_31912)
                                    mem[_34749 + 189] = 40
                                    mem[_34749 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34749 + 294] = factoryAddress
                                    mem[_34749 + 314] = sha3(address(_31853), address(_31912))
                                    mem[_34749 + 346] = sub_acaed29c[stor3]
                                    mem[_34749 + 261] = 85
                                    mem[_34749 + 378] = 0
                                    mem[64] = _34749 + 410
                                    mem[_34749 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34749 + 414] = 0
                                    mem[_34749 + 446] = _32109
                                    mem[_34749 + 478] = address(sha3(0, factoryAddress, _34752, sub_acaed29c[stor3]))
                                    mem[_34749 + 510] = 128
                                    mem[_34749 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34749 + s + 574] = mem[_34749 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31853), address(_31912)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31853), address(_31912)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32109, address(sha3(0, factoryAddress, _34752, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not address(_31912):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_34749 + 221] = address(_31912)
                                    mem[_34749 + 241] = address(_31853)
                                    mem[_34749 + 189] = 40
                                    mem[_34749 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34749 + 294] = factoryAddress
                                    mem[_34749 + 314] = sha3(address(_31912), address(_31853))
                                    mem[_34749 + 346] = sub_acaed29c[stor3]
                                    mem[_34749 + 261] = 85
                                    mem[_34749 + 378] = 0
                                    mem[64] = _34749 + 410
                                    mem[_34749 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34749 + 414] = 0
                                    mem[_34749 + 446] = _32109
                                    mem[_34749 + 478] = address(sha3(0, factoryAddress, _34752, sub_acaed29c[stor3]))
                                    mem[_34749 + 510] = 128
                                    mem[_34749 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34749 + s + 574] = mem[_34749 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31912), address(_31853)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31912), address(_31853)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32109, address(sha3(0, factoryAddress, _34752, sub_acaed29c[stor3])), 128, 0
                    else:
                        if idx >= mem[_11185 + 321] - 2:
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if mem[(32 * idx) + _11185 + 365 len 20] == mem[(32 * idx + 1) + _11185 + 365 len 20]:
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx) + _11185 + 365 len 20] < mem[(32 * idx + 1) + _11185 + 365 len 20]:
                                if not mem[(32 * idx) + _11185 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _34789 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _11185 + 353])
                                mem[mem[64] + 52] = address(_31912)
                                _34790 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _34792 = sha3(mem[_34790 + 32 len mem[_34790]])
                                mem[_34789 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34789 + 105] = factoryAddress
                                mem[_34789 + 125] = _34792
                                mem[_34789 + 157] = sub_acaed29c[stor3]
                                mem[_34789 + 72] = 85
                                mem[_34789 + 189] = 0
                                mem[64] = _34789 + 221
                                mem[_34789 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34789 + 225] = _32109
                                mem[_34789 + 257] = 0
                                mem[_34789 + 289] = address(cd[4])
                                mem[_34789 + 321] = 128
                                mem[_34789 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[_34789 + s + 385] = mem[_34789 + s + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _34792, sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, _34792, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _32109, 0, address(cd[4]), 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _11185 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _34797 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11185 + 353])
                                mem[mem[64] + 52] = address(_31853)
                                _34798 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _34800 = sha3(mem[_34798 + 32 len mem[_34798]])
                                mem[_34797 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34797 + 105] = factoryAddress
                                mem[_34797 + 125] = _34800
                                mem[_34797 + 157] = sub_acaed29c[stor3]
                                mem[_34797 + 72] = 85
                                mem[_34797 + 189] = 0
                                mem[64] = _34797 + 221
                                mem[_34797 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34797 + 225] = _32109
                                mem[_34797 + 257] = 0
                                mem[_34797 + 289] = address(cd[4])
                                mem[_34797 + 321] = 128
                                mem[_34797 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[_34797 + s + 385] = mem[_34797 + s + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _34800, sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, _34800, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _32109, 0, address(cd[4]), 128, 0
                        else:
                            require idx + 2 < mem[_11185 + 321]
                            _32392 = mem[(32 * idx + 2) + _11185 + 353]
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if mem[(32 * idx + 1) + _11185 + 365 len 20] == mem[(32 * idx + 2) + _11185 + 365 len 20]:
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx + 1) + _11185 + 365 len 20] < mem[(32 * idx + 2) + _11185 + 365 len 20]:
                                if not mem[(32 * idx + 1) + _11185 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _34773 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11185 + 353])
                                mem[mem[64] + 52] = address(_32392)
                                _34774 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _34776 = sha3(mem[_34774 + 32 len mem[_34774]])
                                mem[_34773 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34773 + 105] = factoryAddress
                                mem[_34773 + 125] = _34776
                                mem[_34773 + 157] = sub_acaed29c[stor3]
                                mem[_34773 + 72] = 85
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if address(_31853) == address(_31912):
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34773 + 292 len 29]
                                if address(_31853) < address(_31912):
                                    if not address(_31853):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_34773 + 221] = address(_31853)
                                    mem[_34773 + 241] = address(_31912)
                                    mem[_34773 + 189] = 40
                                    mem[_34773 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34773 + 294] = factoryAddress
                                    mem[_34773 + 314] = sha3(address(_31853), address(_31912))
                                    mem[_34773 + 346] = sub_acaed29c[stor3]
                                    mem[_34773 + 261] = 85
                                    mem[_34773 + 378] = 0
                                    mem[64] = _34773 + 410
                                    mem[_34773 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34773 + 414] = _32109
                                    mem[_34773 + 446] = 0
                                    mem[_34773 + 478] = address(sha3(0, factoryAddress, _34776, sub_acaed29c[stor3]))
                                    mem[_34773 + 510] = 128
                                    mem[_34773 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34773 + s + 574] = mem[_34773 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31853), address(_31912)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31853), address(_31912)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32109, 0, address(sha3(0, factoryAddress, _34776, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not address(_31912):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_34773 + 221] = address(_31912)
                                    mem[_34773 + 241] = address(_31853)
                                    mem[_34773 + 189] = 40
                                    mem[_34773 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34773 + 294] = factoryAddress
                                    mem[_34773 + 314] = sha3(address(_31912), address(_31853))
                                    mem[_34773 + 346] = sub_acaed29c[stor3]
                                    mem[_34773 + 261] = 85
                                    mem[_34773 + 378] = 0
                                    mem[64] = _34773 + 410
                                    mem[_34773 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34773 + 414] = _32109
                                    mem[_34773 + 446] = 0
                                    mem[_34773 + 478] = address(sha3(0, factoryAddress, _34776, sub_acaed29c[stor3]))
                                    mem[_34773 + 510] = 128
                                    mem[_34773 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34773 + s + 574] = mem[_34773 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31912), address(_31853)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31912), address(_31853)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32109, 0, address(sha3(0, factoryAddress, _34776, sub_acaed29c[stor3])), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _11185 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _34781 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11185 + 353])
                                mem[mem[64] + 52] = address(_31912)
                                _34782 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _34784 = sha3(mem[_34782 + 32 len mem[_34782]])
                                mem[_34781 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34781 + 105] = factoryAddress
                                mem[_34781 + 125] = _34784
                                mem[_34781 + 157] = sub_acaed29c[stor3]
                                mem[_34781 + 72] = 85
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if address(_31853) == address(_31912):
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34781 + 292 len 29]
                                if address(_31853) < address(_31912):
                                    if not address(_31853):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_34781 + 221] = address(_31853)
                                    mem[_34781 + 241] = address(_31912)
                                    mem[_34781 + 189] = 40
                                    mem[_34781 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34781 + 294] = factoryAddress
                                    mem[_34781 + 314] = sha3(address(_31853), address(_31912))
                                    mem[_34781 + 346] = sub_acaed29c[stor3]
                                    mem[_34781 + 261] = 85
                                    mem[_34781 + 378] = 0
                                    mem[64] = _34781 + 410
                                    mem[_34781 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34781 + 414] = _32109
                                    mem[_34781 + 446] = 0
                                    mem[_34781 + 478] = address(sha3(0, factoryAddress, _34784, sub_acaed29c[stor3]))
                                    mem[_34781 + 510] = 128
                                    mem[_34781 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34781 + s + 574] = mem[_34781 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31853), address(_31912)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31853), address(_31912)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32109, 0, address(sha3(0, factoryAddress, _34784, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not address(_31912):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_34781 + 221] = address(_31912)
                                    mem[_34781 + 241] = address(_31853)
                                    mem[_34781 + 189] = 40
                                    mem[_34781 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34781 + 294] = factoryAddress
                                    mem[_34781 + 314] = sha3(address(_31912), address(_31853))
                                    mem[_34781 + 346] = sub_acaed29c[stor3]
                                    mem[_34781 + 261] = 85
                                    mem[_34781 + 378] = 0
                                    mem[64] = _34781 + 410
                                    mem[_34781 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34781 + 414] = _32109
                                    mem[_34781 + 446] = 0
                                    mem[_34781 + 478] = address(sha3(0, factoryAddress, _34784, sub_acaed29c[stor3]))
                                    mem[_34781 + 510] = 128
                                    mem[_34781 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34781 + s + 574] = mem[_34781 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31912), address(_31853)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31912), address(_31853)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32109, 0, address(sha3(0, factoryAddress, _34784, sub_acaed29c[stor3])), 128, 0
                else:
                    if not mem[(32 * idx + 1) + _11185 + 365 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                    _32110 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                    if mem[(32 * idx) + _11185 + 365 len 20] == mem[(32 * idx + 1) + _11185 + 365 len 20]:
                        if idx >= mem[_11185 + 321] - 2:
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if mem[(32 * idx) + _11185 + 365 len 20] == mem[(32 * idx + 1) + _11185 + 365 len 20]:
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx) + _11185 + 365 len 20] < mem[(32 * idx + 1) + _11185 + 365 len 20]:
                                if not mem[(32 * idx) + _11185 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _34821 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _11185 + 353])
                                mem[mem[64] + 52] = address(_31912)
                                _34822 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _34824 = sha3(mem[_34822 + 32 len mem[_34822]])
                                mem[_34821 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34821 + 105] = factoryAddress
                                mem[_34821 + 125] = _34824
                                mem[_34821 + 157] = sub_acaed29c[stor3]
                                mem[_34821 + 72] = 85
                                mem[_34821 + 189] = 0
                                mem[64] = _34821 + 221
                                mem[_34821 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34821 + 225] = 0
                                mem[_34821 + 257] = _32110
                                mem[_34821 + 289] = address(cd[4])
                                mem[_34821 + 321] = 128
                                mem[_34821 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[_34821 + s + 385] = mem[_34821 + s + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _34824, sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, _34824, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _32110, address(cd[4]), 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _11185 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _34829 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11185 + 353])
                                mem[mem[64] + 52] = address(_31853)
                                _34830 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _34832 = sha3(mem[_34830 + 32 len mem[_34830]])
                                mem[_34829 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34829 + 105] = factoryAddress
                                mem[_34829 + 125] = _34832
                                mem[_34829 + 157] = sub_acaed29c[stor3]
                                mem[_34829 + 72] = 85
                                mem[_34829 + 189] = 0
                                mem[64] = _34829 + 221
                                mem[_34829 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34829 + 225] = 0
                                mem[_34829 + 257] = _32110
                                mem[_34829 + 289] = address(cd[4])
                                mem[_34829 + 321] = 128
                                mem[_34829 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[_34829 + s + 385] = mem[_34829 + s + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _34832, sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, _34832, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _32110, address(cd[4]), 128, 0
                        else:
                            require idx + 2 < mem[_11185 + 321]
                            _32395 = mem[(32 * idx + 2) + _11185 + 353]
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if mem[(32 * idx + 1) + _11185 + 365 len 20] == mem[(32 * idx + 2) + _11185 + 365 len 20]:
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx + 1) + _11185 + 365 len 20] < mem[(32 * idx + 2) + _11185 + 365 len 20]:
                                if not mem[(32 * idx + 1) + _11185 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _34805 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11185 + 353])
                                mem[mem[64] + 52] = address(_32395)
                                _34806 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _34808 = sha3(mem[_34806 + 32 len mem[_34806]])
                                mem[_34805 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34805 + 105] = factoryAddress
                                mem[_34805 + 125] = _34808
                                mem[_34805 + 157] = sub_acaed29c[stor3]
                                mem[_34805 + 72] = 85
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if address(_31853) == address(_31912):
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34805 + 292 len 29]
                                if address(_31853) < address(_31912):
                                    if not address(_31853):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_34805 + 221] = address(_31853)
                                    mem[_34805 + 241] = address(_31912)
                                    mem[_34805 + 189] = 40
                                    mem[_34805 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34805 + 294] = factoryAddress
                                    mem[_34805 + 314] = sha3(address(_31853), address(_31912))
                                    mem[_34805 + 346] = sub_acaed29c[stor3]
                                    mem[_34805 + 261] = 85
                                    mem[_34805 + 378] = 0
                                    mem[64] = _34805 + 410
                                    mem[_34805 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34805 + 414] = 0
                                    mem[_34805 + 446] = _32110
                                    mem[_34805 + 478] = address(sha3(0, factoryAddress, _34808, sub_acaed29c[stor3]))
                                    mem[_34805 + 510] = 128
                                    mem[_34805 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34805 + s + 574] = mem[_34805 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31853), address(_31912)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31853), address(_31912)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32110, address(sha3(0, factoryAddress, _34808, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not address(_31912):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_34805 + 221] = address(_31912)
                                    mem[_34805 + 241] = address(_31853)
                                    mem[_34805 + 189] = 40
                                    mem[_34805 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34805 + 294] = factoryAddress
                                    mem[_34805 + 314] = sha3(address(_31912), address(_31853))
                                    mem[_34805 + 346] = sub_acaed29c[stor3]
                                    mem[_34805 + 261] = 85
                                    mem[_34805 + 378] = 0
                                    mem[64] = _34805 + 410
                                    mem[_34805 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34805 + 414] = 0
                                    mem[_34805 + 446] = _32110
                                    mem[_34805 + 478] = address(sha3(0, factoryAddress, _34808, sub_acaed29c[stor3]))
                                    mem[_34805 + 510] = 128
                                    mem[_34805 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34805 + s + 574] = mem[_34805 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31912), address(_31853)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31912), address(_31853)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32110, address(sha3(0, factoryAddress, _34808, sub_acaed29c[stor3])), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _11185 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _34813 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11185 + 353])
                                mem[mem[64] + 52] = address(_31912)
                                _34814 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _34816 = sha3(mem[_34814 + 32 len mem[_34814]])
                                mem[_34813 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34813 + 105] = factoryAddress
                                mem[_34813 + 125] = _34816
                                mem[_34813 + 157] = sub_acaed29c[stor3]
                                mem[_34813 + 72] = 85
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if address(_31853) == address(_31912):
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34813 + 292 len 29]
                                if address(_31853) < address(_31912):
                                    if not address(_31853):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_34813 + 221] = address(_31853)
                                    mem[_34813 + 241] = address(_31912)
                                    mem[_34813 + 189] = 40
                                    mem[_34813 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34813 + 294] = factoryAddress
                                    mem[_34813 + 314] = sha3(address(_31853), address(_31912))
                                    mem[_34813 + 346] = sub_acaed29c[stor3]
                                    mem[_34813 + 261] = 85
                                    mem[_34813 + 378] = 0
                                    mem[64] = _34813 + 410
                                    mem[_34813 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34813 + 414] = 0
                                    mem[_34813 + 446] = _32110
                                    mem[_34813 + 478] = address(sha3(0, factoryAddress, _34816, sub_acaed29c[stor3]))
                                    mem[_34813 + 510] = 128
                                    mem[_34813 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34813 + s + 574] = mem[_34813 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31853), address(_31912)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31853), address(_31912)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32110, address(sha3(0, factoryAddress, _34816, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not address(_31912):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_34813 + 221] = address(_31912)
                                    mem[_34813 + 241] = address(_31853)
                                    mem[_34813 + 189] = 40
                                    mem[_34813 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34813 + 294] = factoryAddress
                                    mem[_34813 + 314] = sha3(address(_31912), address(_31853))
                                    mem[_34813 + 346] = sub_acaed29c[stor3]
                                    mem[_34813 + 261] = 85
                                    mem[_34813 + 378] = 0
                                    mem[64] = _34813 + 410
                                    mem[_34813 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34813 + 414] = 0
                                    mem[_34813 + 446] = _32110
                                    mem[_34813 + 478] = address(sha3(0, factoryAddress, _34816, sub_acaed29c[stor3]))
                                    mem[_34813 + 510] = 128
                                    mem[_34813 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34813 + s + 574] = mem[_34813 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31912), address(_31853)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31912), address(_31853)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _32110, address(sha3(0, factoryAddress, _34816, sub_acaed29c[stor3])), 128, 0
                    else:
                        if idx >= mem[_11185 + 321] - 2:
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if mem[(32 * idx) + _11185 + 365 len 20] == mem[(32 * idx + 1) + _11185 + 365 len 20]:
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx) + _11185 + 365 len 20] < mem[(32 * idx + 1) + _11185 + 365 len 20]:
                                if not mem[(32 * idx) + _11185 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _34853 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _11185 + 353])
                                mem[mem[64] + 52] = address(_31912)
                                _34854 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _34856 = sha3(mem[_34854 + 32 len mem[_34854]])
                                mem[_34853 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34853 + 105] = factoryAddress
                                mem[_34853 + 125] = _34856
                                mem[_34853 + 157] = sub_acaed29c[stor3]
                                mem[_34853 + 72] = 85
                                mem[_34853 + 189] = 0
                                mem[64] = _34853 + 221
                                mem[_34853 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34853 + 225] = _32110
                                mem[_34853 + 257] = 0
                                mem[_34853 + 289] = address(cd[4])
                                mem[_34853 + 321] = 128
                                mem[_34853 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[_34853 + s + 385] = mem[_34853 + s + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _34856, sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, _34856, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _32110, 0, address(cd[4]), 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _11185 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _34861 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11185 + 353])
                                mem[mem[64] + 52] = address(_31853)
                                _34862 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _34864 = sha3(mem[_34862 + 32 len mem[_34862]])
                                mem[_34861 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34861 + 105] = factoryAddress
                                mem[_34861 + 125] = _34864
                                mem[_34861 + 157] = sub_acaed29c[stor3]
                                mem[_34861 + 72] = 85
                                mem[_34861 + 189] = 0
                                mem[64] = _34861 + 221
                                mem[_34861 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34861 + 225] = _32110
                                mem[_34861 + 257] = 0
                                mem[_34861 + 289] = address(cd[4])
                                mem[_34861 + 321] = 128
                                mem[_34861 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[_34861 + s + 385] = mem[_34861 + s + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, _34864, sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, _34864, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _32110, 0, address(cd[4]), 128, 0
                        else:
                            require idx + 2 < mem[_11185 + 321]
                            _32398 = mem[(32 * idx + 2) + _11185 + 353]
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if mem[(32 * idx + 1) + _11185 + 365 len 20] == mem[(32 * idx + 2) + _11185 + 365 len 20]:
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                            if mem[(32 * idx + 1) + _11185 + 365 len 20] < mem[(32 * idx + 2) + _11185 + 365 len 20]:
                                if not mem[(32 * idx + 1) + _11185 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _34837 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11185 + 353])
                                mem[mem[64] + 52] = address(_32398)
                                _34838 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _34840 = sha3(mem[_34838 + 32 len mem[_34838]])
                                mem[_34837 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34837 + 105] = factoryAddress
                                mem[_34837 + 125] = _34840
                                mem[_34837 + 157] = sub_acaed29c[stor3]
                                mem[_34837 + 72] = 85
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if address(_31853) == address(_31912):
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34837 + 292 len 29]
                                if address(_31853) < address(_31912):
                                    if not address(_31853):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_34837 + 221] = address(_31853)
                                    mem[_34837 + 241] = address(_31912)
                                    mem[_34837 + 189] = 40
                                    mem[_34837 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34837 + 294] = factoryAddress
                                    mem[_34837 + 314] = sha3(address(_31853), address(_31912))
                                    mem[_34837 + 346] = sub_acaed29c[stor3]
                                    mem[_34837 + 261] = 85
                                    mem[_34837 + 378] = 0
                                    mem[64] = _34837 + 410
                                    mem[_34837 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34837 + 414] = _32110
                                    mem[_34837 + 446] = 0
                                    mem[_34837 + 478] = address(sha3(0, factoryAddress, _34840, sub_acaed29c[stor3]))
                                    mem[_34837 + 510] = 128
                                    mem[_34837 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34837 + s + 574] = mem[_34837 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31853), address(_31912)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31853), address(_31912)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32110, 0, address(sha3(0, factoryAddress, _34840, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not address(_31912):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_34837 + 221] = address(_31912)
                                    mem[_34837 + 241] = address(_31853)
                                    mem[_34837 + 189] = 40
                                    mem[_34837 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34837 + 294] = factoryAddress
                                    mem[_34837 + 314] = sha3(address(_31912), address(_31853))
                                    mem[_34837 + 346] = sub_acaed29c[stor3]
                                    mem[_34837 + 261] = 85
                                    mem[_34837 + 378] = 0
                                    mem[64] = _34837 + 410
                                    mem[_34837 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34837 + 414] = _32110
                                    mem[_34837 + 446] = 0
                                    mem[_34837 + 478] = address(sha3(0, factoryAddress, _34840, sub_acaed29c[stor3]))
                                    mem[_34837 + 510] = 128
                                    mem[_34837 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34837 + s + 574] = mem[_34837 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31912), address(_31853)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31912), address(_31853)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32110, 0, address(sha3(0, factoryAddress, _34840, sub_acaed29c[stor3])), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _11185 + 365 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _34845 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11185 + 353])
                                mem[mem[64] + 52] = address(_31912)
                                _34846 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _34848 = sha3(mem[_34846 + 32 len mem[_34846]])
                                mem[_34845 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34845 + 105] = factoryAddress
                                mem[_34845 + 125] = _34848
                                mem[_34845 + 157] = sub_acaed29c[stor3]
                                mem[_34845 + 72] = 85
                                mem[0] = factoryAddress
                                mem[32] = 5
                                if address(_31853) == address(_31912):
                                    revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34845 + 292 len 29]
                                if address(_31853) < address(_31912):
                                    if not address(_31853):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_34845 + 221] = address(_31853)
                                    mem[_34845 + 241] = address(_31912)
                                    mem[_34845 + 189] = 40
                                    mem[_34845 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34845 + 294] = factoryAddress
                                    mem[_34845 + 314] = sha3(address(_31853), address(_31912))
                                    mem[_34845 + 346] = sub_acaed29c[stor3]
                                    mem[_34845 + 261] = 85
                                    mem[_34845 + 378] = 0
                                    mem[64] = _34845 + 410
                                    mem[_34845 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34845 + 414] = _32110
                                    mem[_34845 + 446] = 0
                                    mem[_34845 + 478] = address(sha3(0, factoryAddress, _34848, sub_acaed29c[stor3]))
                                    mem[_34845 + 510] = 128
                                    mem[_34845 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34845 + s + 574] = mem[_34845 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31853), address(_31912)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31853), address(_31912)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32110, 0, address(sha3(0, factoryAddress, _34848, sub_acaed29c[stor3])), 128, 0
                                else:
                                    if not address(_31912):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_34845 + 221] = address(_31912)
                                    mem[_34845 + 241] = address(_31853)
                                    mem[_34845 + 189] = 40
                                    mem[_34845 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_34845 + 294] = factoryAddress
                                    mem[_34845 + 314] = sha3(address(_31912), address(_31853))
                                    mem[_34845 + 346] = sub_acaed29c[stor3]
                                    mem[_34845 + 261] = 85
                                    mem[_34845 + 378] = 0
                                    mem[64] = _34845 + 410
                                    mem[_34845 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_34845 + 414] = _32110
                                    mem[_34845 + 446] = 0
                                    mem[_34845 + 478] = address(sha3(0, factoryAddress, _34848, sub_acaed29c[stor3]))
                                    mem[_34845 + 510] = 128
                                    mem[_34845 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[_34845 + s + 574] = mem[_34845 + s + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31912), address(_31853)), sub_acaed29c[stor3])))
                                    call address(sha3(0, factoryAddress, sha3(address(_31912), address(_31853)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _32110, 0, address(sha3(0, factoryAddress, _34848, sub_acaed29c[stor3])), 128, 0
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                idx = idx + 1
                continue 
            mem[mem[64]] = 32
            mem[mem[64] + 32] = mem[(32 * ('cd', 36).length) + 128]
            _31911 = mem[(32 * ('cd', 36).length) + 128]
            mem[mem[64] + 64 len floor32(mem[(32 * ('cd', 36).length) + 128])] = mem[(32 * ('cd', 36).length) + 160 len floor32(mem[(32 * ('cd', 36).length) + 128])]
            return 32, mem[mem[64] + 32 len (32 * _31911) + 32]
        require mem[96] >= 32
        if not mem[128]:
            revert with 0, 
                        32,
                        49,
                        0x545472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472616e7366657246726f6d206661696c65,
                        mem[_11185 + 438 len 7],
                        Mask(32, 64, _11208) >> 64,
                        mem[_11185 + 449 len 4]
        mem[64] = _11185 + (32 * ('cd', 36).length) + 353
        mem[_11185 + 321] = ('cd', 36).length
        mem[_11185 + 353 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
        mem[_11185 + (32 * ('cd', 36).length) + 353] = 0
        idx = 0
        while idx < ('cd', 36).length - 1:
            require idx < mem[_11185 + 321]
            _31855 = mem[(32 * idx) + _11185 + 353]
            require idx + 1 < mem[_11185 + 321]
            _31916 = mem[(32 * idx + 1) + _11185 + 353]
            if mem[(32 * idx) + _11185 + 365 len 20] == mem[(32 * idx + 1) + _11185 + 365 len 20]:
                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
            if mem[(32 * idx) + _11185 + 365 len 20] < mem[(32 * idx + 1) + _11185 + 365 len 20]:
                if not mem[(32 * idx) + _11185 + 365 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                _32111 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                if mem[(32 * idx) + _11185 + 365 len 20] == mem[(32 * idx) + _11185 + 365 len 20]:
                    if idx >= mem[_11185 + 321] - 2:
                        mem[0] = factoryAddress
                        mem[32] = 5
                        if mem[(32 * idx) + _11185 + 365 len 20] == mem[(32 * idx + 1) + _11185 + 365 len 20]:
                            revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _11185 + 365 len 20] < mem[(32 * idx + 1) + _11185 + 365 len 20]:
                            if not mem[(32 * idx) + _11185 + 365 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _34885 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx) + _11185 + 353])
                            mem[mem[64] + 52] = address(_31916)
                            _34886 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _34888 = sha3(mem[_34886 + 32 len mem[_34886]])
                            mem[_34885 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_34885 + 105] = factoryAddress
                            mem[_34885 + 125] = _34888
                            mem[_34885 + 157] = sub_acaed29c[stor3]
                            mem[_34885 + 72] = 85
                            mem[_34885 + 189] = 0
                            mem[64] = _34885 + 221
                            mem[_34885 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_34885 + 225] = 0
                            mem[_34885 + 257] = _32111
                            mem[_34885 + 289] = address(cd[4])
                            mem[_34885 + 321] = 128
                            mem[_34885 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[_34885 + s + 385] = mem[_34885 + s + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _34888, sub_acaed29c[stor3])))
                            call address(sha3(0, factoryAddress, _34888, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _32111, address(cd[4]), 128, 0
                        else:
                            if not mem[(32 * idx + 1) + _11185 + 365 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _34893 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11185 + 353])
                            mem[mem[64] + 52] = address(_31855)
                            _34894 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _34896 = sha3(mem[_34894 + 32 len mem[_34894]])
                            mem[_34893 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_34893 + 105] = factoryAddress
                            mem[_34893 + 125] = _34896
                            mem[_34893 + 157] = sub_acaed29c[stor3]
                            mem[_34893 + 72] = 85
                            mem[_34893 + 189] = 0
                            mem[64] = _34893 + 221
                            mem[_34893 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_34893 + 225] = 0
                            mem[_34893 + 257] = _32111
                            mem[_34893 + 289] = address(cd[4])
                            mem[_34893 + 321] = 128
                            mem[_34893 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[_34893 + s + 385] = mem[_34893 + s + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _34896, sub_acaed29c[stor3])))
                            call address(sha3(0, factoryAddress, _34896, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _32111, address(cd[4]), 128, 0
                    else:
                        require idx + 2 < mem[_11185 + 321]
                        _32401 = mem[(32 * idx + 2) + _11185 + 353]
                        mem[0] = factoryAddress
                        mem[32] = 5
                        if mem[(32 * idx + 1) + _11185 + 365 len 20] == mem[(32 * idx + 2) + _11185 + 365 len 20]:
                            revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx + 1) + _11185 + 365 len 20] < mem[(32 * idx + 2) + _11185 + 365 len 20]:
                            if not mem[(32 * idx + 1) + _11185 + 365 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _34869 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11185 + 353])
                            mem[mem[64] + 52] = address(_32401)
                            _34870 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _34872 = sha3(mem[_34870 + 32 len mem[_34870]])
                            mem[_34869 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_34869 + 105] = factoryAddress
                            mem[_34869 + 125] = _34872
                            mem[_34869 + 157] = sub_acaed29c[stor3]
                            mem[_34869 + 72] = 85
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if address(_31855) == address(_31916):
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34869 + 292 len 29]
                            if address(_31855) < address(_31916):
                                if not address(_31855):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_34869 + 221] = address(_31855)
                                mem[_34869 + 241] = address(_31916)
                                mem[_34869 + 189] = 40
                                mem[_34869 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34869 + 294] = factoryAddress
                                mem[_34869 + 314] = sha3(address(_31855), address(_31916))
                                mem[_34869 + 346] = sub_acaed29c[stor3]
                                mem[_34869 + 261] = 85
                                mem[_34869 + 378] = 0
                                mem[64] = _34869 + 410
                                mem[_34869 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34869 + 414] = 0
                                mem[_34869 + 446] = _32111
                                mem[_34869 + 478] = address(sha3(0, factoryAddress, _34872, sub_acaed29c[stor3]))
                                mem[_34869 + 510] = 128
                                mem[_34869 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_34869 + s + 574] = mem[_34869 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31855), address(_31916)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31855), address(_31916)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _32111, address(sha3(0, factoryAddress, _34872, sub_acaed29c[stor3])), 128, 0
                            else:
                                if not address(_31916):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_34869 + 221] = address(_31916)
                                mem[_34869 + 241] = address(_31855)
                                mem[_34869 + 189] = 40
                                mem[_34869 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34869 + 294] = factoryAddress
                                mem[_34869 + 314] = sha3(address(_31916), address(_31855))
                                mem[_34869 + 346] = sub_acaed29c[stor3]
                                mem[_34869 + 261] = 85
                                mem[_34869 + 378] = 0
                                mem[64] = _34869 + 410
                                mem[_34869 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34869 + 414] = 0
                                mem[_34869 + 446] = _32111
                                mem[_34869 + 478] = address(sha3(0, factoryAddress, _34872, sub_acaed29c[stor3]))
                                mem[_34869 + 510] = 128
                                mem[_34869 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_34869 + s + 574] = mem[_34869 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31916), address(_31855)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31916), address(_31855)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _32111, address(sha3(0, factoryAddress, _34872, sub_acaed29c[stor3])), 128, 0
                        else:
                            if not mem[(32 * idx + 2) + _11185 + 365 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _34877 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11185 + 353])
                            mem[mem[64] + 52] = address(_31916)
                            _34878 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _34880 = sha3(mem[_34878 + 32 len mem[_34878]])
                            mem[_34877 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_34877 + 105] = factoryAddress
                            mem[_34877 + 125] = _34880
                            mem[_34877 + 157] = sub_acaed29c[stor3]
                            mem[_34877 + 72] = 85
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if address(_31855) == address(_31916):
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34877 + 292 len 29]
                            if address(_31855) < address(_31916):
                                if not address(_31855):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_34877 + 221] = address(_31855)
                                mem[_34877 + 241] = address(_31916)
                                mem[_34877 + 189] = 40
                                mem[_34877 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34877 + 294] = factoryAddress
                                mem[_34877 + 314] = sha3(address(_31855), address(_31916))
                                mem[_34877 + 346] = sub_acaed29c[stor3]
                                mem[_34877 + 261] = 85
                                mem[_34877 + 378] = 0
                                mem[64] = _34877 + 410
                                mem[_34877 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34877 + 414] = 0
                                mem[_34877 + 446] = _32111
                                mem[_34877 + 478] = address(sha3(0, factoryAddress, _34880, sub_acaed29c[stor3]))
                                mem[_34877 + 510] = 128
                                mem[_34877 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_34877 + s + 574] = mem[_34877 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31855), address(_31916)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31855), address(_31916)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _32111, address(sha3(0, factoryAddress, _34880, sub_acaed29c[stor3])), 128, 0
                            else:
                                if not address(_31916):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_34877 + 221] = address(_31916)
                                mem[_34877 + 241] = address(_31855)
                                mem[_34877 + 189] = 40
                                mem[_34877 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34877 + 294] = factoryAddress
                                mem[_34877 + 314] = sha3(address(_31916), address(_31855))
                                mem[_34877 + 346] = sub_acaed29c[stor3]
                                mem[_34877 + 261] = 85
                                mem[_34877 + 378] = 0
                                mem[64] = _34877 + 410
                                mem[_34877 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34877 + 414] = 0
                                mem[_34877 + 446] = _32111
                                mem[_34877 + 478] = address(sha3(0, factoryAddress, _34880, sub_acaed29c[stor3]))
                                mem[_34877 + 510] = 128
                                mem[_34877 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_34877 + s + 574] = mem[_34877 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31916), address(_31855)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31916), address(_31855)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _32111, address(sha3(0, factoryAddress, _34880, sub_acaed29c[stor3])), 128, 0
                else:
                    if idx >= mem[_11185 + 321] - 2:
                        mem[0] = factoryAddress
                        mem[32] = 5
                        if mem[(32 * idx) + _11185 + 365 len 20] == mem[(32 * idx + 1) + _11185 + 365 len 20]:
                            revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _11185 + 365 len 20] < mem[(32 * idx + 1) + _11185 + 365 len 20]:
                            if not mem[(32 * idx) + _11185 + 365 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _34917 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx) + _11185 + 353])
                            mem[mem[64] + 52] = address(_31916)
                            _34918 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _34920 = sha3(mem[_34918 + 32 len mem[_34918]])
                            mem[_34917 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_34917 + 105] = factoryAddress
                            mem[_34917 + 125] = _34920
                            mem[_34917 + 157] = sub_acaed29c[stor3]
                            mem[_34917 + 72] = 85
                            mem[_34917 + 189] = 0
                            mem[64] = _34917 + 221
                            mem[_34917 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_34917 + 225] = _32111
                            mem[_34917 + 257] = 0
                            mem[_34917 + 289] = address(cd[4])
                            mem[_34917 + 321] = 128
                            mem[_34917 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[_34917 + s + 385] = mem[_34917 + s + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _34920, sub_acaed29c[stor3])))
                            call address(sha3(0, factoryAddress, _34920, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _32111, 0, address(cd[4]), 128, 0
                        else:
                            if not mem[(32 * idx + 1) + _11185 + 365 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _34925 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11185 + 353])
                            mem[mem[64] + 52] = address(_31855)
                            _34926 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _34928 = sha3(mem[_34926 + 32 len mem[_34926]])
                            mem[_34925 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_34925 + 105] = factoryAddress
                            mem[_34925 + 125] = _34928
                            mem[_34925 + 157] = sub_acaed29c[stor3]
                            mem[_34925 + 72] = 85
                            mem[_34925 + 189] = 0
                            mem[64] = _34925 + 221
                            mem[_34925 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_34925 + 225] = _32111
                            mem[_34925 + 257] = 0
                            mem[_34925 + 289] = address(cd[4])
                            mem[_34925 + 321] = 128
                            mem[_34925 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[_34925 + s + 385] = mem[_34925 + s + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _34928, sub_acaed29c[stor3])))
                            call address(sha3(0, factoryAddress, _34928, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _32111, 0, address(cd[4]), 128, 0
                    else:
                        require idx + 2 < mem[_11185 + 321]
                        _32404 = mem[(32 * idx + 2) + _11185 + 353]
                        mem[0] = factoryAddress
                        mem[32] = 5
                        if mem[(32 * idx + 1) + _11185 + 365 len 20] == mem[(32 * idx + 2) + _11185 + 365 len 20]:
                            revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx + 1) + _11185 + 365 len 20] < mem[(32 * idx + 2) + _11185 + 365 len 20]:
                            if not mem[(32 * idx + 1) + _11185 + 365 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _34901 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11185 + 353])
                            mem[mem[64] + 52] = address(_32404)
                            _34902 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _34904 = sha3(mem[_34902 + 32 len mem[_34902]])
                            mem[_34901 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_34901 + 105] = factoryAddress
                            mem[_34901 + 125] = _34904
                            mem[_34901 + 157] = sub_acaed29c[stor3]
                            mem[_34901 + 72] = 85
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if address(_31855) == address(_31916):
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34901 + 292 len 29]
                            if address(_31855) < address(_31916):
                                if not address(_31855):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_34901 + 221] = address(_31855)
                                mem[_34901 + 241] = address(_31916)
                                mem[_34901 + 189] = 40
                                mem[_34901 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34901 + 294] = factoryAddress
                                mem[_34901 + 314] = sha3(address(_31855), address(_31916))
                                mem[_34901 + 346] = sub_acaed29c[stor3]
                                mem[_34901 + 261] = 85
                                mem[_34901 + 378] = 0
                                mem[64] = _34901 + 410
                                mem[_34901 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34901 + 414] = _32111
                                mem[_34901 + 446] = 0
                                mem[_34901 + 478] = address(sha3(0, factoryAddress, _34904, sub_acaed29c[stor3]))
                                mem[_34901 + 510] = 128
                                mem[_34901 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_34901 + s + 574] = mem[_34901 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31855), address(_31916)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31855), address(_31916)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _32111, 0, address(sha3(0, factoryAddress, _34904, sub_acaed29c[stor3])), 128, 0
                            else:
                                if not address(_31916):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_34901 + 221] = address(_31916)
                                mem[_34901 + 241] = address(_31855)
                                mem[_34901 + 189] = 40
                                mem[_34901 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34901 + 294] = factoryAddress
                                mem[_34901 + 314] = sha3(address(_31916), address(_31855))
                                mem[_34901 + 346] = sub_acaed29c[stor3]
                                mem[_34901 + 261] = 85
                                mem[_34901 + 378] = 0
                                mem[64] = _34901 + 410
                                mem[_34901 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34901 + 414] = _32111
                                mem[_34901 + 446] = 0
                                mem[_34901 + 478] = address(sha3(0, factoryAddress, _34904, sub_acaed29c[stor3]))
                                mem[_34901 + 510] = 128
                                mem[_34901 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_34901 + s + 574] = mem[_34901 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31916), address(_31855)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31916), address(_31855)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _32111, 0, address(sha3(0, factoryAddress, _34904, sub_acaed29c[stor3])), 128, 0
                        else:
                            if not mem[(32 * idx + 2) + _11185 + 365 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _34909 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11185 + 353])
                            mem[mem[64] + 52] = address(_31916)
                            _34910 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _34912 = sha3(mem[_34910 + 32 len mem[_34910]])
                            mem[_34909 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_34909 + 105] = factoryAddress
                            mem[_34909 + 125] = _34912
                            mem[_34909 + 157] = sub_acaed29c[stor3]
                            mem[_34909 + 72] = 85
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if address(_31855) == address(_31916):
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34909 + 292 len 29]
                            if address(_31855) < address(_31916):
                                if not address(_31855):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_34909 + 221] = address(_31855)
                                mem[_34909 + 241] = address(_31916)
                                mem[_34909 + 189] = 40
                                mem[_34909 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34909 + 294] = factoryAddress
                                mem[_34909 + 314] = sha3(address(_31855), address(_31916))
                                mem[_34909 + 346] = sub_acaed29c[stor3]
                                mem[_34909 + 261] = 85
                                mem[_34909 + 378] = 0
                                mem[64] = _34909 + 410
                                mem[_34909 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34909 + 414] = _32111
                                mem[_34909 + 446] = 0
                                mem[_34909 + 478] = address(sha3(0, factoryAddress, _34912, sub_acaed29c[stor3]))
                                mem[_34909 + 510] = 128
                                mem[_34909 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_34909 + s + 574] = mem[_34909 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31855), address(_31916)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31855), address(_31916)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _32111, 0, address(sha3(0, factoryAddress, _34912, sub_acaed29c[stor3])), 128, 0
                            else:
                                if not address(_31916):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_34909 + 221] = address(_31916)
                                mem[_34909 + 241] = address(_31855)
                                mem[_34909 + 189] = 40
                                mem[_34909 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34909 + 294] = factoryAddress
                                mem[_34909 + 314] = sha3(address(_31916), address(_31855))
                                mem[_34909 + 346] = sub_acaed29c[stor3]
                                mem[_34909 + 261] = 85
                                mem[_34909 + 378] = 0
                                mem[64] = _34909 + 410
                                mem[_34909 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34909 + 414] = _32111
                                mem[_34909 + 446] = 0
                                mem[_34909 + 478] = address(sha3(0, factoryAddress, _34912, sub_acaed29c[stor3]))
                                mem[_34909 + 510] = 128
                                mem[_34909 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_34909 + s + 574] = mem[_34909 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31916), address(_31855)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31916), address(_31855)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _32111, 0, address(sha3(0, factoryAddress, _34912, sub_acaed29c[stor3])), 128, 0
            else:
                if not mem[(32 * idx + 1) + _11185 + 365 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                _32112 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                if mem[(32 * idx) + _11185 + 365 len 20] == mem[(32 * idx + 1) + _11185 + 365 len 20]:
                    if idx >= mem[_11185 + 321] - 2:
                        mem[0] = factoryAddress
                        mem[32] = 5
                        if mem[(32 * idx) + _11185 + 365 len 20] == mem[(32 * idx + 1) + _11185 + 365 len 20]:
                            revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _11185 + 365 len 20] < mem[(32 * idx + 1) + _11185 + 365 len 20]:
                            if not mem[(32 * idx) + _11185 + 365 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _34949 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx) + _11185 + 353])
                            mem[mem[64] + 52] = address(_31916)
                            _34950 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _34952 = sha3(mem[_34950 + 32 len mem[_34950]])
                            mem[_34949 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_34949 + 105] = factoryAddress
                            mem[_34949 + 125] = _34952
                            mem[_34949 + 157] = sub_acaed29c[stor3]
                            mem[_34949 + 72] = 85
                            mem[_34949 + 189] = 0
                            mem[64] = _34949 + 221
                            mem[_34949 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_34949 + 225] = 0
                            mem[_34949 + 257] = _32112
                            mem[_34949 + 289] = address(cd[4])
                            mem[_34949 + 321] = 128
                            mem[_34949 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[_34949 + s + 385] = mem[_34949 + s + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _34952, sub_acaed29c[stor3])))
                            call address(sha3(0, factoryAddress, _34952, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _32112, address(cd[4]), 128, 0
                        else:
                            if not mem[(32 * idx + 1) + _11185 + 365 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _34957 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11185 + 353])
                            mem[mem[64] + 52] = address(_31855)
                            _34958 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _34960 = sha3(mem[_34958 + 32 len mem[_34958]])
                            mem[_34957 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_34957 + 105] = factoryAddress
                            mem[_34957 + 125] = _34960
                            mem[_34957 + 157] = sub_acaed29c[stor3]
                            mem[_34957 + 72] = 85
                            mem[_34957 + 189] = 0
                            mem[64] = _34957 + 221
                            mem[_34957 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_34957 + 225] = 0
                            mem[_34957 + 257] = _32112
                            mem[_34957 + 289] = address(cd[4])
                            mem[_34957 + 321] = 128
                            mem[_34957 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[_34957 + s + 385] = mem[_34957 + s + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _34960, sub_acaed29c[stor3])))
                            call address(sha3(0, factoryAddress, _34960, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _32112, address(cd[4]), 128, 0
                    else:
                        require idx + 2 < mem[_11185 + 321]
                        _32407 = mem[(32 * idx + 2) + _11185 + 353]
                        mem[0] = factoryAddress
                        mem[32] = 5
                        if mem[(32 * idx + 1) + _11185 + 365 len 20] == mem[(32 * idx + 2) + _11185 + 365 len 20]:
                            revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx + 1) + _11185 + 365 len 20] < mem[(32 * idx + 2) + _11185 + 365 len 20]:
                            if not mem[(32 * idx + 1) + _11185 + 365 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _34933 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11185 + 353])
                            mem[mem[64] + 52] = address(_32407)
                            _34934 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _34936 = sha3(mem[_34934 + 32 len mem[_34934]])
                            mem[_34933 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_34933 + 105] = factoryAddress
                            mem[_34933 + 125] = _34936
                            mem[_34933 + 157] = sub_acaed29c[stor3]
                            mem[_34933 + 72] = 85
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if address(_31855) == address(_31916):
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34933 + 292 len 29]
                            if address(_31855) < address(_31916):
                                if not address(_31855):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_34933 + 221] = address(_31855)
                                mem[_34933 + 241] = address(_31916)
                                mem[_34933 + 189] = 40
                                mem[_34933 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34933 + 294] = factoryAddress
                                mem[_34933 + 314] = sha3(address(_31855), address(_31916))
                                mem[_34933 + 346] = sub_acaed29c[stor3]
                                mem[_34933 + 261] = 85
                                mem[_34933 + 378] = 0
                                mem[64] = _34933 + 410
                                mem[_34933 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34933 + 414] = 0
                                mem[_34933 + 446] = _32112
                                mem[_34933 + 478] = address(sha3(0, factoryAddress, _34936, sub_acaed29c[stor3]))
                                mem[_34933 + 510] = 128
                                mem[_34933 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_34933 + s + 574] = mem[_34933 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31855), address(_31916)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31855), address(_31916)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _32112, address(sha3(0, factoryAddress, _34936, sub_acaed29c[stor3])), 128, 0
                            else:
                                if not address(_31916):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_34933 + 221] = address(_31916)
                                mem[_34933 + 241] = address(_31855)
                                mem[_34933 + 189] = 40
                                mem[_34933 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34933 + 294] = factoryAddress
                                mem[_34933 + 314] = sha3(address(_31916), address(_31855))
                                mem[_34933 + 346] = sub_acaed29c[stor3]
                                mem[_34933 + 261] = 85
                                mem[_34933 + 378] = 0
                                mem[64] = _34933 + 410
                                mem[_34933 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34933 + 414] = 0
                                mem[_34933 + 446] = _32112
                                mem[_34933 + 478] = address(sha3(0, factoryAddress, _34936, sub_acaed29c[stor3]))
                                mem[_34933 + 510] = 128
                                mem[_34933 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_34933 + s + 574] = mem[_34933 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31916), address(_31855)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31916), address(_31855)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _32112, address(sha3(0, factoryAddress, _34936, sub_acaed29c[stor3])), 128, 0
                        else:
                            if not mem[(32 * idx + 2) + _11185 + 365 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _34941 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11185 + 353])
                            mem[mem[64] + 52] = address(_31916)
                            _34942 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _34944 = sha3(mem[_34942 + 32 len mem[_34942]])
                            mem[_34941 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_34941 + 105] = factoryAddress
                            mem[_34941 + 125] = _34944
                            mem[_34941 + 157] = sub_acaed29c[stor3]
                            mem[_34941 + 72] = 85
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if address(_31855) == address(_31916):
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34941 + 292 len 29]
                            if address(_31855) < address(_31916):
                                if not address(_31855):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_34941 + 221] = address(_31855)
                                mem[_34941 + 241] = address(_31916)
                                mem[_34941 + 189] = 40
                                mem[_34941 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34941 + 294] = factoryAddress
                                mem[_34941 + 314] = sha3(address(_31855), address(_31916))
                                mem[_34941 + 346] = sub_acaed29c[stor3]
                                mem[_34941 + 261] = 85
                                mem[_34941 + 378] = 0
                                mem[64] = _34941 + 410
                                mem[_34941 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34941 + 414] = 0
                                mem[_34941 + 446] = _32112
                                mem[_34941 + 478] = address(sha3(0, factoryAddress, _34944, sub_acaed29c[stor3]))
                                mem[_34941 + 510] = 128
                                mem[_34941 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_34941 + s + 574] = mem[_34941 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31855), address(_31916)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31855), address(_31916)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _32112, address(sha3(0, factoryAddress, _34944, sub_acaed29c[stor3])), 128, 0
                            else:
                                if not address(_31916):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_34941 + 221] = address(_31916)
                                mem[_34941 + 241] = address(_31855)
                                mem[_34941 + 189] = 40
                                mem[_34941 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34941 + 294] = factoryAddress
                                mem[_34941 + 314] = sha3(address(_31916), address(_31855))
                                mem[_34941 + 346] = sub_acaed29c[stor3]
                                mem[_34941 + 261] = 85
                                mem[_34941 + 378] = 0
                                mem[64] = _34941 + 410
                                mem[_34941 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34941 + 414] = 0
                                mem[_34941 + 446] = _32112
                                mem[_34941 + 478] = address(sha3(0, factoryAddress, _34944, sub_acaed29c[stor3]))
                                mem[_34941 + 510] = 128
                                mem[_34941 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_34941 + s + 574] = mem[_34941 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31916), address(_31855)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31916), address(_31855)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _32112, address(sha3(0, factoryAddress, _34944, sub_acaed29c[stor3])), 128, 0
                else:
                    if idx >= mem[_11185 + 321] - 2:
                        mem[0] = factoryAddress
                        mem[32] = 5
                        if mem[(32 * idx) + _11185 + 365 len 20] == mem[(32 * idx + 1) + _11185 + 365 len 20]:
                            revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _11185 + 365 len 20] < mem[(32 * idx + 1) + _11185 + 365 len 20]:
                            if not mem[(32 * idx) + _11185 + 365 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _34981 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx) + _11185 + 353])
                            mem[mem[64] + 52] = address(_31916)
                            _34982 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _34984 = sha3(mem[_34982 + 32 len mem[_34982]])
                            mem[_34981 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_34981 + 105] = factoryAddress
                            mem[_34981 + 125] = _34984
                            mem[_34981 + 157] = sub_acaed29c[stor3]
                            mem[_34981 + 72] = 85
                            mem[_34981 + 189] = 0
                            mem[64] = _34981 + 221
                            mem[_34981 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_34981 + 225] = _32112
                            mem[_34981 + 257] = 0
                            mem[_34981 + 289] = address(cd[4])
                            mem[_34981 + 321] = 128
                            mem[_34981 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[_34981 + s + 385] = mem[_34981 + s + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _34984, sub_acaed29c[stor3])))
                            call address(sha3(0, factoryAddress, _34984, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _32112, 0, address(cd[4]), 128, 0
                        else:
                            if not mem[(32 * idx + 1) + _11185 + 365 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _34989 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11185 + 353])
                            mem[mem[64] + 52] = address(_31855)
                            _34990 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _34992 = sha3(mem[_34990 + 32 len mem[_34990]])
                            mem[_34989 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_34989 + 105] = factoryAddress
                            mem[_34989 + 125] = _34992
                            mem[_34989 + 157] = sub_acaed29c[stor3]
                            mem[_34989 + 72] = 85
                            mem[_34989 + 189] = 0
                            mem[64] = _34989 + 221
                            mem[_34989 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_34989 + 225] = _32112
                            mem[_34989 + 257] = 0
                            mem[_34989 + 289] = address(cd[4])
                            mem[_34989 + 321] = 128
                            mem[_34989 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[_34989 + s + 385] = mem[_34989 + s + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _34992, sub_acaed29c[stor3])))
                            call address(sha3(0, factoryAddress, _34992, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _32112, 0, address(cd[4]), 128, 0
                    else:
                        require idx + 2 < mem[_11185 + 321]
                        _32410 = mem[(32 * idx + 2) + _11185 + 353]
                        mem[0] = factoryAddress
                        mem[32] = 5
                        if mem[(32 * idx + 1) + _11185 + 365 len 20] == mem[(32 * idx + 2) + _11185 + 365 len 20]:
                            revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx + 1) + _11185 + 365 len 20] < mem[(32 * idx + 2) + _11185 + 365 len 20]:
                            if not mem[(32 * idx + 1) + _11185 + 365 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _34965 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11185 + 353])
                            mem[mem[64] + 52] = address(_32410)
                            _34966 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _34968 = sha3(mem[_34966 + 32 len mem[_34966]])
                            mem[_34965 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_34965 + 105] = factoryAddress
                            mem[_34965 + 125] = _34968
                            mem[_34965 + 157] = sub_acaed29c[stor3]
                            mem[_34965 + 72] = 85
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if address(_31855) == address(_31916):
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34965 + 292 len 29]
                            if address(_31855) < address(_31916):
                                if not address(_31855):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_34965 + 221] = address(_31855)
                                mem[_34965 + 241] = address(_31916)
                                mem[_34965 + 189] = 40
                                mem[_34965 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34965 + 294] = factoryAddress
                                mem[_34965 + 314] = sha3(address(_31855), address(_31916))
                                mem[_34965 + 346] = sub_acaed29c[stor3]
                                mem[_34965 + 261] = 85
                                mem[_34965 + 378] = 0
                                mem[64] = _34965 + 410
                                mem[_34965 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34965 + 414] = _32112
                                mem[_34965 + 446] = 0
                                mem[_34965 + 478] = address(sha3(0, factoryAddress, _34968, sub_acaed29c[stor3]))
                                mem[_34965 + 510] = 128
                                mem[_34965 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_34965 + s + 574] = mem[_34965 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31855), address(_31916)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31855), address(_31916)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _32112, 0, address(sha3(0, factoryAddress, _34968, sub_acaed29c[stor3])), 128, 0
                            else:
                                if not address(_31916):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_34965 + 221] = address(_31916)
                                mem[_34965 + 241] = address(_31855)
                                mem[_34965 + 189] = 40
                                mem[_34965 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34965 + 294] = factoryAddress
                                mem[_34965 + 314] = sha3(address(_31916), address(_31855))
                                mem[_34965 + 346] = sub_acaed29c[stor3]
                                mem[_34965 + 261] = 85
                                mem[_34965 + 378] = 0
                                mem[64] = _34965 + 410
                                mem[_34965 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34965 + 414] = _32112
                                mem[_34965 + 446] = 0
                                mem[_34965 + 478] = address(sha3(0, factoryAddress, _34968, sub_acaed29c[stor3]))
                                mem[_34965 + 510] = 128
                                mem[_34965 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_34965 + s + 574] = mem[_34965 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31916), address(_31855)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31916), address(_31855)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _32112, 0, address(sha3(0, factoryAddress, _34968, sub_acaed29c[stor3])), 128, 0
                        else:
                            if not mem[(32 * idx + 2) + _11185 + 365 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _34973 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11185 + 353])
                            mem[mem[64] + 52] = address(_31916)
                            _34974 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _34976 = sha3(mem[_34974 + 32 len mem[_34974]])
                            mem[_34973 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_34973 + 105] = factoryAddress
                            mem[_34973 + 125] = _34976
                            mem[_34973 + 157] = sub_acaed29c[stor3]
                            mem[_34973 + 72] = 85
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if address(_31855) == address(_31916):
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34973 + 292 len 29]
                            if address(_31855) < address(_31916):
                                if not address(_31855):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_34973 + 221] = address(_31855)
                                mem[_34973 + 241] = address(_31916)
                                mem[_34973 + 189] = 40
                                mem[_34973 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34973 + 294] = factoryAddress
                                mem[_34973 + 314] = sha3(address(_31855), address(_31916))
                                mem[_34973 + 346] = sub_acaed29c[stor3]
                                mem[_34973 + 261] = 85
                                mem[_34973 + 378] = 0
                                mem[64] = _34973 + 410
                                mem[_34973 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34973 + 414] = _32112
                                mem[_34973 + 446] = 0
                                mem[_34973 + 478] = address(sha3(0, factoryAddress, _34976, sub_acaed29c[stor3]))
                                mem[_34973 + 510] = 128
                                mem[_34973 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_34973 + s + 574] = mem[_34973 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31855), address(_31916)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31855), address(_31916)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _32112, 0, address(sha3(0, factoryAddress, _34976, sub_acaed29c[stor3])), 128, 0
                            else:
                                if not address(_31916):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_34973 + 221] = address(_31916)
                                mem[_34973 + 241] = address(_31855)
                                mem[_34973 + 189] = 40
                                mem[_34973 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34973 + 294] = factoryAddress
                                mem[_34973 + 314] = sha3(address(_31916), address(_31855))
                                mem[_34973 + 346] = sub_acaed29c[stor3]
                                mem[_34973 + 261] = 85
                                mem[_34973 + 378] = 0
                                mem[64] = _34973 + 410
                                mem[_34973 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34973 + 414] = _32112
                                mem[_34973 + 446] = 0
                                mem[_34973 + 478] = address(sha3(0, factoryAddress, _34976, sub_acaed29c[stor3]))
                                mem[_34973 + 510] = 128
                                mem[_34973 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_34973 + s + 574] = mem[_34973 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31916), address(_31855)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31916), address(_31855)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _32112, 0, address(sha3(0, factoryAddress, _34976, sub_acaed29c[stor3])), 128, 0
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            idx = idx + 1
            continue 
        mem[mem[64]] = 32
        mem[mem[64] + 32] = mem[(32 * ('cd', 36).length) + 128]
        _31915 = mem[(32 * ('cd', 36).length) + 128]
        mem[mem[64] + 64 len floor32(mem[(32 * ('cd', 36).length) + 128])] = mem[(32 * ('cd', 36).length) + 160 len floor32(mem[(32 * ('cd', 36).length) + 128])]
        return 32, mem[mem[64] + 32 len (32 * _31915) + 32]
    mem[_11185 + 321] = return_data.size
    mem[_11185 + 353 len return_data.size] = ext_call.return_data[0 len return_data.size]
    if not ext_call.success:
        revert with 0, 
                    32,
                    49,
                    0x545472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472616e7366657246726f6d206661696c65,
                    mem[_11185 + ceil32(return_data.size) + 439 len 15]
    if not return_data.size:
        mem[64] = _11185 + ceil32(return_data.size) + (32 * ('cd', 36).length) + 354
        mem[_11185 + ceil32(return_data.size) + 322] = ('cd', 36).length
        mem[_11185 + ceil32(return_data.size) + 354 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
        mem[_11185 + ceil32(return_data.size) + (32 * ('cd', 36).length) + 354] = 0
        idx = 0
        while idx < ('cd', 36).length - 1:
            require idx < mem[_11185 + ceil32(return_data.size) + 322]
            _31857 = mem[(32 * idx) + _11185 + ceil32(return_data.size) + 354]
            require idx + 1 < mem[_11185 + ceil32(return_data.size) + 322]
            _31920 = mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 354]
            if mem[(32 * idx) + _11185 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 366 len 20]:
                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
            if mem[(32 * idx) + _11185 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 366 len 20]:
                if not mem[(32 * idx) + _11185 + ceil32(return_data.size) + 366 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                _32113 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                if mem[(32 * idx) + _11185 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx) + _11185 + ceil32(return_data.size) + 366 len 20]:
                    if idx >= mem[_11185 + ceil32(return_data.size) + 322] - 2:
                        mem[0] = factoryAddress
                        mem[32] = 5
                        if mem[(32 * idx) + _11185 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _11185 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 366 len 20]:
                            if not mem[(32 * idx) + _11185 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _35013 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx) + _11185 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_31920)
                            _35014 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _35016 = sha3(mem[_35014 + 32 len mem[_35014]])
                            mem[_35013 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_35013 + 105] = factoryAddress
                            mem[_35013 + 125] = _35016
                            mem[_35013 + 157] = sub_acaed29c[stor3]
                            mem[_35013 + 72] = 85
                            mem[_35013 + 189] = 0
                            mem[64] = _35013 + 221
                            mem[_35013 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_35013 + 225] = 0
                            mem[_35013 + 257] = _32113
                            mem[_35013 + 289] = address(cd[4])
                            mem[_35013 + 321] = 128
                            mem[_35013 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[_35013 + s + 385] = mem[_35013 + s + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _35016, sub_acaed29c[stor3])))
                            call address(sha3(0, factoryAddress, _35016, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _32113, address(cd[4]), 128, 0
                        else:
                            if not mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _35021 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_31857)
                            _35022 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _35024 = sha3(mem[_35022 + 32 len mem[_35022]])
                            mem[_35021 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_35021 + 105] = factoryAddress
                            mem[_35021 + 125] = _35024
                            mem[_35021 + 157] = sub_acaed29c[stor3]
                            mem[_35021 + 72] = 85
                            mem[_35021 + 189] = 0
                            mem[64] = _35021 + 221
                            mem[_35021 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_35021 + 225] = 0
                            mem[_35021 + 257] = _32113
                            mem[_35021 + 289] = address(cd[4])
                            mem[_35021 + 321] = 128
                            mem[_35021 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[_35021 + s + 385] = mem[_35021 + s + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _35024, sub_acaed29c[stor3])))
                            call address(sha3(0, factoryAddress, _35024, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _32113, address(cd[4]), 128, 0
                    else:
                        require idx + 2 < mem[_11185 + ceil32(return_data.size) + 322]
                        _32413 = mem[(32 * idx + 2) + _11185 + ceil32(return_data.size) + 354]
                        mem[0] = factoryAddress
                        mem[32] = 5
                        if mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _11185 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _11185 + ceil32(return_data.size) + 366 len 20]:
                            if not mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _34997 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_32413)
                            _34998 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _35000 = sha3(mem[_34998 + 32 len mem[_34998]])
                            mem[_34997 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_34997 + 105] = factoryAddress
                            mem[_34997 + 125] = _35000
                            mem[_34997 + 157] = sub_acaed29c[stor3]
                            mem[_34997 + 72] = 85
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if address(_31857) == address(_31920):
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_34997 + 292 len 29]
                            if address(_31857) < address(_31920):
                                if not address(_31857):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_34997 + 221] = address(_31857)
                                mem[_34997 + 241] = address(_31920)
                                mem[_34997 + 189] = 40
                                mem[_34997 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34997 + 294] = factoryAddress
                                mem[_34997 + 314] = sha3(address(_31857), address(_31920))
                                mem[_34997 + 346] = sub_acaed29c[stor3]
                                mem[_34997 + 261] = 85
                                mem[_34997 + 378] = 0
                                mem[64] = _34997 + 410
                                mem[_34997 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34997 + 414] = 0
                                mem[_34997 + 446] = _32113
                                mem[_34997 + 478] = address(sha3(0, factoryAddress, _35000, sub_acaed29c[stor3]))
                                mem[_34997 + 510] = 128
                                mem[_34997 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_34997 + s + 574] = mem[_34997 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31857), address(_31920)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31857), address(_31920)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _32113, address(sha3(0, factoryAddress, _35000, sub_acaed29c[stor3])), 128, 0
                            else:
                                if not address(_31920):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_34997 + 221] = address(_31920)
                                mem[_34997 + 241] = address(_31857)
                                mem[_34997 + 189] = 40
                                mem[_34997 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_34997 + 294] = factoryAddress
                                mem[_34997 + 314] = sha3(address(_31920), address(_31857))
                                mem[_34997 + 346] = sub_acaed29c[stor3]
                                mem[_34997 + 261] = 85
                                mem[_34997 + 378] = 0
                                mem[64] = _34997 + 410
                                mem[_34997 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_34997 + 414] = 0
                                mem[_34997 + 446] = _32113
                                mem[_34997 + 478] = address(sha3(0, factoryAddress, _35000, sub_acaed29c[stor3]))
                                mem[_34997 + 510] = 128
                                mem[_34997 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_34997 + s + 574] = mem[_34997 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31920), address(_31857)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31920), address(_31857)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _32113, address(sha3(0, factoryAddress, _35000, sub_acaed29c[stor3])), 128, 0
                        else:
                            if not mem[(32 * idx + 2) + _11185 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _35005 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11185 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_31920)
                            _35006 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _35008 = sha3(mem[_35006 + 32 len mem[_35006]])
                            mem[_35005 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_35005 + 105] = factoryAddress
                            mem[_35005 + 125] = _35008
                            mem[_35005 + 157] = sub_acaed29c[stor3]
                            mem[_35005 + 72] = 85
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if address(_31857) == address(_31920):
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_35005 + 292 len 29]
                            if address(_31857) < address(_31920):
                                if not address(_31857):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_35005 + 221] = address(_31857)
                                mem[_35005 + 241] = address(_31920)
                                mem[_35005 + 189] = 40
                                mem[_35005 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_35005 + 294] = factoryAddress
                                mem[_35005 + 314] = sha3(address(_31857), address(_31920))
                                mem[_35005 + 346] = sub_acaed29c[stor3]
                                mem[_35005 + 261] = 85
                                mem[_35005 + 378] = 0
                                mem[64] = _35005 + 410
                                mem[_35005 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_35005 + 414] = 0
                                mem[_35005 + 446] = _32113
                                mem[_35005 + 478] = address(sha3(0, factoryAddress, _35008, sub_acaed29c[stor3]))
                                mem[_35005 + 510] = 128
                                mem[_35005 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_35005 + s + 574] = mem[_35005 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31857), address(_31920)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31857), address(_31920)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _32113, address(sha3(0, factoryAddress, _35008, sub_acaed29c[stor3])), 128, 0
                            else:
                                if not address(_31920):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_35005 + 221] = address(_31920)
                                mem[_35005 + 241] = address(_31857)
                                mem[_35005 + 189] = 40
                                mem[_35005 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_35005 + 294] = factoryAddress
                                mem[_35005 + 314] = sha3(address(_31920), address(_31857))
                                mem[_35005 + 346] = sub_acaed29c[stor3]
                                mem[_35005 + 261] = 85
                                mem[_35005 + 378] = 0
                                mem[64] = _35005 + 410
                                mem[_35005 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_35005 + 414] = 0
                                mem[_35005 + 446] = _32113
                                mem[_35005 + 478] = address(sha3(0, factoryAddress, _35008, sub_acaed29c[stor3]))
                                mem[_35005 + 510] = 128
                                mem[_35005 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_35005 + s + 574] = mem[_35005 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31920), address(_31857)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31920), address(_31857)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _32113, address(sha3(0, factoryAddress, _35008, sub_acaed29c[stor3])), 128, 0
                else:
                    if idx >= mem[_11185 + ceil32(return_data.size) + 322] - 2:
                        mem[0] = factoryAddress
                        mem[32] = 5
                        if mem[(32 * idx) + _11185 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _11185 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 366 len 20]:
                            if not mem[(32 * idx) + _11185 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _35045 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx) + _11185 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_31920)
                            _35046 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _35048 = sha3(mem[_35046 + 32 len mem[_35046]])
                            mem[_35045 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_35045 + 105] = factoryAddress
                            mem[_35045 + 125] = _35048
                            mem[_35045 + 157] = sub_acaed29c[stor3]
                            mem[_35045 + 72] = 85
                            mem[_35045 + 189] = 0
                            mem[64] = _35045 + 221
                            mem[_35045 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_35045 + 225] = _32113
                            mem[_35045 + 257] = 0
                            mem[_35045 + 289] = address(cd[4])
                            mem[_35045 + 321] = 128
                            mem[_35045 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[_35045 + s + 385] = mem[_35045 + s + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _35048, sub_acaed29c[stor3])))
                            call address(sha3(0, factoryAddress, _35048, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _32113, 0, address(cd[4]), 128, 0
                        else:
                            if not mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _35053 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_31857)
                            _35054 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _35056 = sha3(mem[_35054 + 32 len mem[_35054]])
                            mem[_35053 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_35053 + 105] = factoryAddress
                            mem[_35053 + 125] = _35056
                            mem[_35053 + 157] = sub_acaed29c[stor3]
                            mem[_35053 + 72] = 85
                            mem[_35053 + 189] = 0
                            mem[64] = _35053 + 221
                            mem[_35053 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_35053 + 225] = _32113
                            mem[_35053 + 257] = 0
                            mem[_35053 + 289] = address(cd[4])
                            mem[_35053 + 321] = 128
                            mem[_35053 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[_35053 + s + 385] = mem[_35053 + s + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _35056, sub_acaed29c[stor3])))
                            call address(sha3(0, factoryAddress, _35056, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _32113, 0, address(cd[4]), 128, 0
                    else:
                        require idx + 2 < mem[_11185 + ceil32(return_data.size) + 322]
                        _32416 = mem[(32 * idx + 2) + _11185 + ceil32(return_data.size) + 354]
                        mem[0] = factoryAddress
                        mem[32] = 5
                        if mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _11185 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _11185 + ceil32(return_data.size) + 366 len 20]:
                            if not mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _35029 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_32416)
                            _35030 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _35032 = sha3(mem[_35030 + 32 len mem[_35030]])
                            mem[_35029 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_35029 + 105] = factoryAddress
                            mem[_35029 + 125] = _35032
                            mem[_35029 + 157] = sub_acaed29c[stor3]
                            mem[_35029 + 72] = 85
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if address(_31857) == address(_31920):
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_35029 + 292 len 29]
                            if address(_31857) < address(_31920):
                                if not address(_31857):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_35029 + 221] = address(_31857)
                                mem[_35029 + 241] = address(_31920)
                                mem[_35029 + 189] = 40
                                mem[_35029 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_35029 + 294] = factoryAddress
                                mem[_35029 + 314] = sha3(address(_31857), address(_31920))
                                mem[_35029 + 346] = sub_acaed29c[stor3]
                                mem[_35029 + 261] = 85
                                mem[_35029 + 378] = 0
                                mem[64] = _35029 + 410
                                mem[_35029 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_35029 + 414] = _32113
                                mem[_35029 + 446] = 0
                                mem[_35029 + 478] = address(sha3(0, factoryAddress, _35032, sub_acaed29c[stor3]))
                                mem[_35029 + 510] = 128
                                mem[_35029 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_35029 + s + 574] = mem[_35029 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31857), address(_31920)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31857), address(_31920)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _32113, 0, address(sha3(0, factoryAddress, _35032, sub_acaed29c[stor3])), 128, 0
                            else:
                                if not address(_31920):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_35029 + 221] = address(_31920)
                                mem[_35029 + 241] = address(_31857)
                                mem[_35029 + 189] = 40
                                mem[_35029 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_35029 + 294] = factoryAddress
                                mem[_35029 + 314] = sha3(address(_31920), address(_31857))
                                mem[_35029 + 346] = sub_acaed29c[stor3]
                                mem[_35029 + 261] = 85
                                mem[_35029 + 378] = 0
                                mem[64] = _35029 + 410
                                mem[_35029 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_35029 + 414] = _32113
                                mem[_35029 + 446] = 0
                                mem[_35029 + 478] = address(sha3(0, factoryAddress, _35032, sub_acaed29c[stor3]))
                                mem[_35029 + 510] = 128
                                mem[_35029 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_35029 + s + 574] = mem[_35029 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31920), address(_31857)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31920), address(_31857)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _32113, 0, address(sha3(0, factoryAddress, _35032, sub_acaed29c[stor3])), 128, 0
                        else:
                            if not mem[(32 * idx + 2) + _11185 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _35037 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11185 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_31920)
                            _35038 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _35040 = sha3(mem[_35038 + 32 len mem[_35038]])
                            mem[_35037 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_35037 + 105] = factoryAddress
                            mem[_35037 + 125] = _35040
                            mem[_35037 + 157] = sub_acaed29c[stor3]
                            mem[_35037 + 72] = 85
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if address(_31857) == address(_31920):
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_35037 + 292 len 29]
                            if address(_31857) < address(_31920):
                                if not address(_31857):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_35037 + 221] = address(_31857)
                                mem[_35037 + 241] = address(_31920)
                                mem[_35037 + 189] = 40
                                mem[_35037 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_35037 + 294] = factoryAddress
                                mem[_35037 + 314] = sha3(address(_31857), address(_31920))
                                mem[_35037 + 346] = sub_acaed29c[stor3]
                                mem[_35037 + 261] = 85
                                mem[_35037 + 378] = 0
                                mem[64] = _35037 + 410
                                mem[_35037 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_35037 + 414] = _32113
                                mem[_35037 + 446] = 0
                                mem[_35037 + 478] = address(sha3(0, factoryAddress, _35040, sub_acaed29c[stor3]))
                                mem[_35037 + 510] = 128
                                mem[_35037 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_35037 + s + 574] = mem[_35037 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31857), address(_31920)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31857), address(_31920)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _32113, 0, address(sha3(0, factoryAddress, _35040, sub_acaed29c[stor3])), 128, 0
                            else:
                                if not address(_31920):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_35037 + 221] = address(_31920)
                                mem[_35037 + 241] = address(_31857)
                                mem[_35037 + 189] = 40
                                mem[_35037 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_35037 + 294] = factoryAddress
                                mem[_35037 + 314] = sha3(address(_31920), address(_31857))
                                mem[_35037 + 346] = sub_acaed29c[stor3]
                                mem[_35037 + 261] = 85
                                mem[_35037 + 378] = 0
                                mem[64] = _35037 + 410
                                mem[_35037 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_35037 + 414] = _32113
                                mem[_35037 + 446] = 0
                                mem[_35037 + 478] = address(sha3(0, factoryAddress, _35040, sub_acaed29c[stor3]))
                                mem[_35037 + 510] = 128
                                mem[_35037 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_35037 + s + 574] = mem[_35037 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31920), address(_31857)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31920), address(_31857)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _32113, 0, address(sha3(0, factoryAddress, _35040, sub_acaed29c[stor3])), 128, 0
            else:
                if not mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 366 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                _32114 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                if mem[(32 * idx) + _11185 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 366 len 20]:
                    if idx >= mem[_11185 + ceil32(return_data.size) + 322] - 2:
                        mem[0] = factoryAddress
                        mem[32] = 5
                        if mem[(32 * idx) + _11185 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _11185 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 366 len 20]:
                            if not mem[(32 * idx) + _11185 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _35077 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx) + _11185 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_31920)
                            _35078 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _35080 = sha3(mem[_35078 + 32 len mem[_35078]])
                            mem[_35077 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_35077 + 105] = factoryAddress
                            mem[_35077 + 125] = _35080
                            mem[_35077 + 157] = sub_acaed29c[stor3]
                            mem[_35077 + 72] = 85
                            mem[_35077 + 189] = 0
                            mem[64] = _35077 + 221
                            mem[_35077 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_35077 + 225] = 0
                            mem[_35077 + 257] = _32114
                            mem[_35077 + 289] = address(cd[4])
                            mem[_35077 + 321] = 128
                            mem[_35077 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[_35077 + s + 385] = mem[_35077 + s + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _35080, sub_acaed29c[stor3])))
                            call address(sha3(0, factoryAddress, _35080, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _32114, address(cd[4]), 128, 0
                        else:
                            if not mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _35085 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_31857)
                            _35086 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _35088 = sha3(mem[_35086 + 32 len mem[_35086]])
                            mem[_35085 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_35085 + 105] = factoryAddress
                            mem[_35085 + 125] = _35088
                            mem[_35085 + 157] = sub_acaed29c[stor3]
                            mem[_35085 + 72] = 85
                            mem[_35085 + 189] = 0
                            mem[64] = _35085 + 221
                            mem[_35085 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_35085 + 225] = 0
                            mem[_35085 + 257] = _32114
                            mem[_35085 + 289] = address(cd[4])
                            mem[_35085 + 321] = 128
                            mem[_35085 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[_35085 + s + 385] = mem[_35085 + s + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _35088, sub_acaed29c[stor3])))
                            call address(sha3(0, factoryAddress, _35088, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _32114, address(cd[4]), 128, 0
                    else:
                        require idx + 2 < mem[_11185 + ceil32(return_data.size) + 322]
                        _32419 = mem[(32 * idx + 2) + _11185 + ceil32(return_data.size) + 354]
                        mem[0] = factoryAddress
                        mem[32] = 5
                        if mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _11185 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _11185 + ceil32(return_data.size) + 366 len 20]:
                            if not mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _35061 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_32419)
                            _35062 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _35064 = sha3(mem[_35062 + 32 len mem[_35062]])
                            mem[_35061 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_35061 + 105] = factoryAddress
                            mem[_35061 + 125] = _35064
                            mem[_35061 + 157] = sub_acaed29c[stor3]
                            mem[_35061 + 72] = 85
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if address(_31857) == address(_31920):
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_35061 + 292 len 29]
                            if address(_31857) < address(_31920):
                                if not address(_31857):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_35061 + 221] = address(_31857)
                                mem[_35061 + 241] = address(_31920)
                                mem[_35061 + 189] = 40
                                mem[_35061 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_35061 + 294] = factoryAddress
                                mem[_35061 + 314] = sha3(address(_31857), address(_31920))
                                mem[_35061 + 346] = sub_acaed29c[stor3]
                                mem[_35061 + 261] = 85
                                mem[_35061 + 378] = 0
                                mem[64] = _35061 + 410
                                mem[_35061 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_35061 + 414] = 0
                                mem[_35061 + 446] = _32114
                                mem[_35061 + 478] = address(sha3(0, factoryAddress, _35064, sub_acaed29c[stor3]))
                                mem[_35061 + 510] = 128
                                mem[_35061 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_35061 + s + 574] = mem[_35061 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31857), address(_31920)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31857), address(_31920)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _32114, address(sha3(0, factoryAddress, _35064, sub_acaed29c[stor3])), 128, 0
                            else:
                                if not address(_31920):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_35061 + 221] = address(_31920)
                                mem[_35061 + 241] = address(_31857)
                                mem[_35061 + 189] = 40
                                mem[_35061 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_35061 + 294] = factoryAddress
                                mem[_35061 + 314] = sha3(address(_31920), address(_31857))
                                mem[_35061 + 346] = sub_acaed29c[stor3]
                                mem[_35061 + 261] = 85
                                mem[_35061 + 378] = 0
                                mem[64] = _35061 + 410
                                mem[_35061 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_35061 + 414] = 0
                                mem[_35061 + 446] = _32114
                                mem[_35061 + 478] = address(sha3(0, factoryAddress, _35064, sub_acaed29c[stor3]))
                                mem[_35061 + 510] = 128
                                mem[_35061 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_35061 + s + 574] = mem[_35061 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31920), address(_31857)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31920), address(_31857)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _32114, address(sha3(0, factoryAddress, _35064, sub_acaed29c[stor3])), 128, 0
                        else:
                            if not mem[(32 * idx + 2) + _11185 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _35069 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11185 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_31920)
                            _35070 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _35072 = sha3(mem[_35070 + 32 len mem[_35070]])
                            mem[_35069 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_35069 + 105] = factoryAddress
                            mem[_35069 + 125] = _35072
                            mem[_35069 + 157] = sub_acaed29c[stor3]
                            mem[_35069 + 72] = 85
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if address(_31857) == address(_31920):
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_35069 + 292 len 29]
                            if address(_31857) < address(_31920):
                                if not address(_31857):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_35069 + 221] = address(_31857)
                                mem[_35069 + 241] = address(_31920)
                                mem[_35069 + 189] = 40
                                mem[_35069 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_35069 + 294] = factoryAddress
                                mem[_35069 + 314] = sha3(address(_31857), address(_31920))
                                mem[_35069 + 346] = sub_acaed29c[stor3]
                                mem[_35069 + 261] = 85
                                mem[_35069 + 378] = 0
                                mem[64] = _35069 + 410
                                mem[_35069 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_35069 + 414] = 0
                                mem[_35069 + 446] = _32114
                                mem[_35069 + 478] = address(sha3(0, factoryAddress, _35072, sub_acaed29c[stor3]))
                                mem[_35069 + 510] = 128
                                mem[_35069 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_35069 + s + 574] = mem[_35069 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31857), address(_31920)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31857), address(_31920)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _32114, address(sha3(0, factoryAddress, _35072, sub_acaed29c[stor3])), 128, 0
                            else:
                                if not address(_31920):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_35069 + 221] = address(_31920)
                                mem[_35069 + 241] = address(_31857)
                                mem[_35069 + 189] = 40
                                mem[_35069 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_35069 + 294] = factoryAddress
                                mem[_35069 + 314] = sha3(address(_31920), address(_31857))
                                mem[_35069 + 346] = sub_acaed29c[stor3]
                                mem[_35069 + 261] = 85
                                mem[_35069 + 378] = 0
                                mem[64] = _35069 + 410
                                mem[_35069 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_35069 + 414] = 0
                                mem[_35069 + 446] = _32114
                                mem[_35069 + 478] = address(sha3(0, factoryAddress, _35072, sub_acaed29c[stor3]))
                                mem[_35069 + 510] = 128
                                mem[_35069 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_35069 + s + 574] = mem[_35069 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31920), address(_31857)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31920), address(_31857)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _32114, address(sha3(0, factoryAddress, _35072, sub_acaed29c[stor3])), 128, 0
                else:
                    if idx >= mem[_11185 + ceil32(return_data.size) + 322] - 2:
                        mem[0] = factoryAddress
                        mem[32] = 5
                        if mem[(32 * idx) + _11185 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx) + _11185 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 366 len 20]:
                            if not mem[(32 * idx) + _11185 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _35109 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx) + _11185 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_31920)
                            _35110 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _35112 = sha3(mem[_35110 + 32 len mem[_35110]])
                            mem[_35109 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_35109 + 105] = factoryAddress
                            mem[_35109 + 125] = _35112
                            mem[_35109 + 157] = sub_acaed29c[stor3]
                            mem[_35109 + 72] = 85
                            mem[_35109 + 189] = 0
                            mem[64] = _35109 + 221
                            mem[_35109 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_35109 + 225] = _32114
                            mem[_35109 + 257] = 0
                            mem[_35109 + 289] = address(cd[4])
                            mem[_35109 + 321] = 128
                            mem[_35109 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[_35109 + s + 385] = mem[_35109 + s + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _35112, sub_acaed29c[stor3])))
                            call address(sha3(0, factoryAddress, _35112, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _32114, 0, address(cd[4]), 128, 0
                        else:
                            if not mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _35117 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_31857)
                            _35118 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _35120 = sha3(mem[_35118 + 32 len mem[_35118]])
                            mem[_35117 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_35117 + 105] = factoryAddress
                            mem[_35117 + 125] = _35120
                            mem[_35117 + 157] = sub_acaed29c[stor3]
                            mem[_35117 + 72] = 85
                            mem[_35117 + 189] = 0
                            mem[64] = _35117 + 221
                            mem[_35117 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_35117 + 225] = _32114
                            mem[_35117 + 257] = 0
                            mem[_35117 + 289] = address(cd[4])
                            mem[_35117 + 321] = 128
                            mem[_35117 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[_35117 + s + 385] = mem[_35117 + s + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, _35120, sub_acaed29c[stor3])))
                            call address(sha3(0, factoryAddress, _35120, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _32114, 0, address(cd[4]), 128, 0
                    else:
                        require idx + 2 < mem[_11185 + ceil32(return_data.size) + 322]
                        _32422 = mem[(32 * idx + 2) + _11185 + ceil32(return_data.size) + 354]
                        mem[0] = factoryAddress
                        mem[32] = 5
                        if mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _11185 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                        if mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _11185 + ceil32(return_data.size) + 366 len 20]:
                            if not mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _35093 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_32422)
                            _35094 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _35096 = sha3(mem[_35094 + 32 len mem[_35094]])
                            mem[_35093 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_35093 + 105] = factoryAddress
                            mem[_35093 + 125] = _35096
                            mem[_35093 + 157] = sub_acaed29c[stor3]
                            mem[_35093 + 72] = 85
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if address(_31857) == address(_31920):
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_35093 + 292 len 29]
                            if address(_31857) < address(_31920):
                                if not address(_31857):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_35093 + 221] = address(_31857)
                                mem[_35093 + 241] = address(_31920)
                                mem[_35093 + 189] = 40
                                mem[_35093 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_35093 + 294] = factoryAddress
                                mem[_35093 + 314] = sha3(address(_31857), address(_31920))
                                mem[_35093 + 346] = sub_acaed29c[stor3]
                                mem[_35093 + 261] = 85
                                mem[_35093 + 378] = 0
                                mem[64] = _35093 + 410
                                mem[_35093 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_35093 + 414] = _32114
                                mem[_35093 + 446] = 0
                                mem[_35093 + 478] = address(sha3(0, factoryAddress, _35096, sub_acaed29c[stor3]))
                                mem[_35093 + 510] = 128
                                mem[_35093 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_35093 + s + 574] = mem[_35093 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31857), address(_31920)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31857), address(_31920)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _32114, 0, address(sha3(0, factoryAddress, _35096, sub_acaed29c[stor3])), 128, 0
                            else:
                                if not address(_31920):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_35093 + 221] = address(_31920)
                                mem[_35093 + 241] = address(_31857)
                                mem[_35093 + 189] = 40
                                mem[_35093 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_35093 + 294] = factoryAddress
                                mem[_35093 + 314] = sha3(address(_31920), address(_31857))
                                mem[_35093 + 346] = sub_acaed29c[stor3]
                                mem[_35093 + 261] = 85
                                mem[_35093 + 378] = 0
                                mem[64] = _35093 + 410
                                mem[_35093 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_35093 + 414] = _32114
                                mem[_35093 + 446] = 0
                                mem[_35093 + 478] = address(sha3(0, factoryAddress, _35096, sub_acaed29c[stor3]))
                                mem[_35093 + 510] = 128
                                mem[_35093 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_35093 + s + 574] = mem[_35093 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31920), address(_31857)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31920), address(_31857)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _32114, 0, address(sha3(0, factoryAddress, _35096, sub_acaed29c[stor3])), 128, 0
                        else:
                            if not mem[(32 * idx + 2) + _11185 + ceil32(return_data.size) + 366 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _35101 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11185 + ceil32(return_data.size) + 354])
                            mem[mem[64] + 52] = address(_31920)
                            _35102 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _35104 = sha3(mem[_35102 + 32 len mem[_35102]])
                            mem[_35101 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_35101 + 105] = factoryAddress
                            mem[_35101 + 125] = _35104
                            mem[_35101 + 157] = sub_acaed29c[stor3]
                            mem[_35101 + 72] = 85
                            mem[0] = factoryAddress
                            mem[32] = 5
                            if address(_31857) == address(_31920):
                                revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_35101 + 292 len 29]
                            if address(_31857) < address(_31920):
                                if not address(_31857):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_35101 + 221] = address(_31857)
                                mem[_35101 + 241] = address(_31920)
                                mem[_35101 + 189] = 40
                                mem[_35101 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_35101 + 294] = factoryAddress
                                mem[_35101 + 314] = sha3(address(_31857), address(_31920))
                                mem[_35101 + 346] = sub_acaed29c[stor3]
                                mem[_35101 + 261] = 85
                                mem[_35101 + 378] = 0
                                mem[64] = _35101 + 410
                                mem[_35101 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_35101 + 414] = _32114
                                mem[_35101 + 446] = 0
                                mem[_35101 + 478] = address(sha3(0, factoryAddress, _35104, sub_acaed29c[stor3]))
                                mem[_35101 + 510] = 128
                                mem[_35101 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_35101 + s + 574] = mem[_35101 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31857), address(_31920)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31857), address(_31920)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _32114, 0, address(sha3(0, factoryAddress, _35104, sub_acaed29c[stor3])), 128, 0
                            else:
                                if not address(_31920):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_35101 + 221] = address(_31920)
                                mem[_35101 + 241] = address(_31857)
                                mem[_35101 + 189] = 40
                                mem[_35101 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_35101 + 294] = factoryAddress
                                mem[_35101 + 314] = sha3(address(_31920), address(_31857))
                                mem[_35101 + 346] = sub_acaed29c[stor3]
                                mem[_35101 + 261] = 85
                                mem[_35101 + 378] = 0
                                mem[64] = _35101 + 410
                                mem[_35101 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_35101 + 414] = _32114
                                mem[_35101 + 446] = 0
                                mem[_35101 + 478] = address(sha3(0, factoryAddress, _35104, sub_acaed29c[stor3]))
                                mem[_35101 + 510] = 128
                                mem[_35101 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[_35101 + s + 574] = mem[_35101 + s + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31920), address(_31857)), sub_acaed29c[stor3])))
                                call address(sha3(0, factoryAddress, sha3(address(_31920), address(_31857)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _32114, 0, address(sha3(0, factoryAddress, _35104, sub_acaed29c[stor3])), 128, 0
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            idx = idx + 1
            continue 
        mem[mem[64]] = 32
        mem[mem[64] + 32] = mem[(32 * ('cd', 36).length) + 128]
        _31919 = mem[(32 * ('cd', 36).length) + 128]
        mem[mem[64] + 64 len floor32(mem[(32 * ('cd', 36).length) + 128])] = mem[(32 * ('cd', 36).length) + 160 len floor32(mem[(32 * ('cd', 36).length) + 128])]
        return 32, mem[mem[64] + 32 len (32 * _31919) + 32]
    require return_data.size >= 32
    if not mem[_11185 + 353]:
        revert with 0, 
                    32,
                    49,
                    0x545472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472616e7366657246726f6d206661696c65,
                    mem[_11185 + ceil32(return_data.size) + 439 len 15]
    mem[64] = _11185 + ceil32(return_data.size) + (32 * ('cd', 36).length) + 354
    mem[_11185 + ceil32(return_data.size) + 322] = ('cd', 36).length
    mem[_11185 + ceil32(return_data.size) + 354 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
    mem[_11185 + ceil32(return_data.size) + (32 * ('cd', 36).length) + 354] = 0
    idx = 0
    while idx < ('cd', 36).length - 1:
        require idx < mem[_11185 + ceil32(return_data.size) + 322]
        _31859 = mem[(32 * idx) + _11185 + ceil32(return_data.size) + 354]
        require idx + 1 < mem[_11185 + ceil32(return_data.size) + 322]
        _31924 = mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 354]
        if mem[(32 * idx) + _11185 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 366 len 20]:
            revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
        if mem[(32 * idx) + _11185 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 366 len 20]:
            if not mem[(32 * idx) + _11185 + ceil32(return_data.size) + 366 len 20]:
                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
            require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
            _32115 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
            if mem[(32 * idx) + _11185 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx) + _11185 + ceil32(return_data.size) + 366 len 20]:
                if idx >= mem[_11185 + ceil32(return_data.size) + 322] - 2:
                    mem[0] = factoryAddress
                    mem[32] = 5
                    if mem[(32 * idx) + _11185 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 366 len 20]:
                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                    if mem[(32 * idx) + _11185 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 366 len 20]:
                        if not mem[(32 * idx) + _11185 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        _35141 = mem[64]
                        mem[mem[64] + 32] = address(mem[(32 * idx) + _11185 + ceil32(return_data.size) + 354])
                        mem[mem[64] + 52] = address(_31924)
                        _35142 = mem[64]
                        mem[mem[64]] = 40
                        mem[64] = mem[64] + 72
                        _35144 = sha3(mem[_35142 + 32 len mem[_35142]])
                        mem[_35141 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_35141 + 105] = factoryAddress
                        mem[_35141 + 125] = _35144
                        mem[_35141 + 157] = sub_acaed29c[stor3]
                        mem[_35141 + 72] = 85
                        mem[_35141 + 189] = 0
                        mem[64] = _35141 + 221
                        mem[_35141 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_35141 + 225] = 0
                        mem[_35141 + 257] = _32115
                        mem[_35141 + 289] = address(cd[4])
                        mem[_35141 + 321] = 128
                        mem[_35141 + 353] = 0
                        s = 0
                        while s < 0:
                            mem[_35141 + s + 385] = mem[_35141 + s + 221]
                            s = s + 32
                            continue 
                        require ext_code.size(address(sha3(0, factoryAddress, _35144, sub_acaed29c[stor3])))
                        call address(sha3(0, factoryAddress, _35144, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0, _32115, address(cd[4]), 128, 0
                    else:
                        if not mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        _35149 = mem[64]
                        mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 354])
                        mem[mem[64] + 52] = address(_31859)
                        _35150 = mem[64]
                        mem[mem[64]] = 40
                        mem[64] = mem[64] + 72
                        _35152 = sha3(mem[_35150 + 32 len mem[_35150]])
                        mem[_35149 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_35149 + 105] = factoryAddress
                        mem[_35149 + 125] = _35152
                        mem[_35149 + 157] = sub_acaed29c[stor3]
                        mem[_35149 + 72] = 85
                        mem[_35149 + 189] = 0
                        mem[64] = _35149 + 221
                        mem[_35149 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_35149 + 225] = 0
                        mem[_35149 + 257] = _32115
                        mem[_35149 + 289] = address(cd[4])
                        mem[_35149 + 321] = 128
                        mem[_35149 + 353] = 0
                        s = 0
                        while s < 0:
                            mem[_35149 + s + 385] = mem[_35149 + s + 221]
                            s = s + 32
                            continue 
                        require ext_code.size(address(sha3(0, factoryAddress, _35152, sub_acaed29c[stor3])))
                        call address(sha3(0, factoryAddress, _35152, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0, _32115, address(cd[4]), 128, 0
                else:
                    require idx + 2 < mem[_11185 + ceil32(return_data.size) + 322]
                    _32425 = mem[(32 * idx + 2) + _11185 + ceil32(return_data.size) + 354]
                    mem[0] = factoryAddress
                    mem[32] = 5
                    if mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _11185 + ceil32(return_data.size) + 366 len 20]:
                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                    if mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _11185 + ceil32(return_data.size) + 366 len 20]:
                        if not mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        _35125 = mem[64]
                        mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 354])
                        mem[mem[64] + 52] = address(_32425)
                        _35126 = mem[64]
                        mem[mem[64]] = 40
                        mem[64] = mem[64] + 72
                        _35128 = sha3(mem[_35126 + 32 len mem[_35126]])
                        mem[_35125 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_35125 + 105] = factoryAddress
                        mem[_35125 + 125] = _35128
                        mem[_35125 + 157] = sub_acaed29c[stor3]
                        mem[_35125 + 72] = 85
                        mem[0] = factoryAddress
                        mem[32] = 5
                        if address(_31859) == address(_31924):
                            revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_35125 + 292 len 29]
                        if address(_31859) < address(_31924):
                            if not address(_31859):
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            mem[_35125 + 221] = address(_31859)
                            mem[_35125 + 241] = address(_31924)
                            mem[_35125 + 189] = 40
                            mem[_35125 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_35125 + 294] = factoryAddress
                            mem[_35125 + 314] = sha3(address(_31859), address(_31924))
                            mem[_35125 + 346] = sub_acaed29c[stor3]
                            mem[_35125 + 261] = 85
                            mem[_35125 + 378] = 0
                            mem[64] = _35125 + 410
                            mem[_35125 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_35125 + 414] = 0
                            mem[_35125 + 446] = _32115
                            mem[_35125 + 478] = address(sha3(0, factoryAddress, _35128, sub_acaed29c[stor3]))
                            mem[_35125 + 510] = 128
                            mem[_35125 + 542] = 0
                            s = 0
                            while s < 0:
                                mem[_35125 + s + 574] = mem[_35125 + s + 410]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31859), address(_31924)), sub_acaed29c[stor3])))
                            call address(sha3(0, factoryAddress, sha3(address(_31859), address(_31924)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _32115, address(sha3(0, factoryAddress, _35128, sub_acaed29c[stor3])), 128, 0
                        else:
                            if not address(_31924):
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            mem[_35125 + 221] = address(_31924)
                            mem[_35125 + 241] = address(_31859)
                            mem[_35125 + 189] = 40
                            mem[_35125 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_35125 + 294] = factoryAddress
                            mem[_35125 + 314] = sha3(address(_31924), address(_31859))
                            mem[_35125 + 346] = sub_acaed29c[stor3]
                            mem[_35125 + 261] = 85
                            mem[_35125 + 378] = 0
                            mem[64] = _35125 + 410
                            mem[_35125 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_35125 + 414] = 0
                            mem[_35125 + 446] = _32115
                            mem[_35125 + 478] = address(sha3(0, factoryAddress, _35128, sub_acaed29c[stor3]))
                            mem[_35125 + 510] = 128
                            mem[_35125 + 542] = 0
                            s = 0
                            while s < 0:
                                mem[_35125 + s + 574] = mem[_35125 + s + 410]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31924), address(_31859)), sub_acaed29c[stor3])))
                            call address(sha3(0, factoryAddress, sha3(address(_31924), address(_31859)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _32115, address(sha3(0, factoryAddress, _35128, sub_acaed29c[stor3])), 128, 0
                    else:
                        if not mem[(32 * idx + 2) + _11185 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        _35133 = mem[64]
                        mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11185 + ceil32(return_data.size) + 354])
                        mem[mem[64] + 52] = address(_31924)
                        _35134 = mem[64]
                        mem[mem[64]] = 40
                        mem[64] = mem[64] + 72
                        _35136 = sha3(mem[_35134 + 32 len mem[_35134]])
                        mem[_35133 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_35133 + 105] = factoryAddress
                        mem[_35133 + 125] = _35136
                        mem[_35133 + 157] = sub_acaed29c[stor3]
                        mem[_35133 + 72] = 85
                        mem[0] = factoryAddress
                        mem[32] = 5
                        if address(_31859) == address(_31924):
                            revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_35133 + 292 len 29]
                        if address(_31859) < address(_31924):
                            if not address(_31859):
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            mem[_35133 + 221] = address(_31859)
                            mem[_35133 + 241] = address(_31924)
                            mem[_35133 + 189] = 40
                            mem[_35133 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_35133 + 294] = factoryAddress
                            mem[_35133 + 314] = sha3(address(_31859), address(_31924))
                            mem[_35133 + 346] = sub_acaed29c[stor3]
                            mem[_35133 + 261] = 85
                            mem[_35133 + 378] = 0
                            mem[64] = _35133 + 410
                            mem[_35133 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_35133 + 414] = 0
                            mem[_35133 + 446] = _32115
                            mem[_35133 + 478] = address(sha3(0, factoryAddress, _35136, sub_acaed29c[stor3]))
                            mem[_35133 + 510] = 128
                            mem[_35133 + 542] = 0
                            s = 0
                            while s < 0:
                                mem[_35133 + s + 574] = mem[_35133 + s + 410]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31859), address(_31924)), sub_acaed29c[stor3])))
                            call address(sha3(0, factoryAddress, sha3(address(_31859), address(_31924)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _32115, address(sha3(0, factoryAddress, _35136, sub_acaed29c[stor3])), 128, 0
                        else:
                            if not address(_31924):
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            mem[_35133 + 221] = address(_31924)
                            mem[_35133 + 241] = address(_31859)
                            mem[_35133 + 189] = 40
                            mem[_35133 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_35133 + 294] = factoryAddress
                            mem[_35133 + 314] = sha3(address(_31924), address(_31859))
                            mem[_35133 + 346] = sub_acaed29c[stor3]
                            mem[_35133 + 261] = 85
                            mem[_35133 + 378] = 0
                            mem[64] = _35133 + 410
                            mem[_35133 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_35133 + 414] = 0
                            mem[_35133 + 446] = _32115
                            mem[_35133 + 478] = address(sha3(0, factoryAddress, _35136, sub_acaed29c[stor3]))
                            mem[_35133 + 510] = 128
                            mem[_35133 + 542] = 0
                            s = 0
                            while s < 0:
                                mem[_35133 + s + 574] = mem[_35133 + s + 410]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31924), address(_31859)), sub_acaed29c[stor3])))
                            call address(sha3(0, factoryAddress, sha3(address(_31924), address(_31859)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _32115, address(sha3(0, factoryAddress, _35136, sub_acaed29c[stor3])), 128, 0
            else:
                if idx >= mem[_11185 + ceil32(return_data.size) + 322] - 2:
                    mem[0] = factoryAddress
                    mem[32] = 5
                    if mem[(32 * idx) + _11185 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 366 len 20]:
                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                    if mem[(32 * idx) + _11185 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 366 len 20]:
                        if not mem[(32 * idx) + _11185 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        _35173 = mem[64]
                        mem[mem[64] + 32] = address(mem[(32 * idx) + _11185 + ceil32(return_data.size) + 354])
                        mem[mem[64] + 52] = address(_31924)
                        _35174 = mem[64]
                        mem[mem[64]] = 40
                        mem[64] = mem[64] + 72
                        _35176 = sha3(mem[_35174 + 32 len mem[_35174]])
                        mem[_35173 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_35173 + 105] = factoryAddress
                        mem[_35173 + 125] = _35176
                        mem[_35173 + 157] = sub_acaed29c[stor3]
                        mem[_35173 + 72] = 85
                        mem[_35173 + 189] = 0
                        mem[64] = _35173 + 221
                        mem[_35173 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_35173 + 225] = _32115
                        mem[_35173 + 257] = 0
                        mem[_35173 + 289] = address(cd[4])
                        mem[_35173 + 321] = 128
                        mem[_35173 + 353] = 0
                        s = 0
                        while s < 0:
                            mem[_35173 + s + 385] = mem[_35173 + s + 221]
                            s = s + 32
                            continue 
                        require ext_code.size(address(sha3(0, factoryAddress, _35176, sub_acaed29c[stor3])))
                        call address(sha3(0, factoryAddress, _35176, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args _32115, 0, address(cd[4]), 128, 0
                    else:
                        if not mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        _35181 = mem[64]
                        mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 354])
                        mem[mem[64] + 52] = address(_31859)
                        _35182 = mem[64]
                        mem[mem[64]] = 40
                        mem[64] = mem[64] + 72
                        _35184 = sha3(mem[_35182 + 32 len mem[_35182]])
                        mem[_35181 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_35181 + 105] = factoryAddress
                        mem[_35181 + 125] = _35184
                        mem[_35181 + 157] = sub_acaed29c[stor3]
                        mem[_35181 + 72] = 85
                        mem[_35181 + 189] = 0
                        mem[64] = _35181 + 221
                        mem[_35181 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_35181 + 225] = _32115
                        mem[_35181 + 257] = 0
                        mem[_35181 + 289] = address(cd[4])
                        mem[_35181 + 321] = 128
                        mem[_35181 + 353] = 0
                        s = 0
                        while s < 0:
                            mem[_35181 + s + 385] = mem[_35181 + s + 221]
                            s = s + 32
                            continue 
                        require ext_code.size(address(sha3(0, factoryAddress, _35184, sub_acaed29c[stor3])))
                        call address(sha3(0, factoryAddress, _35184, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args _32115, 0, address(cd[4]), 128, 0
                else:
                    require idx + 2 < mem[_11185 + ceil32(return_data.size) + 322]
                    _32428 = mem[(32 * idx + 2) + _11185 + ceil32(return_data.size) + 354]
                    mem[0] = factoryAddress
                    mem[32] = 5
                    if mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _11185 + ceil32(return_data.size) + 366 len 20]:
                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                    if mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _11185 + ceil32(return_data.size) + 366 len 20]:
                        if not mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        _35157 = mem[64]
                        mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 354])
                        mem[mem[64] + 52] = address(_32428)
                        _35158 = mem[64]
                        mem[mem[64]] = 40
                        mem[64] = mem[64] + 72
                        _35160 = sha3(mem[_35158 + 32 len mem[_35158]])
                        mem[_35157 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_35157 + 105] = factoryAddress
                        mem[_35157 + 125] = _35160
                        mem[_35157 + 157] = sub_acaed29c[stor3]
                        mem[_35157 + 72] = 85
                        mem[0] = factoryAddress
                        mem[32] = 5
                        if address(_31859) == address(_31924):
                            revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_35157 + 292 len 29]
                        if address(_31859) < address(_31924):
                            if not address(_31859):
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            mem[_35157 + 221] = address(_31859)
                            mem[_35157 + 241] = address(_31924)
                            mem[_35157 + 189] = 40
                            mem[_35157 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_35157 + 294] = factoryAddress
                            mem[_35157 + 314] = sha3(address(_31859), address(_31924))
                            mem[_35157 + 346] = sub_acaed29c[stor3]
                            mem[_35157 + 261] = 85
                            mem[_35157 + 378] = 0
                            mem[64] = _35157 + 410
                            mem[_35157 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_35157 + 414] = _32115
                            mem[_35157 + 446] = 0
                            mem[_35157 + 478] = address(sha3(0, factoryAddress, _35160, sub_acaed29c[stor3]))
                            mem[_35157 + 510] = 128
                            mem[_35157 + 542] = 0
                            s = 0
                            while s < 0:
                                mem[_35157 + s + 574] = mem[_35157 + s + 410]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31859), address(_31924)), sub_acaed29c[stor3])))
                            call address(sha3(0, factoryAddress, sha3(address(_31859), address(_31924)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _32115, 0, address(sha3(0, factoryAddress, _35160, sub_acaed29c[stor3])), 128, 0
                        else:
                            if not address(_31924):
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            mem[_35157 + 221] = address(_31924)
                            mem[_35157 + 241] = address(_31859)
                            mem[_35157 + 189] = 40
                            mem[_35157 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_35157 + 294] = factoryAddress
                            mem[_35157 + 314] = sha3(address(_31924), address(_31859))
                            mem[_35157 + 346] = sub_acaed29c[stor3]
                            mem[_35157 + 261] = 85
                            mem[_35157 + 378] = 0
                            mem[64] = _35157 + 410
                            mem[_35157 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_35157 + 414] = _32115
                            mem[_35157 + 446] = 0
                            mem[_35157 + 478] = address(sha3(0, factoryAddress, _35160, sub_acaed29c[stor3]))
                            mem[_35157 + 510] = 128
                            mem[_35157 + 542] = 0
                            s = 0
                            while s < 0:
                                mem[_35157 + s + 574] = mem[_35157 + s + 410]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31924), address(_31859)), sub_acaed29c[stor3])))
                            call address(sha3(0, factoryAddress, sha3(address(_31924), address(_31859)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _32115, 0, address(sha3(0, factoryAddress, _35160, sub_acaed29c[stor3])), 128, 0
                    else:
                        if not mem[(32 * idx + 2) + _11185 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        _35165 = mem[64]
                        mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11185 + ceil32(return_data.size) + 354])
                        mem[mem[64] + 52] = address(_31924)
                        _35166 = mem[64]
                        mem[mem[64]] = 40
                        mem[64] = mem[64] + 72
                        _35168 = sha3(mem[_35166 + 32 len mem[_35166]])
                        mem[_35165 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_35165 + 105] = factoryAddress
                        mem[_35165 + 125] = _35168
                        mem[_35165 + 157] = sub_acaed29c[stor3]
                        mem[_35165 + 72] = 85
                        mem[0] = factoryAddress
                        mem[32] = 5
                        if address(_31859) == address(_31924):
                            revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_35165 + 292 len 29]
                        if address(_31859) < address(_31924):
                            if not address(_31859):
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            mem[_35165 + 221] = address(_31859)
                            mem[_35165 + 241] = address(_31924)
                            mem[_35165 + 189] = 40
                            mem[_35165 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_35165 + 294] = factoryAddress
                            mem[_35165 + 314] = sha3(address(_31859), address(_31924))
                            mem[_35165 + 346] = sub_acaed29c[stor3]
                            mem[_35165 + 261] = 85
                            mem[_35165 + 378] = 0
                            mem[64] = _35165 + 410
                            mem[_35165 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_35165 + 414] = _32115
                            mem[_35165 + 446] = 0
                            mem[_35165 + 478] = address(sha3(0, factoryAddress, _35168, sub_acaed29c[stor3]))
                            mem[_35165 + 510] = 128
                            mem[_35165 + 542] = 0
                            s = 0
                            while s < 0:
                                mem[_35165 + s + 574] = mem[_35165 + s + 410]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31859), address(_31924)), sub_acaed29c[stor3])))
                            call address(sha3(0, factoryAddress, sha3(address(_31859), address(_31924)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _32115, 0, address(sha3(0, factoryAddress, _35168, sub_acaed29c[stor3])), 128, 0
                        else:
                            if not address(_31924):
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            mem[_35165 + 221] = address(_31924)
                            mem[_35165 + 241] = address(_31859)
                            mem[_35165 + 189] = 40
                            mem[_35165 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_35165 + 294] = factoryAddress
                            mem[_35165 + 314] = sha3(address(_31924), address(_31859))
                            mem[_35165 + 346] = sub_acaed29c[stor3]
                            mem[_35165 + 261] = 85
                            mem[_35165 + 378] = 0
                            mem[64] = _35165 + 410
                            mem[_35165 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_35165 + 414] = _32115
                            mem[_35165 + 446] = 0
                            mem[_35165 + 478] = address(sha3(0, factoryAddress, _35168, sub_acaed29c[stor3]))
                            mem[_35165 + 510] = 128
                            mem[_35165 + 542] = 0
                            s = 0
                            while s < 0:
                                mem[_35165 + s + 574] = mem[_35165 + s + 410]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31924), address(_31859)), sub_acaed29c[stor3])))
                            call address(sha3(0, factoryAddress, sha3(address(_31924), address(_31859)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _32115, 0, address(sha3(0, factoryAddress, _35168, sub_acaed29c[stor3])), 128, 0
        else:
            if not mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 366 len 20]:
                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
            require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
            _32116 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
            if mem[(32 * idx) + _11185 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 366 len 20]:
                if idx >= mem[_11185 + ceil32(return_data.size) + 322] - 2:
                    mem[0] = factoryAddress
                    mem[32] = 5
                    if mem[(32 * idx) + _11185 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 366 len 20]:
                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                    if mem[(32 * idx) + _11185 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 366 len 20]:
                        if not mem[(32 * idx) + _11185 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        _35205 = mem[64]
                        mem[mem[64] + 32] = address(mem[(32 * idx) + _11185 + ceil32(return_data.size) + 354])
                        mem[mem[64] + 52] = address(_31924)
                        _35206 = mem[64]
                        mem[mem[64]] = 40
                        mem[64] = mem[64] + 72
                        _35208 = sha3(mem[_35206 + 32 len mem[_35206]])
                        mem[_35205 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_35205 + 105] = factoryAddress
                        mem[_35205 + 125] = _35208
                        mem[_35205 + 157] = sub_acaed29c[stor3]
                        mem[_35205 + 72] = 85
                        mem[_35205 + 189] = 0
                        mem[64] = _35205 + 221
                        mem[_35205 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_35205 + 225] = 0
                        mem[_35205 + 257] = _32116
                        mem[_35205 + 289] = address(cd[4])
                        mem[_35205 + 321] = 128
                        mem[_35205 + 353] = 0
                        s = 0
                        while s < 0:
                            mem[_35205 + s + 385] = mem[_35205 + s + 221]
                            s = s + 32
                            continue 
                        require ext_code.size(address(sha3(0, factoryAddress, _35208, sub_acaed29c[stor3])))
                        call address(sha3(0, factoryAddress, _35208, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0, _32116, address(cd[4]), 128, 0
                    else:
                        if not mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        _35213 = mem[64]
                        mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 354])
                        mem[mem[64] + 52] = address(_31859)
                        _35214 = mem[64]
                        mem[mem[64]] = 40
                        mem[64] = mem[64] + 72
                        _35216 = sha3(mem[_35214 + 32 len mem[_35214]])
                        mem[_35213 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_35213 + 105] = factoryAddress
                        mem[_35213 + 125] = _35216
                        mem[_35213 + 157] = sub_acaed29c[stor3]
                        mem[_35213 + 72] = 85
                        mem[_35213 + 189] = 0
                        mem[64] = _35213 + 221
                        mem[_35213 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_35213 + 225] = 0
                        mem[_35213 + 257] = _32116
                        mem[_35213 + 289] = address(cd[4])
                        mem[_35213 + 321] = 128
                        mem[_35213 + 353] = 0
                        s = 0
                        while s < 0:
                            mem[_35213 + s + 385] = mem[_35213 + s + 221]
                            s = s + 32
                            continue 
                        require ext_code.size(address(sha3(0, factoryAddress, _35216, sub_acaed29c[stor3])))
                        call address(sha3(0, factoryAddress, _35216, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0, _32116, address(cd[4]), 128, 0
                else:
                    require idx + 2 < mem[_11185 + ceil32(return_data.size) + 322]
                    _32431 = mem[(32 * idx + 2) + _11185 + ceil32(return_data.size) + 354]
                    mem[0] = factoryAddress
                    mem[32] = 5
                    if mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _11185 + ceil32(return_data.size) + 366 len 20]:
                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                    if mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _11185 + ceil32(return_data.size) + 366 len 20]:
                        if not mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        _35189 = mem[64]
                        mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 354])
                        mem[mem[64] + 52] = address(_32431)
                        _35190 = mem[64]
                        mem[mem[64]] = 40
                        mem[64] = mem[64] + 72
                        _35192 = sha3(mem[_35190 + 32 len mem[_35190]])
                        mem[_35189 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_35189 + 105] = factoryAddress
                        mem[_35189 + 125] = _35192
                        mem[_35189 + 157] = sub_acaed29c[stor3]
                        mem[_35189 + 72] = 85
                        mem[0] = factoryAddress
                        mem[32] = 5
                        if address(_31859) == address(_31924):
                            revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_35189 + 292 len 29]
                        if address(_31859) < address(_31924):
                            if not address(_31859):
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            mem[_35189 + 221] = address(_31859)
                            mem[_35189 + 241] = address(_31924)
                            mem[_35189 + 189] = 40
                            mem[_35189 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_35189 + 294] = factoryAddress
                            mem[_35189 + 314] = sha3(address(_31859), address(_31924))
                            mem[_35189 + 346] = sub_acaed29c[stor3]
                            mem[_35189 + 261] = 85
                            mem[_35189 + 378] = 0
                            mem[64] = _35189 + 410
                            mem[_35189 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_35189 + 414] = 0
                            mem[_35189 + 446] = _32116
                            mem[_35189 + 478] = address(sha3(0, factoryAddress, _35192, sub_acaed29c[stor3]))
                            mem[_35189 + 510] = 128
                            mem[_35189 + 542] = 0
                            s = 0
                            while s < 0:
                                mem[_35189 + s + 574] = mem[_35189 + s + 410]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31859), address(_31924)), sub_acaed29c[stor3])))
                            call address(sha3(0, factoryAddress, sha3(address(_31859), address(_31924)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _32116, address(sha3(0, factoryAddress, _35192, sub_acaed29c[stor3])), 128, 0
                        else:
                            if not address(_31924):
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            mem[_35189 + 221] = address(_31924)
                            mem[_35189 + 241] = address(_31859)
                            mem[_35189 + 189] = 40
                            mem[_35189 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_35189 + 294] = factoryAddress
                            mem[_35189 + 314] = sha3(address(_31924), address(_31859))
                            mem[_35189 + 346] = sub_acaed29c[stor3]
                            mem[_35189 + 261] = 85
                            mem[_35189 + 378] = 0
                            mem[64] = _35189 + 410
                            mem[_35189 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_35189 + 414] = 0
                            mem[_35189 + 446] = _32116
                            mem[_35189 + 478] = address(sha3(0, factoryAddress, _35192, sub_acaed29c[stor3]))
                            mem[_35189 + 510] = 128
                            mem[_35189 + 542] = 0
                            s = 0
                            while s < 0:
                                mem[_35189 + s + 574] = mem[_35189 + s + 410]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31924), address(_31859)), sub_acaed29c[stor3])))
                            call address(sha3(0, factoryAddress, sha3(address(_31924), address(_31859)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _32116, address(sha3(0, factoryAddress, _35192, sub_acaed29c[stor3])), 128, 0
                    else:
                        if not mem[(32 * idx + 2) + _11185 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        _35197 = mem[64]
                        mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11185 + ceil32(return_data.size) + 354])
                        mem[mem[64] + 52] = address(_31924)
                        _35198 = mem[64]
                        mem[mem[64]] = 40
                        mem[64] = mem[64] + 72
                        _35200 = sha3(mem[_35198 + 32 len mem[_35198]])
                        mem[_35197 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_35197 + 105] = factoryAddress
                        mem[_35197 + 125] = _35200
                        mem[_35197 + 157] = sub_acaed29c[stor3]
                        mem[_35197 + 72] = 85
                        mem[0] = factoryAddress
                        mem[32] = 5
                        if address(_31859) == address(_31924):
                            revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_35197 + 292 len 29]
                        if address(_31859) < address(_31924):
                            if not address(_31859):
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            mem[_35197 + 221] = address(_31859)
                            mem[_35197 + 241] = address(_31924)
                            mem[_35197 + 189] = 40
                            mem[_35197 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_35197 + 294] = factoryAddress
                            mem[_35197 + 314] = sha3(address(_31859), address(_31924))
                            mem[_35197 + 346] = sub_acaed29c[stor3]
                            mem[_35197 + 261] = 85
                            mem[_35197 + 378] = 0
                            mem[64] = _35197 + 410
                            mem[_35197 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_35197 + 414] = 0
                            mem[_35197 + 446] = _32116
                            mem[_35197 + 478] = address(sha3(0, factoryAddress, _35200, sub_acaed29c[stor3]))
                            mem[_35197 + 510] = 128
                            mem[_35197 + 542] = 0
                            s = 0
                            while s < 0:
                                mem[_35197 + s + 574] = mem[_35197 + s + 410]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31859), address(_31924)), sub_acaed29c[stor3])))
                            call address(sha3(0, factoryAddress, sha3(address(_31859), address(_31924)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _32116, address(sha3(0, factoryAddress, _35200, sub_acaed29c[stor3])), 128, 0
                        else:
                            if not address(_31924):
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            mem[_35197 + 221] = address(_31924)
                            mem[_35197 + 241] = address(_31859)
                            mem[_35197 + 189] = 40
                            mem[_35197 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_35197 + 294] = factoryAddress
                            mem[_35197 + 314] = sha3(address(_31924), address(_31859))
                            mem[_35197 + 346] = sub_acaed29c[stor3]
                            mem[_35197 + 261] = 85
                            mem[_35197 + 378] = 0
                            mem[64] = _35197 + 410
                            mem[_35197 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_35197 + 414] = 0
                            mem[_35197 + 446] = _32116
                            mem[_35197 + 478] = address(sha3(0, factoryAddress, _35200, sub_acaed29c[stor3]))
                            mem[_35197 + 510] = 128
                            mem[_35197 + 542] = 0
                            s = 0
                            while s < 0:
                                mem[_35197 + s + 574] = mem[_35197 + s + 410]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31924), address(_31859)), sub_acaed29c[stor3])))
                            call address(sha3(0, factoryAddress, sha3(address(_31924), address(_31859)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _32116, address(sha3(0, factoryAddress, _35200, sub_acaed29c[stor3])), 128, 0
            else:
                if idx >= mem[_11185 + ceil32(return_data.size) + 322] - 2:
                    mem[0] = factoryAddress
                    mem[32] = 5
                    if mem[(32 * idx) + _11185 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 366 len 20]:
                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                    if mem[(32 * idx) + _11185 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 366 len 20]:
                        if not mem[(32 * idx) + _11185 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        _35237 = mem[64]
                        mem[mem[64] + 32] = address(mem[(32 * idx) + _11185 + ceil32(return_data.size) + 354])
                        mem[mem[64] + 52] = address(_31924)
                        _35238 = mem[64]
                        mem[mem[64]] = 40
                        mem[64] = mem[64] + 72
                        _35240 = sha3(mem[_35238 + 32 len mem[_35238]])
                        mem[_35237 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_35237 + 105] = factoryAddress
                        mem[_35237 + 125] = _35240
                        mem[_35237 + 157] = sub_acaed29c[stor3]
                        mem[_35237 + 72] = 85
                        mem[_35237 + 189] = 0
                        mem[64] = _35237 + 221
                        mem[_35237 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_35237 + 225] = _32116
                        mem[_35237 + 257] = 0
                        mem[_35237 + 289] = address(cd[4])
                        mem[_35237 + 321] = 128
                        mem[_35237 + 353] = 0
                        s = 0
                        while s < 0:
                            mem[_35237 + s + 385] = mem[_35237 + s + 221]
                            s = s + 32
                            continue 
                        require ext_code.size(address(sha3(0, factoryAddress, _35240, sub_acaed29c[stor3])))
                        call address(sha3(0, factoryAddress, _35240, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args _32116, 0, address(cd[4]), 128, 0
                    else:
                        if not mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        _35245 = mem[64]
                        mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 354])
                        mem[mem[64] + 52] = address(_31859)
                        _35246 = mem[64]
                        mem[mem[64]] = 40
                        mem[64] = mem[64] + 72
                        _35248 = sha3(mem[_35246 + 32 len mem[_35246]])
                        mem[_35245 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_35245 + 105] = factoryAddress
                        mem[_35245 + 125] = _35248
                        mem[_35245 + 157] = sub_acaed29c[stor3]
                        mem[_35245 + 72] = 85
                        mem[_35245 + 189] = 0
                        mem[64] = _35245 + 221
                        mem[_35245 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_35245 + 225] = _32116
                        mem[_35245 + 257] = 0
                        mem[_35245 + 289] = address(cd[4])
                        mem[_35245 + 321] = 128
                        mem[_35245 + 353] = 0
                        s = 0
                        while s < 0:
                            mem[_35245 + s + 385] = mem[_35245 + s + 221]
                            s = s + 32
                            continue 
                        require ext_code.size(address(sha3(0, factoryAddress, _35248, sub_acaed29c[stor3])))
                        call address(sha3(0, factoryAddress, _35248, sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args _32116, 0, address(cd[4]), 128, 0
                else:
                    require idx + 2 < mem[_11185 + ceil32(return_data.size) + 322]
                    _32434 = mem[(32 * idx + 2) + _11185 + ceil32(return_data.size) + 354]
                    mem[0] = factoryAddress
                    mem[32] = 5
                    if mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 366 len 20] == mem[(32 * idx + 2) + _11185 + ceil32(return_data.size) + 366 len 20]:
                        revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 103 len 29]
                    if mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 366 len 20] < mem[(32 * idx + 2) + _11185 + ceil32(return_data.size) + 366 len 20]:
                        if not mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        _35221 = mem[64]
                        mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _11185 + ceil32(return_data.size) + 354])
                        mem[mem[64] + 52] = address(_32434)
                        _35222 = mem[64]
                        mem[mem[64]] = 40
                        mem[64] = mem[64] + 72
                        _35224 = sha3(mem[_35222 + 32 len mem[_35222]])
                        mem[_35221 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_35221 + 105] = factoryAddress
                        mem[_35221 + 125] = _35224
                        mem[_35221 + 157] = sub_acaed29c[stor3]
                        mem[_35221 + 72] = 85
                        mem[0] = factoryAddress
                        mem[32] = 5
                        if address(_31859) == address(_31924):
                            revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_35221 + 292 len 29]
                        if address(_31859) < address(_31924):
                            if not address(_31859):
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            mem[_35221 + 221] = address(_31859)
                            mem[_35221 + 241] = address(_31924)
                            mem[_35221 + 189] = 40
                            mem[_35221 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_35221 + 294] = factoryAddress
                            mem[_35221 + 314] = sha3(address(_31859), address(_31924))
                            mem[_35221 + 346] = sub_acaed29c[stor3]
                            mem[_35221 + 261] = 85
                            mem[_35221 + 378] = 0
                            mem[64] = _35221 + 410
                            mem[_35221 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_35221 + 414] = _32116
                            mem[_35221 + 446] = 0
                            mem[_35221 + 478] = address(sha3(0, factoryAddress, _35224, sub_acaed29c[stor3]))
                            mem[_35221 + 510] = 128
                            mem[_35221 + 542] = 0
                            s = 0
                            while s < 0:
                                mem[_35221 + s + 574] = mem[_35221 + s + 410]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31859), address(_31924)), sub_acaed29c[stor3])))
                            call address(sha3(0, factoryAddress, sha3(address(_31859), address(_31924)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _32116, 0, address(sha3(0, factoryAddress, _35224, sub_acaed29c[stor3])), 128, 0
                        else:
                            if not address(_31924):
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            mem[_35221 + 221] = address(_31924)
                            mem[_35221 + 241] = address(_31859)
                            mem[_35221 + 189] = 40
                            mem[_35221 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_35221 + 294] = factoryAddress
                            mem[_35221 + 314] = sha3(address(_31924), address(_31859))
                            mem[_35221 + 346] = sub_acaed29c[stor3]
                            mem[_35221 + 261] = 85
                            mem[_35221 + 378] = 0
                            mem[64] = _35221 + 410
                            mem[_35221 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_35221 + 414] = _32116
                            mem[_35221 + 446] = 0
                            mem[_35221 + 478] = address(sha3(0, factoryAddress, _35224, sub_acaed29c[stor3]))
                            mem[_35221 + 510] = 128
                            mem[_35221 + 542] = 0
                            s = 0
                            while s < 0:
                                mem[_35221 + s + 574] = mem[_35221 + s + 410]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31924), address(_31859)), sub_acaed29c[stor3])))
                            call address(sha3(0, factoryAddress, sha3(address(_31924), address(_31859)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _32116, 0, address(sha3(0, factoryAddress, _35224, sub_acaed29c[stor3])), 128, 0
                    else:
                        if not mem[(32 * idx + 2) + _11185 + ceil32(return_data.size) + 366 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        _35229 = mem[64]
                        mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _11185 + ceil32(return_data.size) + 354])
                        mem[mem[64] + 52] = address(_31924)
                        _35230 = mem[64]
                        mem[mem[64]] = 40
                        mem[64] = mem[64] + 72
                        _35232 = sha3(mem[_35230 + 32 len mem[_35230]])
                        mem[_35229 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_35229 + 105] = factoryAddress
                        mem[_35229 + 125] = _35232
                        mem[_35229 + 157] = sub_acaed29c[stor3]
                        mem[_35229 + 72] = 85
                        mem[0] = factoryAddress
                        mem[32] = 5
                        if address(_31859) == address(_31924):
                            revert with 0, 32, 35, 0x6450616e63616b654c6962726172793a204944454e544943414c5f4144445245535345, mem[_35229 + 292 len 29]
                        if address(_31859) < address(_31924):
                            if not address(_31859):
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            mem[_35229 + 221] = address(_31859)
                            mem[_35229 + 241] = address(_31924)
                            mem[_35229 + 189] = 40
                            mem[_35229 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_35229 + 294] = factoryAddress
                            mem[_35229 + 314] = sha3(address(_31859), address(_31924))
                            mem[_35229 + 346] = sub_acaed29c[stor3]
                            mem[_35229 + 261] = 85
                            mem[_35229 + 378] = 0
                            mem[64] = _35229 + 410
                            mem[_35229 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_35229 + 414] = _32116
                            mem[_35229 + 446] = 0
                            mem[_35229 + 478] = address(sha3(0, factoryAddress, _35232, sub_acaed29c[stor3]))
                            mem[_35229 + 510] = 128
                            mem[_35229 + 542] = 0
                            s = 0
                            while s < 0:
                                mem[_35229 + s + 574] = mem[_35229 + s + 410]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31859), address(_31924)), sub_acaed29c[stor3])))
                            call address(sha3(0, factoryAddress, sha3(address(_31859), address(_31924)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _32116, 0, address(sha3(0, factoryAddress, _35232, sub_acaed29c[stor3])), 128, 0
                        else:
                            if not address(_31924):
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            mem[_35229 + 221] = address(_31924)
                            mem[_35229 + 241] = address(_31859)
                            mem[_35229 + 189] = 40
                            mem[_35229 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_35229 + 294] = factoryAddress
                            mem[_35229 + 314] = sha3(address(_31924), address(_31859))
                            mem[_35229 + 346] = sub_acaed29c[stor3]
                            mem[_35229 + 261] = 85
                            mem[_35229 + 378] = 0
                            mem[64] = _35229 + 410
                            mem[_35229 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_35229 + 414] = _32116
                            mem[_35229 + 446] = 0
                            mem[_35229 + 478] = address(sha3(0, factoryAddress, _35232, sub_acaed29c[stor3]))
                            mem[_35229 + 510] = 128
                            mem[_35229 + 542] = 0
                            s = 0
                            while s < 0:
                                mem[_35229 + s + 574] = mem[_35229 + s + 410]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, factoryAddress, sha3(address(_31924), address(_31859)), sub_acaed29c[stor3])))
                            call address(sha3(0, factoryAddress, sha3(address(_31924), address(_31859)), sub_acaed29c[stor3])).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _32116, 0, address(sha3(0, factoryAddress, _35232, sub_acaed29c[stor3])), 128, 0
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        idx = idx + 1
        continue 
    mem[mem[64]] = 32
    mem[mem[64] + 32] = mem[(32 * ('cd', 36).length) + 128]
    _31923 = mem[(32 * ('cd', 36).length) + 128]
    mem[mem[64] + 64 len floor32(mem[(32 * ('cd', 36).length) + 128])] = mem[(32 * ('cd', 36).length) + 160 len floor32(mem[(32 * ('cd', 36).length) + 128])]
    return 32, mem[mem[64] + 32 len (32 * _31923) + 32]
}



}
