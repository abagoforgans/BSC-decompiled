contract main {




// =====================  Runtime code  =====================


#
#  - apy(address arg1, uint256 arg2)
#
const blockPerYear = (2920 * 3600)


function _fallback() payable {
    revert
}

function cakePriceInBNB() payable {
    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
            gas gas_remaining wei
           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
            gas gas_remaining wei
           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        return (0 / ext_call.return_data[0])
    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    33,
                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                    mem[197 len 31]
    if not ext_call.return_data[0]:
        revert with 0, 'SafeMath: division by zero'
    return (10^18 * ext_call.return_data[0] / ext_call.return_data[0])
}

function bnbPriceInUSD() payable {
    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
            gas gas_remaining wei
           args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
    staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
            gas gas_remaining wei
           args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        return (0 / ext_call.return_data[0])
    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    33,
                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                    mem[197 len 31]
    if not ext_call.return_data[0]:
        revert with 0, 'SafeMath: division by zero'
    return (10^18 * ext_call.return_data[0] / ext_call.return_data[0])
}

function tokenPriceInBNB(address arg1) payable {
    require calldata.size - 4 >= 32
    require ext_code.size(0xbcfccbde45ce874adcb698cc183debcf17952812)
    staticcall 0xbcfccbde45ce874adcb698cc183debcf17952812.getPair(address rg1, address rg2) with:
            gas gas_remaining wei
           args address(arg1), 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(arg1)
    staticcall arg1.0x313ce567 with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(arg1)
    staticcall arg1.0x70a08231 with:
            gas gas_remaining wei
           args address(ext_call.return_data[0])
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
            gas gas_remaining wei
           args address(ext_call.return_data[0])
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        return (0 / ext_call.return_data[0])
    if 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] != 10^uint8(ext_call.return_data[0]):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    33,
                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                    mem[197 len 31]
    if not ext_call.return_data[0]:
        revert with 0, 'SafeMath: division by zero'
    return (10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0])
}

function cakePerYearOfPool(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
            gas gas_remaining wei
           args arg1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 128
    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        return (0 / ext_call.return_data[0])
    if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    33,
                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                    ext_call.return_data[101 len 27],
                    mem[224 len 4]
    if not 2920 * 3600 * ext_call.return_data[0]:
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        return (0 / ext_call.return_data[0])
    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    33,
                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                    ext_call.return_data[101 len 27],
                    mem[224 len 4]
    if not ext_call.return_data[0]:
        revert with 0, 'SafeMath: division by zero'
    return (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0])
}

function tvl(address arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    if 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82 == arg1:
        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                gas gas_remaining wei
               args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
        staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                gas gas_remaining wei
               args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                    gas gas_remaining wei
                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                    gas gas_remaining wei
                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not 0 / ext_call.return_data[0]:
                    return 0
                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                if not 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0]:
                    return 0
                if arg2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] != arg2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                return (arg2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18)
            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                return 0
            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
            if not 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                return 0
            if arg2 * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != arg2:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
            return (arg2 * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18)
        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        33,
                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                        mem[197 len 31]
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                gas gas_remaining wei
               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                gas gas_remaining wei
               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            if not 0 / ext_call.return_data[0]:
                return 0
            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0]:
                return 0
            if arg2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] != arg2:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
            return (arg2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18)
        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
            return 0
        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
            return 0
        if arg2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != arg2:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
        return (arg2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18)
    require ext_code.size(arg1)
    staticcall arg1.token0() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(arg1)
    staticcall arg1.token1() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c == address(ext_call.return_data[0]):
        require ext_code.size(arg1)
        staticcall arg1.0x18160ddd with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                gas gas_remaining wei
               args arg1
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                    gas gas_remaining wei
                   args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
            staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                    gas gas_remaining wei
                   args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not 0 / ext_call.return_data[0]:
                    return 0
                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                if not 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18:
                    return 0
                if 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 != 2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                return (2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18)
            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            if not 0 / ext_call.return_data[0]:
                return 0
            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18:
                return 0
            if 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 != 2:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
            return (2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18)
        if arg2 * ext_call.return_data[0] / ext_call.return_data[0] != arg2:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        33,
                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                        mem[197 len 31]
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                gas gas_remaining wei
               args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
        staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                gas gas_remaining wei
               args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            if not arg2 * ext_call.return_data[0] / ext_call.return_data[0]:
                return 0
            if 0 / ext_call.return_data[0] * arg2 * ext_call.return_data[0] / ext_call.return_data[0] / arg2 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
            if not 0 / ext_call.return_data[0] * arg2 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18:
                return 0
            if 2 * 0 / ext_call.return_data[0] * arg2 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] * arg2 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 != 2:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
            return (2 * 0 / ext_call.return_data[0] * arg2 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18)
        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        if not arg2 * ext_call.return_data[0] / ext_call.return_data[0]:
            return 0
        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * arg2 * ext_call.return_data[0] / ext_call.return_data[0] / arg2 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * arg2 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18:
            return 0
        if 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * arg2 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * arg2 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 != 2:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
        return (2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * arg2 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18)
    if 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c == ext_call.return_data[12 len 20]:
        require ext_code.size(arg1)
        staticcall arg1.0x18160ddd with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                gas gas_remaining wei
               args arg1
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                    gas gas_remaining wei
                   args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
            staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                    gas gas_remaining wei
                   args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not 0 / ext_call.return_data[0]:
                    return 0
                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                if not 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18:
                    return 0
                if 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 != 2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                return (2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18)
            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            if not 0 / ext_call.return_data[0]:
                return 0
            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18:
                return 0
            if 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 != 2:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
            return (2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18)
        if arg2 * ext_call.return_data[0] / ext_call.return_data[0] != arg2:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        33,
                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                        mem[197 len 31]
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                gas gas_remaining wei
               args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
        staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                gas gas_remaining wei
               args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            if not arg2 * ext_call.return_data[0] / ext_call.return_data[0]:
                return 0
            if 0 / ext_call.return_data[0] * arg2 * ext_call.return_data[0] / ext_call.return_data[0] / arg2 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
            if not 0 / ext_call.return_data[0] * arg2 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18:
                return 0
            if 2 * 0 / ext_call.return_data[0] * arg2 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] * arg2 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 != 2:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
            return (2 * 0 / ext_call.return_data[0] * arg2 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18)
        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        if not arg2 * ext_call.return_data[0] / ext_call.return_data[0]:
            return 0
        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * arg2 * ext_call.return_data[0] / ext_call.return_data[0] / arg2 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * arg2 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18:
            return 0
        if 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * arg2 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * arg2 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 != 2:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
        return (2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * arg2 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18)
    require ext_code.size(address(ext_call.return_data[0]))
    staticcall address(ext_call.return_data[0]).0x70a08231 with:
            gas gas_remaining wei
           args arg1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(0xbcfccbde45ce874adcb698cc183debcf17952812)
    staticcall 0xbcfccbde45ce874adcb698cc183debcf17952812.getPair(address rg1, address rg2) with:
            gas gas_remaining wei
           args address(ext_call.return_data[0]), 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(address(ext_call.return_data[0]))
    staticcall address(ext_call.return_data[0]).0x313ce567 with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(address(ext_call.return_data[0]))
    staticcall address(ext_call.return_data[0]).0x70a08231 with:
            gas gas_remaining wei
           args address(ext_call.return_data[0])
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
            gas gas_remaining wei
           args address(ext_call.return_data[0])
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                gas gas_remaining wei
               args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
        staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                gas gas_remaining wei
               args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            if not ext_call.return_data[0]:
                return 0
            if 0 / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
            if not 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                return 0
            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 != 0 / ext_call.return_data[0]:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
            if not 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18:
                return 0
            if 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 != 2:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
            return (2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18)
        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        if not ext_call.return_data[0]:
            return 0
        if 0 / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
        if not 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
            return 0
        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 != 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18:
            return 0
        if 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 != 2:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
        return (2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18)
    if 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] != 10^uint8(ext_call.return_data[0]):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    33,
                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                    mem[197 len 31]
    if not ext_call.return_data[0]:
        revert with 0, 'SafeMath: division by zero'
    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
            gas gas_remaining wei
           args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
    staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
            gas gas_remaining wei
           args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        if not ext_call.return_data[0]:
            return 0
        if 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0]:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
        if not 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
            return 0
        if 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 != 0 / ext_call.return_data[0]:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
        if not 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18:
            return 0
        if 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 != 2:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
        return (2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18)
    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
    if not ext_call.return_data[0]:
        revert with 0, 'SafeMath: division by zero'
    if not ext_call.return_data[0]:
        return 0
    if 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0]:
        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
    if not 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
        return 0
    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 != 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18:
        return 0
    if 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 != 2:
        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
    return (2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18)
}

function profitOf(address arg1, address arg2, uint256 arg3) payable {
    require calldata.size - 4 >= 96
    if 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82 == arg2:
        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                gas gas_remaining wei
               args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
        staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                gas gas_remaining wei
               args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                    gas gas_remaining wei
                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                    gas gas_remaining wei
                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not 0 / ext_call.return_data[0]:
                    if not arg1:
                        return 0
                    require ext_code.size(arg1)
                    staticcall arg1.performanceFee(uint256 rg1) with:
                            gas gas_remaining wei
                           args 0
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] > 0:
                        revert with 0, 'SafeMath: subtraction overflow'
                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                            gas gas_remaining wei
                           args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
                    staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                            gas gas_remaining wei
                           args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not -ext_call.return_data[0]:
                            if not 0 / ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_code.size(arg1)
                            staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args (0 / 0 / ext_call.return_data[0])
                        else:
                            if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                            if not 0 / ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_code.size(arg1)
                            staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args (-1 * 10^18 * ext_call.return_data[0] / 0 / ext_call.return_data[0])
                    else:
                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not -ext_call.return_data[0]:
                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_code.size(arg1)
                            staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args (0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                        else:
                            if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_code.size(arg1)
                            staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args (-1 * 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    return -ext_call.return_data[0], ext_call.return_data[0], 0
                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                if not 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0]:
                    if not arg1:
                        return 0
                    require ext_code.size(arg1)
                    staticcall arg1.performanceFee(uint256 rg1) with:
                            gas gas_remaining wei
                           args 0
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] > 0:
                        revert with 0, 'SafeMath: subtraction overflow'
                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                            gas gas_remaining wei
                           args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
                    staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                            gas gas_remaining wei
                           args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not -ext_call.return_data[0]:
                            if not 0 / ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_code.size(arg1)
                            staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args (0 / 0 / ext_call.return_data[0])
                        else:
                            if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                            if not 0 / ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_code.size(arg1)
                            staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args (-1 * 10^18 * ext_call.return_data[0] / 0 / ext_call.return_data[0])
                    else:
                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not -ext_call.return_data[0]:
                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_code.size(arg1)
                            staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args (0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                        else:
                            if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_code.size(arg1)
                            staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args (-1 * 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    return -ext_call.return_data[0], ext_call.return_data[0], 0
                if arg3 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] != arg3:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                if not arg1:
                    return arg3 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18, 0, 0
                require ext_code.size(arg1)
                staticcall arg1.performanceFee(uint256 rg1) with:
                        gas gas_remaining wei
                       args (arg3 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] > arg3 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18:
                    revert with 0, 'SafeMath: subtraction overflow'
                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                        gas gas_remaining wei
                       args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
                staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                        gas gas_remaining wei
                       args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not ext_call.return_data[0]:
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    if not (arg3 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18) - ext_call.return_data[0]:
                        if not 0 / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (0 / 0 / ext_call.return_data[0])
                    else:
                        if (10^18 * arg3 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18) - (10^18 * ext_call.return_data[0]) / (arg3 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18) - ext_call.return_data[0] != 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                        if not 0 / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args ((10^18 * arg3 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18) - (10^18 * ext_call.return_data[0]) / 0 / ext_call.return_data[0])
                else:
                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    if not (arg3 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18) - ext_call.return_data[0]:
                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                    else:
                        if (10^18 * arg3 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18) - (10^18 * ext_call.return_data[0]) / (arg3 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18) - ext_call.return_data[0] != 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args ((10^18 * arg3 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18) - (10^18 * ext_call.return_data[0]) / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                return (arg3 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18) - ext_call.return_data[0], 
                       ext_call.return_data[0],
                       0
            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                if not arg1:
                    return 0
                require ext_code.size(arg1)
                staticcall arg1.performanceFee(uint256 rg1) with:
                        gas gas_remaining wei
                       args 0
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] > 0:
                    revert with 0, 'SafeMath: subtraction overflow'
                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                        gas gas_remaining wei
                       args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
                staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                        gas gas_remaining wei
                       args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not ext_call.return_data[0]:
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    if not -ext_call.return_data[0]:
                        if not 0 / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (0 / 0 / ext_call.return_data[0])
                    else:
                        if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                        if not 0 / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (-1 * 10^18 * ext_call.return_data[0] / 0 / ext_call.return_data[0])
                else:
                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    if not -ext_call.return_data[0]:
                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                    else:
                        if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (-1 * 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                return -ext_call.return_data[0], ext_call.return_data[0], 0
            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
            if not 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                if not arg1:
                    return 0
                require ext_code.size(arg1)
                staticcall arg1.performanceFee(uint256 rg1) with:
                        gas gas_remaining wei
                       args 0
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] > 0:
                    revert with 0, 'SafeMath: subtraction overflow'
                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                        gas gas_remaining wei
                       args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
                staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                        gas gas_remaining wei
                       args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not ext_call.return_data[0]:
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    if not -ext_call.return_data[0]:
                        if not 0 / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (0 / 0 / ext_call.return_data[0])
                    else:
                        if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                        if not 0 / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (-1 * 10^18 * ext_call.return_data[0] / 0 / ext_call.return_data[0])
                else:
                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    if not -ext_call.return_data[0]:
                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                    else:
                        if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (-1 * 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                return -ext_call.return_data[0], ext_call.return_data[0], 0
            if arg3 * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != arg3:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
            if not arg1:
                return arg3 * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18, 
                       0,
                       0
            require ext_code.size(arg1)
            staticcall arg1.performanceFee(uint256 rg1) with:
                    gas gas_remaining wei
                   args (arg3 * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18)
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] > arg3 * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18:
                revert with 0, 'SafeMath: subtraction overflow'
            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                    gas gas_remaining wei
                   args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
            staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                    gas gas_remaining wei
                   args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not (arg3 * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18) - ext_call.return_data[0]:
                    if not 0 / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (0 / 0 / ext_call.return_data[0])
                else:
                    if (10^18 * arg3 * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18) - (10^18 * ext_call.return_data[0]) / (arg3 * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18) - ext_call.return_data[0] != 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                    if not 0 / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args ((10^18 * arg3 * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18) - (10^18 * ext_call.return_data[0]) / 0 / ext_call.return_data[0])
            else:
                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not (arg3 * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18) - ext_call.return_data[0]:
                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                else:
                    if (10^18 * arg3 * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18) - (10^18 * ext_call.return_data[0]) / (arg3 * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18) - ext_call.return_data[0] != 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args ((10^18 * arg3 * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18) - (10^18 * ext_call.return_data[0]) / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            return (arg3 * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18) - ext_call.return_data[0], 
                   ext_call.return_data[0],
                   0
        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        33,
                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                        mem[197 len 31]
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                gas gas_remaining wei
               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                gas gas_remaining wei
               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            if not 0 / ext_call.return_data[0]:
                if not arg1:
                    return 0
                require ext_code.size(arg1)
                staticcall arg1.performanceFee(uint256 rg1) with:
                        gas gas_remaining wei
                       args 0
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] > 0:
                    revert with 0, 'SafeMath: subtraction overflow'
                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                        gas gas_remaining wei
                       args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
                staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                        gas gas_remaining wei
                       args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not ext_call.return_data[0]:
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    if not -ext_call.return_data[0]:
                        if not 0 / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (0 / 0 / ext_call.return_data[0])
                    else:
                        if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                        if not 0 / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (-1 * 10^18 * ext_call.return_data[0] / 0 / ext_call.return_data[0])
                else:
                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    if not -ext_call.return_data[0]:
                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                    else:
                        if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (-1 * 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                return -ext_call.return_data[0], ext_call.return_data[0], 0
            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0]:
                if not arg1:
                    return 0
                require ext_code.size(arg1)
                staticcall arg1.performanceFee(uint256 rg1) with:
                        gas gas_remaining wei
                       args 0
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] > 0:
                    revert with 0, 'SafeMath: subtraction overflow'
                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                        gas gas_remaining wei
                       args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
                staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                        gas gas_remaining wei
                       args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not ext_call.return_data[0]:
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    if not -ext_call.return_data[0]:
                        if not 0 / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (0 / 0 / ext_call.return_data[0])
                    else:
                        if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                        if not 0 / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (-1 * 10^18 * ext_call.return_data[0] / 0 / ext_call.return_data[0])
                else:
                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    if not -ext_call.return_data[0]:
                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                    else:
                        if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (-1 * 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                return -ext_call.return_data[0], ext_call.return_data[0], 0
            if arg3 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] != arg3:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
            if not arg1:
                return arg3 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18, 
                       0,
                       0
            require ext_code.size(arg1)
            staticcall arg1.performanceFee(uint256 rg1) with:
                    gas gas_remaining wei
                   args (arg3 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18)
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] > arg3 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18:
                revert with 0, 'SafeMath: subtraction overflow'
            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                    gas gas_remaining wei
                   args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
            staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                    gas gas_remaining wei
                   args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not (arg3 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18) - ext_call.return_data[0]:
                    if not 0 / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (0 / 0 / ext_call.return_data[0])
                else:
                    if (10^18 * arg3 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18) - (10^18 * ext_call.return_data[0]) / (arg3 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18) - ext_call.return_data[0] != 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                    if not 0 / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args ((10^18 * arg3 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18) - (10^18 * ext_call.return_data[0]) / 0 / ext_call.return_data[0])
            else:
                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not (arg3 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18) - ext_call.return_data[0]:
                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                else:
                    if (10^18 * arg3 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18) - (10^18 * ext_call.return_data[0]) / (arg3 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18) - ext_call.return_data[0] != 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args ((10^18 * arg3 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18) - (10^18 * ext_call.return_data[0]) / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            return (arg3 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18) - ext_call.return_data[0], 
                   ext_call.return_data[0],
                   0
        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
            if not arg1:
                return 0
            require ext_code.size(arg1)
            staticcall arg1.performanceFee(uint256 rg1) with:
                    gas gas_remaining wei
                   args 0
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] > 0:
                revert with 0, 'SafeMath: subtraction overflow'
            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                    gas gas_remaining wei
                   args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
            staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                    gas gas_remaining wei
                   args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not -ext_call.return_data[0]:
                    if not 0 / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (0 / 0 / ext_call.return_data[0])
                else:
                    if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                    if not 0 / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (-1 * 10^18 * ext_call.return_data[0] / 0 / ext_call.return_data[0])
            else:
                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not -ext_call.return_data[0]:
                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                else:
                    if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (-1 * 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            return -ext_call.return_data[0], ext_call.return_data[0], 0
        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
            if not arg1:
                return 0
            require ext_code.size(arg1)
            staticcall arg1.performanceFee(uint256 rg1) with:
                    gas gas_remaining wei
                   args 0
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] > 0:
                revert with 0, 'SafeMath: subtraction overflow'
            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                    gas gas_remaining wei
                   args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
            staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                    gas gas_remaining wei
                   args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not -ext_call.return_data[0]:
                    if not 0 / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (0 / 0 / ext_call.return_data[0])
                else:
                    if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                    if not 0 / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (-1 * 10^18 * ext_call.return_data[0] / 0 / ext_call.return_data[0])
            else:
                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not -ext_call.return_data[0]:
                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                else:
                    if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (-1 * 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            return -ext_call.return_data[0], ext_call.return_data[0], 0
        if arg3 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != arg3:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
        if not arg1:
            return arg3 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18, 
                   0,
                   0
        require ext_code.size(arg1)
        staticcall arg1.performanceFee(uint256 rg1) with:
                gas gas_remaining wei
               args (arg3 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18)
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0] > arg3 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18:
            revert with 0, 'SafeMath: subtraction overflow'
        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                gas gas_remaining wei
               args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
        staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                gas gas_remaining wei
               args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            if not (arg3 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18) - ext_call.return_data[0]:
                if not 0 / ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(arg1)
                staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args (0 / 0 / ext_call.return_data[0])
            else:
                if (10^18 * arg3 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18) - (10^18 * ext_call.return_data[0]) / (arg3 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18) - ext_call.return_data[0] != 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                if not 0 / ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(arg1)
                staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args ((10^18 * arg3 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18) - (10^18 * ext_call.return_data[0]) / 0 / ext_call.return_data[0])
        else:
            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            if not (arg3 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18) - ext_call.return_data[0]:
                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(arg1)
                staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args (0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
            else:
                if (10^18 * arg3 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18) - (10^18 * ext_call.return_data[0]) / (arg3 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18) - ext_call.return_data[0] != 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(arg1)
                staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args ((10^18 * arg3 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18) - (10^18 * ext_call.return_data[0]) / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        return (arg3 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18) - ext_call.return_data[0], 
               ext_call.return_data[0],
               0
    require ext_code.size(arg2)
    staticcall arg2.token0() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(arg2)
    staticcall arg2.token1() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c == address(ext_call.return_data[0]):
        require ext_code.size(arg2)
        staticcall arg2.0x18160ddd with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                gas gas_remaining wei
               args arg2
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                    gas gas_remaining wei
                   args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
            staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                    gas gas_remaining wei
                   args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not 0 / ext_call.return_data[0]:
                    if not arg1:
                        return 0
                    require ext_code.size(arg1)
                    staticcall arg1.performanceFee(uint256 rg1) with:
                            gas gas_remaining wei
                           args 0
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] > 0:
                        revert with 0, 'SafeMath: subtraction overflow'
                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                            gas gas_remaining wei
                           args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
                    staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                            gas gas_remaining wei
                           args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not -ext_call.return_data[0]:
                            if not 0 / ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_code.size(arg1)
                            staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args (0 / 0 / ext_call.return_data[0])
                        else:
                            if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                            if not 0 / ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_code.size(arg1)
                            staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args (-1 * 10^18 * ext_call.return_data[0] / 0 / ext_call.return_data[0])
                    else:
                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not -ext_call.return_data[0]:
                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_code.size(arg1)
                            staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args (0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                        else:
                            if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_code.size(arg1)
                            staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args (-1 * 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    return -ext_call.return_data[0], ext_call.return_data[0], 0
                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                if not 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18:
                    if not arg1:
                        return 0
                    require ext_code.size(arg1)
                    staticcall arg1.performanceFee(uint256 rg1) with:
                            gas gas_remaining wei
                           args 0
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] > 0:
                        revert with 0, 'SafeMath: subtraction overflow'
                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                            gas gas_remaining wei
                           args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
                    staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                            gas gas_remaining wei
                           args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not -ext_call.return_data[0]:
                            if not 0 / ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_code.size(arg1)
                            staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args (0 / 0 / ext_call.return_data[0])
                        else:
                            if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                            if not 0 / ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_code.size(arg1)
                            staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args (-1 * 10^18 * ext_call.return_data[0] / 0 / ext_call.return_data[0])
                    else:
                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not -ext_call.return_data[0]:
                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_code.size(arg1)
                            staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args (0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                        else:
                            if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_code.size(arg1)
                            staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args (-1 * 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    return -ext_call.return_data[0], ext_call.return_data[0], 0
                if 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 != 2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                if not arg1:
                    return 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18, 0, 0
                require ext_code.size(arg1)
                staticcall arg1.performanceFee(uint256 rg1) with:
                        gas gas_remaining wei
                       args (2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] > 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18:
                    revert with 0, 'SafeMath: subtraction overflow'
                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                        gas gas_remaining wei
                       args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
                staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                        gas gas_remaining wei
                       args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not ext_call.return_data[0]:
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    if not (2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18) - ext_call.return_data[0]:
                        if not 0 / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (0 / 0 / ext_call.return_data[0])
                    else:
                        if (10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18) - (10^18 * ext_call.return_data[0]) / (2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18) - ext_call.return_data[0] != 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                        if not 0 / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args ((10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18) - (10^18 * ext_call.return_data[0]) / 0 / ext_call.return_data[0])
                else:
                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    if not (2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18) - ext_call.return_data[0]:
                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                    else:
                        if (10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18) - (10^18 * ext_call.return_data[0]) / (2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18) - ext_call.return_data[0] != 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args ((10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18) - (10^18 * ext_call.return_data[0]) / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                return (2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18) - ext_call.return_data[0], 
                       ext_call.return_data[0],
                       0
            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            if not 0 / ext_call.return_data[0]:
                if not arg1:
                    return 0
                require ext_code.size(arg1)
                staticcall arg1.performanceFee(uint256 rg1) with:
                        gas gas_remaining wei
                       args 0
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] > 0:
                    revert with 0, 'SafeMath: subtraction overflow'
                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                        gas gas_remaining wei
                       args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
                staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                        gas gas_remaining wei
                       args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not ext_call.return_data[0]:
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    if not -ext_call.return_data[0]:
                        if not 0 / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (0 / 0 / ext_call.return_data[0])
                    else:
                        if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                        if not 0 / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (-1 * 10^18 * ext_call.return_data[0] / 0 / ext_call.return_data[0])
                else:
                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    if not -ext_call.return_data[0]:
                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                    else:
                        if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (-1 * 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                return -ext_call.return_data[0], ext_call.return_data[0], 0
            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18:
                if not arg1:
                    return 0
                require ext_code.size(arg1)
                staticcall arg1.performanceFee(uint256 rg1) with:
                        gas gas_remaining wei
                       args 0
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] > 0:
                    revert with 0, 'SafeMath: subtraction overflow'
                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                        gas gas_remaining wei
                       args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
                staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                        gas gas_remaining wei
                       args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not ext_call.return_data[0]:
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    if not -ext_call.return_data[0]:
                        if not 0 / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (0 / 0 / ext_call.return_data[0])
                    else:
                        if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                        if not 0 / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (-1 * 10^18 * ext_call.return_data[0] / 0 / ext_call.return_data[0])
                else:
                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    if not -ext_call.return_data[0]:
                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                    else:
                        if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (-1 * 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                return -ext_call.return_data[0], ext_call.return_data[0], 0
            if 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 != 2:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
            if not arg1:
                return 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18, 0, 0
            require ext_code.size(arg1)
            staticcall arg1.performanceFee(uint256 rg1) with:
                    gas gas_remaining wei
                   args (2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18)
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] > 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18:
                revert with 0, 'SafeMath: subtraction overflow'
            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                    gas gas_remaining wei
                   args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
            staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                    gas gas_remaining wei
                   args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not (2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18) - ext_call.return_data[0]:
                    if not 0 / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (0 / 0 / ext_call.return_data[0])
                else:
                    if (10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18) - (10^18 * ext_call.return_data[0]) / (2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18) - ext_call.return_data[0] != 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                    if not 0 / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args ((10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18) - (10^18 * ext_call.return_data[0]) / 0 / ext_call.return_data[0])
            else:
                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not (2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18) - ext_call.return_data[0]:
                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                else:
                    if (10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18) - (10^18 * ext_call.return_data[0]) / (2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18) - ext_call.return_data[0] != 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args ((10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18) - (10^18 * ext_call.return_data[0]) / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            return (2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18) - ext_call.return_data[0], 
                   ext_call.return_data[0],
                   0
        if arg3 * ext_call.return_data[0] / ext_call.return_data[0] != arg3:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        33,
                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                        mem[197 len 31]
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                gas gas_remaining wei
               args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
        staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                gas gas_remaining wei
               args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            if not arg3 * ext_call.return_data[0] / ext_call.return_data[0]:
                if not arg1:
                    return 0
                require ext_code.size(arg1)
                staticcall arg1.performanceFee(uint256 rg1) with:
                        gas gas_remaining wei
                       args 0
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] > 0:
                    revert with 0, 'SafeMath: subtraction overflow'
                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                        gas gas_remaining wei
                       args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
                staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                        gas gas_remaining wei
                       args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not ext_call.return_data[0]:
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    if not -ext_call.return_data[0]:
                        if not 0 / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (0 / 0 / ext_call.return_data[0])
                    else:
                        if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                        if not 0 / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (-1 * 10^18 * ext_call.return_data[0] / 0 / ext_call.return_data[0])
                else:
                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    if not -ext_call.return_data[0]:
                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                    else:
                        if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (-1 * 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                return -ext_call.return_data[0], ext_call.return_data[0], 0
            if 0 / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / arg3 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
            if not 0 / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18:
                if not arg1:
                    return 0
                require ext_code.size(arg1)
                staticcall arg1.performanceFee(uint256 rg1) with:
                        gas gas_remaining wei
                       args 0
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] > 0:
                    revert with 0, 'SafeMath: subtraction overflow'
                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                        gas gas_remaining wei
                       args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
                staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                        gas gas_remaining wei
                       args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not ext_call.return_data[0]:
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    if not -ext_call.return_data[0]:
                        if not 0 / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (0 / 0 / ext_call.return_data[0])
                    else:
                        if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                        if not 0 / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (-1 * 10^18 * ext_call.return_data[0] / 0 / ext_call.return_data[0])
                else:
                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    if not -ext_call.return_data[0]:
                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                    else:
                        if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (-1 * 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                return -ext_call.return_data[0], ext_call.return_data[0], 0
            if 2 * 0 / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 != 2:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
            if not arg1:
                return 2 * 0 / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18, 0, 0
            require ext_code.size(arg1)
            staticcall arg1.performanceFee(uint256 rg1) with:
                    gas gas_remaining wei
                   args (2 * 0 / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18)
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] > 2 * 0 / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18:
                revert with 0, 'SafeMath: subtraction overflow'
            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                    gas gas_remaining wei
                   args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
            staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                    gas gas_remaining wei
                   args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not (2 * 0 / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18) - ext_call.return_data[0]:
                    if not 0 / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (0 / 0 / ext_call.return_data[0])
                else:
                    if (10^18 * 2 * 0 / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18) - (10^18 * ext_call.return_data[0]) / (2 * 0 / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18) - ext_call.return_data[0] != 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                    if not 0 / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args ((10^18 * 2 * 0 / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18) - (10^18 * ext_call.return_data[0]) / 0 / ext_call.return_data[0])
            else:
                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not (2 * 0 / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18) - ext_call.return_data[0]:
                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                else:
                    if (10^18 * 2 * 0 / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18) - (10^18 * ext_call.return_data[0]) / (2 * 0 / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18) - ext_call.return_data[0] != 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args ((10^18 * 2 * 0 / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18) - (10^18 * ext_call.return_data[0]) / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            return (2 * 0 / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18) - ext_call.return_data[0], 
                   ext_call.return_data[0],
                   0
        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        if not arg3 * ext_call.return_data[0] / ext_call.return_data[0]:
            if not arg1:
                return 0
            require ext_code.size(arg1)
            staticcall arg1.performanceFee(uint256 rg1) with:
                    gas gas_remaining wei
                   args 0
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] > 0:
                revert with 0, 'SafeMath: subtraction overflow'
            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                    gas gas_remaining wei
                   args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
            staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                    gas gas_remaining wei
                   args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not -ext_call.return_data[0]:
                    if not 0 / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (0 / 0 / ext_call.return_data[0])
                else:
                    if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                    if not 0 / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (-1 * 10^18 * ext_call.return_data[0] / 0 / ext_call.return_data[0])
            else:
                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not -ext_call.return_data[0]:
                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                else:
                    if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (-1 * 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            return -ext_call.return_data[0], ext_call.return_data[0], 0
        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / arg3 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18:
            if not arg1:
                return 0
            require ext_code.size(arg1)
            staticcall arg1.performanceFee(uint256 rg1) with:
                    gas gas_remaining wei
                   args 0
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] > 0:
                revert with 0, 'SafeMath: subtraction overflow'
            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                    gas gas_remaining wei
                   args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
            staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                    gas gas_remaining wei
                   args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not -ext_call.return_data[0]:
                    if not 0 / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (0 / 0 / ext_call.return_data[0])
                else:
                    if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                    if not 0 / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (-1 * 10^18 * ext_call.return_data[0] / 0 / ext_call.return_data[0])
            else:
                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not -ext_call.return_data[0]:
                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                else:
                    if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (-1 * 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            return -ext_call.return_data[0], ext_call.return_data[0], 0
        if 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 != 2:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
        if not arg1:
            return 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18, 
                   0,
                   0
        require ext_code.size(arg1)
        staticcall arg1.performanceFee(uint256 rg1) with:
                gas gas_remaining wei
               args (2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18)
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0] > 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18:
            revert with 0, 'SafeMath: subtraction overflow'
        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                gas gas_remaining wei
               args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
        staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                gas gas_remaining wei
               args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            if not (2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18) - ext_call.return_data[0]:
                if not 0 / ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(arg1)
                staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args (0 / 0 / ext_call.return_data[0])
            else:
                if (10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18) - (10^18 * ext_call.return_data[0]) / (2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18) - ext_call.return_data[0] != 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                if not 0 / ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(arg1)
                staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args ((10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18) - (10^18 * ext_call.return_data[0]) / 0 / ext_call.return_data[0])
        else:
            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            if not (2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18) - ext_call.return_data[0]:
                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(arg1)
                staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args (0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
            else:
                if (10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18) - (10^18 * ext_call.return_data[0]) / (2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18) - ext_call.return_data[0] != 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(arg1)
                staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args ((10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18) - (10^18 * ext_call.return_data[0]) / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        return (2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18) - ext_call.return_data[0], 
               ext_call.return_data[0],
               0
    if 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c == ext_call.return_data[12 len 20]:
        require ext_code.size(arg2)
        staticcall arg2.0x18160ddd with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                gas gas_remaining wei
               args arg2
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                    gas gas_remaining wei
                   args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
            staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                    gas gas_remaining wei
                   args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not 0 / ext_call.return_data[0]:
                    if not arg1:
                        return 0
                    require ext_code.size(arg1)
                    staticcall arg1.performanceFee(uint256 rg1) with:
                            gas gas_remaining wei
                           args 0
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] > 0:
                        revert with 0, 'SafeMath: subtraction overflow'
                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                            gas gas_remaining wei
                           args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
                    staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                            gas gas_remaining wei
                           args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not -ext_call.return_data[0]:
                            if not 0 / ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_code.size(arg1)
                            staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args (0 / 0 / ext_call.return_data[0])
                        else:
                            if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                            if not 0 / ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_code.size(arg1)
                            staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args (-1 * 10^18 * ext_call.return_data[0] / 0 / ext_call.return_data[0])
                    else:
                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not -ext_call.return_data[0]:
                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_code.size(arg1)
                            staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args (0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                        else:
                            if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_code.size(arg1)
                            staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args (-1 * 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    return -ext_call.return_data[0], ext_call.return_data[0], 0
                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                if not 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18:
                    if not arg1:
                        return 0
                    require ext_code.size(arg1)
                    staticcall arg1.performanceFee(uint256 rg1) with:
                            gas gas_remaining wei
                           args 0
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] > 0:
                        revert with 0, 'SafeMath: subtraction overflow'
                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                            gas gas_remaining wei
                           args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
                    staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                            gas gas_remaining wei
                           args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not -ext_call.return_data[0]:
                            if not 0 / ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_code.size(arg1)
                            staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args (0 / 0 / ext_call.return_data[0])
                        else:
                            if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                            if not 0 / ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_code.size(arg1)
                            staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args (-1 * 10^18 * ext_call.return_data[0] / 0 / ext_call.return_data[0])
                    else:
                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not -ext_call.return_data[0]:
                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_code.size(arg1)
                            staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args (0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                        else:
                            if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_code.size(arg1)
                            staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args (-1 * 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    return -ext_call.return_data[0], ext_call.return_data[0], 0
                if 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 != 2:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                if not arg1:
                    return 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18, 0, 0
                require ext_code.size(arg1)
                staticcall arg1.performanceFee(uint256 rg1) with:
                        gas gas_remaining wei
                       args (2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] > 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18:
                    revert with 0, 'SafeMath: subtraction overflow'
                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                        gas gas_remaining wei
                       args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
                staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                        gas gas_remaining wei
                       args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not ext_call.return_data[0]:
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    if not (2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18) - ext_call.return_data[0]:
                        if not 0 / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (0 / 0 / ext_call.return_data[0])
                    else:
                        if (10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18) - (10^18 * ext_call.return_data[0]) / (2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18) - ext_call.return_data[0] != 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                        if not 0 / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args ((10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18) - (10^18 * ext_call.return_data[0]) / 0 / ext_call.return_data[0])
                else:
                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    if not (2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18) - ext_call.return_data[0]:
                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                    else:
                        if (10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18) - (10^18 * ext_call.return_data[0]) / (2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18) - ext_call.return_data[0] != 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args ((10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18) - (10^18 * ext_call.return_data[0]) / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                return (2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18) - ext_call.return_data[0], 
                       ext_call.return_data[0],
                       0
            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            if not 0 / ext_call.return_data[0]:
                if not arg1:
                    return 0
                require ext_code.size(arg1)
                staticcall arg1.performanceFee(uint256 rg1) with:
                        gas gas_remaining wei
                       args 0
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] > 0:
                    revert with 0, 'SafeMath: subtraction overflow'
                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                        gas gas_remaining wei
                       args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
                staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                        gas gas_remaining wei
                       args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not ext_call.return_data[0]:
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    if not -ext_call.return_data[0]:
                        if not 0 / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (0 / 0 / ext_call.return_data[0])
                    else:
                        if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                        if not 0 / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (-1 * 10^18 * ext_call.return_data[0] / 0 / ext_call.return_data[0])
                else:
                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    if not -ext_call.return_data[0]:
                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                    else:
                        if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (-1 * 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                return -ext_call.return_data[0], ext_call.return_data[0], 0
            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18:
                if not arg1:
                    return 0
                require ext_code.size(arg1)
                staticcall arg1.performanceFee(uint256 rg1) with:
                        gas gas_remaining wei
                       args 0
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] > 0:
                    revert with 0, 'SafeMath: subtraction overflow'
                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                        gas gas_remaining wei
                       args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
                staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                        gas gas_remaining wei
                       args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not ext_call.return_data[0]:
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    if not -ext_call.return_data[0]:
                        if not 0 / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (0 / 0 / ext_call.return_data[0])
                    else:
                        if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                        if not 0 / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (-1 * 10^18 * ext_call.return_data[0] / 0 / ext_call.return_data[0])
                else:
                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    if not -ext_call.return_data[0]:
                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                    else:
                        if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (-1 * 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                return -ext_call.return_data[0], ext_call.return_data[0], 0
            if 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 != 2:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
            if not arg1:
                return 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18, 0, 0
            require ext_code.size(arg1)
            staticcall arg1.performanceFee(uint256 rg1) with:
                    gas gas_remaining wei
                   args (2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18)
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] > 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18:
                revert with 0, 'SafeMath: subtraction overflow'
            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                    gas gas_remaining wei
                   args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
            staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                    gas gas_remaining wei
                   args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not (2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18) - ext_call.return_data[0]:
                    if not 0 / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (0 / 0 / ext_call.return_data[0])
                else:
                    if (10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18) - (10^18 * ext_call.return_data[0]) / (2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18) - ext_call.return_data[0] != 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                    if not 0 / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args ((10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18) - (10^18 * ext_call.return_data[0]) / 0 / ext_call.return_data[0])
            else:
                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not (2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18) - ext_call.return_data[0]:
                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                else:
                    if (10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18) - (10^18 * ext_call.return_data[0]) / (2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18) - ext_call.return_data[0] != 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args ((10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18) - (10^18 * ext_call.return_data[0]) / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            return (2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18) - ext_call.return_data[0], 
                   ext_call.return_data[0],
                   0
        if arg3 * ext_call.return_data[0] / ext_call.return_data[0] != arg3:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        33,
                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                        mem[197 len 31]
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                gas gas_remaining wei
               args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
        staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                gas gas_remaining wei
               args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            if not arg3 * ext_call.return_data[0] / ext_call.return_data[0]:
                if not arg1:
                    return 0
                require ext_code.size(arg1)
                staticcall arg1.performanceFee(uint256 rg1) with:
                        gas gas_remaining wei
                       args 0
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] > 0:
                    revert with 0, 'SafeMath: subtraction overflow'
                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                        gas gas_remaining wei
                       args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
                staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                        gas gas_remaining wei
                       args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not ext_call.return_data[0]:
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    if not -ext_call.return_data[0]:
                        if not 0 / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (0 / 0 / ext_call.return_data[0])
                    else:
                        if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                        if not 0 / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (-1 * 10^18 * ext_call.return_data[0] / 0 / ext_call.return_data[0])
                else:
                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    if not -ext_call.return_data[0]:
                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                    else:
                        if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (-1 * 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                return -ext_call.return_data[0], ext_call.return_data[0], 0
            if 0 / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / arg3 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
            if not 0 / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18:
                if not arg1:
                    return 0
                require ext_code.size(arg1)
                staticcall arg1.performanceFee(uint256 rg1) with:
                        gas gas_remaining wei
                       args 0
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] > 0:
                    revert with 0, 'SafeMath: subtraction overflow'
                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                        gas gas_remaining wei
                       args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
                staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                        gas gas_remaining wei
                       args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not ext_call.return_data[0]:
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    if not -ext_call.return_data[0]:
                        if not 0 / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (0 / 0 / ext_call.return_data[0])
                    else:
                        if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                        if not 0 / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (-1 * 10^18 * ext_call.return_data[0] / 0 / ext_call.return_data[0])
                else:
                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    if not -ext_call.return_data[0]:
                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                    else:
                        if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (-1 * 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                return -ext_call.return_data[0], ext_call.return_data[0], 0
            if 2 * 0 / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 != 2:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
            if not arg1:
                return 2 * 0 / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18, 0, 0
            require ext_code.size(arg1)
            staticcall arg1.performanceFee(uint256 rg1) with:
                    gas gas_remaining wei
                   args (2 * 0 / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18)
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] > 2 * 0 / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18:
                revert with 0, 'SafeMath: subtraction overflow'
            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                    gas gas_remaining wei
                   args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
            staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                    gas gas_remaining wei
                   args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not (2 * 0 / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18) - ext_call.return_data[0]:
                    if not 0 / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (0 / 0 / ext_call.return_data[0])
                else:
                    if (10^18 * 2 * 0 / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18) - (10^18 * ext_call.return_data[0]) / (2 * 0 / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18) - ext_call.return_data[0] != 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                    if not 0 / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args ((10^18 * 2 * 0 / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18) - (10^18 * ext_call.return_data[0]) / 0 / ext_call.return_data[0])
            else:
                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not (2 * 0 / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18) - ext_call.return_data[0]:
                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                else:
                    if (10^18 * 2 * 0 / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18) - (10^18 * ext_call.return_data[0]) / (2 * 0 / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18) - ext_call.return_data[0] != 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args ((10^18 * 2 * 0 / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18) - (10^18 * ext_call.return_data[0]) / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            return (2 * 0 / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18) - ext_call.return_data[0], 
                   ext_call.return_data[0],
                   0
        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        if not arg3 * ext_call.return_data[0] / ext_call.return_data[0]:
            if not arg1:
                return 0
            require ext_code.size(arg1)
            staticcall arg1.performanceFee(uint256 rg1) with:
                    gas gas_remaining wei
                   args 0
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] > 0:
                revert with 0, 'SafeMath: subtraction overflow'
            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                    gas gas_remaining wei
                   args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
            staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                    gas gas_remaining wei
                   args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not -ext_call.return_data[0]:
                    if not 0 / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (0 / 0 / ext_call.return_data[0])
                else:
                    if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                    if not 0 / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (-1 * 10^18 * ext_call.return_data[0] / 0 / ext_call.return_data[0])
            else:
                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not -ext_call.return_data[0]:
                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                else:
                    if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (-1 * 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            return -ext_call.return_data[0], ext_call.return_data[0], 0
        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / arg3 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18:
            if not arg1:
                return 0
            require ext_code.size(arg1)
            staticcall arg1.performanceFee(uint256 rg1) with:
                    gas gas_remaining wei
                   args 0
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] > 0:
                revert with 0, 'SafeMath: subtraction overflow'
            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                    gas gas_remaining wei
                   args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
            staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                    gas gas_remaining wei
                   args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not -ext_call.return_data[0]:
                    if not 0 / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (0 / 0 / ext_call.return_data[0])
                else:
                    if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                    if not 0 / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (-1 * 10^18 * ext_call.return_data[0] / 0 / ext_call.return_data[0])
            else:
                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not -ext_call.return_data[0]:
                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                else:
                    if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (-1 * 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            return -ext_call.return_data[0], ext_call.return_data[0], 0
        if 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 != 2:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
        if not arg1:
            return 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18, 
                   0,
                   0
        require ext_code.size(arg1)
        staticcall arg1.performanceFee(uint256 rg1) with:
                gas gas_remaining wei
               args (2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18)
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0] > 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18:
            revert with 0, 'SafeMath: subtraction overflow'
        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                gas gas_remaining wei
               args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
        staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                gas gas_remaining wei
               args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            if not (2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18) - ext_call.return_data[0]:
                if not 0 / ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(arg1)
                staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args (0 / 0 / ext_call.return_data[0])
            else:
                if (10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18) - (10^18 * ext_call.return_data[0]) / (2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18) - ext_call.return_data[0] != 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                if not 0 / ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(arg1)
                staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args ((10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18) - (10^18 * ext_call.return_data[0]) / 0 / ext_call.return_data[0])
        else:
            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            if not (2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18) - ext_call.return_data[0]:
                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(arg1)
                staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args (0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
            else:
                if (10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18) - (10^18 * ext_call.return_data[0]) / (2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18) - ext_call.return_data[0] != 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(arg1)
                staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args ((10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18) - (10^18 * ext_call.return_data[0]) / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        return (2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * arg3 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18) - ext_call.return_data[0], 
               ext_call.return_data[0],
               0
    require ext_code.size(address(ext_call.return_data[0]))
    staticcall address(ext_call.return_data[0]).0x70a08231 with:
            gas gas_remaining wei
           args arg2
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(0xbcfccbde45ce874adcb698cc183debcf17952812)
    staticcall 0xbcfccbde45ce874adcb698cc183debcf17952812.getPair(address rg1, address rg2) with:
            gas gas_remaining wei
           args address(ext_call.return_data[0]), 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(address(ext_call.return_data[0]))
    staticcall address(ext_call.return_data[0]).0x313ce567 with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(address(ext_call.return_data[0]))
    staticcall address(ext_call.return_data[0]).0x70a08231 with:
            gas gas_remaining wei
           args address(ext_call.return_data[0])
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
            gas gas_remaining wei
           args address(ext_call.return_data[0])
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                gas gas_remaining wei
               args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
        staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                gas gas_remaining wei
               args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            if not ext_call.return_data[0]:
                if not arg1:
                    return 0
                require ext_code.size(arg1)
                staticcall arg1.performanceFee(uint256 rg1) with:
                        gas gas_remaining wei
                       args 0
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] > 0:
                    revert with 0, 'SafeMath: subtraction overflow'
                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                        gas gas_remaining wei
                       args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
                staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                        gas gas_remaining wei
                       args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not ext_call.return_data[0]:
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    if not -ext_call.return_data[0]:
                        if not 0 / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (0 / 0 / ext_call.return_data[0])
                    else:
                        if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                        if not 0 / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (-1 * 10^18 * ext_call.return_data[0] / 0 / ext_call.return_data[0])
                else:
                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    if not -ext_call.return_data[0]:
                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                    else:
                        if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (-1 * 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                return -ext_call.return_data[0], ext_call.return_data[0], 0
            if 0 / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
            if not 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                if not arg1:
                    return 0
                require ext_code.size(arg1)
                staticcall arg1.performanceFee(uint256 rg1) with:
                        gas gas_remaining wei
                       args 0
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] > 0:
                    revert with 0, 'SafeMath: subtraction overflow'
                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                        gas gas_remaining wei
                       args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
                staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                        gas gas_remaining wei
                       args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not ext_call.return_data[0]:
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    if not -ext_call.return_data[0]:
                        if not 0 / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (0 / 0 / ext_call.return_data[0])
                    else:
                        if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                        if not 0 / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (-1 * 10^18 * ext_call.return_data[0] / 0 / ext_call.return_data[0])
                else:
                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    if not -ext_call.return_data[0]:
                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                    else:
                        if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (-1 * 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                return -ext_call.return_data[0], ext_call.return_data[0], 0
            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 != 0 / ext_call.return_data[0]:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
            if not 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18:
                if not arg1:
                    return 0
                require ext_code.size(arg1)
                staticcall arg1.performanceFee(uint256 rg1) with:
                        gas gas_remaining wei
                       args 0
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] > 0:
                    revert with 0, 'SafeMath: subtraction overflow'
                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                        gas gas_remaining wei
                       args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
                staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                        gas gas_remaining wei
                       args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not ext_call.return_data[0]:
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    if not -ext_call.return_data[0]:
                        if not 0 / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (0 / 0 / ext_call.return_data[0])
                    else:
                        if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                        if not 0 / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (-1 * 10^18 * ext_call.return_data[0] / 0 / ext_call.return_data[0])
                else:
                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    if not -ext_call.return_data[0]:
                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                    else:
                        if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(arg1)
                        staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args (-1 * 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                return -ext_call.return_data[0], ext_call.return_data[0], 0
            if 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 != 2:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
            if not arg1:
                return 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18, 0, 0
            require ext_code.size(arg1)
            staticcall arg1.performanceFee(uint256 rg1) with:
                    gas gas_remaining wei
                   args (2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18)
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] > 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18:
                revert with 0, 'SafeMath: subtraction overflow'
            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                    gas gas_remaining wei
                   args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
            staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                    gas gas_remaining wei
                   args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not (2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18) - ext_call.return_data[0]:
                    if not 0 / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (0 / 0 / ext_call.return_data[0])
                else:
                    if (10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18) - (10^18 * ext_call.return_data[0]) / (2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18) - ext_call.return_data[0] != 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                    if not 0 / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args ((10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18) - (10^18 * ext_call.return_data[0]) / 0 / ext_call.return_data[0])
            else:
                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not (2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18) - ext_call.return_data[0]:
                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                else:
                    if (10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18) - (10^18 * ext_call.return_data[0]) / (2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18) - ext_call.return_data[0] != 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args ((10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18) - (10^18 * ext_call.return_data[0]) / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            return (2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18) - ext_call.return_data[0], 
                   ext_call.return_data[0],
                   0
        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        if not ext_call.return_data[0]:
            if not arg1:
                return 0
            require ext_code.size(arg1)
            staticcall arg1.performanceFee(uint256 rg1) with:
                    gas gas_remaining wei
                   args 0
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] > 0:
                revert with 0, 'SafeMath: subtraction overflow'
            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                    gas gas_remaining wei
                   args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
            staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                    gas gas_remaining wei
                   args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not -ext_call.return_data[0]:
                    if not 0 / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (0 / 0 / ext_call.return_data[0])
                else:
                    if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                    if not 0 / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (-1 * 10^18 * ext_call.return_data[0] / 0 / ext_call.return_data[0])
            else:
                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not -ext_call.return_data[0]:
                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                else:
                    if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (-1 * 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            return -ext_call.return_data[0], ext_call.return_data[0], 0
        if 0 / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
        if not 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
            if not arg1:
                return 0
            require ext_code.size(arg1)
            staticcall arg1.performanceFee(uint256 rg1) with:
                    gas gas_remaining wei
                   args 0
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] > 0:
                revert with 0, 'SafeMath: subtraction overflow'
            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                    gas gas_remaining wei
                   args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
            staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                    gas gas_remaining wei
                   args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not -ext_call.return_data[0]:
                    if not 0 / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (0 / 0 / ext_call.return_data[0])
                else:
                    if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                    if not 0 / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (-1 * 10^18 * ext_call.return_data[0] / 0 / ext_call.return_data[0])
            else:
                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not -ext_call.return_data[0]:
                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                else:
                    if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (-1 * 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            return -ext_call.return_data[0], ext_call.return_data[0], 0
        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 != 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18:
            if not arg1:
                return 0
            require ext_code.size(arg1)
            staticcall arg1.performanceFee(uint256 rg1) with:
                    gas gas_remaining wei
                   args 0
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] > 0:
                revert with 0, 'SafeMath: subtraction overflow'
            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                    gas gas_remaining wei
                   args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
            staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                    gas gas_remaining wei
                   args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not -ext_call.return_data[0]:
                    if not 0 / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (0 / 0 / ext_call.return_data[0])
                else:
                    if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                    if not 0 / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (-1 * 10^18 * ext_call.return_data[0] / 0 / ext_call.return_data[0])
            else:
                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not -ext_call.return_data[0]:
                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                else:
                    if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (-1 * 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            return -ext_call.return_data[0], ext_call.return_data[0], 0
        if 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 != 2:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
        if not arg1:
            return 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18, 
                   0,
                   0
        require ext_code.size(arg1)
        staticcall arg1.performanceFee(uint256 rg1) with:
                gas gas_remaining wei
               args (2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18)
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0] > 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18:
            revert with 0, 'SafeMath: subtraction overflow'
        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                gas gas_remaining wei
               args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
        staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                gas gas_remaining wei
               args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            if not (2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18) - ext_call.return_data[0]:
                if not 0 / ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(arg1)
                staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args (0 / 0 / ext_call.return_data[0])
            else:
                if (10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18) - (10^18 * ext_call.return_data[0]) / (2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18) - ext_call.return_data[0] != 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if not 0 / ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(arg1)
                staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args ((10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18) - (10^18 * ext_call.return_data[0]) / 0 / ext_call.return_data[0])
        else:
            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            if not (2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18) - ext_call.return_data[0]:
                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(arg1)
                staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args (0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
            else:
                if (10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18) - (10^18 * ext_call.return_data[0]) / (2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18) - ext_call.return_data[0] != 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(arg1)
                staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args ((10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18) - (10^18 * ext_call.return_data[0]) / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        return (2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18) - ext_call.return_data[0], 
               ext_call.return_data[0],
               0
    if 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] != 10^uint8(ext_call.return_data[0]):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    33,
                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                    mem[197 len 31]
    if not ext_call.return_data[0]:
        revert with 0, 'SafeMath: division by zero'
    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
            gas gas_remaining wei
           args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
    staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
            gas gas_remaining wei
           args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        if not ext_call.return_data[0]:
            if not arg1:
                return 0
            require ext_code.size(arg1)
            staticcall arg1.performanceFee(uint256 rg1) with:
                    gas gas_remaining wei
                   args 0
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] > 0:
                revert with 0, 'SafeMath: subtraction overflow'
            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                    gas gas_remaining wei
                   args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
            staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                    gas gas_remaining wei
                   args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not -ext_call.return_data[0]:
                    if not 0 / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (0 / 0 / ext_call.return_data[0])
                else:
                    if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                    if not 0 / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (-1 * 10^18 * ext_call.return_data[0] / 0 / ext_call.return_data[0])
            else:
                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not -ext_call.return_data[0]:
                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                else:
                    if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (-1 * 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            return -ext_call.return_data[0], ext_call.return_data[0], 0
        if 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0]:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
        if not 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
            if not arg1:
                return 0
            require ext_code.size(arg1)
            staticcall arg1.performanceFee(uint256 rg1) with:
                    gas gas_remaining wei
                   args 0
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] > 0:
                revert with 0, 'SafeMath: subtraction overflow'
            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                    gas gas_remaining wei
                   args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
            staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                    gas gas_remaining wei
                   args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not -ext_call.return_data[0]:
                    if not 0 / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (0 / 0 / ext_call.return_data[0])
                else:
                    if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                    if not 0 / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (-1 * 10^18 * ext_call.return_data[0] / 0 / ext_call.return_data[0])
            else:
                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not -ext_call.return_data[0]:
                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                else:
                    if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (-1 * 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            return -ext_call.return_data[0], ext_call.return_data[0], 0
        if 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 != 0 / ext_call.return_data[0]:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
        if not 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18:
            if not arg1:
                return 0
            require ext_code.size(arg1)
            staticcall arg1.performanceFee(uint256 rg1) with:
                    gas gas_remaining wei
                   args 0
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] > 0:
                revert with 0, 'SafeMath: subtraction overflow'
            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                    gas gas_remaining wei
                   args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
            staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                    gas gas_remaining wei
                   args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not -ext_call.return_data[0]:
                    if not 0 / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (0 / 0 / ext_call.return_data[0])
                else:
                    if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                    if not 0 / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (-1 * 10^18 * ext_call.return_data[0] / 0 / ext_call.return_data[0])
            else:
                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not -ext_call.return_data[0]:
                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
                else:
                    if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(arg1)
                    staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (-1 * 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            return -ext_call.return_data[0], ext_call.return_data[0], 0
        if 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 != 2:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
        if not arg1:
            return 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18, 
                   0,
                   0
        require ext_code.size(arg1)
        staticcall arg1.performanceFee(uint256 rg1) with:
                gas gas_remaining wei
               args (2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18)
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0] > 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18:
            revert with 0, 'SafeMath: subtraction overflow'
        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                gas gas_remaining wei
               args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
        staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                gas gas_remaining wei
               args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            if not (2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18) - ext_call.return_data[0]:
                if not 0 / ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(arg1)
                staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args (0 / 0 / ext_call.return_data[0])
            else:
                if (10^18 * 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18) - (10^18 * ext_call.return_data[0]) / (2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18) - ext_call.return_data[0] != 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if not 0 / ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(arg1)
                staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args ((10^18 * 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18) - (10^18 * ext_call.return_data[0]) / 0 / ext_call.return_data[0])
        else:
            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            if not (2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18) - ext_call.return_data[0]:
                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(arg1)
                staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args (0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
            else:
                if (10^18 * 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18) - (10^18 * ext_call.return_data[0]) / (2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18) - ext_call.return_data[0] != 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(arg1)
                staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args ((10^18 * 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18) - (10^18 * ext_call.return_data[0]) / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        return (2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18) - ext_call.return_data[0], 
               ext_call.return_data[0],
               0
    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
    if not ext_call.return_data[0]:
        revert with 0, 'SafeMath: division by zero'
    if not ext_call.return_data[0]:
        if not arg1:
            return 0
        require ext_code.size(arg1)
        staticcall arg1.performanceFee(uint256 rg1) with:
                gas gas_remaining wei
               args 0
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0] > 0:
            revert with 0, 'SafeMath: subtraction overflow'
        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                gas gas_remaining wei
               args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
        staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                gas gas_remaining wei
               args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            if not -ext_call.return_data[0]:
                if not 0 / ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(arg1)
                staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args (0 / 0 / ext_call.return_data[0])
            else:
                if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if not 0 / ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(arg1)
                staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args (-1 * 10^18 * ext_call.return_data[0] / 0 / ext_call.return_data[0])
        else:
            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            if not -ext_call.return_data[0]:
                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(arg1)
                staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args (0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
            else:
                if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(arg1)
                staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args (-1 * 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        return -ext_call.return_data[0], ext_call.return_data[0], 0
    if 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0]:
        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
    if not 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
        if not arg1:
            return 0
        require ext_code.size(arg1)
        staticcall arg1.performanceFee(uint256 rg1) with:
                gas gas_remaining wei
               args 0
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0] > 0:
            revert with 0, 'SafeMath: subtraction overflow'
        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                gas gas_remaining wei
               args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
        staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                gas gas_remaining wei
               args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            if not -ext_call.return_data[0]:
                if not 0 / ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(arg1)
                staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args (0 / 0 / ext_call.return_data[0])
            else:
                if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if not 0 / ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(arg1)
                staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args (-1 * 10^18 * ext_call.return_data[0] / 0 / ext_call.return_data[0])
        else:
            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            if not -ext_call.return_data[0]:
                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(arg1)
                staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args (0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
            else:
                if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(arg1)
                staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args (-1 * 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        return -ext_call.return_data[0], ext_call.return_data[0], 0
    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 != 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18:
        if not arg1:
            return 0
        require ext_code.size(arg1)
        staticcall arg1.performanceFee(uint256 rg1) with:
                gas gas_remaining wei
               args 0
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0] > 0:
            revert with 0, 'SafeMath: subtraction overflow'
        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                gas gas_remaining wei
               args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
        staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                gas gas_remaining wei
               args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            if not -ext_call.return_data[0]:
                if not 0 / ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(arg1)
                staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args (0 / 0 / ext_call.return_data[0])
            else:
                if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if not 0 / ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(arg1)
                staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args (-1 * 10^18 * ext_call.return_data[0] / 0 / ext_call.return_data[0])
        else:
            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            if not -ext_call.return_data[0]:
                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(arg1)
                staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args (0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
            else:
                if -1 * 10^18 * ext_call.return_data[0] / -ext_call.return_data[0] != 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(arg1)
                staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args (-1 * 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        return -ext_call.return_data[0], ext_call.return_data[0], 0
    if 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 != 2:
        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
    if not arg1:
        return 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18, 
               0,
               0
    require ext_code.size(arg1)
    staticcall arg1.performanceFee(uint256 rg1) with:
            gas gas_remaining wei
           args (2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18)
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0] > 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18:
        revert with 0, 'SafeMath: subtraction overflow'
    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
            gas gas_remaining wei
           args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
    staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
            gas gas_remaining wei
           args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        if not (2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18) - ext_call.return_data[0]:
            if not 0 / ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            require ext_code.size(arg1)
            staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                    gas gas_remaining wei
                   args (0 / 0 / ext_call.return_data[0])
        else:
            if (10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18) - (10^18 * ext_call.return_data[0]) / (2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18) - ext_call.return_data[0] != 10^18:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
            if not 0 / ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            require ext_code.size(arg1)
            staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                    gas gas_remaining wei
                   args ((10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18) - (10^18 * ext_call.return_data[0]) / 0 / ext_call.return_data[0])
    else:
        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        if not (2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18) - ext_call.return_data[0]:
            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            require ext_code.size(arg1)
            staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                    gas gas_remaining wei
                   args (0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
        else:
            if (10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18) - (10^18 * ext_call.return_data[0]) / (2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18) - ext_call.return_data[0] != 10^18:
                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            require ext_code.size(arg1)
            staticcall arg1.amountBunnyToMint(uint256 rg1) with:
                    gas gas_remaining wei
                   args ((10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18) - (10^18 * ext_call.return_data[0]) / 10^18 * ext_call.return_data[0] / ext_call.return_data[0])
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    return (2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18) - ext_call.return_data[0], 
           ext_call.return_data[0],
           0
}

function compoundingAPY(uint256 arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
            gas gas_remaining wei
           args arg1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 128
    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
            gas gas_remaining wei
           args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
    staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
            gas gas_remaining wei
           args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        require ext_code.size(address(ext_call.return_data[0]))
        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                gas gas_remaining wei
               args 0x73feaa1ee314f8c655e354234017be2193c9e24e
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82 == address(ext_call.return_data[0]):
            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                    gas gas_remaining wei
                   args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
            staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                    gas gas_remaining wei
                   args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                        gas gas_remaining wei
                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                        gas gas_remaining wei
                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not ext_call.return_data[0]:
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    if not 0 / ext_call.return_data[0]:
                        if not 0 / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                gas gas_remaining wei
                               args arg1
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 128
                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if not ext_call.return_data[0]:
                            if not ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                    gas gas_remaining wei
                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                    gas gas_remaining wei
                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if not ext_call.return_data[0]:
                                if not ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                if not 0 / ext_call.return_data[0]:
                                    if not 0 / 0 / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require arg2
                                    require 8760 * 24 * 3600 / arg2
                                    idx = 0
                                    s = 10^18
                                    while idx < 8760 * 24 * 3600 / arg2:
                                        idx = idx + 1
                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                        continue 
                                else:
                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                    if not 0 / 0 / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require arg2
                                    require 8760 * 24 * 3600 / arg2
                                    idx = 0
                                    s = 10^18
                                    while idx < 8760 * 24 * 3600 / arg2:
                                        idx = idx + 1
                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                        continue 
                            else:
                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                if not ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                    if not 0 / 0 / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require arg2
                                    require 8760 * 24 * 3600 / arg2
                                    idx = 0
                                    s = 10^18
                                    while idx < 8760 * 24 * 3600 / arg2:
                                        idx = idx + 1
                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                        continue 
                                else:
                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                    if not 0 / 0 / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require arg2
                                    require 8760 * 24 * 3600 / arg2
                                    idx = 0
                                    s = 10^18
                                    while idx < 8760 * 24 * 3600 / arg2:
                                        idx = idx + 1
                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                        continue 
                        else:
                            if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                revert with 0, 
                                            32,
                                            33,
                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            ext_call.return_data[101 len 27],
                                            mem[544 len 4]
                            if not 2920 * 3600 * ext_call.return_data[0]:
                                if not ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 0 / ext_call.return_data[0]:
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                else:
                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                            else:
                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                    revert with 0, 
                                                32,
                                                33,
                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                ext_call.return_data[101 len 27],
                                                mem[544 len 4]
                                if not ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 0 / ext_call.return_data[0]:
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                else:
                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                    else:
                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                        if not 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0]:
                            if not 0 / ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 128
                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if not ext_call.return_data[0]:
                                if not ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 0 / ext_call.return_data[0]:
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                else:
                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                            else:
                                if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                    revert with 0, 
                                                32,
                                                33,
                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                ext_call.return_data[101 len 27],
                                                mem[544 len 4]
                                if not 2920 * 3600 * ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                else:
                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    ext_call.return_data[101 len 27],
                                                    mem[544 len 4]
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                        else:
                            if ext_call.return_data[0] * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] != ext_call.return_data[0]:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                            if not ext_call.return_data[0] * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18:
                                if not 0 / ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                        gas gas_remaining wei
                                       args arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 128
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                else:
                                    if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    ext_call.return_data[101 len 27],
                                                    mem[544 len 4]
                                    if not 2920 * 3600 * ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[544 len 4]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                            else:
                                if 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 != 10^18:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                                if not 0 / ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                        gas gas_remaining wei
                                       args arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 128
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                else:
                                    if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    ext_call.return_data[101 len 27],
                                                    mem[544 len 4]
                                    if not 2920 * 3600 * ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[544 len 4]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                else:
                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                        if not 0 / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                gas gas_remaining wei
                               args arg1
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 128
                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if not ext_call.return_data[0]:
                            if not ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                    gas gas_remaining wei
                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                    gas gas_remaining wei
                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if not ext_call.return_data[0]:
                                if not ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                if not 0 / ext_call.return_data[0]:
                                    if not 0 / 0 / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require arg2
                                    require 8760 * 24 * 3600 / arg2
                                    idx = 0
                                    s = 10^18
                                    while idx < 8760 * 24 * 3600 / arg2:
                                        idx = idx + 1
                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                        continue 
                                else:
                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                    if not 0 / 0 / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require arg2
                                    require 8760 * 24 * 3600 / arg2
                                    idx = 0
                                    s = 10^18
                                    while idx < 8760 * 24 * 3600 / arg2:
                                        idx = idx + 1
                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                        continue 
                            else:
                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                if not ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                    if not 0 / 0 / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require arg2
                                    require 8760 * 24 * 3600 / arg2
                                    idx = 0
                                    s = 10^18
                                    while idx < 8760 * 24 * 3600 / arg2:
                                        idx = idx + 1
                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                        continue 
                                else:
                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                    if not 0 / 0 / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require arg2
                                    require 8760 * 24 * 3600 / arg2
                                    idx = 0
                                    s = 10^18
                                    while idx < 8760 * 24 * 3600 / arg2:
                                        idx = idx + 1
                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                        continue 
                        else:
                            if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                revert with 0, 
                                            32,
                                            33,
                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            ext_call.return_data[101 len 27],
                                            mem[544 len 4]
                            if not 2920 * 3600 * ext_call.return_data[0]:
                                if not ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 0 / ext_call.return_data[0]:
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                else:
                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                            else:
                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                    revert with 0, 
                                                32,
                                                33,
                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                ext_call.return_data[101 len 27],
                                                mem[544 len 4]
                                if not ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 0 / ext_call.return_data[0]:
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                else:
                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                    else:
                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                        if not 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            if not 0 / ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 128
                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if not ext_call.return_data[0]:
                                if not ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 0 / ext_call.return_data[0]:
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                else:
                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                            else:
                                if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                    revert with 0, 
                                                32,
                                                33,
                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                ext_call.return_data[101 len 27],
                                                mem[544 len 4]
                                if not 2920 * 3600 * ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                else:
                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    ext_call.return_data[101 len 27],
                                                    mem[544 len 4]
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                        else:
                            if ext_call.return_data[0] * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                            if not ext_call.return_data[0] * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18:
                                if not 0 / ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                        gas gas_remaining wei
                                       args arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 128
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                else:
                                    if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    ext_call.return_data[101 len 27],
                                                    mem[544 len 4]
                                    if not 2920 * 3600 * ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[544 len 4]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                            else:
                                if 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 != 10^18:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                                if not 0 / ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                        gas gas_remaining wei
                                       args arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 128
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                else:
                                    if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    ext_call.return_data[101 len 27],
                                                    mem[544 len 4]
                                    if not 2920 * 3600 * ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[544 len 4]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
            else:
                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                        gas gas_remaining wei
                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                        gas gas_remaining wei
                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not ext_call.return_data[0]:
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    if not 0 / ext_call.return_data[0]:
                        if not 0 / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                gas gas_remaining wei
                               args arg1
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 128
                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if not ext_call.return_data[0]:
                            if not ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                    gas gas_remaining wei
                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                    gas gas_remaining wei
                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if not ext_call.return_data[0]:
                                if not ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                if not 0 / ext_call.return_data[0]:
                                    if not 0 / 0 / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require arg2
                                    require 8760 * 24 * 3600 / arg2
                                    idx = 0
                                    s = 10^18
                                    while idx < 8760 * 24 * 3600 / arg2:
                                        idx = idx + 1
                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                        continue 
                                else:
                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                    if not 0 / 0 / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require arg2
                                    require 8760 * 24 * 3600 / arg2
                                    idx = 0
                                    s = 10^18
                                    while idx < 8760 * 24 * 3600 / arg2:
                                        idx = idx + 1
                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                        continue 
                            else:
                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                if not ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                    if not 0 / 0 / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require arg2
                                    require 8760 * 24 * 3600 / arg2
                                    idx = 0
                                    s = 10^18
                                    while idx < 8760 * 24 * 3600 / arg2:
                                        idx = idx + 1
                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                        continue 
                                else:
                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                    if not 0 / 0 / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require arg2
                                    require 8760 * 24 * 3600 / arg2
                                    idx = 0
                                    s = 10^18
                                    while idx < 8760 * 24 * 3600 / arg2:
                                        idx = idx + 1
                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                        continue 
                        else:
                            if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                revert with 0, 
                                            32,
                                            33,
                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            ext_call.return_data[101 len 27],
                                            mem[544 len 4]
                            if not 2920 * 3600 * ext_call.return_data[0]:
                                if not ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 0 / ext_call.return_data[0]:
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                else:
                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                            else:
                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                    revert with 0, 
                                                32,
                                                33,
                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                ext_call.return_data[101 len 27],
                                                mem[544 len 4]
                                if not ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 0 / ext_call.return_data[0]:
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                else:
                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                    else:
                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0]:
                            if not 0 / ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 128
                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if not ext_call.return_data[0]:
                                if not ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 0 / ext_call.return_data[0]:
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                else:
                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                            else:
                                if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                    revert with 0, 
                                                32,
                                                33,
                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                ext_call.return_data[101 len 27],
                                                mem[544 len 4]
                                if not 2920 * 3600 * ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                else:
                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    ext_call.return_data[101 len 27],
                                                    mem[544 len 4]
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                        else:
                            if ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] != ext_call.return_data[0]:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                            if not ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18:
                                if not 0 / ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                        gas gas_remaining wei
                                       args arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 128
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                else:
                                    if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    ext_call.return_data[101 len 27],
                                                    mem[544 len 4]
                                    if not 2920 * 3600 * ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[544 len 4]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                            else:
                                if 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 != 10^18:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                                if not 0 / ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                        gas gas_remaining wei
                                       args arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 128
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                else:
                                    if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    ext_call.return_data[101 len 27],
                                                    mem[544 len 4]
                                    if not 2920 * 3600 * ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[544 len 4]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                else:
                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                        if not 0 / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                gas gas_remaining wei
                               args arg1
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 128
                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if not ext_call.return_data[0]:
                            if not ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                    gas gas_remaining wei
                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                    gas gas_remaining wei
                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if not ext_call.return_data[0]:
                                if not ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                if not 0 / ext_call.return_data[0]:
                                    if not 0 / 0 / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require arg2
                                    require 8760 * 24 * 3600 / arg2
                                    idx = 0
                                    s = 10^18
                                    while idx < 8760 * 24 * 3600 / arg2:
                                        idx = idx + 1
                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                        continue 
                                else:
                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                    if not 0 / 0 / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require arg2
                                    require 8760 * 24 * 3600 / arg2
                                    idx = 0
                                    s = 10^18
                                    while idx < 8760 * 24 * 3600 / arg2:
                                        idx = idx + 1
                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                        continue 
                            else:
                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                if not ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                    if not 0 / 0 / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require arg2
                                    require 8760 * 24 * 3600 / arg2
                                    idx = 0
                                    s = 10^18
                                    while idx < 8760 * 24 * 3600 / arg2:
                                        idx = idx + 1
                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                        continue 
                                else:
                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                    if not 0 / 0 / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require arg2
                                    require 8760 * 24 * 3600 / arg2
                                    idx = 0
                                    s = 10^18
                                    while idx < 8760 * 24 * 3600 / arg2:
                                        idx = idx + 1
                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                        continue 
                        else:
                            if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                revert with 0, 
                                            32,
                                            33,
                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            ext_call.return_data[101 len 27],
                                            mem[544 len 4]
                            if not 2920 * 3600 * ext_call.return_data[0]:
                                if not ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 0 / ext_call.return_data[0]:
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                else:
                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                            else:
                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                    revert with 0, 
                                                32,
                                                33,
                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                ext_call.return_data[101 len 27],
                                                mem[544 len 4]
                                if not ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 0 / ext_call.return_data[0]:
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                else:
                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                    else:
                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            if not 0 / ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 128
                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if not ext_call.return_data[0]:
                                if not ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 0 / ext_call.return_data[0]:
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                else:
                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                            else:
                                if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                    revert with 0, 
                                                32,
                                                33,
                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                ext_call.return_data[101 len 27],
                                                mem[544 len 4]
                                if not 2920 * 3600 * ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                else:
                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    ext_call.return_data[101 len 27],
                                                    mem[544 len 4]
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                        else:
                            if ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                            if not ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18:
                                if not 0 / ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                        gas gas_remaining wei
                                       args arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 128
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                else:
                                    if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    ext_call.return_data[101 len 27],
                                                    mem[544 len 4]
                                    if not 2920 * 3600 * ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[544 len 4]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                            else:
                                if 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 != 10^18:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                                if not 0 / ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                        gas gas_remaining wei
                                       args arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 128
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                else:
                                    if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    ext_call.return_data[101 len 27],
                                                    mem[544 len 4]
                                    if not 2920 * 3600 * ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[544 len 4]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
        else:
            require ext_code.size(address(ext_call.return_data[0]))
            staticcall address(ext_call.return_data[0]).token0() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(address(ext_call.return_data[0]))
            staticcall address(ext_call.return_data[0]).token1() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(address(ext_call.return_data[0]))
            if 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c == address(ext_call.return_data[0]):
                staticcall address(ext_call.return_data[0]).0x18160ddd with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                        gas gas_remaining wei
                       args address(ext_call.return_data[0])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not ext_call.return_data[0]:
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                            gas gas_remaining wei
                           args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
                    staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                            gas gas_remaining wei
                           args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not 0 / ext_call.return_data[0]:
                            if not 0 / ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 128
                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if not ext_call.return_data[0]:
                                if not ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 0 / ext_call.return_data[0]:
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                else:
                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                            else:
                                if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                    revert with 0, 
                                                32,
                                                33,
                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                ext_call.return_data[101 len 27],
                                                mem[544 len 4]
                                if not 2920 * 3600 * ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                else:
                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    ext_call.return_data[101 len 27],
                                                    mem[544 len 4]
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                        else:
                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                            if not 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18:
                                if not 0 / ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                        gas gas_remaining wei
                                       args arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 128
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                else:
                                    if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    ext_call.return_data[101 len 27],
                                                    mem[544 len 4]
                                    if not 2920 * 3600 * ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[544 len 4]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                            else:
                                if 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 != 2:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                                if not 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18:
                                    if not 0 / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                            gas gas_remaining wei
                                           args arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 128
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[544 len 4]
                                        if not 2920 * 3600 * ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            ext_call.return_data[101 len 27],
                                                            mem[544 len 4]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                else:
                                    if 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 != 10^18:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                                    if not 0 / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                            gas gas_remaining wei
                                           args arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 128
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[544 len 4]
                                        if not 2920 * 3600 * ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            ext_call.return_data[101 len 27],
                                                            mem[544 len 4]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                    else:
                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not 0 / ext_call.return_data[0]:
                            if not 0 / ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 128
                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if not ext_call.return_data[0]:
                                if not ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 0 / ext_call.return_data[0]:
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                else:
                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                            else:
                                if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                    revert with 0, 
                                                32,
                                                33,
                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                ext_call.return_data[101 len 27],
                                                mem[544 len 4]
                                if not 2920 * 3600 * ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                else:
                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    ext_call.return_data[101 len 27],
                                                    mem[544 len 4]
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                        else:
                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18:
                                if not 0 / ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                        gas gas_remaining wei
                                       args arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 128
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                else:
                                    if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    ext_call.return_data[101 len 27],
                                                    mem[544 len 4]
                                    if not 2920 * 3600 * ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[544 len 4]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                            else:
                                if 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 != 2:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                                if not 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18:
                                    if not 0 / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                            gas gas_remaining wei
                                           args arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 128
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[544 len 4]
                                        if not 2920 * 3600 * ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            ext_call.return_data[101 len 27],
                                                            mem[544 len 4]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                else:
                                    if 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 != 10^18:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                                    if not 0 / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                            gas gas_remaining wei
                                           args arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 128
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[544 len 4]
                                        if not 2920 * 3600 * ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            ext_call.return_data[101 len 27],
                                                            mem[544 len 4]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                else:
                    if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                            gas gas_remaining wei
                           args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
                    staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                            gas gas_remaining wei
                           args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]:
                            if not 0 / ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 128
                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if not ext_call.return_data[0]:
                                if not ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 0 / ext_call.return_data[0]:
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                else:
                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                            else:
                                if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                    revert with 0, 
                                                32,
                                                33,
                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                ext_call.return_data[101 len 27],
                                                mem[544 len 4]
                                if not 2920 * 3600 * ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                else:
                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    ext_call.return_data[101 len 27],
                                                    mem[544 len 4]
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                        else:
                            if 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                            if not 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18:
                                if not 0 / ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                        gas gas_remaining wei
                                       args arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 128
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                else:
                                    if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    ext_call.return_data[101 len 27],
                                                    mem[544 len 4]
                                    if not 2920 * 3600 * ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[544 len 4]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                            else:
                                if 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 != 2:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                                if not 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18:
                                    if not 0 / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                            gas gas_remaining wei
                                           args arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 128
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[544 len 4]
                                        if not 2920 * 3600 * ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            ext_call.return_data[101 len 27],
                                                            mem[544 len 4]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                else:
                                    if 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 != 10^18:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                                    if not 0 / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                            gas gas_remaining wei
                                           args arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 128
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[544 len 4]
                                        if not 2920 * 3600 * ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            ext_call.return_data[101 len 27],
                                                            mem[544 len 4]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                    else:
                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]:
                            if not 0 / ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 128
                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if not ext_call.return_data[0]:
                                if not ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 0 / ext_call.return_data[0]:
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                else:
                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                            else:
                                if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                    revert with 0, 
                                                32,
                                                33,
                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                ext_call.return_data[101 len 27],
                                                mem[544 len 4]
                                if not 2920 * 3600 * ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                else:
                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    ext_call.return_data[101 len 27],
                                                    mem[544 len 4]
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                        else:
                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18:
                                if not 0 / ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                        gas gas_remaining wei
                                       args arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 128
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                else:
                                    if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    ext_call.return_data[101 len 27],
                                                    mem[544 len 4]
                                    if not 2920 * 3600 * ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[544 len 4]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                            else:
                                if 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 != 2:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                                if not 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18:
                                    if not 0 / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                            gas gas_remaining wei
                                           args arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 128
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[544 len 4]
                                        if not 2920 * 3600 * ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            ext_call.return_data[101 len 27],
                                                            mem[544 len 4]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                else:
                                    if 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 != 10^18:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                                    if not 0 / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                            gas gas_remaining wei
                                           args arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 128
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[544 len 4]
                                        if not 2920 * 3600 * ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            ext_call.return_data[101 len 27],
                                                            mem[544 len 4]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
            else:
                if 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c == ext_call.return_data[12 len 20]:
                    staticcall address(ext_call.return_data[0]).0x18160ddd with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                            gas gas_remaining wei
                           args address(ext_call.return_data[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                gas gas_remaining wei
                               args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
                        staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                                gas gas_remaining wei
                               args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if not ext_call.return_data[0]:
                            if not ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            if not 0 / ext_call.return_data[0]:
                                if not 0 / ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                        gas gas_remaining wei
                                       args arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 128
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                else:
                                    if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    ext_call.return_data[101 len 27],
                                                    mem[544 len 4]
                                    if not 2920 * 3600 * ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[544 len 4]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                            else:
                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                                if not 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18:
                                    if not 0 / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                            gas gas_remaining wei
                                           args arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 128
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[544 len 4]
                                        if not 2920 * 3600 * ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            ext_call.return_data[101 len 27],
                                                            mem[544 len 4]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                else:
                                    if 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 != 2:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                                    if not 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18:
                                        if not 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                                gas gas_remaining wei
                                               args arg1
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 128
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            ext_call.return_data[101 len 27],
                                                            mem[544 len 4]
                                            if not 2920 * 3600 * ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                ext_call.return_data[101 len 27],
                                                                mem[544 len 4]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                    else:
                                        if 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                                        if not 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                                gas gas_remaining wei
                                               args arg1
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 128
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            ext_call.return_data[101 len 27],
                                                            mem[544 len 4]
                                            if not 2920 * 3600 * ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                ext_call.return_data[101 len 27],
                                                                mem[544 len 4]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                        else:
                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                            if not ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            if not 0 / ext_call.return_data[0]:
                                if not 0 / ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                        gas gas_remaining wei
                                       args arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 128
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                else:
                                    if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    ext_call.return_data[101 len 27],
                                                    mem[544 len 4]
                                    if not 2920 * 3600 * ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[544 len 4]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                            else:
                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18:
                                    if not 0 / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                            gas gas_remaining wei
                                           args arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 128
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[544 len 4]
                                        if not 2920 * 3600 * ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            ext_call.return_data[101 len 27],
                                                            mem[544 len 4]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                else:
                                    if 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 != 2:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                                    if not 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18:
                                        if not 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                                gas gas_remaining wei
                                               args arg1
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 128
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            ext_call.return_data[101 len 27],
                                                            mem[544 len 4]
                                            if not 2920 * 3600 * ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                ext_call.return_data[101 len 27],
                                                                mem[544 len 4]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                    else:
                                        if 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                                        if not 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                                gas gas_remaining wei
                                               args arg1
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 128
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            ext_call.return_data[101 len 27],
                                                            mem[544 len 4]
                                            if not 2920 * 3600 * ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                ext_call.return_data[101 len 27],
                                                                mem[544 len 4]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                    else:
                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                gas gas_remaining wei
                               args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
                        staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                                gas gas_remaining wei
                               args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if not ext_call.return_data[0]:
                            if not ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            if not ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]:
                                if not 0 / ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                        gas gas_remaining wei
                                       args arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 128
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                else:
                                    if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    ext_call.return_data[101 len 27],
                                                    mem[544 len 4]
                                    if not 2920 * 3600 * ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[544 len 4]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                            else:
                                if 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                                if not 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18:
                                    if not 0 / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                            gas gas_remaining wei
                                           args arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 128
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[544 len 4]
                                        if not 2920 * 3600 * ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            ext_call.return_data[101 len 27],
                                                            mem[544 len 4]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                else:
                                    if 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 != 2:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                                    if not 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18:
                                        if not 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                                gas gas_remaining wei
                                               args arg1
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 128
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            ext_call.return_data[101 len 27],
                                                            mem[544 len 4]
                                            if not 2920 * 3600 * ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                ext_call.return_data[101 len 27],
                                                                mem[544 len 4]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                    else:
                                        if 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                                        if not 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                                gas gas_remaining wei
                                               args arg1
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 128
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            ext_call.return_data[101 len 27],
                                                            mem[544 len 4]
                                            if not 2920 * 3600 * ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                ext_call.return_data[101 len 27],
                                                                mem[544 len 4]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                        else:
                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                            if not ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            if not ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]:
                                if not 0 / ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                        gas gas_remaining wei
                                       args arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 128
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                else:
                                    if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    ext_call.return_data[101 len 27],
                                                    mem[544 len 4]
                                    if not 2920 * 3600 * ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[544 len 4]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                            else:
                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18:
                                    if not 0 / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                            gas gas_remaining wei
                                           args arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 128
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[544 len 4]
                                        if not 2920 * 3600 * ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            ext_call.return_data[101 len 27],
                                                            mem[544 len 4]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                else:
                                    if 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 != 2:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                                    if not 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18:
                                        if not 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                                gas gas_remaining wei
                                               args arg1
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 128
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            ext_call.return_data[101 len 27],
                                                            mem[544 len 4]
                                            if not 2920 * 3600 * ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                ext_call.return_data[101 len 27],
                                                                mem[544 len 4]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                    else:
                                        if 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                                        if not 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                                gas gas_remaining wei
                                               args arg1
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 128
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            ext_call.return_data[101 len 27],
                                                            mem[544 len 4]
                                            if not 2920 * 3600 * ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                ext_call.return_data[101 len 27],
                                                                mem[544 len 4]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                else:
                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                            gas gas_remaining wei
                           args address(ext_call.return_data[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(0xbcfccbde45ce874adcb698cc183debcf17952812)
                    staticcall 0xbcfccbde45ce874adcb698cc183debcf17952812.getPair(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args address(ext_call.return_data[0]), 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(address(ext_call.return_data[0]))
                    staticcall address(ext_call.return_data[0]).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(address(ext_call.return_data[0]))
                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                            gas gas_remaining wei
                           args address(ext_call.return_data[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                            gas gas_remaining wei
                           args address(ext_call.return_data[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                gas gas_remaining wei
                               args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
                        staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                                gas gas_remaining wei
                               args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if not ext_call.return_data[0]:
                            if not ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            if not ext_call.return_data[0]:
                                if not 0 / ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                        gas gas_remaining wei
                                       args arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 128
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                else:
                                    if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    ext_call.return_data[101 len 27],
                                                    mem[608 len 4]
                                    if not 2920 * 3600 * ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[608 len 4]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                            else:
                                if 0 / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                                if not 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                                    if not 0 / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                            gas gas_remaining wei
                                           args arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 128
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[608 len 4]
                                        if not 2920 * 3600 * ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            ext_call.return_data[101 len 27],
                                                            mem[608 len 4]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                else:
                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 != 0 / ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                                    if not 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18:
                                        if not 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                                gas gas_remaining wei
                                               args arg1
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 128
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            ext_call.return_data[101 len 27],
                                                            mem[608 len 4]
                                            if not 2920 * 3600 * ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                ext_call.return_data[101 len 27],
                                                                mem[608 len 4]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                    else:
                                        if 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 != 2:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                                        if not 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18:
                                            if not 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                                    gas gas_remaining wei
                                                   args arg1
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 128
                                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                                    gas gas_remaining wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                                    gas gas_remaining wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                ext_call.return_data[101 len 27],
                                                                mem[608 len 4]
                                                if not 2920 * 3600 * ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not ext_call.return_data[0]:
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 0 / ext_call.return_data[0]:
                                                            if not 0 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 0 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                    else:
                                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            if not 0 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 0 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    ext_call.return_data[101 len 27],
                                                                    mem[608 len 4]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not ext_call.return_data[0]:
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 0 / ext_call.return_data[0]:
                                                            if not 0 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 0 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                    else:
                                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            if not 0 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 0 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                        else:
                                            if 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                                            if not 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                                    gas gas_remaining wei
                                                   args arg1
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 128
                                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                                    gas gas_remaining wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                                    gas gas_remaining wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                ext_call.return_data[101 len 27],
                                                                mem[608 len 4]
                                                if not 2920 * 3600 * ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not ext_call.return_data[0]:
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 0 / ext_call.return_data[0]:
                                                            if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                    else:
                                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    ext_call.return_data[101 len 27],
                                                                    mem[608 len 4]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not ext_call.return_data[0]:
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 0 / ext_call.return_data[0]:
                                                            if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                    else:
                                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                        else:
                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                            if not ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            if not ext_call.return_data[0]:
                                if not 0 / ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                        gas gas_remaining wei
                                       args arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 128
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                else:
                                    if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    ext_call.return_data[101 len 27],
                                                    mem[608 len 4]
                                    if not 2920 * 3600 * ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[608 len 4]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                            else:
                                if 0 / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                                if not 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                                    if not 0 / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                            gas gas_remaining wei
                                           args arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 128
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[608 len 4]
                                        if not 2920 * 3600 * ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            ext_call.return_data[101 len 27],
                                                            mem[608 len 4]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                else:
                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 != 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18:
                                        if not 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                                gas gas_remaining wei
                                               args arg1
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 128
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            ext_call.return_data[101 len 27],
                                                            mem[608 len 4]
                                            if not 2920 * 3600 * ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                ext_call.return_data[101 len 27],
                                                                mem[608 len 4]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                    else:
                                        if 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 != 2:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                                        if not 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18:
                                            if not 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                                    gas gas_remaining wei
                                                   args arg1
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 128
                                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                                    gas gas_remaining wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                                    gas gas_remaining wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                ext_call.return_data[101 len 27],
                                                                mem[608 len 4]
                                                if not 2920 * 3600 * ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not ext_call.return_data[0]:
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 0 / ext_call.return_data[0]:
                                                            if not 0 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 0 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                    else:
                                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            if not 0 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 0 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    ext_call.return_data[101 len 27],
                                                                    mem[608 len 4]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not ext_call.return_data[0]:
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 0 / ext_call.return_data[0]:
                                                            if not 0 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 0 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                    else:
                                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            if not 0 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 0 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                        else:
                                            if 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                                            if not 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                                    gas gas_remaining wei
                                                   args arg1
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 128
                                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                                    gas gas_remaining wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                                    gas gas_remaining wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                ext_call.return_data[101 len 27],
                                                                mem[608 len 4]
                                                if not 2920 * 3600 * ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not ext_call.return_data[0]:
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 0 / ext_call.return_data[0]:
                                                            if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                    else:
                                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    ext_call.return_data[101 len 27],
                                                                    mem[608 len 4]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not ext_call.return_data[0]:
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 0 / ext_call.return_data[0]:
                                                            if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                    else:
                                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                    else:
                        if 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] != 10^uint8(ext_call.return_data[0]):
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                gas gas_remaining wei
                               args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
                        staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                                gas gas_remaining wei
                               args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if not ext_call.return_data[0]:
                            if not ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            if not ext_call.return_data[0]:
                                if not 0 / ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                        gas gas_remaining wei
                                       args arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 128
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                else:
                                    if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    ext_call.return_data[101 len 27],
                                                    mem[608 len 4]
                                    if not 2920 * 3600 * ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[608 len 4]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                            else:
                                if 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0]:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                                if not 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                                    if not 0 / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                            gas gas_remaining wei
                                           args arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 128
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[608 len 4]
                                        if not 2920 * 3600 * ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            ext_call.return_data[101 len 27],
                                                            mem[608 len 4]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                else:
                                    if 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 != 0 / ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                                    if not 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18:
                                        if not 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                                gas gas_remaining wei
                                               args arg1
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 128
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            ext_call.return_data[101 len 27],
                                                            mem[608 len 4]
                                            if not 2920 * 3600 * ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                ext_call.return_data[101 len 27],
                                                                mem[608 len 4]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                    else:
                                        if 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 != 2:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                                        if not 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18:
                                            if not 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                                    gas gas_remaining wei
                                                   args arg1
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 128
                                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                                    gas gas_remaining wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                                    gas gas_remaining wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                ext_call.return_data[101 len 27],
                                                                mem[608 len 4]
                                                if not 2920 * 3600 * ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not ext_call.return_data[0]:
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 0 / ext_call.return_data[0]:
                                                            if not 0 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 0 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                    else:
                                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            if not 0 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 0 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    ext_call.return_data[101 len 27],
                                                                    mem[608 len 4]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not ext_call.return_data[0]:
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 0 / ext_call.return_data[0]:
                                                            if not 0 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 0 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                    else:
                                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            if not 0 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 0 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                        else:
                                            if 10^18 * 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                                            if not 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                                    gas gas_remaining wei
                                                   args arg1
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 128
                                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                                    gas gas_remaining wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                                    gas gas_remaining wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 10^18 * 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 10^18 * 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 10^18 * 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 10^18 * 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                ext_call.return_data[101 len 27],
                                                                mem[608 len 4]
                                                if not 2920 * 3600 * ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not ext_call.return_data[0]:
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 0 / ext_call.return_data[0]:
                                                            if not 10^18 * 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 10^18 * 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                    else:
                                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            if not 10^18 * 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 10^18 * 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    ext_call.return_data[101 len 27],
                                                                    mem[608 len 4]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not ext_call.return_data[0]:
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 0 / ext_call.return_data[0]:
                                                            if not 10^18 * 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 10^18 * 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                    else:
                                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            if not 10^18 * 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 10^18 * 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                        else:
                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                            if not ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            if not ext_call.return_data[0]:
                                if not 0 / ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                        gas gas_remaining wei
                                       args arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 128
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                            if not 0 / 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                else:
                                    if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    ext_call.return_data[101 len 27],
                                                    mem[608 len 4]
                                    if not 2920 * 3600 * ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[608 len 4]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                            else:
                                if 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0]:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                                if not 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                                    if not 0 / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                            gas gas_remaining wei
                                           args arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 128
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                if not 0 / 0 / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[608 len 4]
                                        if not 2920 * 3600 * ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            ext_call.return_data[101 len 27],
                                                            mem[608 len 4]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                else:
                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 != 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18:
                                        if not 0 / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                                gas gas_remaining wei
                                               args arg1
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 128
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                    if not 0 / 0 / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            ext_call.return_data[101 len 27],
                                                            mem[608 len 4]
                                            if not 2920 * 3600 * ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                ext_call.return_data[101 len 27],
                                                                mem[608 len 4]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                    else:
                                        if 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 != 2:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                                        if not 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18:
                                            if not 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                                    gas gas_remaining wei
                                                   args arg1
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 128
                                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                                    gas gas_remaining wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                                    gas gas_remaining wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 0 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                ext_call.return_data[101 len 27],
                                                                mem[608 len 4]
                                                if not 2920 * 3600 * ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not ext_call.return_data[0]:
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 0 / ext_call.return_data[0]:
                                                            if not 0 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 0 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                    else:
                                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            if not 0 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 0 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    ext_call.return_data[101 len 27],
                                                                    mem[608 len 4]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not ext_call.return_data[0]:
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 0 / ext_call.return_data[0]:
                                                            if not 0 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 0 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                    else:
                                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            if not 0 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 0 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                        else:
                                            if 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                                            if not 0 / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                                    gas gas_remaining wei
                                                   args arg1
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 128
                                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                                    gas gas_remaining wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                                    gas gas_remaining wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                ext_call.return_data[101 len 27],
                                                                mem[608 len 4]
                                                if not 2920 * 3600 * ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not ext_call.return_data[0]:
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 0 / ext_call.return_data[0]:
                                                            if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                    else:
                                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    ext_call.return_data[101 len 27],
                                                                    mem[608 len 4]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not ext_call.return_data[0]:
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 0 / ext_call.return_data[0]:
                                                            if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                    else:
                                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
    else:
        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        33,
                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                        ext_call.return_data[101 len 27],
                        mem[224 len 4]
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        require ext_code.size(address(ext_call.return_data[0]))
        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                gas gas_remaining wei
               args 0x73feaa1ee314f8c655e354234017be2193c9e24e
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82 == address(ext_call.return_data[0]):
            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                    gas gas_remaining wei
                   args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
            staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                    gas gas_remaining wei
                   args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                        gas gas_remaining wei
                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                        gas gas_remaining wei
                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not ext_call.return_data[0]:
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    if not 0 / ext_call.return_data[0]:
                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                gas gas_remaining wei
                               args arg1
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 128
                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if not ext_call.return_data[0]:
                            if not ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                    gas gas_remaining wei
                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                    gas gas_remaining wei
                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if not ext_call.return_data[0]:
                                if not ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                if not 0 / ext_call.return_data[0]:
                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require arg2
                                    require 8760 * 24 * 3600 / arg2
                                    idx = 0
                                    s = 10^18
                                    while idx < 8760 * 24 * 3600 / arg2:
                                        idx = idx + 1
                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                        continue 
                                else:
                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require arg2
                                    require 8760 * 24 * 3600 / arg2
                                    idx = 0
                                    s = 10^18
                                    while idx < 8760 * 24 * 3600 / arg2:
                                        idx = idx + 1
                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                        continue 
                            else:
                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                if not ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require arg2
                                    require 8760 * 24 * 3600 / arg2
                                    idx = 0
                                    s = 10^18
                                    while idx < 8760 * 24 * 3600 / arg2:
                                        idx = idx + 1
                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                        continue 
                                else:
                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require arg2
                                    require 8760 * 24 * 3600 / arg2
                                    idx = 0
                                    s = 10^18
                                    while idx < 8760 * 24 * 3600 / arg2:
                                        idx = idx + 1
                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                        continue 
                        else:
                            if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                revert with 0, 
                                            32,
                                            33,
                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            ext_call.return_data[101 len 27],
                                            mem[544 len 4]
                            if not 2920 * 3600 * ext_call.return_data[0]:
                                if not ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 0 / ext_call.return_data[0]:
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                else:
                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                            else:
                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                    revert with 0, 
                                                32,
                                                33,
                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                ext_call.return_data[101 len 27],
                                                mem[544 len 4]
                                if not ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 0 / ext_call.return_data[0]:
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                else:
                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                    else:
                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                        if not 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0]:
                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 128
                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if not ext_call.return_data[0]:
                                if not ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 0 / ext_call.return_data[0]:
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                else:
                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                            else:
                                if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                    revert with 0, 
                                                32,
                                                33,
                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                ext_call.return_data[101 len 27],
                                                mem[544 len 4]
                                if not 2920 * 3600 * ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                else:
                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    ext_call.return_data[101 len 27],
                                                    mem[544 len 4]
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                        else:
                            if ext_call.return_data[0] * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] != ext_call.return_data[0]:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                            if not ext_call.return_data[0] * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18:
                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                        gas gas_remaining wei
                                       args arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 128
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                else:
                                    if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    ext_call.return_data[101 len 27],
                                                    mem[544 len 4]
                                    if not 2920 * 3600 * ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[544 len 4]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                            else:
                                if 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 != 10^18:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                        gas gas_remaining wei
                                       args arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 128
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                else:
                                    if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    ext_call.return_data[101 len 27],
                                                    mem[544 len 4]
                                    if not 2920 * 3600 * ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[544 len 4]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                else:
                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                gas gas_remaining wei
                               args arg1
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 128
                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if not ext_call.return_data[0]:
                            if not ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                    gas gas_remaining wei
                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                    gas gas_remaining wei
                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if not ext_call.return_data[0]:
                                if not ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                if not 0 / ext_call.return_data[0]:
                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require arg2
                                    require 8760 * 24 * 3600 / arg2
                                    idx = 0
                                    s = 10^18
                                    while idx < 8760 * 24 * 3600 / arg2:
                                        idx = idx + 1
                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                        continue 
                                else:
                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require arg2
                                    require 8760 * 24 * 3600 / arg2
                                    idx = 0
                                    s = 10^18
                                    while idx < 8760 * 24 * 3600 / arg2:
                                        idx = idx + 1
                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                        continue 
                            else:
                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                if not ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require arg2
                                    require 8760 * 24 * 3600 / arg2
                                    idx = 0
                                    s = 10^18
                                    while idx < 8760 * 24 * 3600 / arg2:
                                        idx = idx + 1
                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                        continue 
                                else:
                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require arg2
                                    require 8760 * 24 * 3600 / arg2
                                    idx = 0
                                    s = 10^18
                                    while idx < 8760 * 24 * 3600 / arg2:
                                        idx = idx + 1
                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                        continue 
                        else:
                            if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                revert with 0, 
                                            32,
                                            33,
                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            ext_call.return_data[101 len 27],
                                            mem[544 len 4]
                            if not 2920 * 3600 * ext_call.return_data[0]:
                                if not ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 0 / ext_call.return_data[0]:
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                else:
                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                            else:
                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                    revert with 0, 
                                                32,
                                                33,
                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                ext_call.return_data[101 len 27],
                                                mem[544 len 4]
                                if not ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 0 / ext_call.return_data[0]:
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                else:
                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                    else:
                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                        if not 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 128
                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if not ext_call.return_data[0]:
                                if not ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 0 / ext_call.return_data[0]:
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                else:
                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                            else:
                                if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                    revert with 0, 
                                                32,
                                                33,
                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                ext_call.return_data[101 len 27],
                                                mem[544 len 4]
                                if not 2920 * 3600 * ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                else:
                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    ext_call.return_data[101 len 27],
                                                    mem[544 len 4]
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                        else:
                            if ext_call.return_data[0] * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                            if not ext_call.return_data[0] * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18:
                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                        gas gas_remaining wei
                                       args arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 128
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                else:
                                    if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    ext_call.return_data[101 len 27],
                                                    mem[544 len 4]
                                    if not 2920 * 3600 * ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[544 len 4]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                            else:
                                if 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 != 10^18:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                        gas gas_remaining wei
                                       args arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 128
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                else:
                                    if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    ext_call.return_data[101 len 27],
                                                    mem[544 len 4]
                                    if not 2920 * 3600 * ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[544 len 4]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
            else:
                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                        gas gas_remaining wei
                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                        gas gas_remaining wei
                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not ext_call.return_data[0]:
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    if not 0 / ext_call.return_data[0]:
                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                gas gas_remaining wei
                               args arg1
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 128
                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if not ext_call.return_data[0]:
                            if not ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                    gas gas_remaining wei
                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                    gas gas_remaining wei
                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if not ext_call.return_data[0]:
                                if not ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                if not 0 / ext_call.return_data[0]:
                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require arg2
                                    require 8760 * 24 * 3600 / arg2
                                    idx = 0
                                    s = 10^18
                                    while idx < 8760 * 24 * 3600 / arg2:
                                        idx = idx + 1
                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                        continue 
                                else:
                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require arg2
                                    require 8760 * 24 * 3600 / arg2
                                    idx = 0
                                    s = 10^18
                                    while idx < 8760 * 24 * 3600 / arg2:
                                        idx = idx + 1
                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                        continue 
                            else:
                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                if not ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require arg2
                                    require 8760 * 24 * 3600 / arg2
                                    idx = 0
                                    s = 10^18
                                    while idx < 8760 * 24 * 3600 / arg2:
                                        idx = idx + 1
                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                        continue 
                                else:
                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require arg2
                                    require 8760 * 24 * 3600 / arg2
                                    idx = 0
                                    s = 10^18
                                    while idx < 8760 * 24 * 3600 / arg2:
                                        idx = idx + 1
                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                        continue 
                        else:
                            if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                revert with 0, 
                                            32,
                                            33,
                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            ext_call.return_data[101 len 27],
                                            mem[544 len 4]
                            if not 2920 * 3600 * ext_call.return_data[0]:
                                if not ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 0 / ext_call.return_data[0]:
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                else:
                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                            else:
                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                    revert with 0, 
                                                32,
                                                33,
                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                ext_call.return_data[101 len 27],
                                                mem[544 len 4]
                                if not ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 0 / ext_call.return_data[0]:
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                else:
                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                    else:
                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0]:
                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 128
                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if not ext_call.return_data[0]:
                                if not ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 0 / ext_call.return_data[0]:
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                else:
                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                            else:
                                if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                    revert with 0, 
                                                32,
                                                33,
                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                ext_call.return_data[101 len 27],
                                                mem[544 len 4]
                                if not 2920 * 3600 * ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                else:
                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    ext_call.return_data[101 len 27],
                                                    mem[544 len 4]
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                        else:
                            if ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] != ext_call.return_data[0]:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                            if not ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18:
                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                        gas gas_remaining wei
                                       args arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 128
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                else:
                                    if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    ext_call.return_data[101 len 27],
                                                    mem[544 len 4]
                                    if not 2920 * 3600 * ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[544 len 4]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                            else:
                                if 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 != 10^18:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                        gas gas_remaining wei
                                       args arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 128
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                else:
                                    if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    ext_call.return_data[101 len 27],
                                                    mem[544 len 4]
                                    if not 2920 * 3600 * ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[544 len 4]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                else:
                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                gas gas_remaining wei
                               args arg1
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 128
                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if not ext_call.return_data[0]:
                            if not ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                    gas gas_remaining wei
                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                    gas gas_remaining wei
                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if not ext_call.return_data[0]:
                                if not ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                if not 0 / ext_call.return_data[0]:
                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require arg2
                                    require 8760 * 24 * 3600 / arg2
                                    idx = 0
                                    s = 10^18
                                    while idx < 8760 * 24 * 3600 / arg2:
                                        idx = idx + 1
                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                        continue 
                                else:
                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require arg2
                                    require 8760 * 24 * 3600 / arg2
                                    idx = 0
                                    s = 10^18
                                    while idx < 8760 * 24 * 3600 / arg2:
                                        idx = idx + 1
                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                        continue 
                            else:
                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                if not ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require arg2
                                    require 8760 * 24 * 3600 / arg2
                                    idx = 0
                                    s = 10^18
                                    while idx < 8760 * 24 * 3600 / arg2:
                                        idx = idx + 1
                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                        continue 
                                else:
                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require arg2
                                    require 8760 * 24 * 3600 / arg2
                                    idx = 0
                                    s = 10^18
                                    while idx < 8760 * 24 * 3600 / arg2:
                                        idx = idx + 1
                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                        continue 
                        else:
                            if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                revert with 0, 
                                            32,
                                            33,
                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            ext_call.return_data[101 len 27],
                                            mem[544 len 4]
                            if not 2920 * 3600 * ext_call.return_data[0]:
                                if not ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 0 / ext_call.return_data[0]:
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                else:
                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                            else:
                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                    revert with 0, 
                                                32,
                                                33,
                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                ext_call.return_data[101 len 27],
                                                mem[544 len 4]
                                if not ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 0 / ext_call.return_data[0]:
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                else:
                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                    else:
                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 128
                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if not ext_call.return_data[0]:
                                if not ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 0 / ext_call.return_data[0]:
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                else:
                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                            else:
                                if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                    revert with 0, 
                                                32,
                                                33,
                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                ext_call.return_data[101 len 27],
                                                mem[544 len 4]
                                if not 2920 * 3600 * ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                else:
                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    ext_call.return_data[101 len 27],
                                                    mem[544 len 4]
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                        else:
                            if ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                            if not ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18:
                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                        gas gas_remaining wei
                                       args arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 128
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                else:
                                    if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    ext_call.return_data[101 len 27],
                                                    mem[544 len 4]
                                    if not 2920 * 3600 * ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[544 len 4]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                            else:
                                if 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 != 10^18:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                        gas gas_remaining wei
                                       args arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 128
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                else:
                                    if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    ext_call.return_data[101 len 27],
                                                    mem[544 len 4]
                                    if not 2920 * 3600 * ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[544 len 4]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 1000000000000000000 * 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
        else:
            require ext_code.size(address(ext_call.return_data[0]))
            staticcall address(ext_call.return_data[0]).token0() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(address(ext_call.return_data[0]))
            staticcall address(ext_call.return_data[0]).token1() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(address(ext_call.return_data[0]))
            if 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c == address(ext_call.return_data[0]):
                staticcall address(ext_call.return_data[0]).0x18160ddd with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                        gas gas_remaining wei
                       args address(ext_call.return_data[0])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not ext_call.return_data[0]:
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                            gas gas_remaining wei
                           args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
                    staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                            gas gas_remaining wei
                           args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not 0 / ext_call.return_data[0]:
                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 128
                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if not ext_call.return_data[0]:
                                if not ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 0 / ext_call.return_data[0]:
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                else:
                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                            else:
                                if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                    revert with 0, 
                                                32,
                                                33,
                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                ext_call.return_data[101 len 27],
                                                mem[544 len 4]
                                if not 2920 * 3600 * ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                else:
                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    ext_call.return_data[101 len 27],
                                                    mem[544 len 4]
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                        else:
                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                            if not 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18:
                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                        gas gas_remaining wei
                                       args arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 128
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                else:
                                    if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    ext_call.return_data[101 len 27],
                                                    mem[544 len 4]
                                    if not 2920 * 3600 * ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[544 len 4]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                            else:
                                if 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 != 2:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                                if not 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18:
                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                            gas gas_remaining wei
                                           args arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 128
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[544 len 4]
                                        if not 2920 * 3600 * ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            ext_call.return_data[101 len 27],
                                                            mem[544 len 4]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                else:
                                    if 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 != 10^18:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                            gas gas_remaining wei
                                           args arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 128
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[544 len 4]
                                        if not 2920 * 3600 * ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            ext_call.return_data[101 len 27],
                                                            mem[544 len 4]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                    else:
                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not 0 / ext_call.return_data[0]:
                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 128
                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if not ext_call.return_data[0]:
                                if not ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 0 / ext_call.return_data[0]:
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                else:
                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                            else:
                                if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                    revert with 0, 
                                                32,
                                                33,
                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                ext_call.return_data[101 len 27],
                                                mem[544 len 4]
                                if not 2920 * 3600 * ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                else:
                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    ext_call.return_data[101 len 27],
                                                    mem[544 len 4]
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                        else:
                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18:
                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                        gas gas_remaining wei
                                       args arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 128
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                else:
                                    if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    ext_call.return_data[101 len 27],
                                                    mem[544 len 4]
                                    if not 2920 * 3600 * ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[544 len 4]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                            else:
                                if 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 != 2:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                                if not 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18:
                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                            gas gas_remaining wei
                                           args arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 128
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[544 len 4]
                                        if not 2920 * 3600 * ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            ext_call.return_data[101 len 27],
                                                            mem[544 len 4]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                else:
                                    if 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 != 10^18:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                            gas gas_remaining wei
                                           args arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 128
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[544 len 4]
                                        if not 2920 * 3600 * ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            ext_call.return_data[101 len 27],
                                                            mem[544 len 4]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                else:
                    if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                            gas gas_remaining wei
                           args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
                    staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                            gas gas_remaining wei
                           args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]:
                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 128
                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if not ext_call.return_data[0]:
                                if not ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 0 / ext_call.return_data[0]:
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                else:
                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                            else:
                                if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                    revert with 0, 
                                                32,
                                                33,
                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                ext_call.return_data[101 len 27],
                                                mem[544 len 4]
                                if not 2920 * 3600 * ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                else:
                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    ext_call.return_data[101 len 27],
                                                    mem[544 len 4]
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                        else:
                            if 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                            if not 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18:
                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                        gas gas_remaining wei
                                       args arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 128
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                else:
                                    if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    ext_call.return_data[101 len 27],
                                                    mem[544 len 4]
                                    if not 2920 * 3600 * ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[544 len 4]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                            else:
                                if 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 != 2:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                                if not 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18:
                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                            gas gas_remaining wei
                                           args arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 128
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[544 len 4]
                                        if not 2920 * 3600 * ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            ext_call.return_data[101 len 27],
                                                            mem[544 len 4]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                else:
                                    if 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 != 10^18:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                            gas gas_remaining wei
                                           args arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 128
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[544 len 4]
                                        if not 2920 * 3600 * ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            ext_call.return_data[101 len 27],
                                                            mem[544 len 4]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                    else:
                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]:
                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                    gas gas_remaining wei
                                   args arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 128
                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if not ext_call.return_data[0]:
                                if not ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                        gas gas_remaining wei
                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 0 / ext_call.return_data[0]:
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                else:
                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                                    else:
                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require arg2
                                        require 8760 * 24 * 3600 / arg2
                                        idx = 0
                                        s = 10^18
                                        while idx < 8760 * 24 * 3600 / arg2:
                                            idx = idx + 1
                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                            continue 
                            else:
                                if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                    revert with 0, 
                                                32,
                                                33,
                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                ext_call.return_data[101 len 27],
                                                mem[544 len 4]
                                if not 2920 * 3600 * ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                else:
                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    ext_call.return_data[101 len 27],
                                                    mem[544 len 4]
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                        else:
                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18:
                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                        gas gas_remaining wei
                                       args arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 128
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                else:
                                    if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    ext_call.return_data[101 len 27],
                                                    mem[544 len 4]
                                    if not 2920 * 3600 * ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[544 len 4]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                            else:
                                if 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 != 2:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                                if not 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18:
                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                            gas gas_remaining wei
                                           args arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 128
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[544 len 4]
                                        if not 2920 * 3600 * ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            ext_call.return_data[101 len 27],
                                                            mem[544 len 4]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                else:
                                    if 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 != 10^18:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                            gas gas_remaining wei
                                           args arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 128
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[544 len 4]
                                        if not 2920 * 3600 * ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            ext_call.return_data[101 len 27],
                                                            mem[544 len 4]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
            else:
                if 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c == ext_call.return_data[12 len 20]:
                    staticcall address(ext_call.return_data[0]).0x18160ddd with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                            gas gas_remaining wei
                           args address(ext_call.return_data[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                gas gas_remaining wei
                               args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
                        staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                                gas gas_remaining wei
                               args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if not ext_call.return_data[0]:
                            if not ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            if not 0 / ext_call.return_data[0]:
                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                        gas gas_remaining wei
                                       args arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 128
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                else:
                                    if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    ext_call.return_data[101 len 27],
                                                    mem[544 len 4]
                                    if not 2920 * 3600 * ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[544 len 4]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                            else:
                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                                if not 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18:
                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                            gas gas_remaining wei
                                           args arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 128
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[544 len 4]
                                        if not 2920 * 3600 * ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            ext_call.return_data[101 len 27],
                                                            mem[544 len 4]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                else:
                                    if 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 != 2:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                                    if not 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18:
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                                gas gas_remaining wei
                                               args arg1
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 128
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            ext_call.return_data[101 len 27],
                                                            mem[544 len 4]
                                            if not 2920 * 3600 * ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                ext_call.return_data[101 len 27],
                                                                mem[544 len 4]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                    else:
                                        if 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                                gas gas_remaining wei
                                               args arg1
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 128
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            ext_call.return_data[101 len 27],
                                                            mem[544 len 4]
                                            if not 2920 * 3600 * ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                ext_call.return_data[101 len 27],
                                                                mem[544 len 4]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                        else:
                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                            if not ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            if not 0 / ext_call.return_data[0]:
                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                        gas gas_remaining wei
                                       args arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 128
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                else:
                                    if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    ext_call.return_data[101 len 27],
                                                    mem[544 len 4]
                                    if not 2920 * 3600 * ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[544 len 4]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                            else:
                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18:
                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                            gas gas_remaining wei
                                           args arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 128
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[544 len 4]
                                        if not 2920 * 3600 * ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            ext_call.return_data[101 len 27],
                                                            mem[544 len 4]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                else:
                                    if 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 != 2:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                                    if not 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18:
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                                gas gas_remaining wei
                                               args arg1
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 128
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            ext_call.return_data[101 len 27],
                                                            mem[544 len 4]
                                            if not 2920 * 3600 * ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                ext_call.return_data[101 len 27],
                                                                mem[544 len 4]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                    else:
                                        if 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                                gas gas_remaining wei
                                               args arg1
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 128
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            ext_call.return_data[101 len 27],
                                                            mem[544 len 4]
                                            if not 2920 * 3600 * ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                ext_call.return_data[101 len 27],
                                                                mem[544 len 4]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                    else:
                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                gas gas_remaining wei
                               args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
                        staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                                gas gas_remaining wei
                               args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if not ext_call.return_data[0]:
                            if not ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            if not ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]:
                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                        gas gas_remaining wei
                                       args arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 128
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                else:
                                    if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    ext_call.return_data[101 len 27],
                                                    mem[544 len 4]
                                    if not 2920 * 3600 * ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[544 len 4]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                            else:
                                if 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                                if not 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18:
                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                            gas gas_remaining wei
                                           args arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 128
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[544 len 4]
                                        if not 2920 * 3600 * ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            ext_call.return_data[101 len 27],
                                                            mem[544 len 4]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                else:
                                    if 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 != 2:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                                    if not 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18:
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                                gas gas_remaining wei
                                               args arg1
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 128
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            ext_call.return_data[101 len 27],
                                                            mem[544 len 4]
                                            if not 2920 * 3600 * ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                ext_call.return_data[101 len 27],
                                                                mem[544 len 4]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                    else:
                                        if 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                                gas gas_remaining wei
                                               args arg1
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 128
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            ext_call.return_data[101 len 27],
                                                            mem[544 len 4]
                                            if not 2920 * 3600 * ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                ext_call.return_data[101 len 27],
                                                                mem[544 len 4]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                        else:
                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                            if not ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            if not ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]:
                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                        gas gas_remaining wei
                                       args arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 128
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                else:
                                    if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    ext_call.return_data[101 len 27],
                                                    mem[544 len 4]
                                    if not 2920 * 3600 * ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[544 len 4]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                            else:
                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18:
                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                            gas gas_remaining wei
                                           args arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 128
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[544 len 4]
                                        if not 2920 * 3600 * ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            ext_call.return_data[101 len 27],
                                                            mem[544 len 4]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                else:
                                    if 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 != 2:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                                    if not 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18:
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                                gas gas_remaining wei
                                               args arg1
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 128
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            ext_call.return_data[101 len 27],
                                                            mem[544 len 4]
                                            if not 2920 * 3600 * ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                ext_call.return_data[101 len 27],
                                                                mem[544 len 4]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                    else:
                                        if 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                                gas gas_remaining wei
                                               args arg1
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 128
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            ext_call.return_data[101 len 27],
                                                            mem[544 len 4]
                                            if not 2920 * 3600 * ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                ext_call.return_data[101 len 27],
                                                                mem[544 len 4]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[581 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                else:
                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                            gas gas_remaining wei
                           args address(ext_call.return_data[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(0xbcfccbde45ce874adcb698cc183debcf17952812)
                    staticcall 0xbcfccbde45ce874adcb698cc183debcf17952812.getPair(address rg1, address rg2) with:
                            gas gas_remaining wei
                           args address(ext_call.return_data[0]), 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(address(ext_call.return_data[0]))
                    staticcall address(ext_call.return_data[0]).0x313ce567 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(address(ext_call.return_data[0]))
                    staticcall address(ext_call.return_data[0]).0x70a08231 with:
                            gas gas_remaining wei
                           args address(ext_call.return_data[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                            gas gas_remaining wei
                           args address(ext_call.return_data[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                gas gas_remaining wei
                               args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
                        staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                                gas gas_remaining wei
                               args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if not ext_call.return_data[0]:
                            if not ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            if not ext_call.return_data[0]:
                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                        gas gas_remaining wei
                                       args arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 128
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                else:
                                    if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    ext_call.return_data[101 len 27],
                                                    mem[608 len 4]
                                    if not 2920 * 3600 * ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[608 len 4]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                            else:
                                if 0 / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                                if not 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                            gas gas_remaining wei
                                           args arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 128
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[608 len 4]
                                        if not 2920 * 3600 * ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            ext_call.return_data[101 len 27],
                                                            mem[608 len 4]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                else:
                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 != 0 / ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                                    if not 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18:
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                                gas gas_remaining wei
                                               args arg1
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 128
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            ext_call.return_data[101 len 27],
                                                            mem[608 len 4]
                                            if not 2920 * 3600 * ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                ext_call.return_data[101 len 27],
                                                                mem[608 len 4]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                    else:
                                        if 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 != 2:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                                        if not 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18:
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                                    gas gas_remaining wei
                                                   args arg1
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 128
                                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                                    gas gas_remaining wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                                    gas gas_remaining wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                ext_call.return_data[101 len 27],
                                                                mem[608 len 4]
                                                if not 2920 * 3600 * ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not ext_call.return_data[0]:
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 0 / ext_call.return_data[0]:
                                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                    else:
                                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    ext_call.return_data[101 len 27],
                                                                    mem[608 len 4]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not ext_call.return_data[0]:
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 0 / ext_call.return_data[0]:
                                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                    else:
                                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                        else:
                                            if 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                                    gas gas_remaining wei
                                                   args arg1
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 128
                                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                                    gas gas_remaining wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                                    gas gas_remaining wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                ext_call.return_data[101 len 27],
                                                                mem[608 len 4]
                                                if not 2920 * 3600 * ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not ext_call.return_data[0]:
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 0 / ext_call.return_data[0]:
                                                            if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                    else:
                                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    ext_call.return_data[101 len 27],
                                                                    mem[608 len 4]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not ext_call.return_data[0]:
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 0 / ext_call.return_data[0]:
                                                            if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                    else:
                                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                        else:
                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                            if not ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            if not ext_call.return_data[0]:
                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                        gas gas_remaining wei
                                       args arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 128
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                else:
                                    if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    ext_call.return_data[101 len 27],
                                                    mem[608 len 4]
                                    if not 2920 * 3600 * ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[608 len 4]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                            else:
                                if 0 / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                                if not 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                            gas gas_remaining wei
                                           args arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 128
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[608 len 4]
                                        if not 2920 * 3600 * ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            ext_call.return_data[101 len 27],
                                                            mem[608 len 4]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                else:
                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 != 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18:
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                                gas gas_remaining wei
                                               args arg1
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 128
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            ext_call.return_data[101 len 27],
                                                            mem[608 len 4]
                                            if not 2920 * 3600 * ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                ext_call.return_data[101 len 27],
                                                                mem[608 len 4]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                    else:
                                        if 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 != 2:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                                        if not 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18:
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                                    gas gas_remaining wei
                                                   args arg1
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 128
                                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                                    gas gas_remaining wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                                    gas gas_remaining wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                ext_call.return_data[101 len 27],
                                                                mem[608 len 4]
                                                if not 2920 * 3600 * ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not ext_call.return_data[0]:
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 0 / ext_call.return_data[0]:
                                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                    else:
                                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    ext_call.return_data[101 len 27],
                                                                    mem[608 len 4]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not ext_call.return_data[0]:
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 0 / ext_call.return_data[0]:
                                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                    else:
                                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                        else:
                                            if 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                                    gas gas_remaining wei
                                                   args arg1
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 128
                                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                                    gas gas_remaining wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                                    gas gas_remaining wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                ext_call.return_data[101 len 27],
                                                                mem[608 len 4]
                                                if not 2920 * 3600 * ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not ext_call.return_data[0]:
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 0 / ext_call.return_data[0]:
                                                            if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                    else:
                                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    ext_call.return_data[101 len 27],
                                                                    mem[608 len 4]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not ext_call.return_data[0]:
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 0 / ext_call.return_data[0]:
                                                            if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                    else:
                                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                    else:
                        if 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] != 10^uint8(ext_call.return_data[0]):
                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                gas gas_remaining wei
                               args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(0xe9e7cea3dedca5984780bafc599bd69add087d56)
                        staticcall 0xe9e7cea3dedca5984780bafc599bd69add087d56.0x70a08231 with:
                                gas gas_remaining wei
                               args 0x1b96b92314c44b159149f7e0303511fb2fc4774f
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if not ext_call.return_data[0]:
                            if not ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            if not ext_call.return_data[0]:
                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                        gas gas_remaining wei
                                       args arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 128
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                else:
                                    if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    ext_call.return_data[101 len 27],
                                                    mem[608 len 4]
                                    if not 2920 * 3600 * ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[608 len 4]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                            else:
                                if 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0]:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                                if not 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                            gas gas_remaining wei
                                           args arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 128
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[608 len 4]
                                        if not 2920 * 3600 * ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            ext_call.return_data[101 len 27],
                                                            mem[608 len 4]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                else:
                                    if 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 != 0 / ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                                    if not 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18:
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                                gas gas_remaining wei
                                               args arg1
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 128
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            ext_call.return_data[101 len 27],
                                                            mem[608 len 4]
                                            if not 2920 * 3600 * ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                ext_call.return_data[101 len 27],
                                                                mem[608 len 4]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                    else:
                                        if 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 != 2:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                                        if not 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18:
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                                    gas gas_remaining wei
                                                   args arg1
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 128
                                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                                    gas gas_remaining wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                                    gas gas_remaining wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                ext_call.return_data[101 len 27],
                                                                mem[608 len 4]
                                                if not 2920 * 3600 * ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not ext_call.return_data[0]:
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 0 / ext_call.return_data[0]:
                                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                    else:
                                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    ext_call.return_data[101 len 27],
                                                                    mem[608 len 4]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not ext_call.return_data[0]:
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 0 / ext_call.return_data[0]:
                                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                    else:
                                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                        else:
                                            if 10^18 * 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                                    gas gas_remaining wei
                                                   args arg1
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 128
                                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                                    gas gas_remaining wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                                    gas gas_remaining wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 10^18 * 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 10^18 * 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 10^18 * 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 10^18 * 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                ext_call.return_data[101 len 27],
                                                                mem[608 len 4]
                                                if not 2920 * 3600 * ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not ext_call.return_data[0]:
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 0 / ext_call.return_data[0]:
                                                            if not 10^18 * 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 10^18 * 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                    else:
                                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            if not 10^18 * 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 10^18 * 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    ext_call.return_data[101 len 27],
                                                                    mem[608 len 4]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not ext_call.return_data[0]:
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 0 / ext_call.return_data[0]:
                                                            if not 10^18 * 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 10^18 * 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                    else:
                                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            if not 10^18 * 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 10^18 * 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 10^18 * 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 0 / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                        else:
                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                            if not ext_call.return_data[0]:
                                revert with 0, 'SafeMath: division by zero'
                            if not ext_call.return_data[0]:
                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: division by zero'
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                        gas gas_remaining wei
                                       args arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 128
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                            gas gas_remaining wei
                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 0 / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                    else:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                        else:
                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require arg2
                                            require 8760 * 24 * 3600 / arg2
                                            idx = 0
                                            s = 10^18
                                            while idx < 8760 * 24 * 3600 / arg2:
                                                idx = idx + 1
                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                continue 
                                else:
                                    if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    ext_call.return_data[101 len 27],
                                                    mem[608 len 4]
                                    if not 2920 * 3600 * ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[608 len 4]
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                            else:
                                if 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0]:
                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                                if not 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                            gas gas_remaining wei
                                           args arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 128
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                    staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        if not ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                        staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                        staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                gas gas_remaining wei
                                               args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 0 / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                        else:
                                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                            else:
                                                if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require arg2
                                                require 8760 * 24 * 3600 / arg2
                                                idx = 0
                                                s = 10^18
                                                while idx < 8760 * 24 * 3600 / arg2:
                                                    idx = idx + 1
                                                    s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                    continue 
                                    else:
                                        if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        ext_call.return_data[101 len 27],
                                                        mem[608 len 4]
                                        if not 2920 * 3600 * ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            ext_call.return_data[101 len 27],
                                                            mem[608 len 4]
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                else:
                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 != 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[453 len 31]
                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18:
                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                                gas gas_remaining wei
                                               args arg1
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 128
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                        staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            if not ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                            staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                            staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 0 / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                            else:
                                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                    revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                                else:
                                                    if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                    if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require arg2
                                                    require 8760 * 24 * 3600 / arg2
                                                    idx = 0
                                                    s = 10^18
                                                    while idx < 8760 * 24 * 3600 / arg2:
                                                        idx = idx + 1
                                                        s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                        continue 
                                        else:
                                            if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            ext_call.return_data[101 len 27],
                                                            mem[608 len 4]
                                            if not 2920 * 3600 * ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                ext_call.return_data[101 len 27],
                                                                mem[608 len 4]
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                    else:
                                        if 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 != 2:
                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                                        if not 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18:
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                                    gas gas_remaining wei
                                                   args arg1
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 128
                                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                                    gas gas_remaining wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                                    gas gas_remaining wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                ext_call.return_data[101 len 27],
                                                                mem[608 len 4]
                                                if not 2920 * 3600 * ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not ext_call.return_data[0]:
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 0 / ext_call.return_data[0]:
                                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                    else:
                                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    ext_call.return_data[101 len 27],
                                                                    mem[608 len 4]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not ext_call.return_data[0]:
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 0 / ext_call.return_data[0]:
                                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                    else:
                                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 0 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                        else:
                                            if 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 != 10^18:
                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[517 len 31]
                                            if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.poolInfo(uint256 rg1) with:
                                                    gas gas_remaining wei
                                                   args arg1
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 128
                                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.totalAllocPoint() with:
                                                    gas gas_remaining wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(0x73feaa1ee314f8c655e354234017be2193c9e24e)
                                            staticcall 0x73feaa1ee314f8c655e354234017be2193c9e24e.cakePerBlock() with:
                                                    gas gas_remaining wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                if not ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: division by zero'
                                                require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 0 / ext_call.return_data[0]:
                                                        if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                else:
                                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                        revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                        if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                                    else:
                                                        if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                        if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        require arg2
                                                        require 8760 * 24 * 3600 / arg2
                                                        idx = 0
                                                        s = 10^18
                                                        while idx < 8760 * 24 * 3600 / arg2:
                                                            idx = idx + 1
                                                            s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                            continue 
                                            else:
                                                if 2920 * 3600 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                ext_call.return_data[101 len 27],
                                                                mem[608 len 4]
                                                if not 2920 * 3600 * ext_call.return_data[0]:
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not ext_call.return_data[0]:
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 0 / ext_call.return_data[0]:
                                                            if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                    else:
                                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 0 / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                else:
                                                    if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / 2920 * 3600 * ext_call.return_data[0] != ext_call.return_data[32]:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    ext_call.return_data[101 len 27],
                                                                    mem[608 len 4]
                                                    if not ext_call.return_data[0]:
                                                        revert with 0, 'SafeMath: division by zero'
                                                    require ext_code.size(0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82)
                                                    staticcall 0xe09fabb73bd3ade0a17ecc321fd13a19e81ce82.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_code.size(0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c)
                                                    staticcall 0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args 0xa527a61703d82139f8a06bc30097cc9caa2df5a6
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    if not ext_call.return_data[0]:
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 0 / ext_call.return_data[0]:
                                                            if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 0 / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                    else:
                                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 10^18:
                                                            revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[645 len 31]
                                                        if not ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: division by zero'
                                                        if not 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                            if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (0 / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
                                                        else:
                                                            if 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] != 2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0xfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[709 len 31]
                                                            if not 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                                                                revert with 0, 'SafeMath: division by zero'
                                                            require arg2
                                                            require 8760 * 24 * 3600 / arg2
                                                            idx = 0
                                                            s = 10^18
                                                            while idx < 8760 * 24 * 3600 / arg2:
                                                                idx = idx + 1
                                                                s = (10^18 * s) + (2920 * 3600 * ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0] * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 10^18 * 2 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 10^uint8(ext_call.return_data[0]) * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 10^18 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] / 8760 * 24 * 3600 / arg2 * s) / 10^18
                                                                continue 
    return (s - 10^18)
}



}
