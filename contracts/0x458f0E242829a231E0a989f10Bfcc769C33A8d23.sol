contract main {




// =====================  Runtime code  =====================


#
#  - sub_1b6fe738(?)
#  - sub_2d63d7d3(?)
#  - sub_51885f59(?)
#  - sub_6191b74e(?)
#  - sub_873dfa44(?)
#
address _owner;
address _adminAddress;
mapping of uint8 stor2;
uint8 stor3;
uint8 stor3; offset 8
uint256 stor3; offset 8
mapping of struct stor4;
address WETHAddress;
uint64 stor6;
address USDTAddress;
uint64 stor7;
address sub_a624cdbeAddress;
uint256 stor8;
uint256 stor9;

function _admin() {
    return _adminAddress
}

function sub_a624cdbe(?) {
    return address(sub_a624cdbeAddress)
}

function WETH() {
    return WETHAddress
}

function _owner() {
    return _owner
}

function USDT() {
    return address(USDTAddress)
}

function _fallback() payable {
    revert
}

function sub_18390a8b(?) {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    if _owner != msg.sender:
        if _adminAddress != msg.sender:
            revert with 0, 'Ownable: caller is not the owner'
    uint256(stor2[address(arg1)]) = not uint8(stor2[address(arg1)]) or Mask(248, 8, uint256(stor2[address(arg1)]))
}

function sub_f67950bd(?) {
    require calldata.size - 4 >= 128
    require arg3 == address(arg3)
    require arg4 == address(arg4)
    if _owner != msg.sender:
        if _adminAddress != msg.sender:
            revert with 0, 'Ownable: caller is not the owner'
    address(USDTAddress) = address(arg3)
    address(sub_a624cdbeAddress) = address(arg4)
    stor9 = arg2
    stor8 = arg1
}

function sub_03880e6f(?) {
    require calldata.size - 4 >= 32
    mem[128] = stor4[arg1][3].field_0
    idx = 128
    s = 0
    while stor4[arg1][3].length + 96 > idx:
        mem[idx + 32] = stor4[arg1][s + 3].field_256
        idx = idx + 32
        s = s + 1
        continue 
    return stor4[arg1].field_0, 
           stor4[arg1].field_256,
           stor4[arg1].field_512,
           Array(len=stor4[arg1][3].length, data=mem[128 len ceil32(stor4[arg1][3].length)]),
           stor4[arg1].field_1024,
           stor4[arg1].field_1280
}

function sub_ba2ed8fa(?) {
    require calldata.size - 4 >= 64
    require arg1 == address(arg1)
    require arg2 == address(arg2)
    if uint8(stor3.field_8):
        _owner = address(arg1)
        _adminAddress = address(arg2)
    else:
        if ext_code.size(this.address):
            if uint8(stor3.field_0):
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Initializable: contract is already initialized'
        if uint8(stor3.field_8):
            _owner = address(arg1)
            _adminAddress = address(arg2)
        else:
            uint8(stor3.field_0) = 1
            uint8(stor3.field_8) = 1
            Mask(248, 0, stor3.field_8) = 0
            _owner = address(arg1)
            _adminAddress = address(arg2)
            uint8(stor3.field_8) = 0
}

function sub_caf711bf(?) {
    require calldata.size - 4 >= 224
    require arg2 == address(arg2)
    require arg3 == address(arg3)
    require arg4 == address(arg4)
    require arg7 <= test266151307()
    require arg7 + 35 < calldata.size
    require arg7.length <= test266151307()
    require ceil32(arg7.length) + 128 >= 96 and ceil32(arg7.length) + 128 <= test266151307()
    require arg7 + arg7.length + 36 <= calldata.size
    if _owner != msg.sender:
        if _adminAddress != msg.sender:
            revert with 0, 'Ownable: caller is not the owner'
    stor4[arg1].field_0 = address(arg2)
    stor4[arg1].field_256 = arg5
    stor4[arg1].field_512 = arg6
    stor4[arg1][3][].field_0 = Array(len=arg7.length, data=arg7[all])
    stor4[arg1].field_1024 = address(arg3)
    stor4[arg1].field_1280 = address(arg4)
}

function sub_8eebd66d(?) payable {
    require calldata.size - 4 >= 96
    require arg1 == address(arg1)
    require arg3 <= test266151307()
    require arg3 + 35 < calldata.size
    require arg3.length <= test266151307()
    require ceil32(arg3.length) + 128 >= 96 and ceil32(arg3.length) + 128 <= test266151307()
    require arg3 + arg3.length + 36 <= calldata.size
    mem[128 len arg3.length] = arg3[all]
    mem[arg3.length + 128] = 0
    if _owner != msg.sender:
        if _adminAddress != msg.sender:
            revert with 0, 'Ownable: caller is not the owner'
    mem[ceil32(arg3.length) + 128 len ceil32(arg3.length)] = arg3[all], mem[arg3.length + 128 len ceil32(arg3.length) - arg3.length]
    if ceil32(arg3.length) > arg3.length:
        mem[arg3.length + ceil32(arg3.length) + 128] = 0
    call address(arg1) with:
       funct Mask(32, -(8 * ceil32(arg3.length) + -arg3.length + 4) + 256, 0) >> -(8 * ceil32(arg3.length) + -arg3.length + 4) + 256
       value arg2 wei
         gas gas_remaining wei
        args mem[ceil32(arg3.length) + 132 len arg3.length - 4]
    if not ext_call.success:
        revert with 0, 'c_FAILED'
}

function sub_035a6b83(?) {
    require calldata.size - 4 >= 128
    require arg1 == address(arg1)
    require arg2 == address(arg2)
    require arg4 <= test266151307()
    require arg4 + 35 < calldata.size
    require arg4.length <= test266151307()
    require ceil32(arg4.length) + 128 >= 96 and ceil32(arg4.length) + 128 <= test266151307()
    require arg4 + arg4.length + 36 <= calldata.size
    mem[128 len arg4.length] = arg4[all]
    mem[arg4.length + 128] = 0
    mem[ceil32(arg4.length) + 164] = address(arg1)
    mem[ceil32(arg4.length) + 128] = 36
    mem[ceil32(arg4.length) + 164 len 28] = address(arg1) << 64
    mem[ceil32(arg4.length) + 160 len 4] = unknown_0x70a08231(?????)
    mem[ceil32(arg4.length) + 196 len ceil32(Mask(8 * -ceil32(arg4.length) + arg4.length + 32, 0, 0), mem[arg4.length + 160 len -arg4.length + ceil32(arg4.length)])] = mem[ceil32(arg4.length) + 160 len ceil32(Mask(8 * -ceil32(arg4.length) + arg4.length + 32, 0, 0), mem[arg4.length + 160 len -arg4.length + ceil32(arg4.length)])]
    if ceil32(Mask(8 * -ceil32(arg4.length) + arg4.length + 32, 0, 0), mem[arg4.length + 160 len -arg4.length + ceil32(arg4.length)]) > Mask(8 * -ceil32(arg4.length) + arg4.length + 32, 0, 0), mem[arg4.length + 160 len -arg4.length + ceil32(arg4.length)]:
        mem[Mask(8 * -ceil32(arg4.length) + arg4.length + 32, 0, 0), mem[arg4.length + 160 len -arg4.length + ceil32(arg4.length)] + ceil32(arg4.length) + 196] = 0
    call address(arg2).mem[ceil32(arg4.length) + 196 len 4] with:
         gas gas_remaining wei
        args mem[ceil32(arg4.length) + 200 len Mask(8 * -ceil32(arg4.length) + arg4.length + 32, 0, 0), mem[arg4.length + 160 len -arg4.length + ceil32(arg4.length)] - 4]
    if not return_data.size:
        if arg4.length != 0:
            require arg4.length >= 32
            if mem[128] > arg3:
    else:
        mem[ceil32(arg4.length) + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
        if return_data.size != 0:
            require return_data.size >= 32
            if mem[ceil32(arg4.length) + 228] > arg3:
    revert with 0, 32, arg4.length, arg4[all], mem[arg4.length + 128 len ceil32(arg4.length) - arg4.length]
}

function sub_e376391a(?) {
    require calldata.size - 4 >= 96
    require cd[36] <= test266151307()
    require cd[36] + 35 < calldata.size
    require ('cd', 36).length <= test266151307()
    require (32 * ('cd', 36).length) + 128 >= 96 and (32 * ('cd', 36).length) + 128 <= test266151307()
    mem[64] = (32 * ('cd', 36).length) + 128
    mem[96] = ('cd', 36).length
    idx = 0
    s = cd[36] + 36
    t = 128
    while idx < ('cd', 36).length:
        require cd[36] + cd[s] + 67 < calldata.size
        require cd[(cd[36] + cd[s] + 36)] <= test266151307()
        _50 = mem[64]
        require mem[64] + (32 * cd[(cd[36] + cd[s] + 36)]) + 32 >= mem[64] and mem[64] + (32 * cd[(cd[36] + cd[s] + 36)]) + 32 <= test266151307()
        mem[64] = mem[64] + (32 * cd[(cd[36] + cd[s] + 36)]) + 32
        mem[_50] = cd[(cd[36] + cd[s] + 36)]
        require calldata.size >= cd[36] + cd[s] + (32 * cd[(cd[36] + cd[s] + 36)]) + 68
        u = 0
        v = cd[36] + cd[s] + 68
        w = _50 + 32
        while u < cd[(cd[36] + cd[s] + 36)]:
            require cd[v] == address(cd[v])
            mem[w] = cd[v]
            u = u + 1
            v = v + 32
            w = w + 32
            continue 
        mem[t] = _50
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require cd[68] <= test266151307()
    require cd[68] + 35 < calldata.size
    require ('cd', 68).length <= test266151307()
    _51 = mem[64]
    require mem[64] + (32 * ('cd', 68).length) + 32 >= mem[64] and mem[64] + (32 * ('cd', 68).length) + 32 <= test266151307()
    mem[64] = mem[64] + (32 * ('cd', 68).length) + 32
    mem[_51] = ('cd', 68).length
    require calldata.size >= cd[68] + (32 * ('cd', 68).length) + 36
    idx = 0
    s = cd[68] + 36
    t = _51 + 32
    while idx < ('cd', 68).length:
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    idx = 0
    s = 0
    t = 0
    while idx < ('cd', 68).length:
        require idx < mem[_51]
        _147 = mem[(32 * idx) + _51 + 32]
        _190 = mem[96]
        u = 0
        v = 96
        while u < _190:
            require u < mem[96]
            _194 = mem[(32 * u) + 128]
            _196 = mem[64]
            mem[mem[64]] = 0xb6eacc9d00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = cd[4]
            mem[mem[64] + 36] = 96
            _199 = mem[_194]
            mem[mem[64] + 100] = mem[_194]
            idx = 0
            s = mem[64] + 132
            t = _194 + 32
            while idx < _199:
                mem[s] = mem[t + 12 len 20]
                _190 = mem[96]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_196 + 68] = _147
            require ext_code.size(this.address)
            staticcall this.address.mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _196 + (32 * _199) + -mem[64] + 128]
            if not ext_call.success:
                _234 = mem[_194]
                require mem[_194] <= test266151307()
                _235 = mem[64]
                mem[mem[64]] = mem[_194]
                mem[64] = mem[64] + (32 * _234) + 32
                if _234:
                    mem[_235 + 32 len 32 * _234] = call.data[calldata.size len 32 * _234]
                if mem[v]:
                    require mem[v] - 1 < mem[v]
                    require mem[_235] - 1 < mem[_235]
                    if mem[(32 * mem[_235] - 1) + _235 + 32] <= mem[(32 * mem[v] - 1) + v + 32]:
                        _190 = mem[96]
                        u = u + 1
                        v = v
                        continue 
                _190 = mem[96]
                u = u + 1
                v = _235
                continue 
            _233 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _236 = mem[_233]
            require mem[_233] <= test266151307()
            require _233 + return_data.size > _233 + mem[_233] + 31
            _237 = mem[_233 + mem[_233]]
            require mem[_233 + mem[_233]] <= test266151307()
            require (32 * mem[_233 + mem[_233]]) + 32 >= 0 and _233 + ceil32(return_data.size) + (32 * mem[_233 + mem[_233]]) + 32 <= test266151307()
            mem[64] = _233 + ceil32(return_data.size) + (32 * mem[_233 + mem[_233]]) + 32
            mem[_233 + ceil32(return_data.size)] = _237
            require return_data.size >= _236 + (32 * _237) + 32
            s = _233 + _236 + 32
            t = _233 + ceil32(return_data.size) + 32
            idx = 0
            while idx < _237:
                mem[t] = mem[s]
                _190 = mem[96]
                s = s + 32
                t = t + 32
                idx = idx + 1
                continue 
            if mem[v]:
                require mem[v] - 1 < mem[v]
                require _237 - 1 < _237
                if mem[(32 * _237 - 1) + _233 + ceil32(return_data.size) + 32] <= mem[(32 * mem[v] - 1) + v + 32]:
                    _190 = mem[96]
                    u = u + 1
                    v = v
                    continue 
            _190 = mem[96]
            u = u + 1
            v = _233 + ceil32(return_data.size)
            continue 
        if mem[v] - 1 < mem[v]:
            if mem[(32 * mem[v] - 1) + v + 32] < t:
                idx = idx + 1
                s = s
                t = t
                continue 
            if mem[v] - 1 < mem[v]:
                idx = idx + 1
                s = idx + 1
                t = mem[(32 * mem[v] - 1) + v + 32]
                continue 
        revert
    return t, 0, s
}

function sub_ad429049(?) {
    require calldata.size - 4 >= 128
    require cd[36] <= test266151307()
    require cd[36] + 35 < calldata.size
    require ('cd', 36).length <= test266151307()
    require (32 * ('cd', 36).length) + 128 >= 96 and (32 * ('cd', 36).length) + 128 <= test266151307()
    mem[64] = (32 * ('cd', 36).length) + 128
    mem[96] = ('cd', 36).length
    idx = 0
    s = cd[36] + 36
    t = 128
    while idx < ('cd', 36).length:
        require cd[36] + cd[s] + 67 < calldata.size
        require cd[(cd[36] + cd[s] + 36)] <= test266151307()
        _113 = mem[64]
        require mem[64] + (32 * cd[(cd[36] + cd[s] + 36)]) + 32 >= mem[64] and mem[64] + (32 * cd[(cd[36] + cd[s] + 36)]) + 32 <= test266151307()
        mem[64] = mem[64] + (32 * cd[(cd[36] + cd[s] + 36)]) + 32
        mem[_113] = cd[(cd[36] + cd[s] + 36)]
        require calldata.size >= cd[36] + cd[s] + (32 * cd[(cd[36] + cd[s] + 36)]) + 68
        u = 0
        v = cd[36] + cd[s] + 68
        w = _113 + 32
        while u < cd[(cd[36] + cd[s] + 36)]:
            require cd[v] == address(cd[v])
            mem[w] = cd[v]
            u = u + 1
            v = v + 32
            w = w + 32
            continue 
        mem[t] = _113
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require cd[68] <= test266151307()
    require cd[68] + 35 < calldata.size
    require ('cd', 68).length <= test266151307()
    _114 = mem[64]
    require mem[64] + (32 * ('cd', 68).length) + 32 >= mem[64] and mem[64] + (32 * ('cd', 68).length) + 32 <= test266151307()
    mem[64] = mem[64] + (32 * ('cd', 68).length) + 32
    mem[_114] = ('cd', 68).length
    idx = 0
    s = cd[68] + 36
    t = _114 + 32
    while idx < ('cd', 68).length:
        require cd[68] + cd[s] + 67 < calldata.size
        require cd[(cd[68] + cd[s] + 36)] <= test266151307()
        _224 = mem[64]
        require mem[64] + (32 * cd[(cd[68] + cd[s] + 36)]) + 32 >= mem[64] and mem[64] + (32 * cd[(cd[68] + cd[s] + 36)]) + 32 <= test266151307()
        mem[64] = mem[64] + (32 * cd[(cd[68] + cd[s] + 36)]) + 32
        mem[_224] = cd[(cd[68] + cd[s] + 36)]
        require calldata.size >= cd[68] + cd[s] + (32 * cd[(cd[68] + cd[s] + 36)]) + 68
        u = 0
        v = cd[68] + cd[s] + 68
        w = _224 + 32
        while u < cd[(cd[68] + cd[s] + 36)]:
            require cd[v] == address(cd[v])
            mem[w] = cd[v]
            u = u + 1
            v = v + 32
            w = w + 32
            continue 
        mem[t] = _224
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require cd[100] <= test266151307()
    require cd[100] + 35 < calldata.size
    require ('cd', 100).length <= test266151307()
    _225 = mem[64]
    require mem[64] + (32 * ('cd', 100).length) + 32 >= mem[64] and mem[64] + (32 * ('cd', 100).length) + 32 <= test266151307()
    mem[64] = mem[64] + (32 * ('cd', 100).length) + 32
    mem[_225] = ('cd', 100).length
    require calldata.size >= cd[100] + (32 * ('cd', 100).length) + 36
    idx = 0
    s = cd[100] + 36
    t = _225 + 32
    while idx < ('cd', 100).length:
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    _333 = mem[64]
    mem[mem[64] + 32 len 64] = call.data[calldata.size len 64]
    mem[mem[64] + 96] = 2
    mem[mem[64] + 128 len 64] = call.data[calldata.size len 64]
    mem[mem[64] + 192] = 2
    mem[64] = mem[64] + 288
    mem[_333 + 224 len 64] = call.data[calldata.size len 64]
    idx = 0
    s = 0
    t = 0
    while idx < ('cd', 100).length:
        require idx < mem[_225]
        _443 = mem[(32 * idx) + _225 + 32]
        _545 = mem[96]
        u = 0
        v = 96
        while u < _545:
            require u < mem[96]
            _552 = mem[(32 * u) + 128]
            _555 = mem[64]
            mem[mem[64]] = 0xb6eacc9d00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = cd[4]
            mem[mem[64] + 36] = 96
            _560 = mem[_552]
            mem[mem[64] + 100] = mem[_552]
            idx = 0
            s = mem[64] + 132
            t = _552 + 32
            while idx < _560:
                mem[s] = mem[t + 12 len 20]
                _545 = mem[96]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_555 + 68] = _443
            require ext_code.size(this.address)
            staticcall this.address.mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _555 + (32 * _560) + -mem[64] + 128]
            if not ext_call.success:
                _657 = mem[_552]
                require mem[_552] <= test266151307()
                _659 = mem[64]
                mem[mem[64]] = mem[_552]
                mem[64] = mem[64] + (32 * _657) + 32
                if _657:
                    mem[_659 + 32 len 32 * _657] = call.data[calldata.size len 32 * _657]
                if mem[v]:
                    require mem[v] - 1 < mem[v]
                    require mem[_659] - 1 < mem[_659]
                    if mem[(32 * mem[_659] - 1) + _659 + 32] <= mem[(32 * mem[v] - 1) + v + 32]:
                        _545 = mem[96]
                        u = u + 1
                        v = v
                        continue 
                _545 = mem[96]
                u = u + 1
                v = _659
                continue 
            _654 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _660 = mem[_654]
            require mem[_654] <= test266151307()
            require _654 + return_data.size > _654 + mem[_654] + 31
            _663 = mem[_654 + mem[_654]]
            require mem[_654 + mem[_654]] <= test266151307()
            require (32 * mem[_654 + mem[_654]]) + 32 >= 0 and _654 + ceil32(return_data.size) + (32 * mem[_654 + mem[_654]]) + 32 <= test266151307()
            mem[64] = _654 + ceil32(return_data.size) + (32 * mem[_654 + mem[_654]]) + 32
            mem[_654 + ceil32(return_data.size)] = _663
            require return_data.size >= _660 + (32 * _663) + 32
            s = _654 + _660 + 32
            t = _654 + ceil32(return_data.size) + 32
            idx = 0
            while idx < _663:
                mem[t] = mem[s]
                _545 = mem[96]
                s = s + 32
                t = t + 32
                idx = idx + 1
                continue 
            if mem[v]:
                require mem[v] - 1 < mem[v]
                require _663 - 1 < _663
                if mem[(32 * _663 - 1) + _654 + ceil32(return_data.size) + 32] <= mem[(32 * mem[v] - 1) + v + 32]:
                    _545 = mem[96]
                    u = u + 1
                    v = v
                    continue 
            _545 = mem[96]
            u = u + 1
            v = _654 + ceil32(return_data.size)
            continue 
        if mem[v] - 1 < mem[v]:
            if mem[(32 * mem[v] - 1) + v + 32] < t:
                idx = idx + 1
                s = s
                t = t
                continue 
            if mem[v] - 1 < mem[v]:
                idx = idx + 1
                s = idx + 1
                t = mem[(32 * mem[v] - 1) + v + 32]
                continue 
        revert
    require 0 < mem[_333]
    require 0 < mem[_333 + 96]
    require 0 < mem[_333 + 192]
    mem[_333 + 224] = s
    mem[_333 + 128] = 0
    mem[_333 + 32] = t
    require 0 < mem[_333]
    _544 = mem[_225]
    idx = 0
    s = 0
    u = 0
    while idx < _544:
        require idx < mem[_225]
        _549 = mem[(32 * idx) + _225 + 32]
        _640 = mem[_114]
        v = 0
        w = 96
        while v < _640:
            require v < mem[_114]
            _646 = mem[(32 * v) + _114 + 32]
            _650 = mem[64]
            mem[mem[64]] = 0xb6eacc9d00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = t
            mem[mem[64] + 36] = 96
            _653 = mem[_646]
            mem[mem[64] + 100] = mem[_646]
            idx = 0
            s = mem[64] + 132
            t = _646 + 32
            while idx < _653:
                mem[s] = mem[t + 12 len 20]
                _544 = mem[_225]
                _640 = mem[_114]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_650 + 68] = _549
            require ext_code.size(this.address)
            staticcall this.address.mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _650 + (32 * _653) + -mem[64] + 128]
            if not ext_call.success:
                _724 = mem[_646]
                require mem[_646] <= test266151307()
                _725 = mem[64]
                mem[mem[64]] = mem[_646]
                mem[64] = mem[64] + (32 * _724) + 32
                if _724:
                    mem[_725 + 32 len 32 * _724] = call.data[calldata.size len 32 * _724]
                if mem[w]:
                    require mem[w] - 1 < mem[w]
                    require mem[_725] - 1 < mem[_725]
                    if mem[(32 * mem[_725] - 1) + _725 + 32] <= mem[(32 * mem[w] - 1) + w + 32]:
                        _544 = mem[_225]
                        _640 = mem[_114]
                        v = v + 1
                        w = w
                        continue 
                _544 = mem[_225]
                _640 = mem[_114]
                v = v + 1
                w = _725
                continue 
            _722 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _726 = mem[_722]
            require mem[_722] <= test266151307()
            require _722 + return_data.size > _722 + mem[_722] + 31
            _731 = mem[_722 + mem[_722]]
            require mem[_722 + mem[_722]] <= test266151307()
            require (32 * mem[_722 + mem[_722]]) + 32 >= 0 and _722 + ceil32(return_data.size) + (32 * mem[_722 + mem[_722]]) + 32 <= test266151307()
            mem[64] = _722 + ceil32(return_data.size) + (32 * mem[_722 + mem[_722]]) + 32
            mem[_722 + ceil32(return_data.size)] = _731
            require return_data.size >= _726 + (32 * _731) + 32
            s = _722 + _726 + 32
            t = _722 + ceil32(return_data.size) + 32
            idx = 0
            while idx < _731:
                mem[t] = mem[s]
                _544 = mem[_225]
                _640 = mem[_114]
                s = s + 32
                t = t + 32
                idx = idx + 1
                continue 
            if mem[w]:
                require mem[w] - 1 < mem[w]
                require _731 - 1 < _731
                if mem[(32 * _731 - 1) + _722 + ceil32(return_data.size) + 32] <= mem[(32 * mem[w] - 1) + w + 32]:
                    _544 = mem[_225]
                    _640 = mem[_114]
                    v = v + 1
                    w = w
                    continue 
            _544 = mem[_225]
            _640 = mem[_114]
            v = v + 1
            w = _722 + ceil32(return_data.size)
            continue 
        require mem[w] - 1 < mem[w]
        if mem[(32 * mem[w] - 1) + w + 32] < u:
            _544 = mem[_225]
            idx = idx + 1
            s = s
            u = u
            continue 
        require mem[w] - 1 < mem[w]
        _544 = mem[_225]
        idx = idx + 1
        s = idx + 1
        u = mem[(32 * mem[w] - 1) + w + 32]
        continue 
    require 1 < mem[_333]
    require 1 < mem[_333 + 96]
    require 1 < mem[_333 + 192]
    mem[_333 + 256] = s
    mem[_333 + 160] = 0
    mem[_333 + 64] = u
    _563 = mem[64]
    mem[mem[64]] = 96
    _571 = mem[_333]
    mem[mem[64] + 96] = mem[_333]
    mem[mem[64] + 128 len 32 * _571] = mem[_333 + 32 len 32 * _571]
    mem[_563 + 32] = (32 * _571) + 128
    _648 = mem[_333 + 96]
    mem[_563 + (32 * _571) + 128] = mem[_333 + 96]
    mem[_563 + (32 * _571) + 160 len 32 * _648] = mem[_333 + 128 len 32 * _648]
    mem[_563 + 64] = (32 * _571) + (32 * _648) + 160
    _721 = mem[_333 + 192]
    mem[_563 + (32 * _571) + (32 * _648) + 160] = mem[_333 + 192]
    mem[_563 + (32 * _571) + (32 * _648) + 192 len 32 * _721] = mem[_333 + 224 len 32 * _721]
    return memory
      from mem[64]
       len _563 + (32 * _571) + (32 * _648) + (32 * _721) + -mem[64] + 192
}

function getPair(address arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    if stor4[arg2].field_1024 == arg1:
        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
    if stor4[arg2].field_1024 < arg1:
        if not stor4[arg2].field_1024:
            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
        if address(USDTAddress) == arg1:
            revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
        if address(USDTAddress) < arg1:
            if not address(USDTAddress):
                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
            if address(sub_a624cdbeAddress) == arg1:
                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
            if address(sub_a624cdbeAddress) < arg1:
                if not address(sub_a624cdbeAddress):
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                if stor4[arg2].field_1280 == arg1:
                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                if stor4[arg2].field_1280 < arg1:
                    if not stor4[arg2].field_1280:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    require ext_code.size(stor4[arg2].field_1024)
                    staticcall stor4[arg2].field_1024.0x70a08231 with:
                            gas gas_remaining wei
                           args address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1024, arg1), stor4[arg2].field_512))
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(address(USDTAddress))
                    staticcall address(USDTAddress).0x70a08231 with:
                            gas gas_remaining wei
                           args address(sha3(0, stor4[arg2].field_0, sha3(address(USDTAddress), arg1), stor4[arg2].field_512))
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(address(sub_a624cdbeAddress))
                    staticcall address(sub_a624cdbeAddress).0x70a08231 with:
                            gas gas_remaining wei
                           args address(sha3(0, stor4[arg2].field_0, sha3(address(sub_a624cdbeAddress), arg1), stor4[arg2].field_512))
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if stor4[arg2].field_1024 == stor4[arg2].field_1280:
                        return address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1024, arg1), stor4[arg2].field_512)), 
                               address(sha3(0, stor4[arg2].field_0, sha3(address(USDTAddress), arg1), stor4[arg2].field_512)),
                               address(sha3(0, stor4[arg2].field_0, sha3(address(sub_a624cdbeAddress), arg1), stor4[arg2].field_512)),
                               address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1280, arg1), stor4[arg2].field_512)),
                               ext_call.return_data[0],
                               ext_call.return_data[0],
                               ext_call.return_data[0],
                               call.data[calldata.size + 96]
                    require ext_code.size(address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1280, arg1), stor4[arg2].field_512)))
                    staticcall address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1280, arg1), stor4[arg2].field_512)).0x70a08231 with:
                            gas gas_remaining wei
                           args address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1280, arg1), stor4[arg2].field_512))
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    return address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1024, arg1), stor4[arg2].field_512)), 
                           address(sha3(0, stor4[arg2].field_0, sha3(address(USDTAddress), arg1), stor4[arg2].field_512)),
                           address(sha3(0, stor4[arg2].field_0, sha3(address(sub_a624cdbeAddress), arg1), stor4[arg2].field_512)),
                           address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1280, arg1), stor4[arg2].field_512)),
                           ext_call.return_data[0],
                           ext_call.return_data[0],
                           ext_call.return_data[0],
                           ext_call.return_data[0]
                if not arg1:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                require ext_code.size(stor4[arg2].field_1024)
                staticcall stor4[arg2].field_1024.0x70a08231 with:
                        gas gas_remaining wei
                       args address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1024, arg1), stor4[arg2].field_512))
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(address(USDTAddress))
                staticcall address(USDTAddress).0x70a08231 with:
                        gas gas_remaining wei
                       args address(sha3(0, stor4[arg2].field_0, sha3(address(USDTAddress), arg1), stor4[arg2].field_512))
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(address(sub_a624cdbeAddress))
                staticcall address(sub_a624cdbeAddress).0x70a08231 with:
                        gas gas_remaining wei
                       args address(sha3(0, stor4[arg2].field_0, sha3(address(sub_a624cdbeAddress), arg1), stor4[arg2].field_512))
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if stor4[arg2].field_1024 == stor4[arg2].field_1280:
                    return address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1024, arg1), stor4[arg2].field_512)), 
                           address(sha3(0, stor4[arg2].field_0, sha3(address(USDTAddress), arg1), stor4[arg2].field_512)),
                           address(sha3(0, stor4[arg2].field_0, sha3(address(sub_a624cdbeAddress), arg1), stor4[arg2].field_512)),
                           address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1280), stor4[arg2].field_512)),
                           ext_call.return_data[0],
                           ext_call.return_data[0],
                           ext_call.return_data[0],
                           call.data[calldata.size + 96]
                require ext_code.size(address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1280), stor4[arg2].field_512)))
                staticcall address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1280), stor4[arg2].field_512)).0x70a08231 with:
                        gas gas_remaining wei
                       args address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1280), stor4[arg2].field_512))
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                return address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1024, arg1), stor4[arg2].field_512)), 
                       address(sha3(0, stor4[arg2].field_0, sha3(address(USDTAddress), arg1), stor4[arg2].field_512)),
                       address(sha3(0, stor4[arg2].field_0, sha3(address(sub_a624cdbeAddress), arg1), stor4[arg2].field_512)),
                       address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1280), stor4[arg2].field_512)),
                       ext_call.return_data[0],
                       ext_call.return_data[0],
                       ext_call.return_data[0],
                       ext_call.return_data[0]
            if not arg1:
                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
            if stor4[arg2].field_1280 == arg1:
                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
            if stor4[arg2].field_1280 < arg1:
                if not stor4[arg2].field_1280:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                require ext_code.size(stor4[arg2].field_1024)
                staticcall stor4[arg2].field_1024.0x70a08231 with:
                        gas gas_remaining wei
                       args address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1024, arg1), stor4[arg2].field_512))
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(address(USDTAddress))
                staticcall address(USDTAddress).0x70a08231 with:
                        gas gas_remaining wei
                       args address(sha3(0, stor4[arg2].field_0, sha3(address(USDTAddress), arg1), stor4[arg2].field_512))
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(address(sub_a624cdbeAddress))
                staticcall address(sub_a624cdbeAddress).0x70a08231 with:
                        gas gas_remaining wei
                       args address(sha3(0, stor4[arg2].field_0, sha3(arg1, uint64(stor7)), stor4[arg2].field_512))
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if stor4[arg2].field_1024 == stor4[arg2].field_1280:
                    return address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1024, arg1), stor4[arg2].field_512)), 
                           address(sha3(0, stor4[arg2].field_0, sha3(address(USDTAddress), arg1), stor4[arg2].field_512)),
                           address(sha3(0, stor4[arg2].field_0, sha3(arg1, uint64(stor7)), stor4[arg2].field_512)),
                           address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1280, arg1), stor4[arg2].field_512)),
                           ext_call.return_data[0],
                           ext_call.return_data[0],
                           ext_call.return_data[0],
                           call.data[calldata.size + 96]
                require ext_code.size(address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1280, arg1), stor4[arg2].field_512)))
                staticcall address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1280, arg1), stor4[arg2].field_512)).0x70a08231 with:
                        gas gas_remaining wei
                       args address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1280, arg1), stor4[arg2].field_512))
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                return address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1024, arg1), stor4[arg2].field_512)), 
                       address(sha3(0, stor4[arg2].field_0, sha3(address(USDTAddress), arg1), stor4[arg2].field_512)),
                       address(sha3(0, stor4[arg2].field_0, sha3(arg1, uint64(stor7)), stor4[arg2].field_512)),
                       address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1280, arg1), stor4[arg2].field_512)),
                       ext_call.return_data[0],
                       ext_call.return_data[0],
                       ext_call.return_data[0],
                       ext_call.return_data[0]
            if not arg1:
                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
            require ext_code.size(stor4[arg2].field_1024)
            staticcall stor4[arg2].field_1024.0x70a08231 with:
                    gas gas_remaining wei
                   args address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1024, arg1), stor4[arg2].field_512))
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(address(USDTAddress))
            staticcall address(USDTAddress).0x70a08231 with:
                    gas gas_remaining wei
                   args address(sha3(0, stor4[arg2].field_0, sha3(address(USDTAddress), arg1), stor4[arg2].field_512))
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(address(sub_a624cdbeAddress))
            staticcall address(sub_a624cdbeAddress).0x70a08231 with:
                    gas gas_remaining wei
                   args address(sha3(0, stor4[arg2].field_0, sha3(arg1, uint64(stor7)), stor4[arg2].field_512))
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if stor4[arg2].field_1024 == stor4[arg2].field_1280:
                return address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1024, arg1), stor4[arg2].field_512)), 
                       address(sha3(0, stor4[arg2].field_0, sha3(address(USDTAddress), arg1), stor4[arg2].field_512)),
                       address(sha3(0, stor4[arg2].field_0, sha3(arg1, uint64(stor7)), stor4[arg2].field_512)),
                       address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1280), stor4[arg2].field_512)),
                       ext_call.return_data[0],
                       ext_call.return_data[0],
                       ext_call.return_data[0],
                       call.data[calldata.size + 96]
            require ext_code.size(address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1280), stor4[arg2].field_512)))
            staticcall address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1280), stor4[arg2].field_512)).0x70a08231 with:
                    gas gas_remaining wei
                   args address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1280), stor4[arg2].field_512))
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            return address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1024, arg1), stor4[arg2].field_512)), 
                   address(sha3(0, stor4[arg2].field_0, sha3(address(USDTAddress), arg1), stor4[arg2].field_512)),
                   address(sha3(0, stor4[arg2].field_0, sha3(arg1, uint64(stor7)), stor4[arg2].field_512)),
                   address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1280), stor4[arg2].field_512)),
                   ext_call.return_data[0],
                   ext_call.return_data[0],
                   ext_call.return_data[0],
                   ext_call.return_data[0]
        if not arg1:
            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
        if address(sub_a624cdbeAddress) == arg1:
            revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
        if address(sub_a624cdbeAddress) < arg1:
            if not address(sub_a624cdbeAddress):
                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
            if stor4[arg2].field_1280 == arg1:
                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
            if stor4[arg2].field_1280 < arg1:
                if not stor4[arg2].field_1280:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                require ext_code.size(stor4[arg2].field_1024)
                staticcall stor4[arg2].field_1024.0x70a08231 with:
                        gas gas_remaining wei
                       args address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1024, arg1), stor4[arg2].field_512))
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(address(USDTAddress))
                staticcall address(USDTAddress).0x70a08231 with:
                        gas gas_remaining wei
                       args address(sha3(0, stor4[arg2].field_0, sha3(arg1, uint64(stor6)), stor4[arg2].field_512))
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(address(sub_a624cdbeAddress))
                staticcall address(sub_a624cdbeAddress).0x70a08231 with:
                        gas gas_remaining wei
                       args address(sha3(0, stor4[arg2].field_0, sha3(address(sub_a624cdbeAddress), arg1), stor4[arg2].field_512))
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if stor4[arg2].field_1024 == stor4[arg2].field_1280:
                    return address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1024, arg1), stor4[arg2].field_512)), 
                           address(sha3(0, stor4[arg2].field_0, sha3(arg1, uint64(stor6)), stor4[arg2].field_512)),
                           address(sha3(0, stor4[arg2].field_0, sha3(address(sub_a624cdbeAddress), arg1), stor4[arg2].field_512)),
                           address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1280, arg1), stor4[arg2].field_512)),
                           ext_call.return_data[0],
                           ext_call.return_data[0],
                           ext_call.return_data[0],
                           call.data[calldata.size + 96]
                require ext_code.size(address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1280, arg1), stor4[arg2].field_512)))
                staticcall address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1280, arg1), stor4[arg2].field_512)).0x70a08231 with:
                        gas gas_remaining wei
                       args address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1280, arg1), stor4[arg2].field_512))
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                return address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1024, arg1), stor4[arg2].field_512)), 
                       address(sha3(0, stor4[arg2].field_0, sha3(arg1, uint64(stor6)), stor4[arg2].field_512)),
                       address(sha3(0, stor4[arg2].field_0, sha3(address(sub_a624cdbeAddress), arg1), stor4[arg2].field_512)),
                       address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1280, arg1), stor4[arg2].field_512)),
                       ext_call.return_data[0],
                       ext_call.return_data[0],
                       ext_call.return_data[0],
                       ext_call.return_data[0]
            if not arg1:
                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
            require ext_code.size(stor4[arg2].field_1024)
            staticcall stor4[arg2].field_1024.0x70a08231 with:
                    gas gas_remaining wei
                   args address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1024, arg1), stor4[arg2].field_512))
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(address(USDTAddress))
            staticcall address(USDTAddress).0x70a08231 with:
                    gas gas_remaining wei
                   args address(sha3(0, stor4[arg2].field_0, sha3(arg1, uint64(stor6)), stor4[arg2].field_512))
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(address(sub_a624cdbeAddress))
            staticcall address(sub_a624cdbeAddress).0x70a08231 with:
                    gas gas_remaining wei
                   args address(sha3(0, stor4[arg2].field_0, sha3(address(sub_a624cdbeAddress), arg1), stor4[arg2].field_512))
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if stor4[arg2].field_1024 == stor4[arg2].field_1280:
                return address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1024, arg1), stor4[arg2].field_512)), 
                       address(sha3(0, stor4[arg2].field_0, sha3(arg1, uint64(stor6)), stor4[arg2].field_512)),
                       address(sha3(0, stor4[arg2].field_0, sha3(address(sub_a624cdbeAddress), arg1), stor4[arg2].field_512)),
                       address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1280), stor4[arg2].field_512)),
                       ext_call.return_data[0],
                       ext_call.return_data[0],
                       ext_call.return_data[0],
                       call.data[calldata.size + 96]
            require ext_code.size(address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1280), stor4[arg2].field_512)))
            staticcall address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1280), stor4[arg2].field_512)).0x70a08231 with:
                    gas gas_remaining wei
                   args address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1280), stor4[arg2].field_512))
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            return address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1024, arg1), stor4[arg2].field_512)), 
                   address(sha3(0, stor4[arg2].field_0, sha3(arg1, uint64(stor6)), stor4[arg2].field_512)),
                   address(sha3(0, stor4[arg2].field_0, sha3(address(sub_a624cdbeAddress), arg1), stor4[arg2].field_512)),
                   address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1280), stor4[arg2].field_512)),
                   ext_call.return_data[0],
                   ext_call.return_data[0],
                   ext_call.return_data[0],
                   ext_call.return_data[0]
        if not arg1:
            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
        if stor4[arg2].field_1280 == arg1:
            revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
        if stor4[arg2].field_1280 < arg1:
            if not stor4[arg2].field_1280:
                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
            require ext_code.size(stor4[arg2].field_1024)
            staticcall stor4[arg2].field_1024.0x70a08231 with:
                    gas gas_remaining wei
                   args address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1024, arg1), stor4[arg2].field_512))
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(address(USDTAddress))
            staticcall address(USDTAddress).0x70a08231 with:
                    gas gas_remaining wei
                   args address(sha3(0, stor4[arg2].field_0, sha3(arg1, uint64(stor6)), stor4[arg2].field_512))
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(address(sub_a624cdbeAddress))
            staticcall address(sub_a624cdbeAddress).0x70a08231 with:
                    gas gas_remaining wei
                   args address(sha3(0, stor4[arg2].field_0, sha3(arg1, uint64(stor7)), stor4[arg2].field_512))
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if stor4[arg2].field_1024 == stor4[arg2].field_1280:
                return address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1024, arg1), stor4[arg2].field_512)), 
                       address(sha3(0, stor4[arg2].field_0, sha3(arg1, uint64(stor6)), stor4[arg2].field_512)),
                       address(sha3(0, stor4[arg2].field_0, sha3(arg1, uint64(stor7)), stor4[arg2].field_512)),
                       address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1280, arg1), stor4[arg2].field_512)),
                       ext_call.return_data[0],
                       ext_call.return_data[0],
                       ext_call.return_data[0],
                       call.data[calldata.size + 96]
            require ext_code.size(address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1280, arg1), stor4[arg2].field_512)))
            staticcall address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1280, arg1), stor4[arg2].field_512)).0x70a08231 with:
                    gas gas_remaining wei
                   args address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1280, arg1), stor4[arg2].field_512))
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            return address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1024, arg1), stor4[arg2].field_512)), 
                   address(sha3(0, stor4[arg2].field_0, sha3(arg1, uint64(stor6)), stor4[arg2].field_512)),
                   address(sha3(0, stor4[arg2].field_0, sha3(arg1, uint64(stor7)), stor4[arg2].field_512)),
                   address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1280, arg1), stor4[arg2].field_512)),
                   ext_call.return_data[0],
                   ext_call.return_data[0],
                   ext_call.return_data[0],
                   ext_call.return_data[0]
        if not arg1:
            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
        require ext_code.size(stor4[arg2].field_1024)
        staticcall stor4[arg2].field_1024.0x70a08231 with:
                gas gas_remaining wei
               args address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1024, arg1), stor4[arg2].field_512))
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(address(USDTAddress))
        staticcall address(USDTAddress).0x70a08231 with:
                gas gas_remaining wei
               args address(sha3(0, stor4[arg2].field_0, sha3(arg1, uint64(stor6)), stor4[arg2].field_512))
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(address(sub_a624cdbeAddress))
        staticcall address(sub_a624cdbeAddress).0x70a08231 with:
                gas gas_remaining wei
               args address(sha3(0, stor4[arg2].field_0, sha3(arg1, uint64(stor7)), stor4[arg2].field_512))
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if stor4[arg2].field_1024 == stor4[arg2].field_1280:
            return address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1024, arg1), stor4[arg2].field_512)), 
                   address(sha3(0, stor4[arg2].field_0, sha3(arg1, uint64(stor6)), stor4[arg2].field_512)),
                   address(sha3(0, stor4[arg2].field_0, sha3(arg1, uint64(stor7)), stor4[arg2].field_512)),
                   address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1280), stor4[arg2].field_512)),
                   ext_call.return_data[0],
                   ext_call.return_data[0],
                   ext_call.return_data[0],
                   call.data[calldata.size + 96]
        require ext_code.size(address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1280), stor4[arg2].field_512)))
        staticcall address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1280), stor4[arg2].field_512)).0x70a08231 with:
                gas gas_remaining wei
               args address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1280), stor4[arg2].field_512))
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        return address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1024, arg1), stor4[arg2].field_512)), 
               address(sha3(0, stor4[arg2].field_0, sha3(arg1, uint64(stor6)), stor4[arg2].field_512)),
               address(sha3(0, stor4[arg2].field_0, sha3(arg1, uint64(stor7)), stor4[arg2].field_512)),
               address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1280), stor4[arg2].field_512)),
               ext_call.return_data[0],
               ext_call.return_data[0],
               ext_call.return_data[0],
               ext_call.return_data[0]
    if not arg1:
        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
    if address(USDTAddress) == arg1:
        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
    if address(USDTAddress) < arg1:
        if not address(USDTAddress):
            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
        if address(sub_a624cdbeAddress) == arg1:
            revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
        if address(sub_a624cdbeAddress) < arg1:
            if not address(sub_a624cdbeAddress):
                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
            if stor4[arg2].field_1280 == arg1:
                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
            if stor4[arg2].field_1280 < arg1:
                if not stor4[arg2].field_1280:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                require ext_code.size(stor4[arg2].field_1024)
                staticcall stor4[arg2].field_1024.0x70a08231 with:
                        gas gas_remaining wei
                       args address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1024), stor4[arg2].field_512))
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(address(USDTAddress))
                staticcall address(USDTAddress).0x70a08231 with:
                        gas gas_remaining wei
                       args address(sha3(0, stor4[arg2].field_0, sha3(address(USDTAddress), arg1), stor4[arg2].field_512))
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(address(sub_a624cdbeAddress))
                staticcall address(sub_a624cdbeAddress).0x70a08231 with:
                        gas gas_remaining wei
                       args address(sha3(0, stor4[arg2].field_0, sha3(address(sub_a624cdbeAddress), arg1), stor4[arg2].field_512))
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if stor4[arg2].field_1024 == stor4[arg2].field_1280:
                    return address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1024), stor4[arg2].field_512)), 
                           address(sha3(0, stor4[arg2].field_0, sha3(address(USDTAddress), arg1), stor4[arg2].field_512)),
                           address(sha3(0, stor4[arg2].field_0, sha3(address(sub_a624cdbeAddress), arg1), stor4[arg2].field_512)),
                           address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1280, arg1), stor4[arg2].field_512)),
                           ext_call.return_data[0],
                           ext_call.return_data[0],
                           ext_call.return_data[0],
                           call.data[calldata.size + 96]
                require ext_code.size(address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1280, arg1), stor4[arg2].field_512)))
                staticcall address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1280, arg1), stor4[arg2].field_512)).0x70a08231 with:
                        gas gas_remaining wei
                       args address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1280, arg1), stor4[arg2].field_512))
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                return address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1024), stor4[arg2].field_512)), 
                       address(sha3(0, stor4[arg2].field_0, sha3(address(USDTAddress), arg1), stor4[arg2].field_512)),
                       address(sha3(0, stor4[arg2].field_0, sha3(address(sub_a624cdbeAddress), arg1), stor4[arg2].field_512)),
                       address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1280, arg1), stor4[arg2].field_512)),
                       ext_call.return_data[0],
                       ext_call.return_data[0],
                       ext_call.return_data[0],
                       ext_call.return_data[0]
            if not arg1:
                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
            require ext_code.size(stor4[arg2].field_1024)
            staticcall stor4[arg2].field_1024.0x70a08231 with:
                    gas gas_remaining wei
                   args address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1024), stor4[arg2].field_512))
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(address(USDTAddress))
            staticcall address(USDTAddress).0x70a08231 with:
                    gas gas_remaining wei
                   args address(sha3(0, stor4[arg2].field_0, sha3(address(USDTAddress), arg1), stor4[arg2].field_512))
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(address(sub_a624cdbeAddress))
            staticcall address(sub_a624cdbeAddress).0x70a08231 with:
                    gas gas_remaining wei
                   args address(sha3(0, stor4[arg2].field_0, sha3(address(sub_a624cdbeAddress), arg1), stor4[arg2].field_512))
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if stor4[arg2].field_1024 == stor4[arg2].field_1280:
                return address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1024), stor4[arg2].field_512)), 
                       address(sha3(0, stor4[arg2].field_0, sha3(address(USDTAddress), arg1), stor4[arg2].field_512)),
                       address(sha3(0, stor4[arg2].field_0, sha3(address(sub_a624cdbeAddress), arg1), stor4[arg2].field_512)),
                       address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1280), stor4[arg2].field_512)),
                       ext_call.return_data[0],
                       ext_call.return_data[0],
                       ext_call.return_data[0],
                       call.data[calldata.size + 96]
            require ext_code.size(address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1280), stor4[arg2].field_512)))
            staticcall address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1280), stor4[arg2].field_512)).0x70a08231 with:
                    gas gas_remaining wei
                   args address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1280), stor4[arg2].field_512))
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            return address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1024), stor4[arg2].field_512)), 
                   address(sha3(0, stor4[arg2].field_0, sha3(address(USDTAddress), arg1), stor4[arg2].field_512)),
                   address(sha3(0, stor4[arg2].field_0, sha3(address(sub_a624cdbeAddress), arg1), stor4[arg2].field_512)),
                   address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1280), stor4[arg2].field_512)),
                   ext_call.return_data[0],
                   ext_call.return_data[0],
                   ext_call.return_data[0],
                   ext_call.return_data[0]
        if not arg1:
            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
        if stor4[arg2].field_1280 == arg1:
            revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
        if stor4[arg2].field_1280 < arg1:
            if not stor4[arg2].field_1280:
                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
            require ext_code.size(stor4[arg2].field_1024)
            staticcall stor4[arg2].field_1024.0x70a08231 with:
                    gas gas_remaining wei
                   args address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1024), stor4[arg2].field_512))
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(address(USDTAddress))
            staticcall address(USDTAddress).0x70a08231 with:
                    gas gas_remaining wei
                   args address(sha3(0, stor4[arg2].field_0, sha3(address(USDTAddress), arg1), stor4[arg2].field_512))
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(address(sub_a624cdbeAddress))
            staticcall address(sub_a624cdbeAddress).0x70a08231 with:
                    gas gas_remaining wei
                   args address(sha3(0, stor4[arg2].field_0, sha3(arg1, uint64(stor7)), stor4[arg2].field_512))
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if stor4[arg2].field_1024 == stor4[arg2].field_1280:
                return address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1024), stor4[arg2].field_512)), 
                       address(sha3(0, stor4[arg2].field_0, sha3(address(USDTAddress), arg1), stor4[arg2].field_512)),
                       address(sha3(0, stor4[arg2].field_0, sha3(arg1, uint64(stor7)), stor4[arg2].field_512)),
                       address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1280, arg1), stor4[arg2].field_512)),
                       ext_call.return_data[0],
                       ext_call.return_data[0],
                       ext_call.return_data[0],
                       call.data[calldata.size + 96]
            require ext_code.size(address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1280, arg1), stor4[arg2].field_512)))
            staticcall address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1280, arg1), stor4[arg2].field_512)).0x70a08231 with:
                    gas gas_remaining wei
                   args address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1280, arg1), stor4[arg2].field_512))
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            return address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1024), stor4[arg2].field_512)), 
                   address(sha3(0, stor4[arg2].field_0, sha3(address(USDTAddress), arg1), stor4[arg2].field_512)),
                   address(sha3(0, stor4[arg2].field_0, sha3(arg1, uint64(stor7)), stor4[arg2].field_512)),
                   address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1280, arg1), stor4[arg2].field_512)),
                   ext_call.return_data[0],
                   ext_call.return_data[0],
                   ext_call.return_data[0],
                   ext_call.return_data[0]
        if not arg1:
            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
        require ext_code.size(stor4[arg2].field_1024)
        staticcall stor4[arg2].field_1024.0x70a08231 with:
                gas gas_remaining wei
               args address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1024), stor4[arg2].field_512))
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(address(USDTAddress))
        staticcall address(USDTAddress).0x70a08231 with:
                gas gas_remaining wei
               args address(sha3(0, stor4[arg2].field_0, sha3(address(USDTAddress), arg1), stor4[arg2].field_512))
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(address(sub_a624cdbeAddress))
        staticcall address(sub_a624cdbeAddress).0x70a08231 with:
                gas gas_remaining wei
               args address(sha3(0, stor4[arg2].field_0, sha3(arg1, uint64(stor7)), stor4[arg2].field_512))
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if stor4[arg2].field_1024 == stor4[arg2].field_1280:
            return address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1024), stor4[arg2].field_512)), 
                   address(sha3(0, stor4[arg2].field_0, sha3(address(USDTAddress), arg1), stor4[arg2].field_512)),
                   address(sha3(0, stor4[arg2].field_0, sha3(arg1, uint64(stor7)), stor4[arg2].field_512)),
                   address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1280), stor4[arg2].field_512)),
                   ext_call.return_data[0],
                   ext_call.return_data[0],
                   ext_call.return_data[0],
                   call.data[calldata.size + 96]
        require ext_code.size(address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1280), stor4[arg2].field_512)))
        staticcall address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1280), stor4[arg2].field_512)).0x70a08231 with:
                gas gas_remaining wei
               args address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1280), stor4[arg2].field_512))
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        return address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1024), stor4[arg2].field_512)), 
               address(sha3(0, stor4[arg2].field_0, sha3(address(USDTAddress), arg1), stor4[arg2].field_512)),
               address(sha3(0, stor4[arg2].field_0, sha3(arg1, uint64(stor7)), stor4[arg2].field_512)),
               address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1280), stor4[arg2].field_512)),
               ext_call.return_data[0],
               ext_call.return_data[0],
               ext_call.return_data[0],
               ext_call.return_data[0]
    if not arg1:
        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
    if address(sub_a624cdbeAddress) == arg1:
        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
    if address(sub_a624cdbeAddress) < arg1:
        if not address(sub_a624cdbeAddress):
            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
        if stor4[arg2].field_1280 == arg1:
            revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
        if stor4[arg2].field_1280 < arg1:
            if not stor4[arg2].field_1280:
                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
            require ext_code.size(stor4[arg2].field_1024)
            staticcall stor4[arg2].field_1024.0x70a08231 with:
                    gas gas_remaining wei
                   args address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1024), stor4[arg2].field_512))
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(address(USDTAddress))
            staticcall address(USDTAddress).0x70a08231 with:
                    gas gas_remaining wei
                   args address(sha3(0, stor4[arg2].field_0, sha3(arg1, uint64(stor6)), stor4[arg2].field_512))
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(address(sub_a624cdbeAddress))
            staticcall address(sub_a624cdbeAddress).0x70a08231 with:
                    gas gas_remaining wei
                   args address(sha3(0, stor4[arg2].field_0, sha3(address(sub_a624cdbeAddress), arg1), stor4[arg2].field_512))
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if stor4[arg2].field_1024 == stor4[arg2].field_1280:
                return address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1024), stor4[arg2].field_512)), 
                       address(sha3(0, stor4[arg2].field_0, sha3(arg1, uint64(stor6)), stor4[arg2].field_512)),
                       address(sha3(0, stor4[arg2].field_0, sha3(address(sub_a624cdbeAddress), arg1), stor4[arg2].field_512)),
                       address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1280, arg1), stor4[arg2].field_512)),
                       ext_call.return_data[0],
                       ext_call.return_data[0],
                       ext_call.return_data[0],
                       call.data[calldata.size + 96]
            require ext_code.size(address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1280, arg1), stor4[arg2].field_512)))
            staticcall address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1280, arg1), stor4[arg2].field_512)).0x70a08231 with:
                    gas gas_remaining wei
                   args address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1280, arg1), stor4[arg2].field_512))
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            return address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1024), stor4[arg2].field_512)), 
                   address(sha3(0, stor4[arg2].field_0, sha3(arg1, uint64(stor6)), stor4[arg2].field_512)),
                   address(sha3(0, stor4[arg2].field_0, sha3(address(sub_a624cdbeAddress), arg1), stor4[arg2].field_512)),
                   address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1280, arg1), stor4[arg2].field_512)),
                   ext_call.return_data[0],
                   ext_call.return_data[0],
                   ext_call.return_data[0],
                   ext_call.return_data[0]
        if not arg1:
            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
        require ext_code.size(stor4[arg2].field_1024)
        staticcall stor4[arg2].field_1024.0x70a08231 with:
                gas gas_remaining wei
               args address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1024), stor4[arg2].field_512))
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(address(USDTAddress))
        staticcall address(USDTAddress).0x70a08231 with:
                gas gas_remaining wei
               args address(sha3(0, stor4[arg2].field_0, sha3(arg1, uint64(stor6)), stor4[arg2].field_512))
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(address(sub_a624cdbeAddress))
        staticcall address(sub_a624cdbeAddress).0x70a08231 with:
                gas gas_remaining wei
               args address(sha3(0, stor4[arg2].field_0, sha3(address(sub_a624cdbeAddress), arg1), stor4[arg2].field_512))
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if stor4[arg2].field_1024 == stor4[arg2].field_1280:
            return address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1024), stor4[arg2].field_512)), 
                   address(sha3(0, stor4[arg2].field_0, sha3(arg1, uint64(stor6)), stor4[arg2].field_512)),
                   address(sha3(0, stor4[arg2].field_0, sha3(address(sub_a624cdbeAddress), arg1), stor4[arg2].field_512)),
                   address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1280), stor4[arg2].field_512)),
                   ext_call.return_data[0],
                   ext_call.return_data[0],
                   ext_call.return_data[0],
                   call.data[calldata.size + 96]
        require ext_code.size(address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1280), stor4[arg2].field_512)))
        staticcall address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1280), stor4[arg2].field_512)).0x70a08231 with:
                gas gas_remaining wei
               args address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1280), stor4[arg2].field_512))
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        return address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1024), stor4[arg2].field_512)), 
               address(sha3(0, stor4[arg2].field_0, sha3(arg1, uint64(stor6)), stor4[arg2].field_512)),
               address(sha3(0, stor4[arg2].field_0, sha3(address(sub_a624cdbeAddress), arg1), stor4[arg2].field_512)),
               address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1280), stor4[arg2].field_512)),
               ext_call.return_data[0],
               ext_call.return_data[0],
               ext_call.return_data[0],
               ext_call.return_data[0]
    if not arg1:
        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
    if stor4[arg2].field_1280 == arg1:
        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
    if stor4[arg2].field_1280 < arg1:
        if not stor4[arg2].field_1280:
            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
        require ext_code.size(stor4[arg2].field_1024)
        staticcall stor4[arg2].field_1024.0x70a08231 with:
                gas gas_remaining wei
               args address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1024), stor4[arg2].field_512))
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(address(USDTAddress))
        staticcall address(USDTAddress).0x70a08231 with:
                gas gas_remaining wei
               args address(sha3(0, stor4[arg2].field_0, sha3(arg1, uint64(stor6)), stor4[arg2].field_512))
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(address(sub_a624cdbeAddress))
        staticcall address(sub_a624cdbeAddress).0x70a08231 with:
                gas gas_remaining wei
               args address(sha3(0, stor4[arg2].field_0, sha3(arg1, uint64(stor7)), stor4[arg2].field_512))
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if stor4[arg2].field_1024 == stor4[arg2].field_1280:
            return address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1024), stor4[arg2].field_512)), 
                   address(sha3(0, stor4[arg2].field_0, sha3(arg1, uint64(stor6)), stor4[arg2].field_512)),
                   address(sha3(0, stor4[arg2].field_0, sha3(arg1, uint64(stor7)), stor4[arg2].field_512)),
                   address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1280, arg1), stor4[arg2].field_512)),
                   ext_call.return_data[0],
                   ext_call.return_data[0],
                   ext_call.return_data[0],
                   call.data[calldata.size + 96]
        require ext_code.size(address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1280, arg1), stor4[arg2].field_512)))
        staticcall address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1280, arg1), stor4[arg2].field_512)).0x70a08231 with:
                gas gas_remaining wei
               args address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1280, arg1), stor4[arg2].field_512))
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        return address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1024), stor4[arg2].field_512)), 
               address(sha3(0, stor4[arg2].field_0, sha3(arg1, uint64(stor6)), stor4[arg2].field_512)),
               address(sha3(0, stor4[arg2].field_0, sha3(arg1, uint64(stor7)), stor4[arg2].field_512)),
               address(sha3(0, stor4[arg2].field_0, sha3(stor4[arg2].field_1280, arg1), stor4[arg2].field_512)),
               ext_call.return_data[0],
               ext_call.return_data[0],
               ext_call.return_data[0],
               ext_call.return_data[0]
    if not arg1:
        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
    require ext_code.size(stor4[arg2].field_1024)
    staticcall stor4[arg2].field_1024.0x70a08231 with:
            gas gas_remaining wei
           args address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1024), stor4[arg2].field_512))
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(address(USDTAddress))
    staticcall address(USDTAddress).0x70a08231 with:
            gas gas_remaining wei
           args address(sha3(0, stor4[arg2].field_0, sha3(arg1, uint64(stor6)), stor4[arg2].field_512))
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(address(sub_a624cdbeAddress))
    staticcall address(sub_a624cdbeAddress).0x70a08231 with:
            gas gas_remaining wei
           args address(sha3(0, stor4[arg2].field_0, sha3(arg1, uint64(stor7)), stor4[arg2].field_512))
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if stor4[arg2].field_1024 == stor4[arg2].field_1280:
        return address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1024), stor4[arg2].field_512)), 
               address(sha3(0, stor4[arg2].field_0, sha3(arg1, uint64(stor6)), stor4[arg2].field_512)),
               address(sha3(0, stor4[arg2].field_0, sha3(arg1, uint64(stor7)), stor4[arg2].field_512)),
               address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1280), stor4[arg2].field_512)),
               ext_call.return_data[0],
               ext_call.return_data[0],
               ext_call.return_data[0],
               call.data[calldata.size + 96]
    require ext_code.size(address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1280), stor4[arg2].field_512)))
    staticcall address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1280), stor4[arg2].field_512)).0x70a08231 with:
            gas gas_remaining wei
           args address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1280), stor4[arg2].field_512))
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    return address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1024), stor4[arg2].field_512)), 
           address(sha3(0, stor4[arg2].field_0, sha3(arg1, uint64(stor6)), stor4[arg2].field_512)),
           address(sha3(0, stor4[arg2].field_0, sha3(arg1, uint64(stor7)), stor4[arg2].field_512)),
           address(sha3(0, stor4[arg2].field_0, sha3(arg1, stor4[arg2].field_1280), stor4[arg2].field_512)),
           ext_call.return_data[0],
           ext_call.return_data[0],
           ext_call.return_data[0],
           ext_call.return_data[0]
}

function sub_b6eacc9d(?) {
    require calldata.size - 4 >= 96
    require arg2 <= test266151307()
    require arg2 + 35 < calldata.size
    require arg2.length <= test266151307()
    require arg2 + (32 * arg2.length) + 36 <= calldata.size
    mem[96] = arg2.length
    mem[128 len 32 * arg2.length] = call.data[arg2 + 36 len 32 * arg2.length]
    mem[0] = arg3
    mem[32] = 4
    if arg2.length < 2:
        revert with 0, 'PancakeLibrary: INVALID_PATH'
    require arg2.length <= test266151307()
    mem[(32 * arg2.length) + 128] = arg2.length
    mem[64] = (64 * arg2.length) + 160
    if not arg2.length:
        require 0 < arg2.length
        mem[(32 * arg2.length) + 160] = arg1
        idx = 0
        while idx < arg2.length - 1:
            require idx < mem[96]
            _1492 = mem[(32 * idx) + 128]
            require idx + 1 < mem[96]
            _1496 = mem[(32 * idx + 1) + 128]
            if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
            if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                if not mem[(32 * idx) + 140 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                    if not mem[(32 * idx) + 140 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    _1534 = mem[64]
                    mem[mem[64] + 32] = address(mem[(32 * idx) + 128])
                    mem[mem[64] + 52] = address(_1496)
                    _1550 = mem[64]
                    mem[mem[64]] = 40
                    mem[64] = mem[64] + 72
                    _1552 = sha3(mem[_1550 + 32 len mem[_1550]])
                    mem[_1534 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_1534 + 105] = Mask(160, 96, stor4[arg3].field_0)
                    mem[_1534 + 125] = _1552
                    mem[_1534 + 157] = stor4[arg3].field_512
                    mem[_1534 + 72] = 85
                    if address(_1492) == address(_1496):
                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                    if address(_1492) < address(_1496):
                        if not address(_1492):
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_1534 + 221] = address(_1492)
                        mem[_1534 + 241] = address(_1496)
                        mem[_1534 + 189] = 40
                        mem[_1534 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_1534 + 294] = Mask(160, 96, stor4[arg3].field_0)
                        mem[_1534 + 314] = sha3(address(_1492), address(_1496))
                        mem[_1534 + 346] = stor4[arg3].field_512
                        mem[_1534 + 261] = 85
                        require ext_code.size(address(sha3(0, stor4[arg3].field_0, sha3(address(_1492), address(_1496)), stor4[arg3].field_512)))
                        staticcall address(sha3(0, stor4[arg3].field_0, sha3(address(_1492), address(_1496)), stor4[arg3].field_512)).getReserves() with:
                                gas gas_remaining wei
                    else:
                        if not address(_1496):
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_1534 + 221] = address(_1496)
                        mem[_1534 + 241] = address(_1492)
                        mem[_1534 + 189] = 40
                        mem[_1534 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_1534 + 294] = Mask(160, 96, stor4[arg3].field_0)
                        mem[_1534 + 314] = sha3(address(_1496), address(_1492))
                        mem[_1534 + 346] = stor4[arg3].field_512
                        mem[_1534 + 261] = 85
                        require ext_code.size(address(sha3(0, stor4[arg3].field_0, sha3(address(_1496), address(_1492)), stor4[arg3].field_512)))
                        staticcall address(sha3(0, stor4[arg3].field_0, sha3(address(_1496), address(_1492)), stor4[arg3].field_512)).getReserves() with:
                                gas gas_remaining wei
                    mem[_1534 + 378 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _1534 + ceil32(return_data.size) + 378
                else:
                    if not mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    _1535 = mem[64]
                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + 128])
                    mem[mem[64] + 52] = address(_1492)
                    _1554 = mem[64]
                    mem[mem[64]] = 40
                    mem[64] = mem[64] + 72
                    _1556 = sha3(mem[_1554 + 32 len mem[_1554]])
                    mem[_1535 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_1535 + 105] = Mask(160, 96, stor4[arg3].field_0)
                    mem[_1535 + 125] = _1556
                    mem[_1535 + 157] = stor4[arg3].field_512
                    mem[_1535 + 72] = 85
                    if address(_1492) == address(_1496):
                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                    if address(_1492) < address(_1496):
                        if not address(_1492):
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_1535 + 221] = address(_1492)
                        mem[_1535 + 241] = address(_1496)
                        mem[_1535 + 189] = 40
                        mem[_1535 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_1535 + 294] = Mask(160, 96, stor4[arg3].field_0)
                        mem[_1535 + 314] = sha3(address(_1492), address(_1496))
                        mem[_1535 + 346] = stor4[arg3].field_512
                        mem[_1535 + 261] = 85
                        require ext_code.size(address(sha3(0, stor4[arg3].field_0, sha3(address(_1492), address(_1496)), stor4[arg3].field_512)))
                        staticcall address(sha3(0, stor4[arg3].field_0, sha3(address(_1492), address(_1496)), stor4[arg3].field_512)).getReserves() with:
                                gas gas_remaining wei
                    else:
                        if not address(_1496):
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_1535 + 221] = address(_1496)
                        mem[_1535 + 241] = address(_1492)
                        mem[_1535 + 189] = 40
                        mem[_1535 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_1535 + 294] = Mask(160, 96, stor4[arg3].field_0)
                        mem[_1535 + 314] = sha3(address(_1496), address(_1492))
                        mem[_1535 + 346] = stor4[arg3].field_512
                        mem[_1535 + 261] = 85
                        require ext_code.size(address(sha3(0, stor4[arg3].field_0, sha3(address(_1496), address(_1492)), stor4[arg3].field_512)))
                        staticcall address(sha3(0, stor4[arg3].field_0, sha3(address(_1496), address(_1492)), stor4[arg3].field_512)).getReserves() with:
                                gas gas_remaining wei
                    mem[_1535 + 378 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _1535 + ceil32(return_data.size) + 378
                require return_data.size >= 96
                require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                require idx < mem[(32 * arg2.length) + 128]
                if mem[(32 * idx) + (32 * arg2.length) + 160] <= 0:
                    revert with 0, 'PancakeLibrary: INSUFFICIENT_INPUT_AMOUNT'
                if address(_1492) == address(_1492):
                    if ext_call.return_data[18 len 14] <= 0:
                        revert with 0, 'PancakeLibrary: INSUFFICIENT_LIQUIDITY'
                    if ext_call.return_data[50 len 14] <= 0:
                        revert with 0, 'PancakeLibrary: INSUFFICIENT_LIQUIDITY'
                    if not stor4[arg3].field_256:
                        if ext_call.return_data[50 len 14]:
                            require ext_call.return_data[50 len 14]
                            if 0 / ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[18 len 14] < 10000 * ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require 10000 * ext_call.return_data[18 len 14]
                        require idx + 1 < mem[(32 * arg2.length) + 128]
                        mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0 / 10000 * ext_call.return_data[18 len 14]
                    else:
                        require stor4[arg3].field_256
                        if mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256 / stor4[arg3].field_256 != mem[(32 * idx) + (32 * arg2.length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not ext_call.return_data[50 len 14]:
                            if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256) < 10000 * ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256)
                            require idx + 1 < mem[(32 * arg2.length) + 128]
                            mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0 / (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256)
                        else:
                            require ext_call.return_data[50 len 14]
                            if mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256) < 10000 * ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256)
                            require idx + 1 < mem[(32 * arg2.length) + 128]
                            mem[(32 * idx + 1) + (32 * arg2.length) + 160] = mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256 * ext_call.return_data[50 len 14] / (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256)
                else:
                    if ext_call.return_data[50 len 14] <= 0:
                        revert with 0, 'PancakeLibrary: INSUFFICIENT_LIQUIDITY'
                    if ext_call.return_data[18 len 14] <= 0:
                        revert with 0, 'PancakeLibrary: INSUFFICIENT_LIQUIDITY'
                    if not stor4[arg3].field_256:
                        if ext_call.return_data[18 len 14]:
                            require ext_call.return_data[18 len 14]
                            if 0 / ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[50 len 14] < 10000 * ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require 10000 * ext_call.return_data[50 len 14]
                        require idx + 1 < mem[(32 * arg2.length) + 128]
                        mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0 / 10000 * ext_call.return_data[50 len 14]
                    else:
                        require stor4[arg3].field_256
                        if mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256 / stor4[arg3].field_256 != mem[(32 * idx) + (32 * arg2.length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not ext_call.return_data[18 len 14]:
                            if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256) < 10000 * ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256)
                            require idx + 1 < mem[(32 * arg2.length) + 128]
                            mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0 / (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256)
                        else:
                            require ext_call.return_data[18 len 14]
                            if mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256) < 10000 * ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256)
                            require idx + 1 < mem[(32 * arg2.length) + 128]
                            mem[(32 * idx + 1) + (32 * arg2.length) + 160] = mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256 * ext_call.return_data[18 len 14] / (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256)
            else:
                if not mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                    if not mem[(32 * idx) + 140 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    _1536 = mem[64]
                    mem[mem[64] + 32] = address(mem[(32 * idx) + 128])
                    mem[mem[64] + 52] = address(_1496)
                    _1558 = mem[64]
                    mem[mem[64]] = 40
                    mem[64] = mem[64] + 72
                    _1560 = sha3(mem[_1558 + 32 len mem[_1558]])
                    mem[_1536 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_1536 + 105] = Mask(160, 96, stor4[arg3].field_0)
                    mem[_1536 + 125] = _1560
                    mem[_1536 + 157] = stor4[arg3].field_512
                    mem[_1536 + 72] = 85
                    if address(_1492) == address(_1496):
                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                    if address(_1492) < address(_1496):
                        if not address(_1492):
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_1536 + 221] = address(_1492)
                        mem[_1536 + 241] = address(_1496)
                        mem[_1536 + 189] = 40
                        mem[_1536 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_1536 + 294] = Mask(160, 96, stor4[arg3].field_0)
                        mem[_1536 + 314] = sha3(address(_1492), address(_1496))
                        mem[_1536 + 346] = stor4[arg3].field_512
                        mem[_1536 + 261] = 85
                        require ext_code.size(address(sha3(0, stor4[arg3].field_0, sha3(address(_1492), address(_1496)), stor4[arg3].field_512)))
                        staticcall address(sha3(0, stor4[arg3].field_0, sha3(address(_1492), address(_1496)), stor4[arg3].field_512)).getReserves() with:
                                gas gas_remaining wei
                    else:
                        if not address(_1496):
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_1536 + 221] = address(_1496)
                        mem[_1536 + 241] = address(_1492)
                        mem[_1536 + 189] = 40
                        mem[_1536 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_1536 + 294] = Mask(160, 96, stor4[arg3].field_0)
                        mem[_1536 + 314] = sha3(address(_1496), address(_1492))
                        mem[_1536 + 346] = stor4[arg3].field_512
                        mem[_1536 + 261] = 85
                        require ext_code.size(address(sha3(0, stor4[arg3].field_0, sha3(address(_1496), address(_1492)), stor4[arg3].field_512)))
                        staticcall address(sha3(0, stor4[arg3].field_0, sha3(address(_1496), address(_1492)), stor4[arg3].field_512)).getReserves() with:
                                gas gas_remaining wei
                    mem[_1536 + 378 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _1536 + ceil32(return_data.size) + 378
                else:
                    if not mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    _1537 = mem[64]
                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + 128])
                    mem[mem[64] + 52] = address(_1492)
                    _1562 = mem[64]
                    mem[mem[64]] = 40
                    mem[64] = mem[64] + 72
                    _1564 = sha3(mem[_1562 + 32 len mem[_1562]])
                    mem[_1537 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_1537 + 105] = Mask(160, 96, stor4[arg3].field_0)
                    mem[_1537 + 125] = _1564
                    mem[_1537 + 157] = stor4[arg3].field_512
                    mem[_1537 + 72] = 85
                    if address(_1492) == address(_1496):
                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                    if address(_1492) < address(_1496):
                        if not address(_1492):
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_1537 + 221] = address(_1492)
                        mem[_1537 + 241] = address(_1496)
                        mem[_1537 + 189] = 40
                        mem[_1537 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_1537 + 294] = Mask(160, 96, stor4[arg3].field_0)
                        mem[_1537 + 314] = sha3(address(_1492), address(_1496))
                        mem[_1537 + 346] = stor4[arg3].field_512
                        mem[_1537 + 261] = 85
                        require ext_code.size(address(sha3(0, stor4[arg3].field_0, sha3(address(_1492), address(_1496)), stor4[arg3].field_512)))
                        staticcall address(sha3(0, stor4[arg3].field_0, sha3(address(_1492), address(_1496)), stor4[arg3].field_512)).getReserves() with:
                                gas gas_remaining wei
                    else:
                        if not address(_1496):
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_1537 + 221] = address(_1496)
                        mem[_1537 + 241] = address(_1492)
                        mem[_1537 + 189] = 40
                        mem[_1537 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_1537 + 294] = Mask(160, 96, stor4[arg3].field_0)
                        mem[_1537 + 314] = sha3(address(_1496), address(_1492))
                        mem[_1537 + 346] = stor4[arg3].field_512
                        mem[_1537 + 261] = 85
                        require ext_code.size(address(sha3(0, stor4[arg3].field_0, sha3(address(_1496), address(_1492)), stor4[arg3].field_512)))
                        staticcall address(sha3(0, stor4[arg3].field_0, sha3(address(_1496), address(_1492)), stor4[arg3].field_512)).getReserves() with:
                                gas gas_remaining wei
                    mem[_1537 + 378 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _1537 + ceil32(return_data.size) + 378
                require return_data.size >= 96
                require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                require idx < mem[(32 * arg2.length) + 128]
                if mem[(32 * idx) + (32 * arg2.length) + 160] <= 0:
                    revert with 0, 'PancakeLibrary: INSUFFICIENT_INPUT_AMOUNT'
                if address(_1492) == address(_1496):
                    if ext_call.return_data[18 len 14] <= 0:
                        revert with 0, 'PancakeLibrary: INSUFFICIENT_LIQUIDITY'
                    if ext_call.return_data[50 len 14] <= 0:
                        revert with 0, 'PancakeLibrary: INSUFFICIENT_LIQUIDITY'
                    if not stor4[arg3].field_256:
                        if ext_call.return_data[50 len 14]:
                            require ext_call.return_data[50 len 14]
                            if 0 / ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[18 len 14] < 10000 * ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require 10000 * ext_call.return_data[18 len 14]
                        require idx + 1 < mem[(32 * arg2.length) + 128]
                        mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0 / 10000 * ext_call.return_data[18 len 14]
                    else:
                        require stor4[arg3].field_256
                        if mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256 / stor4[arg3].field_256 != mem[(32 * idx) + (32 * arg2.length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not ext_call.return_data[50 len 14]:
                            if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256) < 10000 * ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256)
                            require idx + 1 < mem[(32 * arg2.length) + 128]
                            mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0 / (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256)
                        else:
                            require ext_call.return_data[50 len 14]
                            if mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256) < 10000 * ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256)
                            require idx + 1 < mem[(32 * arg2.length) + 128]
                            mem[(32 * idx + 1) + (32 * arg2.length) + 160] = mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256 * ext_call.return_data[50 len 14] / (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256)
                else:
                    if ext_call.return_data[50 len 14] <= 0:
                        revert with 0, 'PancakeLibrary: INSUFFICIENT_LIQUIDITY'
                    if ext_call.return_data[18 len 14] <= 0:
                        revert with 0, 'PancakeLibrary: INSUFFICIENT_LIQUIDITY'
                    if not stor4[arg3].field_256:
                        if ext_call.return_data[18 len 14]:
                            require ext_call.return_data[18 len 14]
                            if 0 / ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[50 len 14] < 10000 * ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require 10000 * ext_call.return_data[50 len 14]
                        require idx + 1 < mem[(32 * arg2.length) + 128]
                        mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0 / 10000 * ext_call.return_data[50 len 14]
                    else:
                        require stor4[arg3].field_256
                        if mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256 / stor4[arg3].field_256 != mem[(32 * idx) + (32 * arg2.length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not ext_call.return_data[18 len 14]:
                            if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256) < 10000 * ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256)
                            require idx + 1 < mem[(32 * arg2.length) + 128]
                            mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0 / (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256)
                        else:
                            require ext_call.return_data[18 len 14]
                            if mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256) < 10000 * ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256)
                            require idx + 1 < mem[(32 * arg2.length) + 128]
                            mem[(32 * idx + 1) + (32 * arg2.length) + 160] = mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256 * ext_call.return_data[18 len 14] / (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256)
            idx = idx + 1
            continue 
        mem[mem[64]] = 32
        _1500 = mem[(32 * arg2.length) + 128]
        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
        mem[mem[64] + 64 len 32 * _1500] = mem[(32 * arg2.length) + 160 len 32 * _1500]
        return 32, mem[mem[64] + 32 len (32 * _1500) + 32]
    mem[(32 * arg2.length) + 160 len 32 * arg2.length] = call.data[calldata.size len 32 * arg2.length]
    require 0 < arg2.length
    mem[(32 * arg2.length) + 160] = arg1
    idx = 0
    while idx < arg2.length - 1:
        require idx < mem[96]
        _1494 = mem[(32 * idx) + 128]
        require idx + 1 < mem[96]
        _1497 = mem[(32 * idx + 1) + 128]
        if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
            revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
        if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
            if not mem[(32 * idx) + 140 len 20]:
                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
            if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
            if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                if not mem[(32 * idx) + 140 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                _1538 = mem[64]
                mem[mem[64] + 32] = address(mem[(32 * idx) + 128])
                mem[mem[64] + 52] = address(_1497)
                _1566 = mem[64]
                mem[mem[64]] = 40
                mem[64] = mem[64] + 72
                _1568 = sha3(mem[_1566 + 32 len mem[_1566]])
                mem[_1538 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                mem[_1538 + 105] = Mask(160, 96, stor4[arg3].field_0)
                mem[_1538 + 125] = _1568
                mem[_1538 + 157] = stor4[arg3].field_512
                mem[_1538 + 72] = 85
                if address(_1494) == address(_1497):
                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                if address(_1494) < address(_1497):
                    if not address(_1494):
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    mem[_1538 + 221] = address(_1494)
                    mem[_1538 + 241] = address(_1497)
                    mem[_1538 + 189] = 40
                    mem[_1538 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_1538 + 294] = Mask(160, 96, stor4[arg3].field_0)
                    mem[_1538 + 314] = sha3(address(_1494), address(_1497))
                    mem[_1538 + 346] = stor4[arg3].field_512
                    mem[_1538 + 261] = 85
                    require ext_code.size(address(sha3(0, stor4[arg3].field_0, sha3(address(_1494), address(_1497)), stor4[arg3].field_512)))
                    staticcall address(sha3(0, stor4[arg3].field_0, sha3(address(_1494), address(_1497)), stor4[arg3].field_512)).getReserves() with:
                            gas gas_remaining wei
                else:
                    if not address(_1497):
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    mem[_1538 + 221] = address(_1497)
                    mem[_1538 + 241] = address(_1494)
                    mem[_1538 + 189] = 40
                    mem[_1538 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_1538 + 294] = Mask(160, 96, stor4[arg3].field_0)
                    mem[_1538 + 314] = sha3(address(_1497), address(_1494))
                    mem[_1538 + 346] = stor4[arg3].field_512
                    mem[_1538 + 261] = 85
                    require ext_code.size(address(sha3(0, stor4[arg3].field_0, sha3(address(_1497), address(_1494)), stor4[arg3].field_512)))
                    staticcall address(sha3(0, stor4[arg3].field_0, sha3(address(_1497), address(_1494)), stor4[arg3].field_512)).getReserves() with:
                            gas gas_remaining wei
                mem[_1538 + 378 len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = _1538 + ceil32(return_data.size) + 378
            else:
                if not mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                _1539 = mem[64]
                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + 128])
                mem[mem[64] + 52] = address(_1494)
                _1570 = mem[64]
                mem[mem[64]] = 40
                mem[64] = mem[64] + 72
                _1572 = sha3(mem[_1570 + 32 len mem[_1570]])
                mem[_1539 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                mem[_1539 + 105] = Mask(160, 96, stor4[arg3].field_0)
                mem[_1539 + 125] = _1572
                mem[_1539 + 157] = stor4[arg3].field_512
                mem[_1539 + 72] = 85
                if address(_1494) == address(_1497):
                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                if address(_1494) < address(_1497):
                    if not address(_1494):
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    mem[_1539 + 221] = address(_1494)
                    mem[_1539 + 241] = address(_1497)
                    mem[_1539 + 189] = 40
                    mem[_1539 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_1539 + 294] = Mask(160, 96, stor4[arg3].field_0)
                    mem[_1539 + 314] = sha3(address(_1494), address(_1497))
                    mem[_1539 + 346] = stor4[arg3].field_512
                    mem[_1539 + 261] = 85
                    require ext_code.size(address(sha3(0, stor4[arg3].field_0, sha3(address(_1494), address(_1497)), stor4[arg3].field_512)))
                    staticcall address(sha3(0, stor4[arg3].field_0, sha3(address(_1494), address(_1497)), stor4[arg3].field_512)).getReserves() with:
                            gas gas_remaining wei
                else:
                    if not address(_1497):
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    mem[_1539 + 221] = address(_1497)
                    mem[_1539 + 241] = address(_1494)
                    mem[_1539 + 189] = 40
                    mem[_1539 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_1539 + 294] = Mask(160, 96, stor4[arg3].field_0)
                    mem[_1539 + 314] = sha3(address(_1497), address(_1494))
                    mem[_1539 + 346] = stor4[arg3].field_512
                    mem[_1539 + 261] = 85
                    require ext_code.size(address(sha3(0, stor4[arg3].field_0, sha3(address(_1497), address(_1494)), stor4[arg3].field_512)))
                    staticcall address(sha3(0, stor4[arg3].field_0, sha3(address(_1497), address(_1494)), stor4[arg3].field_512)).getReserves() with:
                            gas gas_remaining wei
                mem[_1539 + 378 len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = _1539 + ceil32(return_data.size) + 378
            require return_data.size >= 96
            require ext_call.return_data[0] == ext_call.return_data[18 len 14]
            require ext_call.return_data[32] == ext_call.return_data[50 len 14]
            require ext_call.return_data[64] == ext_call.return_data[92 len 4]
            require idx < mem[(32 * arg2.length) + 128]
            if mem[(32 * idx) + (32 * arg2.length) + 160] <= 0:
                revert with 0, 'PancakeLibrary: INSUFFICIENT_INPUT_AMOUNT'
            if address(_1494) == address(_1494):
                if ext_call.return_data[18 len 14] <= 0:
                    revert with 0, 'PancakeLibrary: INSUFFICIENT_LIQUIDITY'
                if ext_call.return_data[50 len 14] <= 0:
                    revert with 0, 'PancakeLibrary: INSUFFICIENT_LIQUIDITY'
                if not stor4[arg3].field_256:
                    if ext_call.return_data[50 len 14]:
                        require ext_call.return_data[50 len 14]
                        if 0 / ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                    if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                        revert with 0, 'ds-math-mul-overflow'
                    if 10000 * ext_call.return_data[18 len 14] < 10000 * ext_call.return_data[18 len 14]:
                        revert with 0, 'ds-math-add-overflow'
                    require 10000 * ext_call.return_data[18 len 14]
                    require idx + 1 < mem[(32 * arg2.length) + 128]
                    mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0 / 10000 * ext_call.return_data[18 len 14]
                else:
                    require stor4[arg3].field_256
                    if mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256 / stor4[arg3].field_256 != mem[(32 * idx) + (32 * arg2.length) + 160]:
                        revert with 0, 'ds-math-mul-overflow'
                    if not ext_call.return_data[50 len 14]:
                        if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256) < 10000 * ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256)
                        require idx + 1 < mem[(32 * arg2.length) + 128]
                        mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0 / (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256)
                    else:
                        require ext_call.return_data[50 len 14]
                        if mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256:
                            revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256) < 10000 * ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256)
                        require idx + 1 < mem[(32 * arg2.length) + 128]
                        mem[(32 * idx + 1) + (32 * arg2.length) + 160] = mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256 * ext_call.return_data[50 len 14] / (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256)
            else:
                if ext_call.return_data[50 len 14] <= 0:
                    revert with 0, 'PancakeLibrary: INSUFFICIENT_LIQUIDITY'
                if ext_call.return_data[18 len 14] <= 0:
                    revert with 0, 'PancakeLibrary: INSUFFICIENT_LIQUIDITY'
                if not stor4[arg3].field_256:
                    if ext_call.return_data[18 len 14]:
                        require ext_call.return_data[18 len 14]
                        if 0 / ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                    if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                        revert with 0, 'ds-math-mul-overflow'
                    if 10000 * ext_call.return_data[50 len 14] < 10000 * ext_call.return_data[50 len 14]:
                        revert with 0, 'ds-math-add-overflow'
                    require 10000 * ext_call.return_data[50 len 14]
                    require idx + 1 < mem[(32 * arg2.length) + 128]
                    mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0 / 10000 * ext_call.return_data[50 len 14]
                else:
                    require stor4[arg3].field_256
                    if mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256 / stor4[arg3].field_256 != mem[(32 * idx) + (32 * arg2.length) + 160]:
                        revert with 0, 'ds-math-mul-overflow'
                    if not ext_call.return_data[18 len 14]:
                        if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256) < 10000 * ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256)
                        require idx + 1 < mem[(32 * arg2.length) + 128]
                        mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0 / (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256)
                    else:
                        require ext_call.return_data[18 len 14]
                        if mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256:
                            revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256) < 10000 * ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256)
                        require idx + 1 < mem[(32 * arg2.length) + 128]
                        mem[(32 * idx + 1) + (32 * arg2.length) + 160] = mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256 * ext_call.return_data[18 len 14] / (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256)
        else:
            if not mem[(32 * idx + 1) + 140 len 20]:
                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
            if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
            if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                if not mem[(32 * idx) + 140 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                _1540 = mem[64]
                mem[mem[64] + 32] = address(mem[(32 * idx) + 128])
                mem[mem[64] + 52] = address(_1497)
                _1574 = mem[64]
                mem[mem[64]] = 40
                mem[64] = mem[64] + 72
                _1576 = sha3(mem[_1574 + 32 len mem[_1574]])
                mem[_1540 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                mem[_1540 + 105] = Mask(160, 96, stor4[arg3].field_0)
                mem[_1540 + 125] = _1576
                mem[_1540 + 157] = stor4[arg3].field_512
                mem[_1540 + 72] = 85
                if address(_1494) == address(_1497):
                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                if address(_1494) < address(_1497):
                    if not address(_1494):
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    mem[_1540 + 221] = address(_1494)
                    mem[_1540 + 241] = address(_1497)
                    mem[_1540 + 189] = 40
                    mem[_1540 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_1540 + 294] = Mask(160, 96, stor4[arg3].field_0)
                    mem[_1540 + 314] = sha3(address(_1494), address(_1497))
                    mem[_1540 + 346] = stor4[arg3].field_512
                    mem[_1540 + 261] = 85
                    require ext_code.size(address(sha3(0, stor4[arg3].field_0, sha3(address(_1494), address(_1497)), stor4[arg3].field_512)))
                    staticcall address(sha3(0, stor4[arg3].field_0, sha3(address(_1494), address(_1497)), stor4[arg3].field_512)).getReserves() with:
                            gas gas_remaining wei
                else:
                    if not address(_1497):
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    mem[_1540 + 221] = address(_1497)
                    mem[_1540 + 241] = address(_1494)
                    mem[_1540 + 189] = 40
                    mem[_1540 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_1540 + 294] = Mask(160, 96, stor4[arg3].field_0)
                    mem[_1540 + 314] = sha3(address(_1497), address(_1494))
                    mem[_1540 + 346] = stor4[arg3].field_512
                    mem[_1540 + 261] = 85
                    require ext_code.size(address(sha3(0, stor4[arg3].field_0, sha3(address(_1497), address(_1494)), stor4[arg3].field_512)))
                    staticcall address(sha3(0, stor4[arg3].field_0, sha3(address(_1497), address(_1494)), stor4[arg3].field_512)).getReserves() with:
                            gas gas_remaining wei
                mem[_1540 + 378 len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = _1540 + ceil32(return_data.size) + 378
            else:
                if not mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                _1541 = mem[64]
                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + 128])
                mem[mem[64] + 52] = address(_1494)
                _1578 = mem[64]
                mem[mem[64]] = 40
                mem[64] = mem[64] + 72
                _1580 = sha3(mem[_1578 + 32 len mem[_1578]])
                mem[_1541 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                mem[_1541 + 105] = Mask(160, 96, stor4[arg3].field_0)
                mem[_1541 + 125] = _1580
                mem[_1541 + 157] = stor4[arg3].field_512
                mem[_1541 + 72] = 85
                if address(_1494) == address(_1497):
                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                if address(_1494) < address(_1497):
                    if not address(_1494):
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    mem[_1541 + 221] = address(_1494)
                    mem[_1541 + 241] = address(_1497)
                    mem[_1541 + 189] = 40
                    mem[_1541 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_1541 + 294] = Mask(160, 96, stor4[arg3].field_0)
                    mem[_1541 + 314] = sha3(address(_1494), address(_1497))
                    mem[_1541 + 346] = stor4[arg3].field_512
                    mem[_1541 + 261] = 85
                    require ext_code.size(address(sha3(0, stor4[arg3].field_0, sha3(address(_1494), address(_1497)), stor4[arg3].field_512)))
                    staticcall address(sha3(0, stor4[arg3].field_0, sha3(address(_1494), address(_1497)), stor4[arg3].field_512)).getReserves() with:
                            gas gas_remaining wei
                else:
                    if not address(_1497):
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    mem[_1541 + 221] = address(_1497)
                    mem[_1541 + 241] = address(_1494)
                    mem[_1541 + 189] = 40
                    mem[_1541 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_1541 + 294] = Mask(160, 96, stor4[arg3].field_0)
                    mem[_1541 + 314] = sha3(address(_1497), address(_1494))
                    mem[_1541 + 346] = stor4[arg3].field_512
                    mem[_1541 + 261] = 85
                    require ext_code.size(address(sha3(0, stor4[arg3].field_0, sha3(address(_1497), address(_1494)), stor4[arg3].field_512)))
                    staticcall address(sha3(0, stor4[arg3].field_0, sha3(address(_1497), address(_1494)), stor4[arg3].field_512)).getReserves() with:
                            gas gas_remaining wei
                mem[_1541 + 378 len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = _1541 + ceil32(return_data.size) + 378
            require return_data.size >= 96
            require ext_call.return_data[0] == ext_call.return_data[18 len 14]
            require ext_call.return_data[32] == ext_call.return_data[50 len 14]
            require ext_call.return_data[64] == ext_call.return_data[92 len 4]
            require idx < mem[(32 * arg2.length) + 128]
            if mem[(32 * idx) + (32 * arg2.length) + 160] <= 0:
                revert with 0, 'PancakeLibrary: INSUFFICIENT_INPUT_AMOUNT'
            if address(_1494) == address(_1497):
                if ext_call.return_data[18 len 14] <= 0:
                    revert with 0, 'PancakeLibrary: INSUFFICIENT_LIQUIDITY'
                if ext_call.return_data[50 len 14] <= 0:
                    revert with 0, 'PancakeLibrary: INSUFFICIENT_LIQUIDITY'
                if not stor4[arg3].field_256:
                    if ext_call.return_data[50 len 14]:
                        require ext_call.return_data[50 len 14]
                        if 0 / ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                    if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                        revert with 0, 'ds-math-mul-overflow'
                    if 10000 * ext_call.return_data[18 len 14] < 10000 * ext_call.return_data[18 len 14]:
                        revert with 0, 'ds-math-add-overflow'
                    require 10000 * ext_call.return_data[18 len 14]
                    require idx + 1 < mem[(32 * arg2.length) + 128]
                    mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0 / 10000 * ext_call.return_data[18 len 14]
                else:
                    require stor4[arg3].field_256
                    if mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256 / stor4[arg3].field_256 != mem[(32 * idx) + (32 * arg2.length) + 160]:
                        revert with 0, 'ds-math-mul-overflow'
                    if not ext_call.return_data[50 len 14]:
                        if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256) < 10000 * ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256)
                        require idx + 1 < mem[(32 * arg2.length) + 128]
                        mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0 / (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256)
                    else:
                        require ext_call.return_data[50 len 14]
                        if mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256:
                            revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256) < 10000 * ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256)
                        require idx + 1 < mem[(32 * arg2.length) + 128]
                        mem[(32 * idx + 1) + (32 * arg2.length) + 160] = mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256 * ext_call.return_data[50 len 14] / (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256)
            else:
                if ext_call.return_data[50 len 14] <= 0:
                    revert with 0, 'PancakeLibrary: INSUFFICIENT_LIQUIDITY'
                if ext_call.return_data[18 len 14] <= 0:
                    revert with 0, 'PancakeLibrary: INSUFFICIENT_LIQUIDITY'
                if not stor4[arg3].field_256:
                    if ext_call.return_data[18 len 14]:
                        require ext_call.return_data[18 len 14]
                        if 0 / ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                    if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                        revert with 0, 'ds-math-mul-overflow'
                    if 10000 * ext_call.return_data[50 len 14] < 10000 * ext_call.return_data[50 len 14]:
                        revert with 0, 'ds-math-add-overflow'
                    require 10000 * ext_call.return_data[50 len 14]
                    require idx + 1 < mem[(32 * arg2.length) + 128]
                    mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0 / 10000 * ext_call.return_data[50 len 14]
                else:
                    require stor4[arg3].field_256
                    if mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256 / stor4[arg3].field_256 != mem[(32 * idx) + (32 * arg2.length) + 160]:
                        revert with 0, 'ds-math-mul-overflow'
                    if not ext_call.return_data[18 len 14]:
                        if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256) < 10000 * ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256)
                        require idx + 1 < mem[(32 * arg2.length) + 128]
                        mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0 / (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256)
                    else:
                        require ext_call.return_data[18 len 14]
                        if mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256:
                            revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256) < 10000 * ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256)
                        require idx + 1 < mem[(32 * arg2.length) + 128]
                        mem[(32 * idx + 1) + (32 * arg2.length) + 160] = mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256 * ext_call.return_data[18 len 14] / (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * arg2.length) + 160] * stor4[arg3].field_256)
        idx = idx + 1
        continue 
    mem[mem[64]] = 32
    _1502 = mem[(32 * arg2.length) + 128]
    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
    mem[mem[64] + 64 len 32 * _1502] = mem[(32 * arg2.length) + 160 len 32 * _1502]
    return 32, mem[mem[64] + 32 len (32 * _1502) + 32]
}

function sub_b3bbec98(?) payable {
    require calldata.size - 4 >= 128
    require cd[4] <= test266151307()
    require cd[4] + 35 < calldata.size
    require ('cd', 4).length <= test266151307()
    require (32 * ('cd', 4).length) + 128 >= 96 and (32 * ('cd', 4).length) + 128 <= test266151307()
    mem[64] = (32 * ('cd', 4).length) + 128
    mem[96] = ('cd', 4).length
    idx = 0
    s = cd[4] + 36
    t = 128
    while idx < ('cd', 4).length:
        require cd[4] + cd[s] + 67 < calldata.size
        require cd[(cd[4] + cd[s] + 36)] <= test266151307()
        _9268 = mem[64]
        require mem[64] + (32 * cd[(cd[4] + cd[s] + 36)]) + 32 >= mem[64] and mem[64] + (32 * cd[(cd[4] + cd[s] + 36)]) + 32 <= test266151307()
        mem[64] = mem[64] + (32 * cd[(cd[4] + cd[s] + 36)]) + 32
        mem[_9268] = cd[(cd[4] + cd[s] + 36)]
        require calldata.size >= cd[4] + cd[s] + (32 * cd[(cd[4] + cd[s] + 36)]) + 68
        u = 0
        v = cd[4] + cd[s] + 68
        w = _9268 + 32
        while u < cd[(cd[4] + cd[s] + 36)]:
            require cd[v] == address(cd[v])
            mem[w] = cd[v]
            u = u + 1
            v = v + 32
            w = w + 32
            continue 
        mem[t] = _9268
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    _18532 = mem[96]
    idx = 0
    s = 96
    while idx < _18532:
        require idx < mem[96]
        _18534 = mem[(32 * idx) + 128]
        _18536 = mem[64]
        mem[mem[64]] = 0xb6eacc9d00000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = (100 * msg.value) - (stor8 * msg.value) / 100
        mem[mem[64] + 36] = 96
        _18539 = mem[_18534]
        mem[mem[64] + 100] = mem[_18534]
        t = 0
        u = mem[64] + 132
        v = _18534 + 32
        while t < _18539:
            mem[u] = mem[v + 12 len 20]
            t = t + 1
            u = u + 32
            v = v + 32
            continue 
        mem[_18536 + 68] = cd[100]
        require ext_code.size(this.address)
        staticcall this.address.mem[mem[64] len 4] with:
                gas gas_remaining wei
               args mem[mem[64] + 4 len _18536 + (32 * _18539) + -mem[64] + 128]
        if not ext_call.success:
            _27809 = mem[_18534]
            require mem[_18534] <= test266151307()
            _27818 = mem[64]
            mem[mem[64]] = mem[_18534]
            mem[64] = mem[64] + (32 * _27809) + 32
            if _27809:
                mem[_27818 + 32 len 32 * _27809] = call.data[calldata.size len 32 * _27809]
            if mem[s]:
                require mem[s] - 1 < mem[s]
                require mem[_27818] - 1 < mem[_27818]
                if mem[(32 * mem[_27818] - 1) + _27818 + 32] <= mem[(32 * mem[s] - 1) + s + 32]:
                    idx = idx + 1
                    s = s
                    continue 
            idx = idx + 1
            s = _27818
            continue 
        _27804 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _27819 = mem[_27804]
        require mem[_27804] <= test266151307()
        require _27804 + return_data.size > _27804 + mem[_27804] + 31
        _27836 = mem[_27804 + mem[_27804]]
        require mem[_27804 + mem[_27804]] <= test266151307()
        require (32 * mem[_27804 + mem[_27804]]) + 32 >= 0 and _27804 + ceil32(return_data.size) + (32 * mem[_27804 + mem[_27804]]) + 32 <= test266151307()
        mem[64] = _27804 + ceil32(return_data.size) + (32 * mem[_27804 + mem[_27804]]) + 32
        mem[_27804 + ceil32(return_data.size)] = _27836
        require return_data.size >= _27819 + (32 * _27836) + 32
        u = _27804 + _27819 + 32
        v = _27804 + ceil32(return_data.size) + 32
        t = 0
        while t < _27836:
            mem[v] = mem[u]
            u = u + 32
            v = v + 32
            t = t + 1
            continue 
        if mem[s]:
            require mem[s] - 1 < mem[s]
            require _27836 - 1 < _27836
            if mem[(32 * _27836 - 1) + _27804 + ceil32(return_data.size) + 32] <= mem[(32 * mem[s] - 1) + s + 32]:
                idx = idx + 1
                s = s
                continue 
        idx = idx + 1
        s = _27804 + ceil32(return_data.size)
        continue 
    require 0 < mem[96]
    require 0 < mem[mem[128]]
    _18540 = mem[mem[128] + 32]
    require 0 < mem[96]
    require 1 < mem[mem[128]]
    _18545 = mem[mem[128] + 64]
    mem[0] = cd[100]
    mem[32] = 4
    if address(_18540) == address(_18545):
        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
    if address(_18540) < address(_18545):
        if not address(_18540):
            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
        _18558 = mem[64]
        mem[mem[64] + 32] = address(_18540)
        mem[mem[64] + 52] = address(_18545)
        _18570 = mem[64]
        mem[mem[64]] = 40
        mem[64] = mem[64] + 72
        _18572 = sha3(mem[_18570 + 32 len mem[_18570]])
        mem[_18558 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
        mem[_18558 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
        mem[_18558 + 125] = _18572
        mem[_18558 + 157] = stor4[cd[100]].field_512
        mem[_18558 + 72] = 85
        mem[64] = _18558 + 189
        require 0 < mem[96]
        require 0 < mem[mem[128]]
        _18597 = mem[mem[128] + 32]
        mem[_18558 + 189] = 12
        mem[_18558 + 221] = 'minPoolETH..'
        mem[_18558 + 289] = address(sha3(0, stor4[cd[100]].field_0, _18572, stor4[cd[100]].field_512))
        mem[_18558 + 253] = 36
        mem[64] = _18558 + 321
        mem[_18558 + 289 len 28] = address(sha3(0, stor4[cd[100]].field_0, _18572, stor4[cd[100]].field_512)) << 64
        mem[_18558 + 285 len 4] = unknown_0x70a08231(?????)
        mem[_18558 + 321 len 64] = unknown_0x70a08231(?????), address(sha3(0, stor4[cd[100]].field_0, _18572, stor4[cd[100]].field_512)) << 64, 0, mem[_18558 + 321 len 28]
        mem[_18558 + 357] = 0
        call address(_18597) with:
             gas gas_remaining wei
            args mem[_18558 + 325]
        if not return_data.size:
            if 0 == mem[96]:
                revert with 0, 'minPoolETH..', 0
            require mem[96] >= 32
            if mem[128] <= cd[36]:
                revert with 0, 'minPoolETH..', 0
            require 0 < mem[96]
            _27896 = mem[128]
            mem[0] = cd[100]
            mem[32] = 4
            require mem[mem[128]]
            if mem[mem[128] + 44 len 20] != stor4[cd[100]].field_1024:
                revert with 0, 'SuperRouter: INVALID_PATH'
            require mem[s] - 1 < mem[s]
            if mem[(32 * mem[s] - 1) + s + 32] < 1:
                revert with 0, 'SuperRouter: INSUFFICIENT_OUTPUT_AMOUNT'
            require 0 < mem[s]
            _28019 = mem[s + 32]
            mem[_18558 + 321] = 0xd0e30db000000000000000000000000000000000000000000000000000000000
            require ext_code.size(stor4[cd[100]].field_1024)
            call stor4[cd[100]].field_1024.deposit() with:
               value _28019 wei
                 gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require 0 < mem[mem[128]]
            _28074 = mem[mem[128] + 32]
            require 1 < mem[mem[128]]
            _28090 = mem[mem[128] + 64]
            mem[0] = cd[100]
            mem[32] = 4
            if address(_28074) == address(_28090):
                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
            if address(_28074) < address(_28090):
                if not address(_28074):
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                mem[_18558 + 353] = address(_28074)
                mem[_18558 + 373] = address(_28090)
                mem[_18558 + 321] = 40
                mem[_18558 + 425] = 0xff00000000000000000000000000000000000000000000000000000000000000
                mem[_18558 + 426] = Mask(160, 96, stor4[cd[100]].field_0)
                mem[_18558 + 446] = sha3(address(_28074), address(_28090))
                mem[_18558 + 478] = stor4[cd[100]].field_512
                mem[_18558 + 393] = 85
                mem[64] = _18558 + 510
                require 0 < mem[s]
                _28308 = mem[s + 32]
                mem[_18558 + 514] = address(sha3(0, stor4[cd[100]].field_0, sha3(address(_28074), address(_28090)), stor4[cd[100]].field_512))
                mem[_18558 + 546] = _28308
                require ext_code.size(stor4[cd[100]].field_1024)
                call stor4[cd[100]].field_1024.0xa9059cbb with:
                     gas gas_remaining wei
                    args address(sha3(0, stor4[cd[100]].field_0, sha3(address(_28074), address(_28090)), stor4[cd[100]].field_512)), _28308
                mem[_18558 + 510] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = _18558 + ceil32(return_data.size) + 510
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                require ext_call.return_data[0]
                _37008 = mem[mem[128]]
                idx = 0
                while idx < _37008 - 1:
                    require idx < mem[_27896]
                    _37061 = mem[(32 * idx) + _27896 + 32]
                    require idx + 1 < mem[_27896]
                    _37089 = mem[(32 * idx + 1) + _27896 + 32]
                    if mem[(32 * idx) + _27896 + 44 len 20] == mem[(32 * idx + 1) + _27896 + 44 len 20]:
                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                    if mem[(32 * idx) + _27896 + 44 len 20] < mem[(32 * idx + 1) + _27896 + 44 len 20]:
                        if not mem[(32 * idx) + _27896 + 44 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        require idx + 1 < mem[s]
                        _37252 = mem[(32 * idx + 1) + s + 32]
                        if mem[(32 * idx) + _27896 + 44 len 20] == mem[(32 * idx) + _27896 + 44 len 20]:
                            if idx >= mem[_27896] - 2:
                                mem[0] = cd[100]
                                mem[32] = 4
                                if address(_37061) == mem[(32 * idx + 1) + _27896 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_37061) < mem[(32 * idx + 1) + _27896 + 44 len 20]:
                                    if not address(_37061):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38198 = mem[64]
                                    mem[mem[64] + 32] = address(_37061)
                                    mem[mem[64] + 52] = address(_37089)
                                    _38908 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _38910 = sha3(mem[_38908 + 32 len mem[_38908]])
                                    mem[_38198 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38198 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38198 + 125] = _38910
                                    mem[_38198 + 157] = stor4[cd[100]].field_512
                                    mem[_38198 + 72] = 85
                                    mem[_38198 + 189] = 0
                                    mem[64] = _38198 + 221
                                    mem[_38198 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38198 + 225] = 0
                                    mem[_38198 + 257] = _37252
                                    mem[_38198 + 289] = msg.sender
                                    mem[_38198 + 321] = 128
                                    mem[_38198 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38198 + 385] = mem[s + _38198 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _38910, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _38910, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _37252, msg.sender, 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _27896 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38199 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27896 + 32])
                                    mem[mem[64] + 52] = address(_37061)
                                    _38912 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _38914 = sha3(mem[_38912 + 32 len mem[_38912]])
                                    mem[_38199 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38199 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38199 + 125] = _38914
                                    mem[_38199 + 157] = stor4[cd[100]].field_512
                                    mem[_38199 + 72] = 85
                                    mem[_38199 + 189] = 0
                                    mem[64] = _38199 + 221
                                    mem[_38199 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38199 + 225] = 0
                                    mem[_38199 + 257] = _37252
                                    mem[_38199 + 289] = msg.sender
                                    mem[_38199 + 321] = 128
                                    mem[_38199 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38199 + 385] = mem[s + _38199 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _38914, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _38914, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _37252, msg.sender, 128, 0
                            else:
                                require idx + 2 < mem[_27896]
                                _37444 = mem[(32 * idx + 2) + _27896 + 32]
                                mem[0] = cd[100]
                                mem[32] = 4
                                if mem[(32 * idx + 1) + _27896 + 44 len 20] == mem[(32 * idx + 2) + _27896 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx + 1) + _27896 + 44 len 20] < mem[(32 * idx + 2) + _27896 + 44 len 20]:
                                    if not mem[(32 * idx + 1) + _27896 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38196 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27896 + 32])
                                    mem[mem[64] + 52] = address(_37444)
                                    _38900 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _38902 = sha3(mem[_38900 + 32 len mem[_38900]])
                                    mem[_38196 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38196 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38196 + 125] = _38902
                                    mem[_38196 + 157] = stor4[cd[100]].field_512
                                    mem[_38196 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37061) == address(_37089):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37061) < address(_37089):
                                        if not address(_37061):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38196 + 221] = address(_37061)
                                        mem[_38196 + 241] = address(_37089)
                                        mem[_38196 + 189] = 40
                                        mem[_38196 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38196 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38196 + 314] = sha3(address(_37061), address(_37089))
                                        mem[_38196 + 346] = stor4[cd[100]].field_512
                                        mem[_38196 + 261] = 85
                                        mem[_38196 + 378] = 0
                                        mem[64] = _38196 + 410
                                        mem[_38196 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38196 + 414] = 0
                                        mem[_38196 + 446] = _37252
                                        mem[_38196 + 478] = address(sha3(0, stor4[cd[100]].field_0, _38902, stor4[cd[100]].field_512))
                                        mem[_38196 + 510] = 128
                                        mem[_38196 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38196 + 574] = mem[s + _38196 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37061), address(_37089)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37061), address(_37089)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37252, address(sha3(0, stor4[cd[100]].field_0, _38902, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37089):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38196 + 221] = address(_37089)
                                        mem[_38196 + 241] = address(_37061)
                                        mem[_38196 + 189] = 40
                                        mem[_38196 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38196 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38196 + 314] = sha3(address(_37089), address(_37061))
                                        mem[_38196 + 346] = stor4[cd[100]].field_512
                                        mem[_38196 + 261] = 85
                                        mem[_38196 + 378] = 0
                                        mem[64] = _38196 + 410
                                        mem[_38196 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38196 + 414] = 0
                                        mem[_38196 + 446] = _37252
                                        mem[_38196 + 478] = address(sha3(0, stor4[cd[100]].field_0, _38902, stor4[cd[100]].field_512))
                                        mem[_38196 + 510] = 128
                                        mem[_38196 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38196 + 574] = mem[s + _38196 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37089), address(_37061)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37089), address(_37061)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37252, address(sha3(0, stor4[cd[100]].field_0, _38902, stor4[cd[100]].field_512)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _27896 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38197 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _27896 + 32])
                                    mem[mem[64] + 52] = address(_37089)
                                    _38904 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _38906 = sha3(mem[_38904 + 32 len mem[_38904]])
                                    mem[_38197 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38197 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38197 + 125] = _38906
                                    mem[_38197 + 157] = stor4[cd[100]].field_512
                                    mem[_38197 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37061) == address(_37089):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37061) < address(_37089):
                                        if not address(_37061):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38197 + 221] = address(_37061)
                                        mem[_38197 + 241] = address(_37089)
                                        mem[_38197 + 189] = 40
                                        mem[_38197 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38197 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38197 + 314] = sha3(address(_37061), address(_37089))
                                        mem[_38197 + 346] = stor4[cd[100]].field_512
                                        mem[_38197 + 261] = 85
                                        mem[_38197 + 378] = 0
                                        mem[64] = _38197 + 410
                                        mem[_38197 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38197 + 414] = 0
                                        mem[_38197 + 446] = _37252
                                        mem[_38197 + 478] = address(sha3(0, stor4[cd[100]].field_0, _38906, stor4[cd[100]].field_512))
                                        mem[_38197 + 510] = 128
                                        mem[_38197 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38197 + 574] = mem[s + _38197 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37061), address(_37089)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37061), address(_37089)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37252, address(sha3(0, stor4[cd[100]].field_0, _38906, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37089):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38197 + 221] = address(_37089)
                                        mem[_38197 + 241] = address(_37061)
                                        mem[_38197 + 189] = 40
                                        mem[_38197 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38197 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38197 + 314] = sha3(address(_37089), address(_37061))
                                        mem[_38197 + 346] = stor4[cd[100]].field_512
                                        mem[_38197 + 261] = 85
                                        mem[_38197 + 378] = 0
                                        mem[64] = _38197 + 410
                                        mem[_38197 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38197 + 414] = 0
                                        mem[_38197 + 446] = _37252
                                        mem[_38197 + 478] = address(sha3(0, stor4[cd[100]].field_0, _38906, stor4[cd[100]].field_512))
                                        mem[_38197 + 510] = 128
                                        mem[_38197 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38197 + 574] = mem[s + _38197 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37089), address(_37061)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37089), address(_37061)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37252, address(sha3(0, stor4[cd[100]].field_0, _38906, stor4[cd[100]].field_512)), 128, 0
                        else:
                            if idx >= mem[_27896] - 2:
                                mem[0] = cd[100]
                                mem[32] = 4
                                if address(_37061) == mem[(32 * idx + 1) + _27896 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_37061) < mem[(32 * idx + 1) + _27896 + 44 len 20]:
                                    if not address(_37061):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38202 = mem[64]
                                    mem[mem[64] + 32] = address(_37061)
                                    mem[mem[64] + 52] = address(_37089)
                                    _38924 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _38926 = sha3(mem[_38924 + 32 len mem[_38924]])
                                    mem[_38202 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38202 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38202 + 125] = _38926
                                    mem[_38202 + 157] = stor4[cd[100]].field_512
                                    mem[_38202 + 72] = 85
                                    mem[_38202 + 189] = 0
                                    mem[64] = _38202 + 221
                                    mem[_38202 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38202 + 225] = _37252
                                    mem[_38202 + 257] = 0
                                    mem[_38202 + 289] = msg.sender
                                    mem[_38202 + 321] = 128
                                    mem[_38202 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38202 + 385] = mem[s + _38202 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _38926, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _38926, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _37252, 0, msg.sender, 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _27896 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38203 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27896 + 32])
                                    mem[mem[64] + 52] = address(_37061)
                                    _38928 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _38930 = sha3(mem[_38928 + 32 len mem[_38928]])
                                    mem[_38203 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38203 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38203 + 125] = _38930
                                    mem[_38203 + 157] = stor4[cd[100]].field_512
                                    mem[_38203 + 72] = 85
                                    mem[_38203 + 189] = 0
                                    mem[64] = _38203 + 221
                                    mem[_38203 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38203 + 225] = _37252
                                    mem[_38203 + 257] = 0
                                    mem[_38203 + 289] = msg.sender
                                    mem[_38203 + 321] = 128
                                    mem[_38203 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38203 + 385] = mem[s + _38203 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _38930, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _38930, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _37252, 0, msg.sender, 128, 0
                            else:
                                require idx + 2 < mem[_27896]
                                _37445 = mem[(32 * idx + 2) + _27896 + 32]
                                mem[0] = cd[100]
                                mem[32] = 4
                                if mem[(32 * idx + 1) + _27896 + 44 len 20] == mem[(32 * idx + 2) + _27896 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx + 1) + _27896 + 44 len 20] < mem[(32 * idx + 2) + _27896 + 44 len 20]:
                                    if not mem[(32 * idx + 1) + _27896 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38200 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27896 + 32])
                                    mem[mem[64] + 52] = address(_37445)
                                    _38916 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _38918 = sha3(mem[_38916 + 32 len mem[_38916]])
                                    mem[_38200 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38200 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38200 + 125] = _38918
                                    mem[_38200 + 157] = stor4[cd[100]].field_512
                                    mem[_38200 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37061) == address(_37089):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37061) < address(_37089):
                                        if not address(_37061):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38200 + 221] = address(_37061)
                                        mem[_38200 + 241] = address(_37089)
                                        mem[_38200 + 189] = 40
                                        mem[_38200 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38200 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38200 + 314] = sha3(address(_37061), address(_37089))
                                        mem[_38200 + 346] = stor4[cd[100]].field_512
                                        mem[_38200 + 261] = 85
                                        mem[_38200 + 378] = 0
                                        mem[64] = _38200 + 410
                                        mem[_38200 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38200 + 414] = _37252
                                        mem[_38200 + 446] = 0
                                        mem[_38200 + 478] = address(sha3(0, stor4[cd[100]].field_0, _38918, stor4[cd[100]].field_512))
                                        mem[_38200 + 510] = 128
                                        mem[_38200 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38200 + 574] = mem[s + _38200 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37061), address(_37089)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37061), address(_37089)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37252, 0, address(sha3(0, stor4[cd[100]].field_0, _38918, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37089):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38200 + 221] = address(_37089)
                                        mem[_38200 + 241] = address(_37061)
                                        mem[_38200 + 189] = 40
                                        mem[_38200 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38200 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38200 + 314] = sha3(address(_37089), address(_37061))
                                        mem[_38200 + 346] = stor4[cd[100]].field_512
                                        mem[_38200 + 261] = 85
                                        mem[_38200 + 378] = 0
                                        mem[64] = _38200 + 410
                                        mem[_38200 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38200 + 414] = _37252
                                        mem[_38200 + 446] = 0
                                        mem[_38200 + 478] = address(sha3(0, stor4[cd[100]].field_0, _38918, stor4[cd[100]].field_512))
                                        mem[_38200 + 510] = 128
                                        mem[_38200 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38200 + 574] = mem[s + _38200 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37089), address(_37061)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37089), address(_37061)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37252, 0, address(sha3(0, stor4[cd[100]].field_0, _38918, stor4[cd[100]].field_512)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _27896 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38201 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _27896 + 32])
                                    mem[mem[64] + 52] = address(_37089)
                                    _38920 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _38922 = sha3(mem[_38920 + 32 len mem[_38920]])
                                    mem[_38201 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38201 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38201 + 125] = _38922
                                    mem[_38201 + 157] = stor4[cd[100]].field_512
                                    mem[_38201 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37061) == address(_37089):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37061) < address(_37089):
                                        if not address(_37061):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38201 + 221] = address(_37061)
                                        mem[_38201 + 241] = address(_37089)
                                        mem[_38201 + 189] = 40
                                        mem[_38201 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38201 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38201 + 314] = sha3(address(_37061), address(_37089))
                                        mem[_38201 + 346] = stor4[cd[100]].field_512
                                        mem[_38201 + 261] = 85
                                        mem[_38201 + 378] = 0
                                        mem[64] = _38201 + 410
                                        mem[_38201 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38201 + 414] = _37252
                                        mem[_38201 + 446] = 0
                                        mem[_38201 + 478] = address(sha3(0, stor4[cd[100]].field_0, _38922, stor4[cd[100]].field_512))
                                        mem[_38201 + 510] = 128
                                        mem[_38201 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38201 + 574] = mem[s + _38201 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37061), address(_37089)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37061), address(_37089)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37252, 0, address(sha3(0, stor4[cd[100]].field_0, _38922, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37089):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38201 + 221] = address(_37089)
                                        mem[_38201 + 241] = address(_37061)
                                        mem[_38201 + 189] = 40
                                        mem[_38201 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38201 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38201 + 314] = sha3(address(_37089), address(_37061))
                                        mem[_38201 + 346] = stor4[cd[100]].field_512
                                        mem[_38201 + 261] = 85
                                        mem[_38201 + 378] = 0
                                        mem[64] = _38201 + 410
                                        mem[_38201 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38201 + 414] = _37252
                                        mem[_38201 + 446] = 0
                                        mem[_38201 + 478] = address(sha3(0, stor4[cd[100]].field_0, _38922, stor4[cd[100]].field_512))
                                        mem[_38201 + 510] = 128
                                        mem[_38201 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38201 + 574] = mem[s + _38201 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37089), address(_37061)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37089), address(_37061)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37252, 0, address(sha3(0, stor4[cd[100]].field_0, _38922, stor4[cd[100]].field_512)), 128, 0
                    else:
                        if not mem[(32 * idx + 1) + _27896 + 44 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        require idx + 1 < mem[s]
                        _37254 = mem[(32 * idx + 1) + s + 32]
                        if mem[(32 * idx) + _27896 + 44 len 20] == mem[(32 * idx + 1) + _27896 + 44 len 20]:
                            if idx >= mem[_27896] - 2:
                                mem[0] = cd[100]
                                mem[32] = 4
                                if address(_37061) == mem[(32 * idx + 1) + _27896 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_37061) < mem[(32 * idx + 1) + _27896 + 44 len 20]:
                                    if not address(_37061):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38206 = mem[64]
                                    mem[mem[64] + 32] = address(_37061)
                                    mem[mem[64] + 52] = address(_37089)
                                    _38940 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _38942 = sha3(mem[_38940 + 32 len mem[_38940]])
                                    mem[_38206 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38206 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38206 + 125] = _38942
                                    mem[_38206 + 157] = stor4[cd[100]].field_512
                                    mem[_38206 + 72] = 85
                                    mem[_38206 + 189] = 0
                                    mem[64] = _38206 + 221
                                    mem[_38206 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38206 + 225] = 0
                                    mem[_38206 + 257] = _37254
                                    mem[_38206 + 289] = msg.sender
                                    mem[_38206 + 321] = 128
                                    mem[_38206 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38206 + 385] = mem[s + _38206 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _38942, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _38942, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _37254, msg.sender, 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _27896 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38207 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27896 + 32])
                                    mem[mem[64] + 52] = address(_37061)
                                    _38944 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _38946 = sha3(mem[_38944 + 32 len mem[_38944]])
                                    mem[_38207 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38207 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38207 + 125] = _38946
                                    mem[_38207 + 157] = stor4[cd[100]].field_512
                                    mem[_38207 + 72] = 85
                                    mem[_38207 + 189] = 0
                                    mem[64] = _38207 + 221
                                    mem[_38207 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38207 + 225] = 0
                                    mem[_38207 + 257] = _37254
                                    mem[_38207 + 289] = msg.sender
                                    mem[_38207 + 321] = 128
                                    mem[_38207 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38207 + 385] = mem[s + _38207 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _38946, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _38946, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _37254, msg.sender, 128, 0
                            else:
                                require idx + 2 < mem[_27896]
                                _37446 = mem[(32 * idx + 2) + _27896 + 32]
                                mem[0] = cd[100]
                                mem[32] = 4
                                if mem[(32 * idx + 1) + _27896 + 44 len 20] == mem[(32 * idx + 2) + _27896 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx + 1) + _27896 + 44 len 20] < mem[(32 * idx + 2) + _27896 + 44 len 20]:
                                    if not mem[(32 * idx + 1) + _27896 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38204 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27896 + 32])
                                    mem[mem[64] + 52] = address(_37446)
                                    _38932 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _38934 = sha3(mem[_38932 + 32 len mem[_38932]])
                                    mem[_38204 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38204 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38204 + 125] = _38934
                                    mem[_38204 + 157] = stor4[cd[100]].field_512
                                    mem[_38204 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37061) == address(_37089):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37061) < address(_37089):
                                        if not address(_37061):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38204 + 221] = address(_37061)
                                        mem[_38204 + 241] = address(_37089)
                                        mem[_38204 + 189] = 40
                                        mem[_38204 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38204 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38204 + 314] = sha3(address(_37061), address(_37089))
                                        mem[_38204 + 346] = stor4[cd[100]].field_512
                                        mem[_38204 + 261] = 85
                                        mem[_38204 + 378] = 0
                                        mem[64] = _38204 + 410
                                        mem[_38204 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38204 + 414] = 0
                                        mem[_38204 + 446] = _37254
                                        mem[_38204 + 478] = address(sha3(0, stor4[cd[100]].field_0, _38934, stor4[cd[100]].field_512))
                                        mem[_38204 + 510] = 128
                                        mem[_38204 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38204 + 574] = mem[s + _38204 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37061), address(_37089)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37061), address(_37089)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37254, address(sha3(0, stor4[cd[100]].field_0, _38934, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37089):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38204 + 221] = address(_37089)
                                        mem[_38204 + 241] = address(_37061)
                                        mem[_38204 + 189] = 40
                                        mem[_38204 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38204 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38204 + 314] = sha3(address(_37089), address(_37061))
                                        mem[_38204 + 346] = stor4[cd[100]].field_512
                                        mem[_38204 + 261] = 85
                                        mem[_38204 + 378] = 0
                                        mem[64] = _38204 + 410
                                        mem[_38204 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38204 + 414] = 0
                                        mem[_38204 + 446] = _37254
                                        mem[_38204 + 478] = address(sha3(0, stor4[cd[100]].field_0, _38934, stor4[cd[100]].field_512))
                                        mem[_38204 + 510] = 128
                                        mem[_38204 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38204 + 574] = mem[s + _38204 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37089), address(_37061)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37089), address(_37061)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37254, address(sha3(0, stor4[cd[100]].field_0, _38934, stor4[cd[100]].field_512)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _27896 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38205 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _27896 + 32])
                                    mem[mem[64] + 52] = address(_37089)
                                    _38936 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _38938 = sha3(mem[_38936 + 32 len mem[_38936]])
                                    mem[_38205 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38205 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38205 + 125] = _38938
                                    mem[_38205 + 157] = stor4[cd[100]].field_512
                                    mem[_38205 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37061) == address(_37089):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37061) < address(_37089):
                                        if not address(_37061):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38205 + 221] = address(_37061)
                                        mem[_38205 + 241] = address(_37089)
                                        mem[_38205 + 189] = 40
                                        mem[_38205 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38205 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38205 + 314] = sha3(address(_37061), address(_37089))
                                        mem[_38205 + 346] = stor4[cd[100]].field_512
                                        mem[_38205 + 261] = 85
                                        mem[_38205 + 378] = 0
                                        mem[64] = _38205 + 410
                                        mem[_38205 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38205 + 414] = 0
                                        mem[_38205 + 446] = _37254
                                        mem[_38205 + 478] = address(sha3(0, stor4[cd[100]].field_0, _38938, stor4[cd[100]].field_512))
                                        mem[_38205 + 510] = 128
                                        mem[_38205 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38205 + 574] = mem[s + _38205 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37061), address(_37089)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37061), address(_37089)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37254, address(sha3(0, stor4[cd[100]].field_0, _38938, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37089):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38205 + 221] = address(_37089)
                                        mem[_38205 + 241] = address(_37061)
                                        mem[_38205 + 189] = 40
                                        mem[_38205 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38205 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38205 + 314] = sha3(address(_37089), address(_37061))
                                        mem[_38205 + 346] = stor4[cd[100]].field_512
                                        mem[_38205 + 261] = 85
                                        mem[_38205 + 378] = 0
                                        mem[64] = _38205 + 410
                                        mem[_38205 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38205 + 414] = 0
                                        mem[_38205 + 446] = _37254
                                        mem[_38205 + 478] = address(sha3(0, stor4[cd[100]].field_0, _38938, stor4[cd[100]].field_512))
                                        mem[_38205 + 510] = 128
                                        mem[_38205 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38205 + 574] = mem[s + _38205 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37089), address(_37061)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37089), address(_37061)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37254, address(sha3(0, stor4[cd[100]].field_0, _38938, stor4[cd[100]].field_512)), 128, 0
                        else:
                            if idx >= mem[_27896] - 2:
                                mem[0] = cd[100]
                                mem[32] = 4
                                if address(_37061) == mem[(32 * idx + 1) + _27896 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_37061) < mem[(32 * idx + 1) + _27896 + 44 len 20]:
                                    if not address(_37061):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38210 = mem[64]
                                    mem[mem[64] + 32] = address(_37061)
                                    mem[mem[64] + 52] = address(_37089)
                                    _38956 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _38958 = sha3(mem[_38956 + 32 len mem[_38956]])
                                    mem[_38210 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38210 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38210 + 125] = _38958
                                    mem[_38210 + 157] = stor4[cd[100]].field_512
                                    mem[_38210 + 72] = 85
                                    mem[_38210 + 189] = 0
                                    mem[64] = _38210 + 221
                                    mem[_38210 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38210 + 225] = _37254
                                    mem[_38210 + 257] = 0
                                    mem[_38210 + 289] = msg.sender
                                    mem[_38210 + 321] = 128
                                    mem[_38210 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38210 + 385] = mem[s + _38210 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _38958, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _38958, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _37254, 0, msg.sender, 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _27896 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38211 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27896 + 32])
                                    mem[mem[64] + 52] = address(_37061)
                                    _38960 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _38962 = sha3(mem[_38960 + 32 len mem[_38960]])
                                    mem[_38211 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38211 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38211 + 125] = _38962
                                    mem[_38211 + 157] = stor4[cd[100]].field_512
                                    mem[_38211 + 72] = 85
                                    mem[_38211 + 189] = 0
                                    mem[64] = _38211 + 221
                                    mem[_38211 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38211 + 225] = _37254
                                    mem[_38211 + 257] = 0
                                    mem[_38211 + 289] = msg.sender
                                    mem[_38211 + 321] = 128
                                    mem[_38211 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38211 + 385] = mem[s + _38211 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _38962, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _38962, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _37254, 0, msg.sender, 128, 0
                            else:
                                require idx + 2 < mem[_27896]
                                _37447 = mem[(32 * idx + 2) + _27896 + 32]
                                mem[0] = cd[100]
                                mem[32] = 4
                                if mem[(32 * idx + 1) + _27896 + 44 len 20] == mem[(32 * idx + 2) + _27896 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx + 1) + _27896 + 44 len 20] < mem[(32 * idx + 2) + _27896 + 44 len 20]:
                                    if not mem[(32 * idx + 1) + _27896 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38208 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27896 + 32])
                                    mem[mem[64] + 52] = address(_37447)
                                    _38948 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _38950 = sha3(mem[_38948 + 32 len mem[_38948]])
                                    mem[_38208 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38208 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38208 + 125] = _38950
                                    mem[_38208 + 157] = stor4[cd[100]].field_512
                                    mem[_38208 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37061) == address(_37089):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37061) < address(_37089):
                                        if not address(_37061):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38208 + 221] = address(_37061)
                                        mem[_38208 + 241] = address(_37089)
                                        mem[_38208 + 189] = 40
                                        mem[_38208 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38208 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38208 + 314] = sha3(address(_37061), address(_37089))
                                        mem[_38208 + 346] = stor4[cd[100]].field_512
                                        mem[_38208 + 261] = 85
                                        mem[_38208 + 378] = 0
                                        mem[64] = _38208 + 410
                                        mem[_38208 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38208 + 414] = _37254
                                        mem[_38208 + 446] = 0
                                        mem[_38208 + 478] = address(sha3(0, stor4[cd[100]].field_0, _38950, stor4[cd[100]].field_512))
                                        mem[_38208 + 510] = 128
                                        mem[_38208 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38208 + 574] = mem[s + _38208 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37061), address(_37089)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37061), address(_37089)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37254, 0, address(sha3(0, stor4[cd[100]].field_0, _38950, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37089):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38208 + 221] = address(_37089)
                                        mem[_38208 + 241] = address(_37061)
                                        mem[_38208 + 189] = 40
                                        mem[_38208 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38208 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38208 + 314] = sha3(address(_37089), address(_37061))
                                        mem[_38208 + 346] = stor4[cd[100]].field_512
                                        mem[_38208 + 261] = 85
                                        mem[_38208 + 378] = 0
                                        mem[64] = _38208 + 410
                                        mem[_38208 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38208 + 414] = _37254
                                        mem[_38208 + 446] = 0
                                        mem[_38208 + 478] = address(sha3(0, stor4[cd[100]].field_0, _38950, stor4[cd[100]].field_512))
                                        mem[_38208 + 510] = 128
                                        mem[_38208 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38208 + 574] = mem[s + _38208 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37089), address(_37061)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37089), address(_37061)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37254, 0, address(sha3(0, stor4[cd[100]].field_0, _38950, stor4[cd[100]].field_512)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _27896 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38209 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _27896 + 32])
                                    mem[mem[64] + 52] = address(_37089)
                                    _38952 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _38954 = sha3(mem[_38952 + 32 len mem[_38952]])
                                    mem[_38209 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38209 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38209 + 125] = _38954
                                    mem[_38209 + 157] = stor4[cd[100]].field_512
                                    mem[_38209 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37061) == address(_37089):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37061) < address(_37089):
                                        if not address(_37061):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38209 + 221] = address(_37061)
                                        mem[_38209 + 241] = address(_37089)
                                        mem[_38209 + 189] = 40
                                        mem[_38209 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38209 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38209 + 314] = sha3(address(_37061), address(_37089))
                                        mem[_38209 + 346] = stor4[cd[100]].field_512
                                        mem[_38209 + 261] = 85
                                        mem[_38209 + 378] = 0
                                        mem[64] = _38209 + 410
                                        mem[_38209 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38209 + 414] = _37254
                                        mem[_38209 + 446] = 0
                                        mem[_38209 + 478] = address(sha3(0, stor4[cd[100]].field_0, _38954, stor4[cd[100]].field_512))
                                        mem[_38209 + 510] = 128
                                        mem[_38209 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38209 + 574] = mem[s + _38209 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37061), address(_37089)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37061), address(_37089)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37254, 0, address(sha3(0, stor4[cd[100]].field_0, _38954, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37089):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38209 + 221] = address(_37089)
                                        mem[_38209 + 241] = address(_37061)
                                        mem[_38209 + 189] = 40
                                        mem[_38209 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38209 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38209 + 314] = sha3(address(_37089), address(_37061))
                                        mem[_38209 + 346] = stor4[cd[100]].field_512
                                        mem[_38209 + 261] = 85
                                        mem[_38209 + 378] = 0
                                        mem[64] = _38209 + 410
                                        mem[_38209 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38209 + 414] = _37254
                                        mem[_38209 + 446] = 0
                                        mem[_38209 + 478] = address(sha3(0, stor4[cd[100]].field_0, _38954, stor4[cd[100]].field_512))
                                        mem[_38209 + 510] = 128
                                        mem[_38209 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38209 + 574] = mem[s + _38209 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37089), address(_37061)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37089), address(_37061)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37254, 0, address(sha3(0, stor4[cd[100]].field_0, _38954, stor4[cd[100]].field_512)), 128, 0
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    continue 
            else:
                if not address(_28090):
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                mem[_18558 + 353] = address(_28090)
                mem[_18558 + 373] = address(_28074)
                mem[_18558 + 321] = 40
                mem[_18558 + 425] = 0xff00000000000000000000000000000000000000000000000000000000000000
                mem[_18558 + 426] = Mask(160, 96, stor4[cd[100]].field_0)
                mem[_18558 + 446] = sha3(address(_28090), address(_28074))
                mem[_18558 + 478] = stor4[cd[100]].field_512
                mem[_18558 + 393] = 85
                mem[64] = _18558 + 510
                require 0 < mem[s]
                _28310 = mem[s + 32]
                mem[_18558 + 514] = address(sha3(0, stor4[cd[100]].field_0, sha3(address(_28090), address(_28074)), stor4[cd[100]].field_512))
                mem[_18558 + 546] = _28310
                require ext_code.size(stor4[cd[100]].field_1024)
                call stor4[cd[100]].field_1024.0xa9059cbb with:
                     gas gas_remaining wei
                    args address(sha3(0, stor4[cd[100]].field_0, sha3(address(_28090), address(_28074)), stor4[cd[100]].field_512)), _28310
                mem[_18558 + 510] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = _18558 + ceil32(return_data.size) + 510
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                require ext_call.return_data[0]
                _37009 = mem[mem[128]]
                idx = 0
                while idx < _37009 - 1:
                    require idx < mem[_27896]
                    _37063 = mem[(32 * idx) + _27896 + 32]
                    require idx + 1 < mem[_27896]
                    _37090 = mem[(32 * idx + 1) + _27896 + 32]
                    if mem[(32 * idx) + _27896 + 44 len 20] == mem[(32 * idx + 1) + _27896 + 44 len 20]:
                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                    if mem[(32 * idx) + _27896 + 44 len 20] < mem[(32 * idx + 1) + _27896 + 44 len 20]:
                        if not mem[(32 * idx) + _27896 + 44 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        require idx + 1 < mem[s]
                        _37256 = mem[(32 * idx + 1) + s + 32]
                        if mem[(32 * idx) + _27896 + 44 len 20] == mem[(32 * idx) + _27896 + 44 len 20]:
                            if idx >= mem[_27896] - 2:
                                mem[0] = cd[100]
                                mem[32] = 4
                                if address(_37063) == mem[(32 * idx + 1) + _27896 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_37063) < mem[(32 * idx + 1) + _27896 + 44 len 20]:
                                    if not address(_37063):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38214 = mem[64]
                                    mem[mem[64] + 32] = address(_37063)
                                    mem[mem[64] + 52] = address(_37090)
                                    _38972 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _38974 = sha3(mem[_38972 + 32 len mem[_38972]])
                                    mem[_38214 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38214 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38214 + 125] = _38974
                                    mem[_38214 + 157] = stor4[cd[100]].field_512
                                    mem[_38214 + 72] = 85
                                    mem[_38214 + 189] = 0
                                    mem[64] = _38214 + 221
                                    mem[_38214 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38214 + 225] = 0
                                    mem[_38214 + 257] = _37256
                                    mem[_38214 + 289] = msg.sender
                                    mem[_38214 + 321] = 128
                                    mem[_38214 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38214 + 385] = mem[s + _38214 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _38974, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _38974, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _37256, msg.sender, 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _27896 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38215 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27896 + 32])
                                    mem[mem[64] + 52] = address(_37063)
                                    _38976 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _38978 = sha3(mem[_38976 + 32 len mem[_38976]])
                                    mem[_38215 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38215 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38215 + 125] = _38978
                                    mem[_38215 + 157] = stor4[cd[100]].field_512
                                    mem[_38215 + 72] = 85
                                    mem[_38215 + 189] = 0
                                    mem[64] = _38215 + 221
                                    mem[_38215 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38215 + 225] = 0
                                    mem[_38215 + 257] = _37256
                                    mem[_38215 + 289] = msg.sender
                                    mem[_38215 + 321] = 128
                                    mem[_38215 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38215 + 385] = mem[s + _38215 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _38978, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _38978, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _37256, msg.sender, 128, 0
                            else:
                                require idx + 2 < mem[_27896]
                                _37448 = mem[(32 * idx + 2) + _27896 + 32]
                                mem[0] = cd[100]
                                mem[32] = 4
                                if mem[(32 * idx + 1) + _27896 + 44 len 20] == mem[(32 * idx + 2) + _27896 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx + 1) + _27896 + 44 len 20] < mem[(32 * idx + 2) + _27896 + 44 len 20]:
                                    if not mem[(32 * idx + 1) + _27896 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38212 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27896 + 32])
                                    mem[mem[64] + 52] = address(_37448)
                                    _38964 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _38966 = sha3(mem[_38964 + 32 len mem[_38964]])
                                    mem[_38212 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38212 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38212 + 125] = _38966
                                    mem[_38212 + 157] = stor4[cd[100]].field_512
                                    mem[_38212 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37063) == address(_37090):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37063) < address(_37090):
                                        if not address(_37063):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38212 + 221] = address(_37063)
                                        mem[_38212 + 241] = address(_37090)
                                        mem[_38212 + 189] = 40
                                        mem[_38212 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38212 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38212 + 314] = sha3(address(_37063), address(_37090))
                                        mem[_38212 + 346] = stor4[cd[100]].field_512
                                        mem[_38212 + 261] = 85
                                        mem[_38212 + 378] = 0
                                        mem[64] = _38212 + 410
                                        mem[_38212 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38212 + 414] = 0
                                        mem[_38212 + 446] = _37256
                                        mem[_38212 + 478] = address(sha3(0, stor4[cd[100]].field_0, _38966, stor4[cd[100]].field_512))
                                        mem[_38212 + 510] = 128
                                        mem[_38212 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38212 + 574] = mem[s + _38212 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37063), address(_37090)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37063), address(_37090)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37256, address(sha3(0, stor4[cd[100]].field_0, _38966, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37090):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38212 + 221] = address(_37090)
                                        mem[_38212 + 241] = address(_37063)
                                        mem[_38212 + 189] = 40
                                        mem[_38212 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38212 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38212 + 314] = sha3(address(_37090), address(_37063))
                                        mem[_38212 + 346] = stor4[cd[100]].field_512
                                        mem[_38212 + 261] = 85
                                        mem[_38212 + 378] = 0
                                        mem[64] = _38212 + 410
                                        mem[_38212 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38212 + 414] = 0
                                        mem[_38212 + 446] = _37256
                                        mem[_38212 + 478] = address(sha3(0, stor4[cd[100]].field_0, _38966, stor4[cd[100]].field_512))
                                        mem[_38212 + 510] = 128
                                        mem[_38212 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38212 + 574] = mem[s + _38212 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37090), address(_37063)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37090), address(_37063)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37256, address(sha3(0, stor4[cd[100]].field_0, _38966, stor4[cd[100]].field_512)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _27896 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38213 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _27896 + 32])
                                    mem[mem[64] + 52] = address(_37090)
                                    _38968 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _38970 = sha3(mem[_38968 + 32 len mem[_38968]])
                                    mem[_38213 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38213 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38213 + 125] = _38970
                                    mem[_38213 + 157] = stor4[cd[100]].field_512
                                    mem[_38213 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37063) == address(_37090):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37063) < address(_37090):
                                        if not address(_37063):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38213 + 221] = address(_37063)
                                        mem[_38213 + 241] = address(_37090)
                                        mem[_38213 + 189] = 40
                                        mem[_38213 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38213 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38213 + 314] = sha3(address(_37063), address(_37090))
                                        mem[_38213 + 346] = stor4[cd[100]].field_512
                                        mem[_38213 + 261] = 85
                                        mem[_38213 + 378] = 0
                                        mem[64] = _38213 + 410
                                        mem[_38213 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38213 + 414] = 0
                                        mem[_38213 + 446] = _37256
                                        mem[_38213 + 478] = address(sha3(0, stor4[cd[100]].field_0, _38970, stor4[cd[100]].field_512))
                                        mem[_38213 + 510] = 128
                                        mem[_38213 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38213 + 574] = mem[s + _38213 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37063), address(_37090)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37063), address(_37090)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37256, address(sha3(0, stor4[cd[100]].field_0, _38970, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37090):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38213 + 221] = address(_37090)
                                        mem[_38213 + 241] = address(_37063)
                                        mem[_38213 + 189] = 40
                                        mem[_38213 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38213 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38213 + 314] = sha3(address(_37090), address(_37063))
                                        mem[_38213 + 346] = stor4[cd[100]].field_512
                                        mem[_38213 + 261] = 85
                                        mem[_38213 + 378] = 0
                                        mem[64] = _38213 + 410
                                        mem[_38213 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38213 + 414] = 0
                                        mem[_38213 + 446] = _37256
                                        mem[_38213 + 478] = address(sha3(0, stor4[cd[100]].field_0, _38970, stor4[cd[100]].field_512))
                                        mem[_38213 + 510] = 128
                                        mem[_38213 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38213 + 574] = mem[s + _38213 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37090), address(_37063)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37090), address(_37063)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37256, address(sha3(0, stor4[cd[100]].field_0, _38970, stor4[cd[100]].field_512)), 128, 0
                        else:
                            if idx >= mem[_27896] - 2:
                                mem[0] = cd[100]
                                mem[32] = 4
                                if address(_37063) == mem[(32 * idx + 1) + _27896 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_37063) < mem[(32 * idx + 1) + _27896 + 44 len 20]:
                                    if not address(_37063):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38218 = mem[64]
                                    mem[mem[64] + 32] = address(_37063)
                                    mem[mem[64] + 52] = address(_37090)
                                    _38988 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _38990 = sha3(mem[_38988 + 32 len mem[_38988]])
                                    mem[_38218 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38218 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38218 + 125] = _38990
                                    mem[_38218 + 157] = stor4[cd[100]].field_512
                                    mem[_38218 + 72] = 85
                                    mem[_38218 + 189] = 0
                                    mem[64] = _38218 + 221
                                    mem[_38218 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38218 + 225] = _37256
                                    mem[_38218 + 257] = 0
                                    mem[_38218 + 289] = msg.sender
                                    mem[_38218 + 321] = 128
                                    mem[_38218 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38218 + 385] = mem[s + _38218 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _38990, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _38990, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _37256, 0, msg.sender, 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _27896 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38219 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27896 + 32])
                                    mem[mem[64] + 52] = address(_37063)
                                    _38992 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _38994 = sha3(mem[_38992 + 32 len mem[_38992]])
                                    mem[_38219 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38219 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38219 + 125] = _38994
                                    mem[_38219 + 157] = stor4[cd[100]].field_512
                                    mem[_38219 + 72] = 85
                                    mem[_38219 + 189] = 0
                                    mem[64] = _38219 + 221
                                    mem[_38219 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38219 + 225] = _37256
                                    mem[_38219 + 257] = 0
                                    mem[_38219 + 289] = msg.sender
                                    mem[_38219 + 321] = 128
                                    mem[_38219 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38219 + 385] = mem[s + _38219 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _38994, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _38994, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _37256, 0, msg.sender, 128, 0
                            else:
                                require idx + 2 < mem[_27896]
                                _37449 = mem[(32 * idx + 2) + _27896 + 32]
                                mem[0] = cd[100]
                                mem[32] = 4
                                if mem[(32 * idx + 1) + _27896 + 44 len 20] == mem[(32 * idx + 2) + _27896 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx + 1) + _27896 + 44 len 20] < mem[(32 * idx + 2) + _27896 + 44 len 20]:
                                    if not mem[(32 * idx + 1) + _27896 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38216 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27896 + 32])
                                    mem[mem[64] + 52] = address(_37449)
                                    _38980 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _38982 = sha3(mem[_38980 + 32 len mem[_38980]])
                                    mem[_38216 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38216 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38216 + 125] = _38982
                                    mem[_38216 + 157] = stor4[cd[100]].field_512
                                    mem[_38216 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37063) == address(_37090):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37063) < address(_37090):
                                        if not address(_37063):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38216 + 221] = address(_37063)
                                        mem[_38216 + 241] = address(_37090)
                                        mem[_38216 + 189] = 40
                                        mem[_38216 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38216 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38216 + 314] = sha3(address(_37063), address(_37090))
                                        mem[_38216 + 346] = stor4[cd[100]].field_512
                                        mem[_38216 + 261] = 85
                                        mem[_38216 + 378] = 0
                                        mem[64] = _38216 + 410
                                        mem[_38216 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38216 + 414] = _37256
                                        mem[_38216 + 446] = 0
                                        mem[_38216 + 478] = address(sha3(0, stor4[cd[100]].field_0, _38982, stor4[cd[100]].field_512))
                                        mem[_38216 + 510] = 128
                                        mem[_38216 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38216 + 574] = mem[s + _38216 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37063), address(_37090)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37063), address(_37090)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37256, 0, address(sha3(0, stor4[cd[100]].field_0, _38982, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37090):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38216 + 221] = address(_37090)
                                        mem[_38216 + 241] = address(_37063)
                                        mem[_38216 + 189] = 40
                                        mem[_38216 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38216 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38216 + 314] = sha3(address(_37090), address(_37063))
                                        mem[_38216 + 346] = stor4[cd[100]].field_512
                                        mem[_38216 + 261] = 85
                                        mem[_38216 + 378] = 0
                                        mem[64] = _38216 + 410
                                        mem[_38216 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38216 + 414] = _37256
                                        mem[_38216 + 446] = 0
                                        mem[_38216 + 478] = address(sha3(0, stor4[cd[100]].field_0, _38982, stor4[cd[100]].field_512))
                                        mem[_38216 + 510] = 128
                                        mem[_38216 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38216 + 574] = mem[s + _38216 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37090), address(_37063)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37090), address(_37063)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37256, 0, address(sha3(0, stor4[cd[100]].field_0, _38982, stor4[cd[100]].field_512)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _27896 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38217 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _27896 + 32])
                                    mem[mem[64] + 52] = address(_37090)
                                    _38984 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _38986 = sha3(mem[_38984 + 32 len mem[_38984]])
                                    mem[_38217 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38217 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38217 + 125] = _38986
                                    mem[_38217 + 157] = stor4[cd[100]].field_512
                                    mem[_38217 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37063) == address(_37090):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37063) < address(_37090):
                                        if not address(_37063):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38217 + 221] = address(_37063)
                                        mem[_38217 + 241] = address(_37090)
                                        mem[_38217 + 189] = 40
                                        mem[_38217 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38217 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38217 + 314] = sha3(address(_37063), address(_37090))
                                        mem[_38217 + 346] = stor4[cd[100]].field_512
                                        mem[_38217 + 261] = 85
                                        mem[_38217 + 378] = 0
                                        mem[64] = _38217 + 410
                                        mem[_38217 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38217 + 414] = _37256
                                        mem[_38217 + 446] = 0
                                        mem[_38217 + 478] = address(sha3(0, stor4[cd[100]].field_0, _38986, stor4[cd[100]].field_512))
                                        mem[_38217 + 510] = 128
                                        mem[_38217 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38217 + 574] = mem[s + _38217 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37063), address(_37090)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37063), address(_37090)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37256, 0, address(sha3(0, stor4[cd[100]].field_0, _38986, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37090):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38217 + 221] = address(_37090)
                                        mem[_38217 + 241] = address(_37063)
                                        mem[_38217 + 189] = 40
                                        mem[_38217 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38217 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38217 + 314] = sha3(address(_37090), address(_37063))
                                        mem[_38217 + 346] = stor4[cd[100]].field_512
                                        mem[_38217 + 261] = 85
                                        mem[_38217 + 378] = 0
                                        mem[64] = _38217 + 410
                                        mem[_38217 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38217 + 414] = _37256
                                        mem[_38217 + 446] = 0
                                        mem[_38217 + 478] = address(sha3(0, stor4[cd[100]].field_0, _38986, stor4[cd[100]].field_512))
                                        mem[_38217 + 510] = 128
                                        mem[_38217 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38217 + 574] = mem[s + _38217 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37090), address(_37063)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37090), address(_37063)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37256, 0, address(sha3(0, stor4[cd[100]].field_0, _38986, stor4[cd[100]].field_512)), 128, 0
                    else:
                        if not mem[(32 * idx + 1) + _27896 + 44 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        require idx + 1 < mem[s]
                        _37258 = mem[(32 * idx + 1) + s + 32]
                        if mem[(32 * idx) + _27896 + 44 len 20] == mem[(32 * idx + 1) + _27896 + 44 len 20]:
                            if idx >= mem[_27896] - 2:
                                mem[0] = cd[100]
                                mem[32] = 4
                                if address(_37063) == mem[(32 * idx + 1) + _27896 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_37063) < mem[(32 * idx + 1) + _27896 + 44 len 20]:
                                    if not address(_37063):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38222 = mem[64]
                                    mem[mem[64] + 32] = address(_37063)
                                    mem[mem[64] + 52] = address(_37090)
                                    _39004 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39006 = sha3(mem[_39004 + 32 len mem[_39004]])
                                    mem[_38222 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38222 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38222 + 125] = _39006
                                    mem[_38222 + 157] = stor4[cd[100]].field_512
                                    mem[_38222 + 72] = 85
                                    mem[_38222 + 189] = 0
                                    mem[64] = _38222 + 221
                                    mem[_38222 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38222 + 225] = 0
                                    mem[_38222 + 257] = _37258
                                    mem[_38222 + 289] = msg.sender
                                    mem[_38222 + 321] = 128
                                    mem[_38222 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38222 + 385] = mem[s + _38222 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _39006, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _39006, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _37258, msg.sender, 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _27896 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38223 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27896 + 32])
                                    mem[mem[64] + 52] = address(_37063)
                                    _39008 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39010 = sha3(mem[_39008 + 32 len mem[_39008]])
                                    mem[_38223 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38223 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38223 + 125] = _39010
                                    mem[_38223 + 157] = stor4[cd[100]].field_512
                                    mem[_38223 + 72] = 85
                                    mem[_38223 + 189] = 0
                                    mem[64] = _38223 + 221
                                    mem[_38223 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38223 + 225] = 0
                                    mem[_38223 + 257] = _37258
                                    mem[_38223 + 289] = msg.sender
                                    mem[_38223 + 321] = 128
                                    mem[_38223 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38223 + 385] = mem[s + _38223 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _39010, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _39010, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _37258, msg.sender, 128, 0
                            else:
                                require idx + 2 < mem[_27896]
                                _37450 = mem[(32 * idx + 2) + _27896 + 32]
                                mem[0] = cd[100]
                                mem[32] = 4
                                if mem[(32 * idx + 1) + _27896 + 44 len 20] == mem[(32 * idx + 2) + _27896 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx + 1) + _27896 + 44 len 20] < mem[(32 * idx + 2) + _27896 + 44 len 20]:
                                    if not mem[(32 * idx + 1) + _27896 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38220 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27896 + 32])
                                    mem[mem[64] + 52] = address(_37450)
                                    _38996 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _38998 = sha3(mem[_38996 + 32 len mem[_38996]])
                                    mem[_38220 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38220 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38220 + 125] = _38998
                                    mem[_38220 + 157] = stor4[cd[100]].field_512
                                    mem[_38220 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37063) == address(_37090):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37063) < address(_37090):
                                        if not address(_37063):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38220 + 221] = address(_37063)
                                        mem[_38220 + 241] = address(_37090)
                                        mem[_38220 + 189] = 40
                                        mem[_38220 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38220 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38220 + 314] = sha3(address(_37063), address(_37090))
                                        mem[_38220 + 346] = stor4[cd[100]].field_512
                                        mem[_38220 + 261] = 85
                                        mem[_38220 + 378] = 0
                                        mem[64] = _38220 + 410
                                        mem[_38220 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38220 + 414] = 0
                                        mem[_38220 + 446] = _37258
                                        mem[_38220 + 478] = address(sha3(0, stor4[cd[100]].field_0, _38998, stor4[cd[100]].field_512))
                                        mem[_38220 + 510] = 128
                                        mem[_38220 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38220 + 574] = mem[s + _38220 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37063), address(_37090)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37063), address(_37090)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37258, address(sha3(0, stor4[cd[100]].field_0, _38998, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37090):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38220 + 221] = address(_37090)
                                        mem[_38220 + 241] = address(_37063)
                                        mem[_38220 + 189] = 40
                                        mem[_38220 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38220 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38220 + 314] = sha3(address(_37090), address(_37063))
                                        mem[_38220 + 346] = stor4[cd[100]].field_512
                                        mem[_38220 + 261] = 85
                                        mem[_38220 + 378] = 0
                                        mem[64] = _38220 + 410
                                        mem[_38220 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38220 + 414] = 0
                                        mem[_38220 + 446] = _37258
                                        mem[_38220 + 478] = address(sha3(0, stor4[cd[100]].field_0, _38998, stor4[cd[100]].field_512))
                                        mem[_38220 + 510] = 128
                                        mem[_38220 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38220 + 574] = mem[s + _38220 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37090), address(_37063)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37090), address(_37063)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37258, address(sha3(0, stor4[cd[100]].field_0, _38998, stor4[cd[100]].field_512)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _27896 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38221 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _27896 + 32])
                                    mem[mem[64] + 52] = address(_37090)
                                    _39000 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39002 = sha3(mem[_39000 + 32 len mem[_39000]])
                                    mem[_38221 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38221 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38221 + 125] = _39002
                                    mem[_38221 + 157] = stor4[cd[100]].field_512
                                    mem[_38221 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37063) == address(_37090):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37063) < address(_37090):
                                        if not address(_37063):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38221 + 221] = address(_37063)
                                        mem[_38221 + 241] = address(_37090)
                                        mem[_38221 + 189] = 40
                                        mem[_38221 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38221 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38221 + 314] = sha3(address(_37063), address(_37090))
                                        mem[_38221 + 346] = stor4[cd[100]].field_512
                                        mem[_38221 + 261] = 85
                                        mem[_38221 + 378] = 0
                                        mem[64] = _38221 + 410
                                        mem[_38221 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38221 + 414] = 0
                                        mem[_38221 + 446] = _37258
                                        mem[_38221 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39002, stor4[cd[100]].field_512))
                                        mem[_38221 + 510] = 128
                                        mem[_38221 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38221 + 574] = mem[s + _38221 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37063), address(_37090)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37063), address(_37090)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37258, address(sha3(0, stor4[cd[100]].field_0, _39002, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37090):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38221 + 221] = address(_37090)
                                        mem[_38221 + 241] = address(_37063)
                                        mem[_38221 + 189] = 40
                                        mem[_38221 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38221 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38221 + 314] = sha3(address(_37090), address(_37063))
                                        mem[_38221 + 346] = stor4[cd[100]].field_512
                                        mem[_38221 + 261] = 85
                                        mem[_38221 + 378] = 0
                                        mem[64] = _38221 + 410
                                        mem[_38221 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38221 + 414] = 0
                                        mem[_38221 + 446] = _37258
                                        mem[_38221 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39002, stor4[cd[100]].field_512))
                                        mem[_38221 + 510] = 128
                                        mem[_38221 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38221 + 574] = mem[s + _38221 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37090), address(_37063)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37090), address(_37063)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37258, address(sha3(0, stor4[cd[100]].field_0, _39002, stor4[cd[100]].field_512)), 128, 0
                        else:
                            if idx >= mem[_27896] - 2:
                                mem[0] = cd[100]
                                mem[32] = 4
                                if address(_37063) == mem[(32 * idx + 1) + _27896 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_37063) < mem[(32 * idx + 1) + _27896 + 44 len 20]:
                                    if not address(_37063):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38226 = mem[64]
                                    mem[mem[64] + 32] = address(_37063)
                                    mem[mem[64] + 52] = address(_37090)
                                    _39020 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39022 = sha3(mem[_39020 + 32 len mem[_39020]])
                                    mem[_38226 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38226 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38226 + 125] = _39022
                                    mem[_38226 + 157] = stor4[cd[100]].field_512
                                    mem[_38226 + 72] = 85
                                    mem[_38226 + 189] = 0
                                    mem[64] = _38226 + 221
                                    mem[_38226 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38226 + 225] = _37258
                                    mem[_38226 + 257] = 0
                                    mem[_38226 + 289] = msg.sender
                                    mem[_38226 + 321] = 128
                                    mem[_38226 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38226 + 385] = mem[s + _38226 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _39022, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _39022, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _37258, 0, msg.sender, 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _27896 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38227 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27896 + 32])
                                    mem[mem[64] + 52] = address(_37063)
                                    _39024 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39026 = sha3(mem[_39024 + 32 len mem[_39024]])
                                    mem[_38227 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38227 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38227 + 125] = _39026
                                    mem[_38227 + 157] = stor4[cd[100]].field_512
                                    mem[_38227 + 72] = 85
                                    mem[_38227 + 189] = 0
                                    mem[64] = _38227 + 221
                                    mem[_38227 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38227 + 225] = _37258
                                    mem[_38227 + 257] = 0
                                    mem[_38227 + 289] = msg.sender
                                    mem[_38227 + 321] = 128
                                    mem[_38227 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38227 + 385] = mem[s + _38227 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _39026, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _39026, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _37258, 0, msg.sender, 128, 0
                            else:
                                require idx + 2 < mem[_27896]
                                _37451 = mem[(32 * idx + 2) + _27896 + 32]
                                mem[0] = cd[100]
                                mem[32] = 4
                                if mem[(32 * idx + 1) + _27896 + 44 len 20] == mem[(32 * idx + 2) + _27896 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx + 1) + _27896 + 44 len 20] < mem[(32 * idx + 2) + _27896 + 44 len 20]:
                                    if not mem[(32 * idx + 1) + _27896 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38224 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27896 + 32])
                                    mem[mem[64] + 52] = address(_37451)
                                    _39012 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39014 = sha3(mem[_39012 + 32 len mem[_39012]])
                                    mem[_38224 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38224 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38224 + 125] = _39014
                                    mem[_38224 + 157] = stor4[cd[100]].field_512
                                    mem[_38224 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37063) == address(_37090):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37063) < address(_37090):
                                        if not address(_37063):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38224 + 221] = address(_37063)
                                        mem[_38224 + 241] = address(_37090)
                                        mem[_38224 + 189] = 40
                                        mem[_38224 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38224 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38224 + 314] = sha3(address(_37063), address(_37090))
                                        mem[_38224 + 346] = stor4[cd[100]].field_512
                                        mem[_38224 + 261] = 85
                                        mem[_38224 + 378] = 0
                                        mem[64] = _38224 + 410
                                        mem[_38224 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38224 + 414] = _37258
                                        mem[_38224 + 446] = 0
                                        mem[_38224 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39014, stor4[cd[100]].field_512))
                                        mem[_38224 + 510] = 128
                                        mem[_38224 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38224 + 574] = mem[s + _38224 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37063), address(_37090)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37063), address(_37090)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37258, 0, address(sha3(0, stor4[cd[100]].field_0, _39014, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37090):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38224 + 221] = address(_37090)
                                        mem[_38224 + 241] = address(_37063)
                                        mem[_38224 + 189] = 40
                                        mem[_38224 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38224 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38224 + 314] = sha3(address(_37090), address(_37063))
                                        mem[_38224 + 346] = stor4[cd[100]].field_512
                                        mem[_38224 + 261] = 85
                                        mem[_38224 + 378] = 0
                                        mem[64] = _38224 + 410
                                        mem[_38224 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38224 + 414] = _37258
                                        mem[_38224 + 446] = 0
                                        mem[_38224 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39014, stor4[cd[100]].field_512))
                                        mem[_38224 + 510] = 128
                                        mem[_38224 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38224 + 574] = mem[s + _38224 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37090), address(_37063)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37090), address(_37063)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37258, 0, address(sha3(0, stor4[cd[100]].field_0, _39014, stor4[cd[100]].field_512)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _27896 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38225 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _27896 + 32])
                                    mem[mem[64] + 52] = address(_37090)
                                    _39016 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39018 = sha3(mem[_39016 + 32 len mem[_39016]])
                                    mem[_38225 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38225 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38225 + 125] = _39018
                                    mem[_38225 + 157] = stor4[cd[100]].field_512
                                    mem[_38225 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37063) == address(_37090):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37063) < address(_37090):
                                        if not address(_37063):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38225 + 221] = address(_37063)
                                        mem[_38225 + 241] = address(_37090)
                                        mem[_38225 + 189] = 40
                                        mem[_38225 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38225 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38225 + 314] = sha3(address(_37063), address(_37090))
                                        mem[_38225 + 346] = stor4[cd[100]].field_512
                                        mem[_38225 + 261] = 85
                                        mem[_38225 + 378] = 0
                                        mem[64] = _38225 + 410
                                        mem[_38225 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38225 + 414] = _37258
                                        mem[_38225 + 446] = 0
                                        mem[_38225 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39018, stor4[cd[100]].field_512))
                                        mem[_38225 + 510] = 128
                                        mem[_38225 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38225 + 574] = mem[s + _38225 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37063), address(_37090)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37063), address(_37090)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37258, 0, address(sha3(0, stor4[cd[100]].field_0, _39018, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37090):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38225 + 221] = address(_37090)
                                        mem[_38225 + 241] = address(_37063)
                                        mem[_38225 + 189] = 40
                                        mem[_38225 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38225 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38225 + 314] = sha3(address(_37090), address(_37063))
                                        mem[_38225 + 346] = stor4[cd[100]].field_512
                                        mem[_38225 + 261] = 85
                                        mem[_38225 + 378] = 0
                                        mem[64] = _38225 + 410
                                        mem[_38225 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38225 + 414] = _37258
                                        mem[_38225 + 446] = 0
                                        mem[_38225 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39018, stor4[cd[100]].field_512))
                                        mem[_38225 + 510] = 128
                                        mem[_38225 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38225 + 574] = mem[s + _38225 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37090), address(_37063)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37090), address(_37063)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37258, 0, address(sha3(0, stor4[cd[100]].field_0, _39018, stor4[cd[100]].field_512)), 128, 0
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    continue 
        else:
            mem[64] = _18558 + ceil32(return_data.size) + 322
            mem[_18558 + 321] = return_data.size
            mem[_18558 + 353 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if 0 == return_data.size:
                revert with 0, 'minPoolETH..', 0
            require return_data.size >= 32
            if mem[_18558 + 353 len 4], 0 <= cd[36]:
                revert with 0, 'minPoolETH..', 0
            require 0 < mem[96]
            _27898 = mem[128]
            mem[0] = cd[100]
            mem[32] = 4
            require mem[mem[128]]
            if mem[mem[128] + 44 len 20] != stor4[cd[100]].field_1024:
                revert with 0, 'SuperRouter: INVALID_PATH'
            require mem[s] - 1 < mem[s]
            if mem[(32 * mem[s] - 1) + s + 32] < 1:
                revert with 0, 'SuperRouter: INSUFFICIENT_OUTPUT_AMOUNT'
            require 0 < mem[s]
            _28022 = mem[s + 32]
            mem[_18558 + ceil32(return_data.size) + 322] = 0xd0e30db000000000000000000000000000000000000000000000000000000000
            require ext_code.size(stor4[cd[100]].field_1024)
            call stor4[cd[100]].field_1024.deposit() with:
               value _28022 wei
                 gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require 0 < mem[mem[128]]
            _28076 = mem[mem[128] + 32]
            require 1 < mem[mem[128]]
            _28091 = mem[mem[128] + 64]
            mem[0] = cd[100]
            mem[32] = 4
            if address(_28076) == address(_28091):
                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
            if address(_28076) < address(_28091):
                if not address(_28076):
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                mem[_18558 + ceil32(return_data.size) + 354] = address(_28076)
                mem[_18558 + ceil32(return_data.size) + 374] = address(_28091)
                mem[_18558 + ceil32(return_data.size) + 322] = 40
                mem[_18558 + ceil32(return_data.size) + 426] = 0xff00000000000000000000000000000000000000000000000000000000000000
                mem[_18558 + ceil32(return_data.size) + 427] = Mask(160, 96, stor4[cd[100]].field_0)
                mem[_18558 + ceil32(return_data.size) + 447] = sha3(address(_28076), address(_28091))
                mem[_18558 + ceil32(return_data.size) + 479] = stor4[cd[100]].field_512
                mem[_18558 + ceil32(return_data.size) + 394] = 85
                mem[64] = _18558 + ceil32(return_data.size) + 511
                require 0 < mem[s]
                _28312 = mem[s + 32]
                mem[_18558 + ceil32(return_data.size) + 515] = address(sha3(0, stor4[cd[100]].field_0, sha3(address(_28076), address(_28091)), stor4[cd[100]].field_512))
                mem[_18558 + ceil32(return_data.size) + 547] = _28312
                require ext_code.size(stor4[cd[100]].field_1024)
                call stor4[cd[100]].field_1024.0xa9059cbb with:
                     gas gas_remaining wei
                    args address(sha3(0, stor4[cd[100]].field_0, sha3(address(_28076), address(_28091)), stor4[cd[100]].field_512)), _28312
                mem[_18558 + ceil32(return_data.size) + 511] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = _18558 + ceil32(return_data.size) + ceil32(return_data.size) + 511
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                require ext_call.return_data[0]
                _37010 = mem[mem[128]]
                idx = 0
                while idx < _37010 - 1:
                    require idx < mem[_27898]
                    _37065 = mem[(32 * idx) + _27898 + 32]
                    require idx + 1 < mem[_27898]
                    _37091 = mem[(32 * idx + 1) + _27898 + 32]
                    if mem[(32 * idx) + _27898 + 44 len 20] == mem[(32 * idx + 1) + _27898 + 44 len 20]:
                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                    if mem[(32 * idx) + _27898 + 44 len 20] < mem[(32 * idx + 1) + _27898 + 44 len 20]:
                        if not mem[(32 * idx) + _27898 + 44 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        require idx + 1 < mem[s]
                        _37260 = mem[(32 * idx + 1) + s + 32]
                        if mem[(32 * idx) + _27898 + 44 len 20] == mem[(32 * idx) + _27898 + 44 len 20]:
                            if idx >= mem[_27898] - 2:
                                mem[0] = cd[100]
                                mem[32] = 4
                                if address(_37065) == mem[(32 * idx + 1) + _27898 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_37065) < mem[(32 * idx + 1) + _27898 + 44 len 20]:
                                    if not address(_37065):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38230 = mem[64]
                                    mem[mem[64] + 32] = address(_37065)
                                    mem[mem[64] + 52] = address(_37091)
                                    _39036 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39038 = sha3(mem[_39036 + 32 len mem[_39036]])
                                    mem[_38230 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38230 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38230 + 125] = _39038
                                    mem[_38230 + 157] = stor4[cd[100]].field_512
                                    mem[_38230 + 72] = 85
                                    mem[_38230 + 189] = 0
                                    mem[64] = _38230 + 221
                                    mem[_38230 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38230 + 225] = 0
                                    mem[_38230 + 257] = _37260
                                    mem[_38230 + 289] = msg.sender
                                    mem[_38230 + 321] = 128
                                    mem[_38230 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38230 + 385] = mem[s + _38230 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _39038, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _39038, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _37260, msg.sender, 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _27898 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38231 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27898 + 32])
                                    mem[mem[64] + 52] = address(_37065)
                                    _39040 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39042 = sha3(mem[_39040 + 32 len mem[_39040]])
                                    mem[_38231 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38231 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38231 + 125] = _39042
                                    mem[_38231 + 157] = stor4[cd[100]].field_512
                                    mem[_38231 + 72] = 85
                                    mem[_38231 + 189] = 0
                                    mem[64] = _38231 + 221
                                    mem[_38231 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38231 + 225] = 0
                                    mem[_38231 + 257] = _37260
                                    mem[_38231 + 289] = msg.sender
                                    mem[_38231 + 321] = 128
                                    mem[_38231 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38231 + 385] = mem[s + _38231 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _39042, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _39042, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _37260, msg.sender, 128, 0
                            else:
                                require idx + 2 < mem[_27898]
                                _37452 = mem[(32 * idx + 2) + _27898 + 32]
                                mem[0] = cd[100]
                                mem[32] = 4
                                if mem[(32 * idx + 1) + _27898 + 44 len 20] == mem[(32 * idx + 2) + _27898 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx + 1) + _27898 + 44 len 20] < mem[(32 * idx + 2) + _27898 + 44 len 20]:
                                    if not mem[(32 * idx + 1) + _27898 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38228 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27898 + 32])
                                    mem[mem[64] + 52] = address(_37452)
                                    _39028 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39030 = sha3(mem[_39028 + 32 len mem[_39028]])
                                    mem[_38228 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38228 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38228 + 125] = _39030
                                    mem[_38228 + 157] = stor4[cd[100]].field_512
                                    mem[_38228 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37065) == address(_37091):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37065) < address(_37091):
                                        if not address(_37065):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38228 + 221] = address(_37065)
                                        mem[_38228 + 241] = address(_37091)
                                        mem[_38228 + 189] = 40
                                        mem[_38228 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38228 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38228 + 314] = sha3(address(_37065), address(_37091))
                                        mem[_38228 + 346] = stor4[cd[100]].field_512
                                        mem[_38228 + 261] = 85
                                        mem[_38228 + 378] = 0
                                        mem[64] = _38228 + 410
                                        mem[_38228 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38228 + 414] = 0
                                        mem[_38228 + 446] = _37260
                                        mem[_38228 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39030, stor4[cd[100]].field_512))
                                        mem[_38228 + 510] = 128
                                        mem[_38228 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38228 + 574] = mem[s + _38228 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37065), address(_37091)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37065), address(_37091)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37260, address(sha3(0, stor4[cd[100]].field_0, _39030, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37091):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38228 + 221] = address(_37091)
                                        mem[_38228 + 241] = address(_37065)
                                        mem[_38228 + 189] = 40
                                        mem[_38228 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38228 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38228 + 314] = sha3(address(_37091), address(_37065))
                                        mem[_38228 + 346] = stor4[cd[100]].field_512
                                        mem[_38228 + 261] = 85
                                        mem[_38228 + 378] = 0
                                        mem[64] = _38228 + 410
                                        mem[_38228 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38228 + 414] = 0
                                        mem[_38228 + 446] = _37260
                                        mem[_38228 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39030, stor4[cd[100]].field_512))
                                        mem[_38228 + 510] = 128
                                        mem[_38228 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38228 + 574] = mem[s + _38228 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37091), address(_37065)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37091), address(_37065)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37260, address(sha3(0, stor4[cd[100]].field_0, _39030, stor4[cd[100]].field_512)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _27898 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38229 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _27898 + 32])
                                    mem[mem[64] + 52] = address(_37091)
                                    _39032 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39034 = sha3(mem[_39032 + 32 len mem[_39032]])
                                    mem[_38229 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38229 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38229 + 125] = _39034
                                    mem[_38229 + 157] = stor4[cd[100]].field_512
                                    mem[_38229 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37065) == address(_37091):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37065) < address(_37091):
                                        if not address(_37065):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38229 + 221] = address(_37065)
                                        mem[_38229 + 241] = address(_37091)
                                        mem[_38229 + 189] = 40
                                        mem[_38229 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38229 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38229 + 314] = sha3(address(_37065), address(_37091))
                                        mem[_38229 + 346] = stor4[cd[100]].field_512
                                        mem[_38229 + 261] = 85
                                        mem[_38229 + 378] = 0
                                        mem[64] = _38229 + 410
                                        mem[_38229 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38229 + 414] = 0
                                        mem[_38229 + 446] = _37260
                                        mem[_38229 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39034, stor4[cd[100]].field_512))
                                        mem[_38229 + 510] = 128
                                        mem[_38229 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38229 + 574] = mem[s + _38229 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37065), address(_37091)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37065), address(_37091)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37260, address(sha3(0, stor4[cd[100]].field_0, _39034, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37091):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38229 + 221] = address(_37091)
                                        mem[_38229 + 241] = address(_37065)
                                        mem[_38229 + 189] = 40
                                        mem[_38229 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38229 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38229 + 314] = sha3(address(_37091), address(_37065))
                                        mem[_38229 + 346] = stor4[cd[100]].field_512
                                        mem[_38229 + 261] = 85
                                        mem[_38229 + 378] = 0
                                        mem[64] = _38229 + 410
                                        mem[_38229 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38229 + 414] = 0
                                        mem[_38229 + 446] = _37260
                                        mem[_38229 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39034, stor4[cd[100]].field_512))
                                        mem[_38229 + 510] = 128
                                        mem[_38229 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38229 + 574] = mem[s + _38229 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37091), address(_37065)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37091), address(_37065)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37260, address(sha3(0, stor4[cd[100]].field_0, _39034, stor4[cd[100]].field_512)), 128, 0
                        else:
                            if idx >= mem[_27898] - 2:
                                mem[0] = cd[100]
                                mem[32] = 4
                                if address(_37065) == mem[(32 * idx + 1) + _27898 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_37065) < mem[(32 * idx + 1) + _27898 + 44 len 20]:
                                    if not address(_37065):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38234 = mem[64]
                                    mem[mem[64] + 32] = address(_37065)
                                    mem[mem[64] + 52] = address(_37091)
                                    _39052 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39054 = sha3(mem[_39052 + 32 len mem[_39052]])
                                    mem[_38234 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38234 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38234 + 125] = _39054
                                    mem[_38234 + 157] = stor4[cd[100]].field_512
                                    mem[_38234 + 72] = 85
                                    mem[_38234 + 189] = 0
                                    mem[64] = _38234 + 221
                                    mem[_38234 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38234 + 225] = _37260
                                    mem[_38234 + 257] = 0
                                    mem[_38234 + 289] = msg.sender
                                    mem[_38234 + 321] = 128
                                    mem[_38234 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38234 + 385] = mem[s + _38234 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _39054, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _39054, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _37260, 0, msg.sender, 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _27898 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38235 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27898 + 32])
                                    mem[mem[64] + 52] = address(_37065)
                                    _39056 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39058 = sha3(mem[_39056 + 32 len mem[_39056]])
                                    mem[_38235 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38235 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38235 + 125] = _39058
                                    mem[_38235 + 157] = stor4[cd[100]].field_512
                                    mem[_38235 + 72] = 85
                                    mem[_38235 + 189] = 0
                                    mem[64] = _38235 + 221
                                    mem[_38235 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38235 + 225] = _37260
                                    mem[_38235 + 257] = 0
                                    mem[_38235 + 289] = msg.sender
                                    mem[_38235 + 321] = 128
                                    mem[_38235 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38235 + 385] = mem[s + _38235 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _39058, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _39058, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _37260, 0, msg.sender, 128, 0
                            else:
                                require idx + 2 < mem[_27898]
                                _37453 = mem[(32 * idx + 2) + _27898 + 32]
                                mem[0] = cd[100]
                                mem[32] = 4
                                if mem[(32 * idx + 1) + _27898 + 44 len 20] == mem[(32 * idx + 2) + _27898 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx + 1) + _27898 + 44 len 20] < mem[(32 * idx + 2) + _27898 + 44 len 20]:
                                    if not mem[(32 * idx + 1) + _27898 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38232 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27898 + 32])
                                    mem[mem[64] + 52] = address(_37453)
                                    _39044 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39046 = sha3(mem[_39044 + 32 len mem[_39044]])
                                    mem[_38232 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38232 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38232 + 125] = _39046
                                    mem[_38232 + 157] = stor4[cd[100]].field_512
                                    mem[_38232 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37065) == address(_37091):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37065) < address(_37091):
                                        if not address(_37065):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38232 + 221] = address(_37065)
                                        mem[_38232 + 241] = address(_37091)
                                        mem[_38232 + 189] = 40
                                        mem[_38232 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38232 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38232 + 314] = sha3(address(_37065), address(_37091))
                                        mem[_38232 + 346] = stor4[cd[100]].field_512
                                        mem[_38232 + 261] = 85
                                        mem[_38232 + 378] = 0
                                        mem[64] = _38232 + 410
                                        mem[_38232 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38232 + 414] = _37260
                                        mem[_38232 + 446] = 0
                                        mem[_38232 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39046, stor4[cd[100]].field_512))
                                        mem[_38232 + 510] = 128
                                        mem[_38232 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38232 + 574] = mem[s + _38232 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37065), address(_37091)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37065), address(_37091)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37260, 0, address(sha3(0, stor4[cd[100]].field_0, _39046, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37091):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38232 + 221] = address(_37091)
                                        mem[_38232 + 241] = address(_37065)
                                        mem[_38232 + 189] = 40
                                        mem[_38232 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38232 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38232 + 314] = sha3(address(_37091), address(_37065))
                                        mem[_38232 + 346] = stor4[cd[100]].field_512
                                        mem[_38232 + 261] = 85
                                        mem[_38232 + 378] = 0
                                        mem[64] = _38232 + 410
                                        mem[_38232 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38232 + 414] = _37260
                                        mem[_38232 + 446] = 0
                                        mem[_38232 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39046, stor4[cd[100]].field_512))
                                        mem[_38232 + 510] = 128
                                        mem[_38232 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38232 + 574] = mem[s + _38232 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37091), address(_37065)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37091), address(_37065)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37260, 0, address(sha3(0, stor4[cd[100]].field_0, _39046, stor4[cd[100]].field_512)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _27898 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38233 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _27898 + 32])
                                    mem[mem[64] + 52] = address(_37091)
                                    _39048 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39050 = sha3(mem[_39048 + 32 len mem[_39048]])
                                    mem[_38233 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38233 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38233 + 125] = _39050
                                    mem[_38233 + 157] = stor4[cd[100]].field_512
                                    mem[_38233 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37065) == address(_37091):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37065) < address(_37091):
                                        if not address(_37065):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38233 + 221] = address(_37065)
                                        mem[_38233 + 241] = address(_37091)
                                        mem[_38233 + 189] = 40
                                        mem[_38233 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38233 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38233 + 314] = sha3(address(_37065), address(_37091))
                                        mem[_38233 + 346] = stor4[cd[100]].field_512
                                        mem[_38233 + 261] = 85
                                        mem[_38233 + 378] = 0
                                        mem[64] = _38233 + 410
                                        mem[_38233 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38233 + 414] = _37260
                                        mem[_38233 + 446] = 0
                                        mem[_38233 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39050, stor4[cd[100]].field_512))
                                        mem[_38233 + 510] = 128
                                        mem[_38233 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38233 + 574] = mem[s + _38233 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37065), address(_37091)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37065), address(_37091)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37260, 0, address(sha3(0, stor4[cd[100]].field_0, _39050, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37091):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38233 + 221] = address(_37091)
                                        mem[_38233 + 241] = address(_37065)
                                        mem[_38233 + 189] = 40
                                        mem[_38233 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38233 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38233 + 314] = sha3(address(_37091), address(_37065))
                                        mem[_38233 + 346] = stor4[cd[100]].field_512
                                        mem[_38233 + 261] = 85
                                        mem[_38233 + 378] = 0
                                        mem[64] = _38233 + 410
                                        mem[_38233 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38233 + 414] = _37260
                                        mem[_38233 + 446] = 0
                                        mem[_38233 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39050, stor4[cd[100]].field_512))
                                        mem[_38233 + 510] = 128
                                        mem[_38233 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38233 + 574] = mem[s + _38233 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37091), address(_37065)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37091), address(_37065)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37260, 0, address(sha3(0, stor4[cd[100]].field_0, _39050, stor4[cd[100]].field_512)), 128, 0
                    else:
                        if not mem[(32 * idx + 1) + _27898 + 44 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        require idx + 1 < mem[s]
                        _37262 = mem[(32 * idx + 1) + s + 32]
                        if mem[(32 * idx) + _27898 + 44 len 20] == mem[(32 * idx + 1) + _27898 + 44 len 20]:
                            if idx >= mem[_27898] - 2:
                                mem[0] = cd[100]
                                mem[32] = 4
                                if address(_37065) == mem[(32 * idx + 1) + _27898 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_37065) < mem[(32 * idx + 1) + _27898 + 44 len 20]:
                                    if not address(_37065):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38238 = mem[64]
                                    mem[mem[64] + 32] = address(_37065)
                                    mem[mem[64] + 52] = address(_37091)
                                    _39068 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39070 = sha3(mem[_39068 + 32 len mem[_39068]])
                                    mem[_38238 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38238 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38238 + 125] = _39070
                                    mem[_38238 + 157] = stor4[cd[100]].field_512
                                    mem[_38238 + 72] = 85
                                    mem[_38238 + 189] = 0
                                    mem[64] = _38238 + 221
                                    mem[_38238 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38238 + 225] = 0
                                    mem[_38238 + 257] = _37262
                                    mem[_38238 + 289] = msg.sender
                                    mem[_38238 + 321] = 128
                                    mem[_38238 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38238 + 385] = mem[s + _38238 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _39070, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _39070, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _37262, msg.sender, 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _27898 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38239 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27898 + 32])
                                    mem[mem[64] + 52] = address(_37065)
                                    _39072 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39074 = sha3(mem[_39072 + 32 len mem[_39072]])
                                    mem[_38239 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38239 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38239 + 125] = _39074
                                    mem[_38239 + 157] = stor4[cd[100]].field_512
                                    mem[_38239 + 72] = 85
                                    mem[_38239 + 189] = 0
                                    mem[64] = _38239 + 221
                                    mem[_38239 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38239 + 225] = 0
                                    mem[_38239 + 257] = _37262
                                    mem[_38239 + 289] = msg.sender
                                    mem[_38239 + 321] = 128
                                    mem[_38239 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38239 + 385] = mem[s + _38239 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _39074, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _39074, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _37262, msg.sender, 128, 0
                            else:
                                require idx + 2 < mem[_27898]
                                _37454 = mem[(32 * idx + 2) + _27898 + 32]
                                mem[0] = cd[100]
                                mem[32] = 4
                                if mem[(32 * idx + 1) + _27898 + 44 len 20] == mem[(32 * idx + 2) + _27898 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx + 1) + _27898 + 44 len 20] < mem[(32 * idx + 2) + _27898 + 44 len 20]:
                                    if not mem[(32 * idx + 1) + _27898 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38236 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27898 + 32])
                                    mem[mem[64] + 52] = address(_37454)
                                    _39060 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39062 = sha3(mem[_39060 + 32 len mem[_39060]])
                                    mem[_38236 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38236 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38236 + 125] = _39062
                                    mem[_38236 + 157] = stor4[cd[100]].field_512
                                    mem[_38236 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37065) == address(_37091):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37065) < address(_37091):
                                        if not address(_37065):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38236 + 221] = address(_37065)
                                        mem[_38236 + 241] = address(_37091)
                                        mem[_38236 + 189] = 40
                                        mem[_38236 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38236 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38236 + 314] = sha3(address(_37065), address(_37091))
                                        mem[_38236 + 346] = stor4[cd[100]].field_512
                                        mem[_38236 + 261] = 85
                                        mem[_38236 + 378] = 0
                                        mem[64] = _38236 + 410
                                        mem[_38236 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38236 + 414] = 0
                                        mem[_38236 + 446] = _37262
                                        mem[_38236 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39062, stor4[cd[100]].field_512))
                                        mem[_38236 + 510] = 128
                                        mem[_38236 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38236 + 574] = mem[s + _38236 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37065), address(_37091)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37065), address(_37091)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37262, address(sha3(0, stor4[cd[100]].field_0, _39062, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37091):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38236 + 221] = address(_37091)
                                        mem[_38236 + 241] = address(_37065)
                                        mem[_38236 + 189] = 40
                                        mem[_38236 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38236 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38236 + 314] = sha3(address(_37091), address(_37065))
                                        mem[_38236 + 346] = stor4[cd[100]].field_512
                                        mem[_38236 + 261] = 85
                                        mem[_38236 + 378] = 0
                                        mem[64] = _38236 + 410
                                        mem[_38236 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38236 + 414] = 0
                                        mem[_38236 + 446] = _37262
                                        mem[_38236 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39062, stor4[cd[100]].field_512))
                                        mem[_38236 + 510] = 128
                                        mem[_38236 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38236 + 574] = mem[s + _38236 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37091), address(_37065)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37091), address(_37065)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37262, address(sha3(0, stor4[cd[100]].field_0, _39062, stor4[cd[100]].field_512)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _27898 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38237 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _27898 + 32])
                                    mem[mem[64] + 52] = address(_37091)
                                    _39064 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39066 = sha3(mem[_39064 + 32 len mem[_39064]])
                                    mem[_38237 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38237 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38237 + 125] = _39066
                                    mem[_38237 + 157] = stor4[cd[100]].field_512
                                    mem[_38237 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37065) == address(_37091):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37065) < address(_37091):
                                        if not address(_37065):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38237 + 221] = address(_37065)
                                        mem[_38237 + 241] = address(_37091)
                                        mem[_38237 + 189] = 40
                                        mem[_38237 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38237 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38237 + 314] = sha3(address(_37065), address(_37091))
                                        mem[_38237 + 346] = stor4[cd[100]].field_512
                                        mem[_38237 + 261] = 85
                                        mem[_38237 + 378] = 0
                                        mem[64] = _38237 + 410
                                        mem[_38237 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38237 + 414] = 0
                                        mem[_38237 + 446] = _37262
                                        mem[_38237 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39066, stor4[cd[100]].field_512))
                                        mem[_38237 + 510] = 128
                                        mem[_38237 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38237 + 574] = mem[s + _38237 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37065), address(_37091)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37065), address(_37091)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37262, address(sha3(0, stor4[cd[100]].field_0, _39066, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37091):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38237 + 221] = address(_37091)
                                        mem[_38237 + 241] = address(_37065)
                                        mem[_38237 + 189] = 40
                                        mem[_38237 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38237 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38237 + 314] = sha3(address(_37091), address(_37065))
                                        mem[_38237 + 346] = stor4[cd[100]].field_512
                                        mem[_38237 + 261] = 85
                                        mem[_38237 + 378] = 0
                                        mem[64] = _38237 + 410
                                        mem[_38237 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38237 + 414] = 0
                                        mem[_38237 + 446] = _37262
                                        mem[_38237 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39066, stor4[cd[100]].field_512))
                                        mem[_38237 + 510] = 128
                                        mem[_38237 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38237 + 574] = mem[s + _38237 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37091), address(_37065)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37091), address(_37065)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37262, address(sha3(0, stor4[cd[100]].field_0, _39066, stor4[cd[100]].field_512)), 128, 0
                        else:
                            if idx >= mem[_27898] - 2:
                                mem[0] = cd[100]
                                mem[32] = 4
                                if address(_37065) == mem[(32 * idx + 1) + _27898 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_37065) < mem[(32 * idx + 1) + _27898 + 44 len 20]:
                                    if not address(_37065):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38242 = mem[64]
                                    mem[mem[64] + 32] = address(_37065)
                                    mem[mem[64] + 52] = address(_37091)
                                    _39084 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39086 = sha3(mem[_39084 + 32 len mem[_39084]])
                                    mem[_38242 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38242 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38242 + 125] = _39086
                                    mem[_38242 + 157] = stor4[cd[100]].field_512
                                    mem[_38242 + 72] = 85
                                    mem[_38242 + 189] = 0
                                    mem[64] = _38242 + 221
                                    mem[_38242 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38242 + 225] = _37262
                                    mem[_38242 + 257] = 0
                                    mem[_38242 + 289] = msg.sender
                                    mem[_38242 + 321] = 128
                                    mem[_38242 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38242 + 385] = mem[s + _38242 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _39086, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _39086, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _37262, 0, msg.sender, 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _27898 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38243 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27898 + 32])
                                    mem[mem[64] + 52] = address(_37065)
                                    _39088 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39090 = sha3(mem[_39088 + 32 len mem[_39088]])
                                    mem[_38243 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38243 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38243 + 125] = _39090
                                    mem[_38243 + 157] = stor4[cd[100]].field_512
                                    mem[_38243 + 72] = 85
                                    mem[_38243 + 189] = 0
                                    mem[64] = _38243 + 221
                                    mem[_38243 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38243 + 225] = _37262
                                    mem[_38243 + 257] = 0
                                    mem[_38243 + 289] = msg.sender
                                    mem[_38243 + 321] = 128
                                    mem[_38243 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38243 + 385] = mem[s + _38243 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _39090, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _39090, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _37262, 0, msg.sender, 128, 0
                            else:
                                require idx + 2 < mem[_27898]
                                _37455 = mem[(32 * idx + 2) + _27898 + 32]
                                mem[0] = cd[100]
                                mem[32] = 4
                                if mem[(32 * idx + 1) + _27898 + 44 len 20] == mem[(32 * idx + 2) + _27898 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx + 1) + _27898 + 44 len 20] < mem[(32 * idx + 2) + _27898 + 44 len 20]:
                                    if not mem[(32 * idx + 1) + _27898 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38240 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27898 + 32])
                                    mem[mem[64] + 52] = address(_37455)
                                    _39076 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39078 = sha3(mem[_39076 + 32 len mem[_39076]])
                                    mem[_38240 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38240 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38240 + 125] = _39078
                                    mem[_38240 + 157] = stor4[cd[100]].field_512
                                    mem[_38240 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37065) == address(_37091):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37065) < address(_37091):
                                        if not address(_37065):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38240 + 221] = address(_37065)
                                        mem[_38240 + 241] = address(_37091)
                                        mem[_38240 + 189] = 40
                                        mem[_38240 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38240 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38240 + 314] = sha3(address(_37065), address(_37091))
                                        mem[_38240 + 346] = stor4[cd[100]].field_512
                                        mem[_38240 + 261] = 85
                                        mem[_38240 + 378] = 0
                                        mem[64] = _38240 + 410
                                        mem[_38240 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38240 + 414] = _37262
                                        mem[_38240 + 446] = 0
                                        mem[_38240 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39078, stor4[cd[100]].field_512))
                                        mem[_38240 + 510] = 128
                                        mem[_38240 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38240 + 574] = mem[s + _38240 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37065), address(_37091)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37065), address(_37091)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37262, 0, address(sha3(0, stor4[cd[100]].field_0, _39078, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37091):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38240 + 221] = address(_37091)
                                        mem[_38240 + 241] = address(_37065)
                                        mem[_38240 + 189] = 40
                                        mem[_38240 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38240 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38240 + 314] = sha3(address(_37091), address(_37065))
                                        mem[_38240 + 346] = stor4[cd[100]].field_512
                                        mem[_38240 + 261] = 85
                                        mem[_38240 + 378] = 0
                                        mem[64] = _38240 + 410
                                        mem[_38240 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38240 + 414] = _37262
                                        mem[_38240 + 446] = 0
                                        mem[_38240 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39078, stor4[cd[100]].field_512))
                                        mem[_38240 + 510] = 128
                                        mem[_38240 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38240 + 574] = mem[s + _38240 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37091), address(_37065)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37091), address(_37065)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37262, 0, address(sha3(0, stor4[cd[100]].field_0, _39078, stor4[cd[100]].field_512)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _27898 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38241 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _27898 + 32])
                                    mem[mem[64] + 52] = address(_37091)
                                    _39080 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39082 = sha3(mem[_39080 + 32 len mem[_39080]])
                                    mem[_38241 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38241 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38241 + 125] = _39082
                                    mem[_38241 + 157] = stor4[cd[100]].field_512
                                    mem[_38241 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37065) == address(_37091):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37065) < address(_37091):
                                        if not address(_37065):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38241 + 221] = address(_37065)
                                        mem[_38241 + 241] = address(_37091)
                                        mem[_38241 + 189] = 40
                                        mem[_38241 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38241 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38241 + 314] = sha3(address(_37065), address(_37091))
                                        mem[_38241 + 346] = stor4[cd[100]].field_512
                                        mem[_38241 + 261] = 85
                                        mem[_38241 + 378] = 0
                                        mem[64] = _38241 + 410
                                        mem[_38241 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38241 + 414] = _37262
                                        mem[_38241 + 446] = 0
                                        mem[_38241 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39082, stor4[cd[100]].field_512))
                                        mem[_38241 + 510] = 128
                                        mem[_38241 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38241 + 574] = mem[s + _38241 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37065), address(_37091)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37065), address(_37091)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37262, 0, address(sha3(0, stor4[cd[100]].field_0, _39082, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37091):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38241 + 221] = address(_37091)
                                        mem[_38241 + 241] = address(_37065)
                                        mem[_38241 + 189] = 40
                                        mem[_38241 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38241 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38241 + 314] = sha3(address(_37091), address(_37065))
                                        mem[_38241 + 346] = stor4[cd[100]].field_512
                                        mem[_38241 + 261] = 85
                                        mem[_38241 + 378] = 0
                                        mem[64] = _38241 + 410
                                        mem[_38241 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38241 + 414] = _37262
                                        mem[_38241 + 446] = 0
                                        mem[_38241 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39082, stor4[cd[100]].field_512))
                                        mem[_38241 + 510] = 128
                                        mem[_38241 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38241 + 574] = mem[s + _38241 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37091), address(_37065)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37091), address(_37065)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37262, 0, address(sha3(0, stor4[cd[100]].field_0, _39082, stor4[cd[100]].field_512)), 128, 0
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    continue 
            else:
                if not address(_28091):
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                mem[_18558 + ceil32(return_data.size) + 354] = address(_28091)
                mem[_18558 + ceil32(return_data.size) + 374] = address(_28076)
                mem[_18558 + ceil32(return_data.size) + 322] = 40
                mem[_18558 + ceil32(return_data.size) + 426] = 0xff00000000000000000000000000000000000000000000000000000000000000
                mem[_18558 + ceil32(return_data.size) + 427] = Mask(160, 96, stor4[cd[100]].field_0)
                mem[_18558 + ceil32(return_data.size) + 447] = sha3(address(_28091), address(_28076))
                mem[_18558 + ceil32(return_data.size) + 479] = stor4[cd[100]].field_512
                mem[_18558 + ceil32(return_data.size) + 394] = 85
                mem[64] = _18558 + ceil32(return_data.size) + 511
                require 0 < mem[s]
                _28314 = mem[s + 32]
                mem[_18558 + ceil32(return_data.size) + 515] = address(sha3(0, stor4[cd[100]].field_0, sha3(address(_28091), address(_28076)), stor4[cd[100]].field_512))
                mem[_18558 + ceil32(return_data.size) + 547] = _28314
                require ext_code.size(stor4[cd[100]].field_1024)
                call stor4[cd[100]].field_1024.0xa9059cbb with:
                     gas gas_remaining wei
                    args address(sha3(0, stor4[cd[100]].field_0, sha3(address(_28091), address(_28076)), stor4[cd[100]].field_512)), _28314
                mem[_18558 + ceil32(return_data.size) + 511] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = _18558 + ceil32(return_data.size) + ceil32(return_data.size) + 511
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                require ext_call.return_data[0]
                _37011 = mem[mem[128]]
                idx = 0
                while idx < _37011 - 1:
                    require idx < mem[_27898]
                    _37067 = mem[(32 * idx) + _27898 + 32]
                    require idx + 1 < mem[_27898]
                    _37092 = mem[(32 * idx + 1) + _27898 + 32]
                    if mem[(32 * idx) + _27898 + 44 len 20] == mem[(32 * idx + 1) + _27898 + 44 len 20]:
                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                    if mem[(32 * idx) + _27898 + 44 len 20] < mem[(32 * idx + 1) + _27898 + 44 len 20]:
                        if not mem[(32 * idx) + _27898 + 44 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        require idx + 1 < mem[s]
                        _37264 = mem[(32 * idx + 1) + s + 32]
                        if mem[(32 * idx) + _27898 + 44 len 20] == mem[(32 * idx) + _27898 + 44 len 20]:
                            if idx >= mem[_27898] - 2:
                                mem[0] = cd[100]
                                mem[32] = 4
                                if address(_37067) == mem[(32 * idx + 1) + _27898 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_37067) < mem[(32 * idx + 1) + _27898 + 44 len 20]:
                                    if not address(_37067):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38246 = mem[64]
                                    mem[mem[64] + 32] = address(_37067)
                                    mem[mem[64] + 52] = address(_37092)
                                    _39100 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39102 = sha3(mem[_39100 + 32 len mem[_39100]])
                                    mem[_38246 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38246 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38246 + 125] = _39102
                                    mem[_38246 + 157] = stor4[cd[100]].field_512
                                    mem[_38246 + 72] = 85
                                    mem[_38246 + 189] = 0
                                    mem[64] = _38246 + 221
                                    mem[_38246 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38246 + 225] = 0
                                    mem[_38246 + 257] = _37264
                                    mem[_38246 + 289] = msg.sender
                                    mem[_38246 + 321] = 128
                                    mem[_38246 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38246 + 385] = mem[s + _38246 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _39102, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _39102, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _37264, msg.sender, 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _27898 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38247 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27898 + 32])
                                    mem[mem[64] + 52] = address(_37067)
                                    _39104 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39106 = sha3(mem[_39104 + 32 len mem[_39104]])
                                    mem[_38247 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38247 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38247 + 125] = _39106
                                    mem[_38247 + 157] = stor4[cd[100]].field_512
                                    mem[_38247 + 72] = 85
                                    mem[_38247 + 189] = 0
                                    mem[64] = _38247 + 221
                                    mem[_38247 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38247 + 225] = 0
                                    mem[_38247 + 257] = _37264
                                    mem[_38247 + 289] = msg.sender
                                    mem[_38247 + 321] = 128
                                    mem[_38247 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38247 + 385] = mem[s + _38247 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _39106, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _39106, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _37264, msg.sender, 128, 0
                            else:
                                require idx + 2 < mem[_27898]
                                _37456 = mem[(32 * idx + 2) + _27898 + 32]
                                mem[0] = cd[100]
                                mem[32] = 4
                                if mem[(32 * idx + 1) + _27898 + 44 len 20] == mem[(32 * idx + 2) + _27898 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx + 1) + _27898 + 44 len 20] < mem[(32 * idx + 2) + _27898 + 44 len 20]:
                                    if not mem[(32 * idx + 1) + _27898 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38244 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27898 + 32])
                                    mem[mem[64] + 52] = address(_37456)
                                    _39092 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39094 = sha3(mem[_39092 + 32 len mem[_39092]])
                                    mem[_38244 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38244 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38244 + 125] = _39094
                                    mem[_38244 + 157] = stor4[cd[100]].field_512
                                    mem[_38244 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37067) == address(_37092):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37067) < address(_37092):
                                        if not address(_37067):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38244 + 221] = address(_37067)
                                        mem[_38244 + 241] = address(_37092)
                                        mem[_38244 + 189] = 40
                                        mem[_38244 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38244 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38244 + 314] = sha3(address(_37067), address(_37092))
                                        mem[_38244 + 346] = stor4[cd[100]].field_512
                                        mem[_38244 + 261] = 85
                                        mem[_38244 + 378] = 0
                                        mem[64] = _38244 + 410
                                        mem[_38244 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38244 + 414] = 0
                                        mem[_38244 + 446] = _37264
                                        mem[_38244 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39094, stor4[cd[100]].field_512))
                                        mem[_38244 + 510] = 128
                                        mem[_38244 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38244 + 574] = mem[s + _38244 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37067), address(_37092)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37067), address(_37092)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37264, address(sha3(0, stor4[cd[100]].field_0, _39094, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37092):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38244 + 221] = address(_37092)
                                        mem[_38244 + 241] = address(_37067)
                                        mem[_38244 + 189] = 40
                                        mem[_38244 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38244 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38244 + 314] = sha3(address(_37092), address(_37067))
                                        mem[_38244 + 346] = stor4[cd[100]].field_512
                                        mem[_38244 + 261] = 85
                                        mem[_38244 + 378] = 0
                                        mem[64] = _38244 + 410
                                        mem[_38244 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38244 + 414] = 0
                                        mem[_38244 + 446] = _37264
                                        mem[_38244 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39094, stor4[cd[100]].field_512))
                                        mem[_38244 + 510] = 128
                                        mem[_38244 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38244 + 574] = mem[s + _38244 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37092), address(_37067)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37092), address(_37067)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37264, address(sha3(0, stor4[cd[100]].field_0, _39094, stor4[cd[100]].field_512)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _27898 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38245 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _27898 + 32])
                                    mem[mem[64] + 52] = address(_37092)
                                    _39096 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39098 = sha3(mem[_39096 + 32 len mem[_39096]])
                                    mem[_38245 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38245 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38245 + 125] = _39098
                                    mem[_38245 + 157] = stor4[cd[100]].field_512
                                    mem[_38245 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37067) == address(_37092):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37067) < address(_37092):
                                        if not address(_37067):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38245 + 221] = address(_37067)
                                        mem[_38245 + 241] = address(_37092)
                                        mem[_38245 + 189] = 40
                                        mem[_38245 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38245 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38245 + 314] = sha3(address(_37067), address(_37092))
                                        mem[_38245 + 346] = stor4[cd[100]].field_512
                                        mem[_38245 + 261] = 85
                                        mem[_38245 + 378] = 0
                                        mem[64] = _38245 + 410
                                        mem[_38245 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38245 + 414] = 0
                                        mem[_38245 + 446] = _37264
                                        mem[_38245 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39098, stor4[cd[100]].field_512))
                                        mem[_38245 + 510] = 128
                                        mem[_38245 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38245 + 574] = mem[s + _38245 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37067), address(_37092)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37067), address(_37092)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37264, address(sha3(0, stor4[cd[100]].field_0, _39098, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37092):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38245 + 221] = address(_37092)
                                        mem[_38245 + 241] = address(_37067)
                                        mem[_38245 + 189] = 40
                                        mem[_38245 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38245 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38245 + 314] = sha3(address(_37092), address(_37067))
                                        mem[_38245 + 346] = stor4[cd[100]].field_512
                                        mem[_38245 + 261] = 85
                                        mem[_38245 + 378] = 0
                                        mem[64] = _38245 + 410
                                        mem[_38245 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38245 + 414] = 0
                                        mem[_38245 + 446] = _37264
                                        mem[_38245 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39098, stor4[cd[100]].field_512))
                                        mem[_38245 + 510] = 128
                                        mem[_38245 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38245 + 574] = mem[s + _38245 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37092), address(_37067)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37092), address(_37067)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37264, address(sha3(0, stor4[cd[100]].field_0, _39098, stor4[cd[100]].field_512)), 128, 0
                        else:
                            if idx >= mem[_27898] - 2:
                                mem[0] = cd[100]
                                mem[32] = 4
                                if address(_37067) == mem[(32 * idx + 1) + _27898 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_37067) < mem[(32 * idx + 1) + _27898 + 44 len 20]:
                                    if not address(_37067):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38250 = mem[64]
                                    mem[mem[64] + 32] = address(_37067)
                                    mem[mem[64] + 52] = address(_37092)
                                    _39116 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39118 = sha3(mem[_39116 + 32 len mem[_39116]])
                                    mem[_38250 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38250 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38250 + 125] = _39118
                                    mem[_38250 + 157] = stor4[cd[100]].field_512
                                    mem[_38250 + 72] = 85
                                    mem[_38250 + 189] = 0
                                    mem[64] = _38250 + 221
                                    mem[_38250 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38250 + 225] = _37264
                                    mem[_38250 + 257] = 0
                                    mem[_38250 + 289] = msg.sender
                                    mem[_38250 + 321] = 128
                                    mem[_38250 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38250 + 385] = mem[s + _38250 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _39118, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _39118, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _37264, 0, msg.sender, 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _27898 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38251 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27898 + 32])
                                    mem[mem[64] + 52] = address(_37067)
                                    _39120 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39122 = sha3(mem[_39120 + 32 len mem[_39120]])
                                    mem[_38251 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38251 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38251 + 125] = _39122
                                    mem[_38251 + 157] = stor4[cd[100]].field_512
                                    mem[_38251 + 72] = 85
                                    mem[_38251 + 189] = 0
                                    mem[64] = _38251 + 221
                                    mem[_38251 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38251 + 225] = _37264
                                    mem[_38251 + 257] = 0
                                    mem[_38251 + 289] = msg.sender
                                    mem[_38251 + 321] = 128
                                    mem[_38251 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38251 + 385] = mem[s + _38251 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _39122, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _39122, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _37264, 0, msg.sender, 128, 0
                            else:
                                require idx + 2 < mem[_27898]
                                _37457 = mem[(32 * idx + 2) + _27898 + 32]
                                mem[0] = cd[100]
                                mem[32] = 4
                                if mem[(32 * idx + 1) + _27898 + 44 len 20] == mem[(32 * idx + 2) + _27898 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx + 1) + _27898 + 44 len 20] < mem[(32 * idx + 2) + _27898 + 44 len 20]:
                                    if not mem[(32 * idx + 1) + _27898 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38248 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27898 + 32])
                                    mem[mem[64] + 52] = address(_37457)
                                    _39108 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39110 = sha3(mem[_39108 + 32 len mem[_39108]])
                                    mem[_38248 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38248 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38248 + 125] = _39110
                                    mem[_38248 + 157] = stor4[cd[100]].field_512
                                    mem[_38248 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37067) == address(_37092):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37067) < address(_37092):
                                        if not address(_37067):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38248 + 221] = address(_37067)
                                        mem[_38248 + 241] = address(_37092)
                                        mem[_38248 + 189] = 40
                                        mem[_38248 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38248 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38248 + 314] = sha3(address(_37067), address(_37092))
                                        mem[_38248 + 346] = stor4[cd[100]].field_512
                                        mem[_38248 + 261] = 85
                                        mem[_38248 + 378] = 0
                                        mem[64] = _38248 + 410
                                        mem[_38248 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38248 + 414] = _37264
                                        mem[_38248 + 446] = 0
                                        mem[_38248 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39110, stor4[cd[100]].field_512))
                                        mem[_38248 + 510] = 128
                                        mem[_38248 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38248 + 574] = mem[s + _38248 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37067), address(_37092)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37067), address(_37092)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37264, 0, address(sha3(0, stor4[cd[100]].field_0, _39110, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37092):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38248 + 221] = address(_37092)
                                        mem[_38248 + 241] = address(_37067)
                                        mem[_38248 + 189] = 40
                                        mem[_38248 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38248 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38248 + 314] = sha3(address(_37092), address(_37067))
                                        mem[_38248 + 346] = stor4[cd[100]].field_512
                                        mem[_38248 + 261] = 85
                                        mem[_38248 + 378] = 0
                                        mem[64] = _38248 + 410
                                        mem[_38248 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38248 + 414] = _37264
                                        mem[_38248 + 446] = 0
                                        mem[_38248 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39110, stor4[cd[100]].field_512))
                                        mem[_38248 + 510] = 128
                                        mem[_38248 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38248 + 574] = mem[s + _38248 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37092), address(_37067)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37092), address(_37067)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37264, 0, address(sha3(0, stor4[cd[100]].field_0, _39110, stor4[cd[100]].field_512)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _27898 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38249 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _27898 + 32])
                                    mem[mem[64] + 52] = address(_37092)
                                    _39112 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39114 = sha3(mem[_39112 + 32 len mem[_39112]])
                                    mem[_38249 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38249 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38249 + 125] = _39114
                                    mem[_38249 + 157] = stor4[cd[100]].field_512
                                    mem[_38249 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37067) == address(_37092):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37067) < address(_37092):
                                        if not address(_37067):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38249 + 221] = address(_37067)
                                        mem[_38249 + 241] = address(_37092)
                                        mem[_38249 + 189] = 40
                                        mem[_38249 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38249 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38249 + 314] = sha3(address(_37067), address(_37092))
                                        mem[_38249 + 346] = stor4[cd[100]].field_512
                                        mem[_38249 + 261] = 85
                                        mem[_38249 + 378] = 0
                                        mem[64] = _38249 + 410
                                        mem[_38249 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38249 + 414] = _37264
                                        mem[_38249 + 446] = 0
                                        mem[_38249 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39114, stor4[cd[100]].field_512))
                                        mem[_38249 + 510] = 128
                                        mem[_38249 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38249 + 574] = mem[s + _38249 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37067), address(_37092)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37067), address(_37092)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37264, 0, address(sha3(0, stor4[cd[100]].field_0, _39114, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37092):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38249 + 221] = address(_37092)
                                        mem[_38249 + 241] = address(_37067)
                                        mem[_38249 + 189] = 40
                                        mem[_38249 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38249 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38249 + 314] = sha3(address(_37092), address(_37067))
                                        mem[_38249 + 346] = stor4[cd[100]].field_512
                                        mem[_38249 + 261] = 85
                                        mem[_38249 + 378] = 0
                                        mem[64] = _38249 + 410
                                        mem[_38249 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38249 + 414] = _37264
                                        mem[_38249 + 446] = 0
                                        mem[_38249 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39114, stor4[cd[100]].field_512))
                                        mem[_38249 + 510] = 128
                                        mem[_38249 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38249 + 574] = mem[s + _38249 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37092), address(_37067)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37092), address(_37067)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37264, 0, address(sha3(0, stor4[cd[100]].field_0, _39114, stor4[cd[100]].field_512)), 128, 0
                    else:
                        if not mem[(32 * idx + 1) + _27898 + 44 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        require idx + 1 < mem[s]
                        _37266 = mem[(32 * idx + 1) + s + 32]
                        if mem[(32 * idx) + _27898 + 44 len 20] == mem[(32 * idx + 1) + _27898 + 44 len 20]:
                            if idx >= mem[_27898] - 2:
                                mem[0] = cd[100]
                                mem[32] = 4
                                if address(_37067) == mem[(32 * idx + 1) + _27898 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_37067) < mem[(32 * idx + 1) + _27898 + 44 len 20]:
                                    if not address(_37067):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38254 = mem[64]
                                    mem[mem[64] + 32] = address(_37067)
                                    mem[mem[64] + 52] = address(_37092)
                                    _39132 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39134 = sha3(mem[_39132 + 32 len mem[_39132]])
                                    mem[_38254 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38254 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38254 + 125] = _39134
                                    mem[_38254 + 157] = stor4[cd[100]].field_512
                                    mem[_38254 + 72] = 85
                                    mem[_38254 + 189] = 0
                                    mem[64] = _38254 + 221
                                    mem[_38254 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38254 + 225] = 0
                                    mem[_38254 + 257] = _37266
                                    mem[_38254 + 289] = msg.sender
                                    mem[_38254 + 321] = 128
                                    mem[_38254 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38254 + 385] = mem[s + _38254 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _39134, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _39134, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _37266, msg.sender, 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _27898 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38255 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27898 + 32])
                                    mem[mem[64] + 52] = address(_37067)
                                    _39136 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39138 = sha3(mem[_39136 + 32 len mem[_39136]])
                                    mem[_38255 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38255 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38255 + 125] = _39138
                                    mem[_38255 + 157] = stor4[cd[100]].field_512
                                    mem[_38255 + 72] = 85
                                    mem[_38255 + 189] = 0
                                    mem[64] = _38255 + 221
                                    mem[_38255 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38255 + 225] = 0
                                    mem[_38255 + 257] = _37266
                                    mem[_38255 + 289] = msg.sender
                                    mem[_38255 + 321] = 128
                                    mem[_38255 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38255 + 385] = mem[s + _38255 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _39138, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _39138, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _37266, msg.sender, 128, 0
                            else:
                                require idx + 2 < mem[_27898]
                                _37458 = mem[(32 * idx + 2) + _27898 + 32]
                                mem[0] = cd[100]
                                mem[32] = 4
                                if mem[(32 * idx + 1) + _27898 + 44 len 20] == mem[(32 * idx + 2) + _27898 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx + 1) + _27898 + 44 len 20] < mem[(32 * idx + 2) + _27898 + 44 len 20]:
                                    if not mem[(32 * idx + 1) + _27898 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38252 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27898 + 32])
                                    mem[mem[64] + 52] = address(_37458)
                                    _39124 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39126 = sha3(mem[_39124 + 32 len mem[_39124]])
                                    mem[_38252 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38252 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38252 + 125] = _39126
                                    mem[_38252 + 157] = stor4[cd[100]].field_512
                                    mem[_38252 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37067) == address(_37092):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37067) < address(_37092):
                                        if not address(_37067):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38252 + 221] = address(_37067)
                                        mem[_38252 + 241] = address(_37092)
                                        mem[_38252 + 189] = 40
                                        mem[_38252 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38252 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38252 + 314] = sha3(address(_37067), address(_37092))
                                        mem[_38252 + 346] = stor4[cd[100]].field_512
                                        mem[_38252 + 261] = 85
                                        mem[_38252 + 378] = 0
                                        mem[64] = _38252 + 410
                                        mem[_38252 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38252 + 414] = 0
                                        mem[_38252 + 446] = _37266
                                        mem[_38252 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39126, stor4[cd[100]].field_512))
                                        mem[_38252 + 510] = 128
                                        mem[_38252 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38252 + 574] = mem[s + _38252 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37067), address(_37092)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37067), address(_37092)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37266, address(sha3(0, stor4[cd[100]].field_0, _39126, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37092):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38252 + 221] = address(_37092)
                                        mem[_38252 + 241] = address(_37067)
                                        mem[_38252 + 189] = 40
                                        mem[_38252 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38252 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38252 + 314] = sha3(address(_37092), address(_37067))
                                        mem[_38252 + 346] = stor4[cd[100]].field_512
                                        mem[_38252 + 261] = 85
                                        mem[_38252 + 378] = 0
                                        mem[64] = _38252 + 410
                                        mem[_38252 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38252 + 414] = 0
                                        mem[_38252 + 446] = _37266
                                        mem[_38252 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39126, stor4[cd[100]].field_512))
                                        mem[_38252 + 510] = 128
                                        mem[_38252 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38252 + 574] = mem[s + _38252 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37092), address(_37067)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37092), address(_37067)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37266, address(sha3(0, stor4[cd[100]].field_0, _39126, stor4[cd[100]].field_512)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _27898 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38253 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _27898 + 32])
                                    mem[mem[64] + 52] = address(_37092)
                                    _39128 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39130 = sha3(mem[_39128 + 32 len mem[_39128]])
                                    mem[_38253 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38253 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38253 + 125] = _39130
                                    mem[_38253 + 157] = stor4[cd[100]].field_512
                                    mem[_38253 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37067) == address(_37092):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37067) < address(_37092):
                                        if not address(_37067):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38253 + 221] = address(_37067)
                                        mem[_38253 + 241] = address(_37092)
                                        mem[_38253 + 189] = 40
                                        mem[_38253 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38253 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38253 + 314] = sha3(address(_37067), address(_37092))
                                        mem[_38253 + 346] = stor4[cd[100]].field_512
                                        mem[_38253 + 261] = 85
                                        mem[_38253 + 378] = 0
                                        mem[64] = _38253 + 410
                                        mem[_38253 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38253 + 414] = 0
                                        mem[_38253 + 446] = _37266
                                        mem[_38253 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39130, stor4[cd[100]].field_512))
                                        mem[_38253 + 510] = 128
                                        mem[_38253 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38253 + 574] = mem[s + _38253 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37067), address(_37092)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37067), address(_37092)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37266, address(sha3(0, stor4[cd[100]].field_0, _39130, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37092):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38253 + 221] = address(_37092)
                                        mem[_38253 + 241] = address(_37067)
                                        mem[_38253 + 189] = 40
                                        mem[_38253 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38253 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38253 + 314] = sha3(address(_37092), address(_37067))
                                        mem[_38253 + 346] = stor4[cd[100]].field_512
                                        mem[_38253 + 261] = 85
                                        mem[_38253 + 378] = 0
                                        mem[64] = _38253 + 410
                                        mem[_38253 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38253 + 414] = 0
                                        mem[_38253 + 446] = _37266
                                        mem[_38253 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39130, stor4[cd[100]].field_512))
                                        mem[_38253 + 510] = 128
                                        mem[_38253 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38253 + 574] = mem[s + _38253 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37092), address(_37067)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37092), address(_37067)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37266, address(sha3(0, stor4[cd[100]].field_0, _39130, stor4[cd[100]].field_512)), 128, 0
                        else:
                            if idx >= mem[_27898] - 2:
                                mem[0] = cd[100]
                                mem[32] = 4
                                if address(_37067) == mem[(32 * idx + 1) + _27898 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_37067) < mem[(32 * idx + 1) + _27898 + 44 len 20]:
                                    if not address(_37067):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38258 = mem[64]
                                    mem[mem[64] + 32] = address(_37067)
                                    mem[mem[64] + 52] = address(_37092)
                                    _39148 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39150 = sha3(mem[_39148 + 32 len mem[_39148]])
                                    mem[_38258 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38258 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38258 + 125] = _39150
                                    mem[_38258 + 157] = stor4[cd[100]].field_512
                                    mem[_38258 + 72] = 85
                                    mem[_38258 + 189] = 0
                                    mem[64] = _38258 + 221
                                    mem[_38258 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38258 + 225] = _37266
                                    mem[_38258 + 257] = 0
                                    mem[_38258 + 289] = msg.sender
                                    mem[_38258 + 321] = 128
                                    mem[_38258 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38258 + 385] = mem[s + _38258 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _39150, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _39150, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _37266, 0, msg.sender, 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _27898 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38259 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27898 + 32])
                                    mem[mem[64] + 52] = address(_37067)
                                    _39152 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39154 = sha3(mem[_39152 + 32 len mem[_39152]])
                                    mem[_38259 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38259 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38259 + 125] = _39154
                                    mem[_38259 + 157] = stor4[cd[100]].field_512
                                    mem[_38259 + 72] = 85
                                    mem[_38259 + 189] = 0
                                    mem[64] = _38259 + 221
                                    mem[_38259 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38259 + 225] = _37266
                                    mem[_38259 + 257] = 0
                                    mem[_38259 + 289] = msg.sender
                                    mem[_38259 + 321] = 128
                                    mem[_38259 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38259 + 385] = mem[s + _38259 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _39154, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _39154, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _37266, 0, msg.sender, 128, 0
                            else:
                                require idx + 2 < mem[_27898]
                                _37459 = mem[(32 * idx + 2) + _27898 + 32]
                                mem[0] = cd[100]
                                mem[32] = 4
                                if mem[(32 * idx + 1) + _27898 + 44 len 20] == mem[(32 * idx + 2) + _27898 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx + 1) + _27898 + 44 len 20] < mem[(32 * idx + 2) + _27898 + 44 len 20]:
                                    if not mem[(32 * idx + 1) + _27898 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38256 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27898 + 32])
                                    mem[mem[64] + 52] = address(_37459)
                                    _39140 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39142 = sha3(mem[_39140 + 32 len mem[_39140]])
                                    mem[_38256 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38256 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38256 + 125] = _39142
                                    mem[_38256 + 157] = stor4[cd[100]].field_512
                                    mem[_38256 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37067) == address(_37092):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37067) < address(_37092):
                                        if not address(_37067):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38256 + 221] = address(_37067)
                                        mem[_38256 + 241] = address(_37092)
                                        mem[_38256 + 189] = 40
                                        mem[_38256 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38256 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38256 + 314] = sha3(address(_37067), address(_37092))
                                        mem[_38256 + 346] = stor4[cd[100]].field_512
                                        mem[_38256 + 261] = 85
                                        mem[_38256 + 378] = 0
                                        mem[64] = _38256 + 410
                                        mem[_38256 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38256 + 414] = _37266
                                        mem[_38256 + 446] = 0
                                        mem[_38256 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39142, stor4[cd[100]].field_512))
                                        mem[_38256 + 510] = 128
                                        mem[_38256 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38256 + 574] = mem[s + _38256 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37067), address(_37092)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37067), address(_37092)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37266, 0, address(sha3(0, stor4[cd[100]].field_0, _39142, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37092):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38256 + 221] = address(_37092)
                                        mem[_38256 + 241] = address(_37067)
                                        mem[_38256 + 189] = 40
                                        mem[_38256 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38256 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38256 + 314] = sha3(address(_37092), address(_37067))
                                        mem[_38256 + 346] = stor4[cd[100]].field_512
                                        mem[_38256 + 261] = 85
                                        mem[_38256 + 378] = 0
                                        mem[64] = _38256 + 410
                                        mem[_38256 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38256 + 414] = _37266
                                        mem[_38256 + 446] = 0
                                        mem[_38256 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39142, stor4[cd[100]].field_512))
                                        mem[_38256 + 510] = 128
                                        mem[_38256 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38256 + 574] = mem[s + _38256 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37092), address(_37067)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37092), address(_37067)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37266, 0, address(sha3(0, stor4[cd[100]].field_0, _39142, stor4[cd[100]].field_512)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _27898 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38257 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _27898 + 32])
                                    mem[mem[64] + 52] = address(_37092)
                                    _39144 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39146 = sha3(mem[_39144 + 32 len mem[_39144]])
                                    mem[_38257 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38257 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38257 + 125] = _39146
                                    mem[_38257 + 157] = stor4[cd[100]].field_512
                                    mem[_38257 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37067) == address(_37092):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37067) < address(_37092):
                                        if not address(_37067):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38257 + 221] = address(_37067)
                                        mem[_38257 + 241] = address(_37092)
                                        mem[_38257 + 189] = 40
                                        mem[_38257 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38257 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38257 + 314] = sha3(address(_37067), address(_37092))
                                        mem[_38257 + 346] = stor4[cd[100]].field_512
                                        mem[_38257 + 261] = 85
                                        mem[_38257 + 378] = 0
                                        mem[64] = _38257 + 410
                                        mem[_38257 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38257 + 414] = _37266
                                        mem[_38257 + 446] = 0
                                        mem[_38257 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39146, stor4[cd[100]].field_512))
                                        mem[_38257 + 510] = 128
                                        mem[_38257 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38257 + 574] = mem[s + _38257 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37067), address(_37092)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37067), address(_37092)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37266, 0, address(sha3(0, stor4[cd[100]].field_0, _39146, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37092):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38257 + 221] = address(_37092)
                                        mem[_38257 + 241] = address(_37067)
                                        mem[_38257 + 189] = 40
                                        mem[_38257 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38257 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38257 + 314] = sha3(address(_37092), address(_37067))
                                        mem[_38257 + 346] = stor4[cd[100]].field_512
                                        mem[_38257 + 261] = 85
                                        mem[_38257 + 378] = 0
                                        mem[64] = _38257 + 410
                                        mem[_38257 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38257 + 414] = _37266
                                        mem[_38257 + 446] = 0
                                        mem[_38257 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39146, stor4[cd[100]].field_512))
                                        mem[_38257 + 510] = 128
                                        mem[_38257 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38257 + 574] = mem[s + _38257 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37092), address(_37067)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37092), address(_37067)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37266, 0, address(sha3(0, stor4[cd[100]].field_0, _39146, stor4[cd[100]].field_512)), 128, 0
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    continue 
    else:
        if not address(_18545):
            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
        _18559 = mem[64]
        mem[mem[64] + 32] = address(_18545)
        mem[mem[64] + 52] = address(_18540)
        _18574 = mem[64]
        mem[mem[64]] = 40
        mem[64] = mem[64] + 72
        _18576 = sha3(mem[_18574 + 32 len mem[_18574]])
        mem[_18559 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
        mem[_18559 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
        mem[_18559 + 125] = _18576
        mem[_18559 + 157] = stor4[cd[100]].field_512
        mem[_18559 + 72] = 85
        mem[64] = _18559 + 189
        require 0 < mem[96]
        require 0 < mem[mem[128]]
        _18599 = mem[mem[128] + 32]
        mem[_18559 + 189] = 12
        mem[_18559 + 221] = 'minPoolETH..'
        mem[_18559 + 289] = address(sha3(0, stor4[cd[100]].field_0, _18576, stor4[cd[100]].field_512))
        mem[_18559 + 253] = 36
        mem[64] = _18559 + 321
        mem[_18559 + 289 len 28] = address(sha3(0, stor4[cd[100]].field_0, _18576, stor4[cd[100]].field_512)) << 64
        mem[_18559 + 285 len 4] = unknown_0x70a08231(?????)
        mem[_18559 + 321 len 64] = unknown_0x70a08231(?????), address(sha3(0, stor4[cd[100]].field_0, _18576, stor4[cd[100]].field_512)) << 64, 0, mem[_18559 + 321 len 28]
        mem[_18559 + 357] = 0
        call address(_18599) with:
             gas gas_remaining wei
            args mem[_18559 + 325]
        if not return_data.size:
            if 0 == mem[96]:
                revert with 0, 'minPoolETH..', 0
            require mem[96] >= 32
            if mem[128] <= cd[36]:
                revert with 0, 'minPoolETH..', 0
            require 0 < mem[96]
            _27904 = mem[128]
            mem[0] = cd[100]
            mem[32] = 4
            require mem[mem[128]]
            if mem[mem[128] + 44 len 20] != stor4[cd[100]].field_1024:
                revert with 0, 'SuperRouter: INVALID_PATH'
            require mem[s] - 1 < mem[s]
            if mem[(32 * mem[s] - 1) + s + 32] < 1:
                revert with 0, 'SuperRouter: INSUFFICIENT_OUTPUT_AMOUNT'
            require 0 < mem[s]
            _28031 = mem[s + 32]
            mem[_18559 + 321] = 0xd0e30db000000000000000000000000000000000000000000000000000000000
            require ext_code.size(stor4[cd[100]].field_1024)
            call stor4[cd[100]].field_1024.deposit() with:
               value _28031 wei
                 gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require 0 < mem[mem[128]]
            _28082 = mem[mem[128] + 32]
            require 1 < mem[mem[128]]
            _28094 = mem[mem[128] + 64]
            mem[0] = cd[100]
            mem[32] = 4
            if address(_28082) == address(_28094):
                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
            if address(_28082) < address(_28094):
                if not address(_28082):
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                mem[_18559 + 353] = address(_28082)
                mem[_18559 + 373] = address(_28094)
                mem[_18559 + 321] = 40
                mem[_18559 + 425] = 0xff00000000000000000000000000000000000000000000000000000000000000
                mem[_18559 + 426] = Mask(160, 96, stor4[cd[100]].field_0)
                mem[_18559 + 446] = sha3(address(_28082), address(_28094))
                mem[_18559 + 478] = stor4[cd[100]].field_512
                mem[_18559 + 393] = 85
                mem[64] = _18559 + 510
                require 0 < mem[s]
                _28324 = mem[s + 32]
                mem[_18559 + 514] = address(sha3(0, stor4[cd[100]].field_0, sha3(address(_28082), address(_28094)), stor4[cd[100]].field_512))
                mem[_18559 + 546] = _28324
                require ext_code.size(stor4[cd[100]].field_1024)
                call stor4[cd[100]].field_1024.0xa9059cbb with:
                     gas gas_remaining wei
                    args address(sha3(0, stor4[cd[100]].field_0, sha3(address(_28082), address(_28094)), stor4[cd[100]].field_512)), _28324
                mem[_18559 + 510] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = _18559 + ceil32(return_data.size) + 510
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                require ext_call.return_data[0]
                _37016 = mem[mem[128]]
                idx = 0
                while idx < _37016 - 1:
                    require idx < mem[_27904]
                    _37077 = mem[(32 * idx) + _27904 + 32]
                    require idx + 1 < mem[_27904]
                    _37097 = mem[(32 * idx + 1) + _27904 + 32]
                    if mem[(32 * idx) + _27904 + 44 len 20] == mem[(32 * idx + 1) + _27904 + 44 len 20]:
                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                    if mem[(32 * idx) + _27904 + 44 len 20] < mem[(32 * idx + 1) + _27904 + 44 len 20]:
                        if not mem[(32 * idx) + _27904 + 44 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        require idx + 1 < mem[s]
                        _37284 = mem[(32 * idx + 1) + s + 32]
                        if mem[(32 * idx) + _27904 + 44 len 20] == mem[(32 * idx) + _27904 + 44 len 20]:
                            if idx >= mem[_27904] - 2:
                                mem[0] = cd[100]
                                mem[32] = 4
                                if address(_37077) == mem[(32 * idx + 1) + _27904 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_37077) < mem[(32 * idx + 1) + _27904 + 44 len 20]:
                                    if not address(_37077):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38326 = mem[64]
                                    mem[mem[64] + 32] = address(_37077)
                                    mem[mem[64] + 52] = address(_37097)
                                    _39420 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39422 = sha3(mem[_39420 + 32 len mem[_39420]])
                                    mem[_38326 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38326 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38326 + 125] = _39422
                                    mem[_38326 + 157] = stor4[cd[100]].field_512
                                    mem[_38326 + 72] = 85
                                    mem[_38326 + 189] = 0
                                    mem[64] = _38326 + 221
                                    mem[_38326 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38326 + 225] = 0
                                    mem[_38326 + 257] = _37284
                                    mem[_38326 + 289] = msg.sender
                                    mem[_38326 + 321] = 128
                                    mem[_38326 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38326 + 385] = mem[s + _38326 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _39422, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _39422, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _37284, msg.sender, 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _27904 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38327 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27904 + 32])
                                    mem[mem[64] + 52] = address(_37077)
                                    _39424 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39426 = sha3(mem[_39424 + 32 len mem[_39424]])
                                    mem[_38327 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38327 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38327 + 125] = _39426
                                    mem[_38327 + 157] = stor4[cd[100]].field_512
                                    mem[_38327 + 72] = 85
                                    mem[_38327 + 189] = 0
                                    mem[64] = _38327 + 221
                                    mem[_38327 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38327 + 225] = 0
                                    mem[_38327 + 257] = _37284
                                    mem[_38327 + 289] = msg.sender
                                    mem[_38327 + 321] = 128
                                    mem[_38327 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38327 + 385] = mem[s + _38327 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _39426, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _39426, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _37284, msg.sender, 128, 0
                            else:
                                require idx + 2 < mem[_27904]
                                _37476 = mem[(32 * idx + 2) + _27904 + 32]
                                mem[0] = cd[100]
                                mem[32] = 4
                                if mem[(32 * idx + 1) + _27904 + 44 len 20] == mem[(32 * idx + 2) + _27904 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx + 1) + _27904 + 44 len 20] < mem[(32 * idx + 2) + _27904 + 44 len 20]:
                                    if not mem[(32 * idx + 1) + _27904 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38324 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27904 + 32])
                                    mem[mem[64] + 52] = address(_37476)
                                    _39412 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39414 = sha3(mem[_39412 + 32 len mem[_39412]])
                                    mem[_38324 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38324 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38324 + 125] = _39414
                                    mem[_38324 + 157] = stor4[cd[100]].field_512
                                    mem[_38324 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37077) == address(_37097):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37077) < address(_37097):
                                        if not address(_37077):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38324 + 221] = address(_37077)
                                        mem[_38324 + 241] = address(_37097)
                                        mem[_38324 + 189] = 40
                                        mem[_38324 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38324 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38324 + 314] = sha3(address(_37077), address(_37097))
                                        mem[_38324 + 346] = stor4[cd[100]].field_512
                                        mem[_38324 + 261] = 85
                                        mem[_38324 + 378] = 0
                                        mem[64] = _38324 + 410
                                        mem[_38324 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38324 + 414] = 0
                                        mem[_38324 + 446] = _37284
                                        mem[_38324 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39414, stor4[cd[100]].field_512))
                                        mem[_38324 + 510] = 128
                                        mem[_38324 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38324 + 574] = mem[s + _38324 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37077), address(_37097)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37077), address(_37097)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37284, address(sha3(0, stor4[cd[100]].field_0, _39414, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37097):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38324 + 221] = address(_37097)
                                        mem[_38324 + 241] = address(_37077)
                                        mem[_38324 + 189] = 40
                                        mem[_38324 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38324 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38324 + 314] = sha3(address(_37097), address(_37077))
                                        mem[_38324 + 346] = stor4[cd[100]].field_512
                                        mem[_38324 + 261] = 85
                                        mem[_38324 + 378] = 0
                                        mem[64] = _38324 + 410
                                        mem[_38324 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38324 + 414] = 0
                                        mem[_38324 + 446] = _37284
                                        mem[_38324 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39414, stor4[cd[100]].field_512))
                                        mem[_38324 + 510] = 128
                                        mem[_38324 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38324 + 574] = mem[s + _38324 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37097), address(_37077)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37097), address(_37077)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37284, address(sha3(0, stor4[cd[100]].field_0, _39414, stor4[cd[100]].field_512)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _27904 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38325 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _27904 + 32])
                                    mem[mem[64] + 52] = address(_37097)
                                    _39416 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39418 = sha3(mem[_39416 + 32 len mem[_39416]])
                                    mem[_38325 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38325 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38325 + 125] = _39418
                                    mem[_38325 + 157] = stor4[cd[100]].field_512
                                    mem[_38325 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37077) == address(_37097):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37077) < address(_37097):
                                        if not address(_37077):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38325 + 221] = address(_37077)
                                        mem[_38325 + 241] = address(_37097)
                                        mem[_38325 + 189] = 40
                                        mem[_38325 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38325 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38325 + 314] = sha3(address(_37077), address(_37097))
                                        mem[_38325 + 346] = stor4[cd[100]].field_512
                                        mem[_38325 + 261] = 85
                                        mem[_38325 + 378] = 0
                                        mem[64] = _38325 + 410
                                        mem[_38325 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38325 + 414] = 0
                                        mem[_38325 + 446] = _37284
                                        mem[_38325 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39418, stor4[cd[100]].field_512))
                                        mem[_38325 + 510] = 128
                                        mem[_38325 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38325 + 574] = mem[s + _38325 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37077), address(_37097)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37077), address(_37097)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37284, address(sha3(0, stor4[cd[100]].field_0, _39418, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37097):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38325 + 221] = address(_37097)
                                        mem[_38325 + 241] = address(_37077)
                                        mem[_38325 + 189] = 40
                                        mem[_38325 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38325 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38325 + 314] = sha3(address(_37097), address(_37077))
                                        mem[_38325 + 346] = stor4[cd[100]].field_512
                                        mem[_38325 + 261] = 85
                                        mem[_38325 + 378] = 0
                                        mem[64] = _38325 + 410
                                        mem[_38325 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38325 + 414] = 0
                                        mem[_38325 + 446] = _37284
                                        mem[_38325 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39418, stor4[cd[100]].field_512))
                                        mem[_38325 + 510] = 128
                                        mem[_38325 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38325 + 574] = mem[s + _38325 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37097), address(_37077)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37097), address(_37077)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37284, address(sha3(0, stor4[cd[100]].field_0, _39418, stor4[cd[100]].field_512)), 128, 0
                        else:
                            if idx >= mem[_27904] - 2:
                                mem[0] = cd[100]
                                mem[32] = 4
                                if address(_37077) == mem[(32 * idx + 1) + _27904 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_37077) < mem[(32 * idx + 1) + _27904 + 44 len 20]:
                                    if not address(_37077):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38330 = mem[64]
                                    mem[mem[64] + 32] = address(_37077)
                                    mem[mem[64] + 52] = address(_37097)
                                    _39436 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39438 = sha3(mem[_39436 + 32 len mem[_39436]])
                                    mem[_38330 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38330 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38330 + 125] = _39438
                                    mem[_38330 + 157] = stor4[cd[100]].field_512
                                    mem[_38330 + 72] = 85
                                    mem[_38330 + 189] = 0
                                    mem[64] = _38330 + 221
                                    mem[_38330 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38330 + 225] = _37284
                                    mem[_38330 + 257] = 0
                                    mem[_38330 + 289] = msg.sender
                                    mem[_38330 + 321] = 128
                                    mem[_38330 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38330 + 385] = mem[s + _38330 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _39438, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _39438, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _37284, 0, msg.sender, 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _27904 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38331 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27904 + 32])
                                    mem[mem[64] + 52] = address(_37077)
                                    _39440 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39442 = sha3(mem[_39440 + 32 len mem[_39440]])
                                    mem[_38331 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38331 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38331 + 125] = _39442
                                    mem[_38331 + 157] = stor4[cd[100]].field_512
                                    mem[_38331 + 72] = 85
                                    mem[_38331 + 189] = 0
                                    mem[64] = _38331 + 221
                                    mem[_38331 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38331 + 225] = _37284
                                    mem[_38331 + 257] = 0
                                    mem[_38331 + 289] = msg.sender
                                    mem[_38331 + 321] = 128
                                    mem[_38331 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38331 + 385] = mem[s + _38331 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _39442, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _39442, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _37284, 0, msg.sender, 128, 0
                            else:
                                require idx + 2 < mem[_27904]
                                _37477 = mem[(32 * idx + 2) + _27904 + 32]
                                mem[0] = cd[100]
                                mem[32] = 4
                                if mem[(32 * idx + 1) + _27904 + 44 len 20] == mem[(32 * idx + 2) + _27904 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx + 1) + _27904 + 44 len 20] < mem[(32 * idx + 2) + _27904 + 44 len 20]:
                                    if not mem[(32 * idx + 1) + _27904 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38328 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27904 + 32])
                                    mem[mem[64] + 52] = address(_37477)
                                    _39428 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39430 = sha3(mem[_39428 + 32 len mem[_39428]])
                                    mem[_38328 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38328 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38328 + 125] = _39430
                                    mem[_38328 + 157] = stor4[cd[100]].field_512
                                    mem[_38328 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37077) == address(_37097):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37077) < address(_37097):
                                        if not address(_37077):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38328 + 221] = address(_37077)
                                        mem[_38328 + 241] = address(_37097)
                                        mem[_38328 + 189] = 40
                                        mem[_38328 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38328 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38328 + 314] = sha3(address(_37077), address(_37097))
                                        mem[_38328 + 346] = stor4[cd[100]].field_512
                                        mem[_38328 + 261] = 85
                                        mem[_38328 + 378] = 0
                                        mem[64] = _38328 + 410
                                        mem[_38328 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38328 + 414] = _37284
                                        mem[_38328 + 446] = 0
                                        mem[_38328 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39430, stor4[cd[100]].field_512))
                                        mem[_38328 + 510] = 128
                                        mem[_38328 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38328 + 574] = mem[s + _38328 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37077), address(_37097)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37077), address(_37097)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37284, 0, address(sha3(0, stor4[cd[100]].field_0, _39430, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37097):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38328 + 221] = address(_37097)
                                        mem[_38328 + 241] = address(_37077)
                                        mem[_38328 + 189] = 40
                                        mem[_38328 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38328 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38328 + 314] = sha3(address(_37097), address(_37077))
                                        mem[_38328 + 346] = stor4[cd[100]].field_512
                                        mem[_38328 + 261] = 85
                                        mem[_38328 + 378] = 0
                                        mem[64] = _38328 + 410
                                        mem[_38328 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38328 + 414] = _37284
                                        mem[_38328 + 446] = 0
                                        mem[_38328 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39430, stor4[cd[100]].field_512))
                                        mem[_38328 + 510] = 128
                                        mem[_38328 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38328 + 574] = mem[s + _38328 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37097), address(_37077)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37097), address(_37077)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37284, 0, address(sha3(0, stor4[cd[100]].field_0, _39430, stor4[cd[100]].field_512)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _27904 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38329 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _27904 + 32])
                                    mem[mem[64] + 52] = address(_37097)
                                    _39432 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39434 = sha3(mem[_39432 + 32 len mem[_39432]])
                                    mem[_38329 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38329 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38329 + 125] = _39434
                                    mem[_38329 + 157] = stor4[cd[100]].field_512
                                    mem[_38329 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37077) == address(_37097):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37077) < address(_37097):
                                        if not address(_37077):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38329 + 221] = address(_37077)
                                        mem[_38329 + 241] = address(_37097)
                                        mem[_38329 + 189] = 40
                                        mem[_38329 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38329 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38329 + 314] = sha3(address(_37077), address(_37097))
                                        mem[_38329 + 346] = stor4[cd[100]].field_512
                                        mem[_38329 + 261] = 85
                                        mem[_38329 + 378] = 0
                                        mem[64] = _38329 + 410
                                        mem[_38329 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38329 + 414] = _37284
                                        mem[_38329 + 446] = 0
                                        mem[_38329 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39434, stor4[cd[100]].field_512))
                                        mem[_38329 + 510] = 128
                                        mem[_38329 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38329 + 574] = mem[s + _38329 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37077), address(_37097)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37077), address(_37097)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37284, 0, address(sha3(0, stor4[cd[100]].field_0, _39434, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37097):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38329 + 221] = address(_37097)
                                        mem[_38329 + 241] = address(_37077)
                                        mem[_38329 + 189] = 40
                                        mem[_38329 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38329 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38329 + 314] = sha3(address(_37097), address(_37077))
                                        mem[_38329 + 346] = stor4[cd[100]].field_512
                                        mem[_38329 + 261] = 85
                                        mem[_38329 + 378] = 0
                                        mem[64] = _38329 + 410
                                        mem[_38329 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38329 + 414] = _37284
                                        mem[_38329 + 446] = 0
                                        mem[_38329 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39434, stor4[cd[100]].field_512))
                                        mem[_38329 + 510] = 128
                                        mem[_38329 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38329 + 574] = mem[s + _38329 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37097), address(_37077)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37097), address(_37077)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37284, 0, address(sha3(0, stor4[cd[100]].field_0, _39434, stor4[cd[100]].field_512)), 128, 0
                    else:
                        if not mem[(32 * idx + 1) + _27904 + 44 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        require idx + 1 < mem[s]
                        _37286 = mem[(32 * idx + 1) + s + 32]
                        if mem[(32 * idx) + _27904 + 44 len 20] == mem[(32 * idx + 1) + _27904 + 44 len 20]:
                            if idx >= mem[_27904] - 2:
                                mem[0] = cd[100]
                                mem[32] = 4
                                if address(_37077) == mem[(32 * idx + 1) + _27904 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_37077) < mem[(32 * idx + 1) + _27904 + 44 len 20]:
                                    if not address(_37077):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38334 = mem[64]
                                    mem[mem[64] + 32] = address(_37077)
                                    mem[mem[64] + 52] = address(_37097)
                                    _39452 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39454 = sha3(mem[_39452 + 32 len mem[_39452]])
                                    mem[_38334 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38334 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38334 + 125] = _39454
                                    mem[_38334 + 157] = stor4[cd[100]].field_512
                                    mem[_38334 + 72] = 85
                                    mem[_38334 + 189] = 0
                                    mem[64] = _38334 + 221
                                    mem[_38334 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38334 + 225] = 0
                                    mem[_38334 + 257] = _37286
                                    mem[_38334 + 289] = msg.sender
                                    mem[_38334 + 321] = 128
                                    mem[_38334 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38334 + 385] = mem[s + _38334 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _39454, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _39454, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _37286, msg.sender, 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _27904 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38335 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27904 + 32])
                                    mem[mem[64] + 52] = address(_37077)
                                    _39456 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39458 = sha3(mem[_39456 + 32 len mem[_39456]])
                                    mem[_38335 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38335 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38335 + 125] = _39458
                                    mem[_38335 + 157] = stor4[cd[100]].field_512
                                    mem[_38335 + 72] = 85
                                    mem[_38335 + 189] = 0
                                    mem[64] = _38335 + 221
                                    mem[_38335 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38335 + 225] = 0
                                    mem[_38335 + 257] = _37286
                                    mem[_38335 + 289] = msg.sender
                                    mem[_38335 + 321] = 128
                                    mem[_38335 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38335 + 385] = mem[s + _38335 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _39458, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _39458, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _37286, msg.sender, 128, 0
                            else:
                                require idx + 2 < mem[_27904]
                                _37478 = mem[(32 * idx + 2) + _27904 + 32]
                                mem[0] = cd[100]
                                mem[32] = 4
                                if mem[(32 * idx + 1) + _27904 + 44 len 20] == mem[(32 * idx + 2) + _27904 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx + 1) + _27904 + 44 len 20] < mem[(32 * idx + 2) + _27904 + 44 len 20]:
                                    if not mem[(32 * idx + 1) + _27904 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38332 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27904 + 32])
                                    mem[mem[64] + 52] = address(_37478)
                                    _39444 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39446 = sha3(mem[_39444 + 32 len mem[_39444]])
                                    mem[_38332 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38332 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38332 + 125] = _39446
                                    mem[_38332 + 157] = stor4[cd[100]].field_512
                                    mem[_38332 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37077) == address(_37097):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37077) < address(_37097):
                                        if not address(_37077):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38332 + 221] = address(_37077)
                                        mem[_38332 + 241] = address(_37097)
                                        mem[_38332 + 189] = 40
                                        mem[_38332 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38332 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38332 + 314] = sha3(address(_37077), address(_37097))
                                        mem[_38332 + 346] = stor4[cd[100]].field_512
                                        mem[_38332 + 261] = 85
                                        mem[_38332 + 378] = 0
                                        mem[64] = _38332 + 410
                                        mem[_38332 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38332 + 414] = 0
                                        mem[_38332 + 446] = _37286
                                        mem[_38332 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39446, stor4[cd[100]].field_512))
                                        mem[_38332 + 510] = 128
                                        mem[_38332 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38332 + 574] = mem[s + _38332 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37077), address(_37097)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37077), address(_37097)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37286, address(sha3(0, stor4[cd[100]].field_0, _39446, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37097):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38332 + 221] = address(_37097)
                                        mem[_38332 + 241] = address(_37077)
                                        mem[_38332 + 189] = 40
                                        mem[_38332 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38332 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38332 + 314] = sha3(address(_37097), address(_37077))
                                        mem[_38332 + 346] = stor4[cd[100]].field_512
                                        mem[_38332 + 261] = 85
                                        mem[_38332 + 378] = 0
                                        mem[64] = _38332 + 410
                                        mem[_38332 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38332 + 414] = 0
                                        mem[_38332 + 446] = _37286
                                        mem[_38332 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39446, stor4[cd[100]].field_512))
                                        mem[_38332 + 510] = 128
                                        mem[_38332 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38332 + 574] = mem[s + _38332 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37097), address(_37077)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37097), address(_37077)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37286, address(sha3(0, stor4[cd[100]].field_0, _39446, stor4[cd[100]].field_512)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _27904 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38333 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _27904 + 32])
                                    mem[mem[64] + 52] = address(_37097)
                                    _39448 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39450 = sha3(mem[_39448 + 32 len mem[_39448]])
                                    mem[_38333 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38333 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38333 + 125] = _39450
                                    mem[_38333 + 157] = stor4[cd[100]].field_512
                                    mem[_38333 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37077) == address(_37097):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37077) < address(_37097):
                                        if not address(_37077):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38333 + 221] = address(_37077)
                                        mem[_38333 + 241] = address(_37097)
                                        mem[_38333 + 189] = 40
                                        mem[_38333 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38333 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38333 + 314] = sha3(address(_37077), address(_37097))
                                        mem[_38333 + 346] = stor4[cd[100]].field_512
                                        mem[_38333 + 261] = 85
                                        mem[_38333 + 378] = 0
                                        mem[64] = _38333 + 410
                                        mem[_38333 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38333 + 414] = 0
                                        mem[_38333 + 446] = _37286
                                        mem[_38333 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39450, stor4[cd[100]].field_512))
                                        mem[_38333 + 510] = 128
                                        mem[_38333 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38333 + 574] = mem[s + _38333 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37077), address(_37097)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37077), address(_37097)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37286, address(sha3(0, stor4[cd[100]].field_0, _39450, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37097):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38333 + 221] = address(_37097)
                                        mem[_38333 + 241] = address(_37077)
                                        mem[_38333 + 189] = 40
                                        mem[_38333 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38333 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38333 + 314] = sha3(address(_37097), address(_37077))
                                        mem[_38333 + 346] = stor4[cd[100]].field_512
                                        mem[_38333 + 261] = 85
                                        mem[_38333 + 378] = 0
                                        mem[64] = _38333 + 410
                                        mem[_38333 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38333 + 414] = 0
                                        mem[_38333 + 446] = _37286
                                        mem[_38333 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39450, stor4[cd[100]].field_512))
                                        mem[_38333 + 510] = 128
                                        mem[_38333 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38333 + 574] = mem[s + _38333 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37097), address(_37077)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37097), address(_37077)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37286, address(sha3(0, stor4[cd[100]].field_0, _39450, stor4[cd[100]].field_512)), 128, 0
                        else:
                            if idx >= mem[_27904] - 2:
                                mem[0] = cd[100]
                                mem[32] = 4
                                if address(_37077) == mem[(32 * idx + 1) + _27904 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_37077) < mem[(32 * idx + 1) + _27904 + 44 len 20]:
                                    if not address(_37077):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38338 = mem[64]
                                    mem[mem[64] + 32] = address(_37077)
                                    mem[mem[64] + 52] = address(_37097)
                                    _39468 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39470 = sha3(mem[_39468 + 32 len mem[_39468]])
                                    mem[_38338 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38338 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38338 + 125] = _39470
                                    mem[_38338 + 157] = stor4[cd[100]].field_512
                                    mem[_38338 + 72] = 85
                                    mem[_38338 + 189] = 0
                                    mem[64] = _38338 + 221
                                    mem[_38338 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38338 + 225] = _37286
                                    mem[_38338 + 257] = 0
                                    mem[_38338 + 289] = msg.sender
                                    mem[_38338 + 321] = 128
                                    mem[_38338 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38338 + 385] = mem[s + _38338 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _39470, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _39470, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _37286, 0, msg.sender, 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _27904 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38339 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27904 + 32])
                                    mem[mem[64] + 52] = address(_37077)
                                    _39472 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39474 = sha3(mem[_39472 + 32 len mem[_39472]])
                                    mem[_38339 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38339 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38339 + 125] = _39474
                                    mem[_38339 + 157] = stor4[cd[100]].field_512
                                    mem[_38339 + 72] = 85
                                    mem[_38339 + 189] = 0
                                    mem[64] = _38339 + 221
                                    mem[_38339 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38339 + 225] = _37286
                                    mem[_38339 + 257] = 0
                                    mem[_38339 + 289] = msg.sender
                                    mem[_38339 + 321] = 128
                                    mem[_38339 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38339 + 385] = mem[s + _38339 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _39474, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _39474, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _37286, 0, msg.sender, 128, 0
                            else:
                                require idx + 2 < mem[_27904]
                                _37479 = mem[(32 * idx + 2) + _27904 + 32]
                                mem[0] = cd[100]
                                mem[32] = 4
                                if mem[(32 * idx + 1) + _27904 + 44 len 20] == mem[(32 * idx + 2) + _27904 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx + 1) + _27904 + 44 len 20] < mem[(32 * idx + 2) + _27904 + 44 len 20]:
                                    if not mem[(32 * idx + 1) + _27904 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38336 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27904 + 32])
                                    mem[mem[64] + 52] = address(_37479)
                                    _39460 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39462 = sha3(mem[_39460 + 32 len mem[_39460]])
                                    mem[_38336 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38336 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38336 + 125] = _39462
                                    mem[_38336 + 157] = stor4[cd[100]].field_512
                                    mem[_38336 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37077) == address(_37097):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37077) < address(_37097):
                                        if not address(_37077):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38336 + 221] = address(_37077)
                                        mem[_38336 + 241] = address(_37097)
                                        mem[_38336 + 189] = 40
                                        mem[_38336 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38336 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38336 + 314] = sha3(address(_37077), address(_37097))
                                        mem[_38336 + 346] = stor4[cd[100]].field_512
                                        mem[_38336 + 261] = 85
                                        mem[_38336 + 378] = 0
                                        mem[64] = _38336 + 410
                                        mem[_38336 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38336 + 414] = _37286
                                        mem[_38336 + 446] = 0
                                        mem[_38336 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39462, stor4[cd[100]].field_512))
                                        mem[_38336 + 510] = 128
                                        mem[_38336 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38336 + 574] = mem[s + _38336 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37077), address(_37097)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37077), address(_37097)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37286, 0, address(sha3(0, stor4[cd[100]].field_0, _39462, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37097):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38336 + 221] = address(_37097)
                                        mem[_38336 + 241] = address(_37077)
                                        mem[_38336 + 189] = 40
                                        mem[_38336 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38336 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38336 + 314] = sha3(address(_37097), address(_37077))
                                        mem[_38336 + 346] = stor4[cd[100]].field_512
                                        mem[_38336 + 261] = 85
                                        mem[_38336 + 378] = 0
                                        mem[64] = _38336 + 410
                                        mem[_38336 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38336 + 414] = _37286
                                        mem[_38336 + 446] = 0
                                        mem[_38336 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39462, stor4[cd[100]].field_512))
                                        mem[_38336 + 510] = 128
                                        mem[_38336 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38336 + 574] = mem[s + _38336 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37097), address(_37077)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37097), address(_37077)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37286, 0, address(sha3(0, stor4[cd[100]].field_0, _39462, stor4[cd[100]].field_512)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _27904 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38337 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _27904 + 32])
                                    mem[mem[64] + 52] = address(_37097)
                                    _39464 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39466 = sha3(mem[_39464 + 32 len mem[_39464]])
                                    mem[_38337 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38337 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38337 + 125] = _39466
                                    mem[_38337 + 157] = stor4[cd[100]].field_512
                                    mem[_38337 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37077) == address(_37097):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37077) < address(_37097):
                                        if not address(_37077):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38337 + 221] = address(_37077)
                                        mem[_38337 + 241] = address(_37097)
                                        mem[_38337 + 189] = 40
                                        mem[_38337 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38337 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38337 + 314] = sha3(address(_37077), address(_37097))
                                        mem[_38337 + 346] = stor4[cd[100]].field_512
                                        mem[_38337 + 261] = 85
                                        mem[_38337 + 378] = 0
                                        mem[64] = _38337 + 410
                                        mem[_38337 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38337 + 414] = _37286
                                        mem[_38337 + 446] = 0
                                        mem[_38337 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39466, stor4[cd[100]].field_512))
                                        mem[_38337 + 510] = 128
                                        mem[_38337 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38337 + 574] = mem[s + _38337 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37077), address(_37097)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37077), address(_37097)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37286, 0, address(sha3(0, stor4[cd[100]].field_0, _39466, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37097):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38337 + 221] = address(_37097)
                                        mem[_38337 + 241] = address(_37077)
                                        mem[_38337 + 189] = 40
                                        mem[_38337 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38337 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38337 + 314] = sha3(address(_37097), address(_37077))
                                        mem[_38337 + 346] = stor4[cd[100]].field_512
                                        mem[_38337 + 261] = 85
                                        mem[_38337 + 378] = 0
                                        mem[64] = _38337 + 410
                                        mem[_38337 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38337 + 414] = _37286
                                        mem[_38337 + 446] = 0
                                        mem[_38337 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39466, stor4[cd[100]].field_512))
                                        mem[_38337 + 510] = 128
                                        mem[_38337 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38337 + 574] = mem[s + _38337 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37097), address(_37077)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37097), address(_37077)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37286, 0, address(sha3(0, stor4[cd[100]].field_0, _39466, stor4[cd[100]].field_512)), 128, 0
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    continue 
            else:
                if not address(_28094):
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                mem[_18559 + 353] = address(_28094)
                mem[_18559 + 373] = address(_28082)
                mem[_18559 + 321] = 40
                mem[_18559 + 425] = 0xff00000000000000000000000000000000000000000000000000000000000000
                mem[_18559 + 426] = Mask(160, 96, stor4[cd[100]].field_0)
                mem[_18559 + 446] = sha3(address(_28094), address(_28082))
                mem[_18559 + 478] = stor4[cd[100]].field_512
                mem[_18559 + 393] = 85
                mem[64] = _18559 + 510
                require 0 < mem[s]
                _28326 = mem[s + 32]
                mem[_18559 + 514] = address(sha3(0, stor4[cd[100]].field_0, sha3(address(_28094), address(_28082)), stor4[cd[100]].field_512))
                mem[_18559 + 546] = _28326
                require ext_code.size(stor4[cd[100]].field_1024)
                call stor4[cd[100]].field_1024.0xa9059cbb with:
                     gas gas_remaining wei
                    args address(sha3(0, stor4[cd[100]].field_0, sha3(address(_28094), address(_28082)), stor4[cd[100]].field_512)), _28326
                mem[_18559 + 510] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = _18559 + ceil32(return_data.size) + 510
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                require ext_call.return_data[0]
                _37017 = mem[mem[128]]
                idx = 0
                while idx < _37017 - 1:
                    require idx < mem[_27904]
                    _37079 = mem[(32 * idx) + _27904 + 32]
                    require idx + 1 < mem[_27904]
                    _37098 = mem[(32 * idx + 1) + _27904 + 32]
                    if mem[(32 * idx) + _27904 + 44 len 20] == mem[(32 * idx + 1) + _27904 + 44 len 20]:
                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                    if mem[(32 * idx) + _27904 + 44 len 20] < mem[(32 * idx + 1) + _27904 + 44 len 20]:
                        if not mem[(32 * idx) + _27904 + 44 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        require idx + 1 < mem[s]
                        _37288 = mem[(32 * idx + 1) + s + 32]
                        if mem[(32 * idx) + _27904 + 44 len 20] == mem[(32 * idx) + _27904 + 44 len 20]:
                            if idx >= mem[_27904] - 2:
                                mem[0] = cd[100]
                                mem[32] = 4
                                if address(_37079) == mem[(32 * idx + 1) + _27904 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_37079) < mem[(32 * idx + 1) + _27904 + 44 len 20]:
                                    if not address(_37079):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38342 = mem[64]
                                    mem[mem[64] + 32] = address(_37079)
                                    mem[mem[64] + 52] = address(_37098)
                                    _39484 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39486 = sha3(mem[_39484 + 32 len mem[_39484]])
                                    mem[_38342 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38342 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38342 + 125] = _39486
                                    mem[_38342 + 157] = stor4[cd[100]].field_512
                                    mem[_38342 + 72] = 85
                                    mem[_38342 + 189] = 0
                                    mem[64] = _38342 + 221
                                    mem[_38342 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38342 + 225] = 0
                                    mem[_38342 + 257] = _37288
                                    mem[_38342 + 289] = msg.sender
                                    mem[_38342 + 321] = 128
                                    mem[_38342 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38342 + 385] = mem[s + _38342 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _39486, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _39486, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _37288, msg.sender, 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _27904 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38343 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27904 + 32])
                                    mem[mem[64] + 52] = address(_37079)
                                    _39488 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39490 = sha3(mem[_39488 + 32 len mem[_39488]])
                                    mem[_38343 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38343 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38343 + 125] = _39490
                                    mem[_38343 + 157] = stor4[cd[100]].field_512
                                    mem[_38343 + 72] = 85
                                    mem[_38343 + 189] = 0
                                    mem[64] = _38343 + 221
                                    mem[_38343 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38343 + 225] = 0
                                    mem[_38343 + 257] = _37288
                                    mem[_38343 + 289] = msg.sender
                                    mem[_38343 + 321] = 128
                                    mem[_38343 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38343 + 385] = mem[s + _38343 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _39490, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _39490, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _37288, msg.sender, 128, 0
                            else:
                                require idx + 2 < mem[_27904]
                                _37480 = mem[(32 * idx + 2) + _27904 + 32]
                                mem[0] = cd[100]
                                mem[32] = 4
                                if mem[(32 * idx + 1) + _27904 + 44 len 20] == mem[(32 * idx + 2) + _27904 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx + 1) + _27904 + 44 len 20] < mem[(32 * idx + 2) + _27904 + 44 len 20]:
                                    if not mem[(32 * idx + 1) + _27904 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38340 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27904 + 32])
                                    mem[mem[64] + 52] = address(_37480)
                                    _39476 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39478 = sha3(mem[_39476 + 32 len mem[_39476]])
                                    mem[_38340 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38340 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38340 + 125] = _39478
                                    mem[_38340 + 157] = stor4[cd[100]].field_512
                                    mem[_38340 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37079) == address(_37098):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37079) < address(_37098):
                                        if not address(_37079):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38340 + 221] = address(_37079)
                                        mem[_38340 + 241] = address(_37098)
                                        mem[_38340 + 189] = 40
                                        mem[_38340 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38340 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38340 + 314] = sha3(address(_37079), address(_37098))
                                        mem[_38340 + 346] = stor4[cd[100]].field_512
                                        mem[_38340 + 261] = 85
                                        mem[_38340 + 378] = 0
                                        mem[64] = _38340 + 410
                                        mem[_38340 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38340 + 414] = 0
                                        mem[_38340 + 446] = _37288
                                        mem[_38340 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39478, stor4[cd[100]].field_512))
                                        mem[_38340 + 510] = 128
                                        mem[_38340 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38340 + 574] = mem[s + _38340 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37079), address(_37098)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37079), address(_37098)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37288, address(sha3(0, stor4[cd[100]].field_0, _39478, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37098):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38340 + 221] = address(_37098)
                                        mem[_38340 + 241] = address(_37079)
                                        mem[_38340 + 189] = 40
                                        mem[_38340 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38340 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38340 + 314] = sha3(address(_37098), address(_37079))
                                        mem[_38340 + 346] = stor4[cd[100]].field_512
                                        mem[_38340 + 261] = 85
                                        mem[_38340 + 378] = 0
                                        mem[64] = _38340 + 410
                                        mem[_38340 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38340 + 414] = 0
                                        mem[_38340 + 446] = _37288
                                        mem[_38340 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39478, stor4[cd[100]].field_512))
                                        mem[_38340 + 510] = 128
                                        mem[_38340 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38340 + 574] = mem[s + _38340 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37098), address(_37079)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37098), address(_37079)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37288, address(sha3(0, stor4[cd[100]].field_0, _39478, stor4[cd[100]].field_512)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _27904 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38341 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _27904 + 32])
                                    mem[mem[64] + 52] = address(_37098)
                                    _39480 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39482 = sha3(mem[_39480 + 32 len mem[_39480]])
                                    mem[_38341 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38341 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38341 + 125] = _39482
                                    mem[_38341 + 157] = stor4[cd[100]].field_512
                                    mem[_38341 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37079) == address(_37098):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37079) < address(_37098):
                                        if not address(_37079):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38341 + 221] = address(_37079)
                                        mem[_38341 + 241] = address(_37098)
                                        mem[_38341 + 189] = 40
                                        mem[_38341 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38341 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38341 + 314] = sha3(address(_37079), address(_37098))
                                        mem[_38341 + 346] = stor4[cd[100]].field_512
                                        mem[_38341 + 261] = 85
                                        mem[_38341 + 378] = 0
                                        mem[64] = _38341 + 410
                                        mem[_38341 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38341 + 414] = 0
                                        mem[_38341 + 446] = _37288
                                        mem[_38341 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39482, stor4[cd[100]].field_512))
                                        mem[_38341 + 510] = 128
                                        mem[_38341 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38341 + 574] = mem[s + _38341 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37079), address(_37098)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37079), address(_37098)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37288, address(sha3(0, stor4[cd[100]].field_0, _39482, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37098):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38341 + 221] = address(_37098)
                                        mem[_38341 + 241] = address(_37079)
                                        mem[_38341 + 189] = 40
                                        mem[_38341 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38341 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38341 + 314] = sha3(address(_37098), address(_37079))
                                        mem[_38341 + 346] = stor4[cd[100]].field_512
                                        mem[_38341 + 261] = 85
                                        mem[_38341 + 378] = 0
                                        mem[64] = _38341 + 410
                                        mem[_38341 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38341 + 414] = 0
                                        mem[_38341 + 446] = _37288
                                        mem[_38341 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39482, stor4[cd[100]].field_512))
                                        mem[_38341 + 510] = 128
                                        mem[_38341 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38341 + 574] = mem[s + _38341 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37098), address(_37079)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37098), address(_37079)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37288, address(sha3(0, stor4[cd[100]].field_0, _39482, stor4[cd[100]].field_512)), 128, 0
                        else:
                            if idx >= mem[_27904] - 2:
                                mem[0] = cd[100]
                                mem[32] = 4
                                if address(_37079) == mem[(32 * idx + 1) + _27904 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_37079) < mem[(32 * idx + 1) + _27904 + 44 len 20]:
                                    if not address(_37079):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38346 = mem[64]
                                    mem[mem[64] + 32] = address(_37079)
                                    mem[mem[64] + 52] = address(_37098)
                                    _39500 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39502 = sha3(mem[_39500 + 32 len mem[_39500]])
                                    mem[_38346 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38346 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38346 + 125] = _39502
                                    mem[_38346 + 157] = stor4[cd[100]].field_512
                                    mem[_38346 + 72] = 85
                                    mem[_38346 + 189] = 0
                                    mem[64] = _38346 + 221
                                    mem[_38346 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38346 + 225] = _37288
                                    mem[_38346 + 257] = 0
                                    mem[_38346 + 289] = msg.sender
                                    mem[_38346 + 321] = 128
                                    mem[_38346 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38346 + 385] = mem[s + _38346 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _39502, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _39502, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _37288, 0, msg.sender, 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _27904 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38347 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27904 + 32])
                                    mem[mem[64] + 52] = address(_37079)
                                    _39504 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39506 = sha3(mem[_39504 + 32 len mem[_39504]])
                                    mem[_38347 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38347 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38347 + 125] = _39506
                                    mem[_38347 + 157] = stor4[cd[100]].field_512
                                    mem[_38347 + 72] = 85
                                    mem[_38347 + 189] = 0
                                    mem[64] = _38347 + 221
                                    mem[_38347 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38347 + 225] = _37288
                                    mem[_38347 + 257] = 0
                                    mem[_38347 + 289] = msg.sender
                                    mem[_38347 + 321] = 128
                                    mem[_38347 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38347 + 385] = mem[s + _38347 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _39506, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _39506, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _37288, 0, msg.sender, 128, 0
                            else:
                                require idx + 2 < mem[_27904]
                                _37481 = mem[(32 * idx + 2) + _27904 + 32]
                                mem[0] = cd[100]
                                mem[32] = 4
                                if mem[(32 * idx + 1) + _27904 + 44 len 20] == mem[(32 * idx + 2) + _27904 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx + 1) + _27904 + 44 len 20] < mem[(32 * idx + 2) + _27904 + 44 len 20]:
                                    if not mem[(32 * idx + 1) + _27904 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38344 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27904 + 32])
                                    mem[mem[64] + 52] = address(_37481)
                                    _39492 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39494 = sha3(mem[_39492 + 32 len mem[_39492]])
                                    mem[_38344 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38344 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38344 + 125] = _39494
                                    mem[_38344 + 157] = stor4[cd[100]].field_512
                                    mem[_38344 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37079) == address(_37098):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37079) < address(_37098):
                                        if not address(_37079):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38344 + 221] = address(_37079)
                                        mem[_38344 + 241] = address(_37098)
                                        mem[_38344 + 189] = 40
                                        mem[_38344 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38344 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38344 + 314] = sha3(address(_37079), address(_37098))
                                        mem[_38344 + 346] = stor4[cd[100]].field_512
                                        mem[_38344 + 261] = 85
                                        mem[_38344 + 378] = 0
                                        mem[64] = _38344 + 410
                                        mem[_38344 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38344 + 414] = _37288
                                        mem[_38344 + 446] = 0
                                        mem[_38344 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39494, stor4[cd[100]].field_512))
                                        mem[_38344 + 510] = 128
                                        mem[_38344 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38344 + 574] = mem[s + _38344 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37079), address(_37098)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37079), address(_37098)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37288, 0, address(sha3(0, stor4[cd[100]].field_0, _39494, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37098):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38344 + 221] = address(_37098)
                                        mem[_38344 + 241] = address(_37079)
                                        mem[_38344 + 189] = 40
                                        mem[_38344 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38344 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38344 + 314] = sha3(address(_37098), address(_37079))
                                        mem[_38344 + 346] = stor4[cd[100]].field_512
                                        mem[_38344 + 261] = 85
                                        mem[_38344 + 378] = 0
                                        mem[64] = _38344 + 410
                                        mem[_38344 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38344 + 414] = _37288
                                        mem[_38344 + 446] = 0
                                        mem[_38344 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39494, stor4[cd[100]].field_512))
                                        mem[_38344 + 510] = 128
                                        mem[_38344 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38344 + 574] = mem[s + _38344 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37098), address(_37079)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37098), address(_37079)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37288, 0, address(sha3(0, stor4[cd[100]].field_0, _39494, stor4[cd[100]].field_512)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _27904 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38345 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _27904 + 32])
                                    mem[mem[64] + 52] = address(_37098)
                                    _39496 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39498 = sha3(mem[_39496 + 32 len mem[_39496]])
                                    mem[_38345 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38345 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38345 + 125] = _39498
                                    mem[_38345 + 157] = stor4[cd[100]].field_512
                                    mem[_38345 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37079) == address(_37098):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37079) < address(_37098):
                                        if not address(_37079):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38345 + 221] = address(_37079)
                                        mem[_38345 + 241] = address(_37098)
                                        mem[_38345 + 189] = 40
                                        mem[_38345 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38345 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38345 + 314] = sha3(address(_37079), address(_37098))
                                        mem[_38345 + 346] = stor4[cd[100]].field_512
                                        mem[_38345 + 261] = 85
                                        mem[_38345 + 378] = 0
                                        mem[64] = _38345 + 410
                                        mem[_38345 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38345 + 414] = _37288
                                        mem[_38345 + 446] = 0
                                        mem[_38345 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39498, stor4[cd[100]].field_512))
                                        mem[_38345 + 510] = 128
                                        mem[_38345 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38345 + 574] = mem[s + _38345 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37079), address(_37098)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37079), address(_37098)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37288, 0, address(sha3(0, stor4[cd[100]].field_0, _39498, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37098):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38345 + 221] = address(_37098)
                                        mem[_38345 + 241] = address(_37079)
                                        mem[_38345 + 189] = 40
                                        mem[_38345 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38345 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38345 + 314] = sha3(address(_37098), address(_37079))
                                        mem[_38345 + 346] = stor4[cd[100]].field_512
                                        mem[_38345 + 261] = 85
                                        mem[_38345 + 378] = 0
                                        mem[64] = _38345 + 410
                                        mem[_38345 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38345 + 414] = _37288
                                        mem[_38345 + 446] = 0
                                        mem[_38345 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39498, stor4[cd[100]].field_512))
                                        mem[_38345 + 510] = 128
                                        mem[_38345 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38345 + 574] = mem[s + _38345 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37098), address(_37079)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37098), address(_37079)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37288, 0, address(sha3(0, stor4[cd[100]].field_0, _39498, stor4[cd[100]].field_512)), 128, 0
                    else:
                        if not mem[(32 * idx + 1) + _27904 + 44 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        require idx + 1 < mem[s]
                        _37290 = mem[(32 * idx + 1) + s + 32]
                        if mem[(32 * idx) + _27904 + 44 len 20] == mem[(32 * idx + 1) + _27904 + 44 len 20]:
                            if idx >= mem[_27904] - 2:
                                mem[0] = cd[100]
                                mem[32] = 4
                                if address(_37079) == mem[(32 * idx + 1) + _27904 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_37079) < mem[(32 * idx + 1) + _27904 + 44 len 20]:
                                    if not address(_37079):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38350 = mem[64]
                                    mem[mem[64] + 32] = address(_37079)
                                    mem[mem[64] + 52] = address(_37098)
                                    _39516 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39518 = sha3(mem[_39516 + 32 len mem[_39516]])
                                    mem[_38350 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38350 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38350 + 125] = _39518
                                    mem[_38350 + 157] = stor4[cd[100]].field_512
                                    mem[_38350 + 72] = 85
                                    mem[_38350 + 189] = 0
                                    mem[64] = _38350 + 221
                                    mem[_38350 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38350 + 225] = 0
                                    mem[_38350 + 257] = _37290
                                    mem[_38350 + 289] = msg.sender
                                    mem[_38350 + 321] = 128
                                    mem[_38350 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38350 + 385] = mem[s + _38350 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _39518, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _39518, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _37290, msg.sender, 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _27904 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38351 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27904 + 32])
                                    mem[mem[64] + 52] = address(_37079)
                                    _39520 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39522 = sha3(mem[_39520 + 32 len mem[_39520]])
                                    mem[_38351 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38351 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38351 + 125] = _39522
                                    mem[_38351 + 157] = stor4[cd[100]].field_512
                                    mem[_38351 + 72] = 85
                                    mem[_38351 + 189] = 0
                                    mem[64] = _38351 + 221
                                    mem[_38351 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38351 + 225] = 0
                                    mem[_38351 + 257] = _37290
                                    mem[_38351 + 289] = msg.sender
                                    mem[_38351 + 321] = 128
                                    mem[_38351 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38351 + 385] = mem[s + _38351 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _39522, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _39522, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _37290, msg.sender, 128, 0
                            else:
                                require idx + 2 < mem[_27904]
                                _37482 = mem[(32 * idx + 2) + _27904 + 32]
                                mem[0] = cd[100]
                                mem[32] = 4
                                if mem[(32 * idx + 1) + _27904 + 44 len 20] == mem[(32 * idx + 2) + _27904 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx + 1) + _27904 + 44 len 20] < mem[(32 * idx + 2) + _27904 + 44 len 20]:
                                    if not mem[(32 * idx + 1) + _27904 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38348 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27904 + 32])
                                    mem[mem[64] + 52] = address(_37482)
                                    _39508 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39510 = sha3(mem[_39508 + 32 len mem[_39508]])
                                    mem[_38348 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38348 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38348 + 125] = _39510
                                    mem[_38348 + 157] = stor4[cd[100]].field_512
                                    mem[_38348 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37079) == address(_37098):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37079) < address(_37098):
                                        if not address(_37079):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38348 + 221] = address(_37079)
                                        mem[_38348 + 241] = address(_37098)
                                        mem[_38348 + 189] = 40
                                        mem[_38348 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38348 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38348 + 314] = sha3(address(_37079), address(_37098))
                                        mem[_38348 + 346] = stor4[cd[100]].field_512
                                        mem[_38348 + 261] = 85
                                        mem[_38348 + 378] = 0
                                        mem[64] = _38348 + 410
                                        mem[_38348 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38348 + 414] = 0
                                        mem[_38348 + 446] = _37290
                                        mem[_38348 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39510, stor4[cd[100]].field_512))
                                        mem[_38348 + 510] = 128
                                        mem[_38348 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38348 + 574] = mem[s + _38348 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37079), address(_37098)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37079), address(_37098)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37290, address(sha3(0, stor4[cd[100]].field_0, _39510, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37098):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38348 + 221] = address(_37098)
                                        mem[_38348 + 241] = address(_37079)
                                        mem[_38348 + 189] = 40
                                        mem[_38348 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38348 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38348 + 314] = sha3(address(_37098), address(_37079))
                                        mem[_38348 + 346] = stor4[cd[100]].field_512
                                        mem[_38348 + 261] = 85
                                        mem[_38348 + 378] = 0
                                        mem[64] = _38348 + 410
                                        mem[_38348 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38348 + 414] = 0
                                        mem[_38348 + 446] = _37290
                                        mem[_38348 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39510, stor4[cd[100]].field_512))
                                        mem[_38348 + 510] = 128
                                        mem[_38348 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38348 + 574] = mem[s + _38348 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37098), address(_37079)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37098), address(_37079)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37290, address(sha3(0, stor4[cd[100]].field_0, _39510, stor4[cd[100]].field_512)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _27904 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38349 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _27904 + 32])
                                    mem[mem[64] + 52] = address(_37098)
                                    _39512 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39514 = sha3(mem[_39512 + 32 len mem[_39512]])
                                    mem[_38349 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38349 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38349 + 125] = _39514
                                    mem[_38349 + 157] = stor4[cd[100]].field_512
                                    mem[_38349 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37079) == address(_37098):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37079) < address(_37098):
                                        if not address(_37079):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38349 + 221] = address(_37079)
                                        mem[_38349 + 241] = address(_37098)
                                        mem[_38349 + 189] = 40
                                        mem[_38349 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38349 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38349 + 314] = sha3(address(_37079), address(_37098))
                                        mem[_38349 + 346] = stor4[cd[100]].field_512
                                        mem[_38349 + 261] = 85
                                        mem[_38349 + 378] = 0
                                        mem[64] = _38349 + 410
                                        mem[_38349 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38349 + 414] = 0
                                        mem[_38349 + 446] = _37290
                                        mem[_38349 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39514, stor4[cd[100]].field_512))
                                        mem[_38349 + 510] = 128
                                        mem[_38349 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38349 + 574] = mem[s + _38349 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37079), address(_37098)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37079), address(_37098)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37290, address(sha3(0, stor4[cd[100]].field_0, _39514, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37098):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38349 + 221] = address(_37098)
                                        mem[_38349 + 241] = address(_37079)
                                        mem[_38349 + 189] = 40
                                        mem[_38349 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38349 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38349 + 314] = sha3(address(_37098), address(_37079))
                                        mem[_38349 + 346] = stor4[cd[100]].field_512
                                        mem[_38349 + 261] = 85
                                        mem[_38349 + 378] = 0
                                        mem[64] = _38349 + 410
                                        mem[_38349 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38349 + 414] = 0
                                        mem[_38349 + 446] = _37290
                                        mem[_38349 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39514, stor4[cd[100]].field_512))
                                        mem[_38349 + 510] = 128
                                        mem[_38349 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38349 + 574] = mem[s + _38349 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37098), address(_37079)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37098), address(_37079)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37290, address(sha3(0, stor4[cd[100]].field_0, _39514, stor4[cd[100]].field_512)), 128, 0
                        else:
                            if idx >= mem[_27904] - 2:
                                mem[0] = cd[100]
                                mem[32] = 4
                                if address(_37079) == mem[(32 * idx + 1) + _27904 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_37079) < mem[(32 * idx + 1) + _27904 + 44 len 20]:
                                    if not address(_37079):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38354 = mem[64]
                                    mem[mem[64] + 32] = address(_37079)
                                    mem[mem[64] + 52] = address(_37098)
                                    _39532 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39534 = sha3(mem[_39532 + 32 len mem[_39532]])
                                    mem[_38354 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38354 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38354 + 125] = _39534
                                    mem[_38354 + 157] = stor4[cd[100]].field_512
                                    mem[_38354 + 72] = 85
                                    mem[_38354 + 189] = 0
                                    mem[64] = _38354 + 221
                                    mem[_38354 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38354 + 225] = _37290
                                    mem[_38354 + 257] = 0
                                    mem[_38354 + 289] = msg.sender
                                    mem[_38354 + 321] = 128
                                    mem[_38354 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38354 + 385] = mem[s + _38354 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _39534, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _39534, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _37290, 0, msg.sender, 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _27904 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38355 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27904 + 32])
                                    mem[mem[64] + 52] = address(_37079)
                                    _39536 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39538 = sha3(mem[_39536 + 32 len mem[_39536]])
                                    mem[_38355 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38355 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38355 + 125] = _39538
                                    mem[_38355 + 157] = stor4[cd[100]].field_512
                                    mem[_38355 + 72] = 85
                                    mem[_38355 + 189] = 0
                                    mem[64] = _38355 + 221
                                    mem[_38355 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38355 + 225] = _37290
                                    mem[_38355 + 257] = 0
                                    mem[_38355 + 289] = msg.sender
                                    mem[_38355 + 321] = 128
                                    mem[_38355 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38355 + 385] = mem[s + _38355 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _39538, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _39538, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _37290, 0, msg.sender, 128, 0
                            else:
                                require idx + 2 < mem[_27904]
                                _37483 = mem[(32 * idx + 2) + _27904 + 32]
                                mem[0] = cd[100]
                                mem[32] = 4
                                if mem[(32 * idx + 1) + _27904 + 44 len 20] == mem[(32 * idx + 2) + _27904 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx + 1) + _27904 + 44 len 20] < mem[(32 * idx + 2) + _27904 + 44 len 20]:
                                    if not mem[(32 * idx + 1) + _27904 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38352 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27904 + 32])
                                    mem[mem[64] + 52] = address(_37483)
                                    _39524 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39526 = sha3(mem[_39524 + 32 len mem[_39524]])
                                    mem[_38352 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38352 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38352 + 125] = _39526
                                    mem[_38352 + 157] = stor4[cd[100]].field_512
                                    mem[_38352 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37079) == address(_37098):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37079) < address(_37098):
                                        if not address(_37079):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38352 + 221] = address(_37079)
                                        mem[_38352 + 241] = address(_37098)
                                        mem[_38352 + 189] = 40
                                        mem[_38352 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38352 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38352 + 314] = sha3(address(_37079), address(_37098))
                                        mem[_38352 + 346] = stor4[cd[100]].field_512
                                        mem[_38352 + 261] = 85
                                        mem[_38352 + 378] = 0
                                        mem[64] = _38352 + 410
                                        mem[_38352 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38352 + 414] = _37290
                                        mem[_38352 + 446] = 0
                                        mem[_38352 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39526, stor4[cd[100]].field_512))
                                        mem[_38352 + 510] = 128
                                        mem[_38352 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38352 + 574] = mem[s + _38352 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37079), address(_37098)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37079), address(_37098)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37290, 0, address(sha3(0, stor4[cd[100]].field_0, _39526, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37098):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38352 + 221] = address(_37098)
                                        mem[_38352 + 241] = address(_37079)
                                        mem[_38352 + 189] = 40
                                        mem[_38352 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38352 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38352 + 314] = sha3(address(_37098), address(_37079))
                                        mem[_38352 + 346] = stor4[cd[100]].field_512
                                        mem[_38352 + 261] = 85
                                        mem[_38352 + 378] = 0
                                        mem[64] = _38352 + 410
                                        mem[_38352 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38352 + 414] = _37290
                                        mem[_38352 + 446] = 0
                                        mem[_38352 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39526, stor4[cd[100]].field_512))
                                        mem[_38352 + 510] = 128
                                        mem[_38352 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38352 + 574] = mem[s + _38352 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37098), address(_37079)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37098), address(_37079)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37290, 0, address(sha3(0, stor4[cd[100]].field_0, _39526, stor4[cd[100]].field_512)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _27904 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38353 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _27904 + 32])
                                    mem[mem[64] + 52] = address(_37098)
                                    _39528 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39530 = sha3(mem[_39528 + 32 len mem[_39528]])
                                    mem[_38353 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38353 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38353 + 125] = _39530
                                    mem[_38353 + 157] = stor4[cd[100]].field_512
                                    mem[_38353 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37079) == address(_37098):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37079) < address(_37098):
                                        if not address(_37079):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38353 + 221] = address(_37079)
                                        mem[_38353 + 241] = address(_37098)
                                        mem[_38353 + 189] = 40
                                        mem[_38353 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38353 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38353 + 314] = sha3(address(_37079), address(_37098))
                                        mem[_38353 + 346] = stor4[cd[100]].field_512
                                        mem[_38353 + 261] = 85
                                        mem[_38353 + 378] = 0
                                        mem[64] = _38353 + 410
                                        mem[_38353 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38353 + 414] = _37290
                                        mem[_38353 + 446] = 0
                                        mem[_38353 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39530, stor4[cd[100]].field_512))
                                        mem[_38353 + 510] = 128
                                        mem[_38353 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38353 + 574] = mem[s + _38353 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37079), address(_37098)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37079), address(_37098)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37290, 0, address(sha3(0, stor4[cd[100]].field_0, _39530, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37098):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38353 + 221] = address(_37098)
                                        mem[_38353 + 241] = address(_37079)
                                        mem[_38353 + 189] = 40
                                        mem[_38353 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38353 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38353 + 314] = sha3(address(_37098), address(_37079))
                                        mem[_38353 + 346] = stor4[cd[100]].field_512
                                        mem[_38353 + 261] = 85
                                        mem[_38353 + 378] = 0
                                        mem[64] = _38353 + 410
                                        mem[_38353 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38353 + 414] = _37290
                                        mem[_38353 + 446] = 0
                                        mem[_38353 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39530, stor4[cd[100]].field_512))
                                        mem[_38353 + 510] = 128
                                        mem[_38353 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38353 + 574] = mem[s + _38353 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37098), address(_37079)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37098), address(_37079)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37290, 0, address(sha3(0, stor4[cd[100]].field_0, _39530, stor4[cd[100]].field_512)), 128, 0
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    continue 
        else:
            mem[64] = _18559 + ceil32(return_data.size) + 322
            mem[_18559 + 321] = return_data.size
            mem[_18559 + 353 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if 0 == return_data.size:
                revert with 0, 'minPoolETH..', 0
            require return_data.size >= 32
            if mem[_18559 + 353 len 4], 0 <= cd[36]:
                revert with 0, 'minPoolETH..', 0
            require 0 < mem[96]
            _27906 = mem[128]
            mem[0] = cd[100]
            mem[32] = 4
            require mem[mem[128]]
            if mem[mem[128] + 44 len 20] != stor4[cd[100]].field_1024:
                revert with 0, 'SuperRouter: INVALID_PATH'
            require mem[s] - 1 < mem[s]
            if mem[(32 * mem[s] - 1) + s + 32] < 1:
                revert with 0, 'SuperRouter: INSUFFICIENT_OUTPUT_AMOUNT'
            require 0 < mem[s]
            _28034 = mem[s + 32]
            mem[_18559 + ceil32(return_data.size) + 322] = 0xd0e30db000000000000000000000000000000000000000000000000000000000
            require ext_code.size(stor4[cd[100]].field_1024)
            call stor4[cd[100]].field_1024.deposit() with:
               value _28034 wei
                 gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require 0 < mem[mem[128]]
            _28084 = mem[mem[128] + 32]
            require 1 < mem[mem[128]]
            _28095 = mem[mem[128] + 64]
            mem[0] = cd[100]
            mem[32] = 4
            if address(_28084) == address(_28095):
                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
            if address(_28084) < address(_28095):
                if not address(_28084):
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                mem[_18559 + ceil32(return_data.size) + 354] = address(_28084)
                mem[_18559 + ceil32(return_data.size) + 374] = address(_28095)
                mem[_18559 + ceil32(return_data.size) + 322] = 40
                mem[_18559 + ceil32(return_data.size) + 426] = 0xff00000000000000000000000000000000000000000000000000000000000000
                mem[_18559 + ceil32(return_data.size) + 427] = Mask(160, 96, stor4[cd[100]].field_0)
                mem[_18559 + ceil32(return_data.size) + 447] = sha3(address(_28084), address(_28095))
                mem[_18559 + ceil32(return_data.size) + 479] = stor4[cd[100]].field_512
                mem[_18559 + ceil32(return_data.size) + 394] = 85
                mem[64] = _18559 + ceil32(return_data.size) + 511
                require 0 < mem[s]
                _28328 = mem[s + 32]
                mem[_18559 + ceil32(return_data.size) + 515] = address(sha3(0, stor4[cd[100]].field_0, sha3(address(_28084), address(_28095)), stor4[cd[100]].field_512))
                mem[_18559 + ceil32(return_data.size) + 547] = _28328
                require ext_code.size(stor4[cd[100]].field_1024)
                call stor4[cd[100]].field_1024.0xa9059cbb with:
                     gas gas_remaining wei
                    args address(sha3(0, stor4[cd[100]].field_0, sha3(address(_28084), address(_28095)), stor4[cd[100]].field_512)), _28328
                mem[_18559 + ceil32(return_data.size) + 511] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = _18559 + ceil32(return_data.size) + ceil32(return_data.size) + 511
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                require ext_call.return_data[0]
                _37018 = mem[mem[128]]
                idx = 0
                while idx < _37018 - 1:
                    require idx < mem[_27906]
                    _37081 = mem[(32 * idx) + _27906 + 32]
                    require idx + 1 < mem[_27906]
                    _37099 = mem[(32 * idx + 1) + _27906 + 32]
                    if mem[(32 * idx) + _27906 + 44 len 20] == mem[(32 * idx + 1) + _27906 + 44 len 20]:
                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                    if mem[(32 * idx) + _27906 + 44 len 20] < mem[(32 * idx + 1) + _27906 + 44 len 20]:
                        if not mem[(32 * idx) + _27906 + 44 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        require idx + 1 < mem[s]
                        _37292 = mem[(32 * idx + 1) + s + 32]
                        if mem[(32 * idx) + _27906 + 44 len 20] == mem[(32 * idx) + _27906 + 44 len 20]:
                            if idx >= mem[_27906] - 2:
                                mem[0] = cd[100]
                                mem[32] = 4
                                if address(_37081) == mem[(32 * idx + 1) + _27906 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_37081) < mem[(32 * idx + 1) + _27906 + 44 len 20]:
                                    if not address(_37081):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38358 = mem[64]
                                    mem[mem[64] + 32] = address(_37081)
                                    mem[mem[64] + 52] = address(_37099)
                                    _39548 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39550 = sha3(mem[_39548 + 32 len mem[_39548]])
                                    mem[_38358 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38358 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38358 + 125] = _39550
                                    mem[_38358 + 157] = stor4[cd[100]].field_512
                                    mem[_38358 + 72] = 85
                                    mem[_38358 + 189] = 0
                                    mem[64] = _38358 + 221
                                    mem[_38358 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38358 + 225] = 0
                                    mem[_38358 + 257] = _37292
                                    mem[_38358 + 289] = msg.sender
                                    mem[_38358 + 321] = 128
                                    mem[_38358 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38358 + 385] = mem[s + _38358 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _39550, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _39550, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _37292, msg.sender, 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _27906 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38359 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27906 + 32])
                                    mem[mem[64] + 52] = address(_37081)
                                    _39552 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39554 = sha3(mem[_39552 + 32 len mem[_39552]])
                                    mem[_38359 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38359 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38359 + 125] = _39554
                                    mem[_38359 + 157] = stor4[cd[100]].field_512
                                    mem[_38359 + 72] = 85
                                    mem[_38359 + 189] = 0
                                    mem[64] = _38359 + 221
                                    mem[_38359 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38359 + 225] = 0
                                    mem[_38359 + 257] = _37292
                                    mem[_38359 + 289] = msg.sender
                                    mem[_38359 + 321] = 128
                                    mem[_38359 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38359 + 385] = mem[s + _38359 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _39554, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _39554, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _37292, msg.sender, 128, 0
                            else:
                                require idx + 2 < mem[_27906]
                                _37484 = mem[(32 * idx + 2) + _27906 + 32]
                                mem[0] = cd[100]
                                mem[32] = 4
                                if mem[(32 * idx + 1) + _27906 + 44 len 20] == mem[(32 * idx + 2) + _27906 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx + 1) + _27906 + 44 len 20] < mem[(32 * idx + 2) + _27906 + 44 len 20]:
                                    if not mem[(32 * idx + 1) + _27906 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38356 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27906 + 32])
                                    mem[mem[64] + 52] = address(_37484)
                                    _39540 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39542 = sha3(mem[_39540 + 32 len mem[_39540]])
                                    mem[_38356 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38356 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38356 + 125] = _39542
                                    mem[_38356 + 157] = stor4[cd[100]].field_512
                                    mem[_38356 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37081) == address(_37099):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37081) < address(_37099):
                                        if not address(_37081):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38356 + 221] = address(_37081)
                                        mem[_38356 + 241] = address(_37099)
                                        mem[_38356 + 189] = 40
                                        mem[_38356 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38356 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38356 + 314] = sha3(address(_37081), address(_37099))
                                        mem[_38356 + 346] = stor4[cd[100]].field_512
                                        mem[_38356 + 261] = 85
                                        mem[_38356 + 378] = 0
                                        mem[64] = _38356 + 410
                                        mem[_38356 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38356 + 414] = 0
                                        mem[_38356 + 446] = _37292
                                        mem[_38356 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39542, stor4[cd[100]].field_512))
                                        mem[_38356 + 510] = 128
                                        mem[_38356 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38356 + 574] = mem[s + _38356 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37081), address(_37099)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37081), address(_37099)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37292, address(sha3(0, stor4[cd[100]].field_0, _39542, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37099):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38356 + 221] = address(_37099)
                                        mem[_38356 + 241] = address(_37081)
                                        mem[_38356 + 189] = 40
                                        mem[_38356 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38356 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38356 + 314] = sha3(address(_37099), address(_37081))
                                        mem[_38356 + 346] = stor4[cd[100]].field_512
                                        mem[_38356 + 261] = 85
                                        mem[_38356 + 378] = 0
                                        mem[64] = _38356 + 410
                                        mem[_38356 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38356 + 414] = 0
                                        mem[_38356 + 446] = _37292
                                        mem[_38356 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39542, stor4[cd[100]].field_512))
                                        mem[_38356 + 510] = 128
                                        mem[_38356 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38356 + 574] = mem[s + _38356 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37099), address(_37081)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37099), address(_37081)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37292, address(sha3(0, stor4[cd[100]].field_0, _39542, stor4[cd[100]].field_512)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _27906 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38357 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _27906 + 32])
                                    mem[mem[64] + 52] = address(_37099)
                                    _39544 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39546 = sha3(mem[_39544 + 32 len mem[_39544]])
                                    mem[_38357 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38357 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38357 + 125] = _39546
                                    mem[_38357 + 157] = stor4[cd[100]].field_512
                                    mem[_38357 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37081) == address(_37099):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37081) < address(_37099):
                                        if not address(_37081):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38357 + 221] = address(_37081)
                                        mem[_38357 + 241] = address(_37099)
                                        mem[_38357 + 189] = 40
                                        mem[_38357 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38357 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38357 + 314] = sha3(address(_37081), address(_37099))
                                        mem[_38357 + 346] = stor4[cd[100]].field_512
                                        mem[_38357 + 261] = 85
                                        mem[_38357 + 378] = 0
                                        mem[64] = _38357 + 410
                                        mem[_38357 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38357 + 414] = 0
                                        mem[_38357 + 446] = _37292
                                        mem[_38357 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39546, stor4[cd[100]].field_512))
                                        mem[_38357 + 510] = 128
                                        mem[_38357 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38357 + 574] = mem[s + _38357 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37081), address(_37099)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37081), address(_37099)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37292, address(sha3(0, stor4[cd[100]].field_0, _39546, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37099):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38357 + 221] = address(_37099)
                                        mem[_38357 + 241] = address(_37081)
                                        mem[_38357 + 189] = 40
                                        mem[_38357 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38357 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38357 + 314] = sha3(address(_37099), address(_37081))
                                        mem[_38357 + 346] = stor4[cd[100]].field_512
                                        mem[_38357 + 261] = 85
                                        mem[_38357 + 378] = 0
                                        mem[64] = _38357 + 410
                                        mem[_38357 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38357 + 414] = 0
                                        mem[_38357 + 446] = _37292
                                        mem[_38357 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39546, stor4[cd[100]].field_512))
                                        mem[_38357 + 510] = 128
                                        mem[_38357 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38357 + 574] = mem[s + _38357 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37099), address(_37081)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37099), address(_37081)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37292, address(sha3(0, stor4[cd[100]].field_0, _39546, stor4[cd[100]].field_512)), 128, 0
                        else:
                            if idx >= mem[_27906] - 2:
                                mem[0] = cd[100]
                                mem[32] = 4
                                if address(_37081) == mem[(32 * idx + 1) + _27906 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_37081) < mem[(32 * idx + 1) + _27906 + 44 len 20]:
                                    if not address(_37081):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38362 = mem[64]
                                    mem[mem[64] + 32] = address(_37081)
                                    mem[mem[64] + 52] = address(_37099)
                                    _39564 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39566 = sha3(mem[_39564 + 32 len mem[_39564]])
                                    mem[_38362 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38362 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38362 + 125] = _39566
                                    mem[_38362 + 157] = stor4[cd[100]].field_512
                                    mem[_38362 + 72] = 85
                                    mem[_38362 + 189] = 0
                                    mem[64] = _38362 + 221
                                    mem[_38362 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38362 + 225] = _37292
                                    mem[_38362 + 257] = 0
                                    mem[_38362 + 289] = msg.sender
                                    mem[_38362 + 321] = 128
                                    mem[_38362 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38362 + 385] = mem[s + _38362 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _39566, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _39566, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _37292, 0, msg.sender, 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _27906 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38363 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27906 + 32])
                                    mem[mem[64] + 52] = address(_37081)
                                    _39568 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39570 = sha3(mem[_39568 + 32 len mem[_39568]])
                                    mem[_38363 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38363 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38363 + 125] = _39570
                                    mem[_38363 + 157] = stor4[cd[100]].field_512
                                    mem[_38363 + 72] = 85
                                    mem[_38363 + 189] = 0
                                    mem[64] = _38363 + 221
                                    mem[_38363 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38363 + 225] = _37292
                                    mem[_38363 + 257] = 0
                                    mem[_38363 + 289] = msg.sender
                                    mem[_38363 + 321] = 128
                                    mem[_38363 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38363 + 385] = mem[s + _38363 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _39570, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _39570, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _37292, 0, msg.sender, 128, 0
                            else:
                                require idx + 2 < mem[_27906]
                                _37485 = mem[(32 * idx + 2) + _27906 + 32]
                                mem[0] = cd[100]
                                mem[32] = 4
                                if mem[(32 * idx + 1) + _27906 + 44 len 20] == mem[(32 * idx + 2) + _27906 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx + 1) + _27906 + 44 len 20] < mem[(32 * idx + 2) + _27906 + 44 len 20]:
                                    if not mem[(32 * idx + 1) + _27906 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38360 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27906 + 32])
                                    mem[mem[64] + 52] = address(_37485)
                                    _39556 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39558 = sha3(mem[_39556 + 32 len mem[_39556]])
                                    mem[_38360 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38360 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38360 + 125] = _39558
                                    mem[_38360 + 157] = stor4[cd[100]].field_512
                                    mem[_38360 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37081) == address(_37099):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37081) < address(_37099):
                                        if not address(_37081):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38360 + 221] = address(_37081)
                                        mem[_38360 + 241] = address(_37099)
                                        mem[_38360 + 189] = 40
                                        mem[_38360 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38360 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38360 + 314] = sha3(address(_37081), address(_37099))
                                        mem[_38360 + 346] = stor4[cd[100]].field_512
                                        mem[_38360 + 261] = 85
                                        mem[_38360 + 378] = 0
                                        mem[64] = _38360 + 410
                                        mem[_38360 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38360 + 414] = _37292
                                        mem[_38360 + 446] = 0
                                        mem[_38360 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39558, stor4[cd[100]].field_512))
                                        mem[_38360 + 510] = 128
                                        mem[_38360 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38360 + 574] = mem[s + _38360 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37081), address(_37099)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37081), address(_37099)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37292, 0, address(sha3(0, stor4[cd[100]].field_0, _39558, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37099):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38360 + 221] = address(_37099)
                                        mem[_38360 + 241] = address(_37081)
                                        mem[_38360 + 189] = 40
                                        mem[_38360 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38360 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38360 + 314] = sha3(address(_37099), address(_37081))
                                        mem[_38360 + 346] = stor4[cd[100]].field_512
                                        mem[_38360 + 261] = 85
                                        mem[_38360 + 378] = 0
                                        mem[64] = _38360 + 410
                                        mem[_38360 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38360 + 414] = _37292
                                        mem[_38360 + 446] = 0
                                        mem[_38360 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39558, stor4[cd[100]].field_512))
                                        mem[_38360 + 510] = 128
                                        mem[_38360 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38360 + 574] = mem[s + _38360 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37099), address(_37081)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37099), address(_37081)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37292, 0, address(sha3(0, stor4[cd[100]].field_0, _39558, stor4[cd[100]].field_512)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _27906 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38361 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _27906 + 32])
                                    mem[mem[64] + 52] = address(_37099)
                                    _39560 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39562 = sha3(mem[_39560 + 32 len mem[_39560]])
                                    mem[_38361 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38361 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38361 + 125] = _39562
                                    mem[_38361 + 157] = stor4[cd[100]].field_512
                                    mem[_38361 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37081) == address(_37099):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37081) < address(_37099):
                                        if not address(_37081):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38361 + 221] = address(_37081)
                                        mem[_38361 + 241] = address(_37099)
                                        mem[_38361 + 189] = 40
                                        mem[_38361 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38361 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38361 + 314] = sha3(address(_37081), address(_37099))
                                        mem[_38361 + 346] = stor4[cd[100]].field_512
                                        mem[_38361 + 261] = 85
                                        mem[_38361 + 378] = 0
                                        mem[64] = _38361 + 410
                                        mem[_38361 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38361 + 414] = _37292
                                        mem[_38361 + 446] = 0
                                        mem[_38361 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39562, stor4[cd[100]].field_512))
                                        mem[_38361 + 510] = 128
                                        mem[_38361 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38361 + 574] = mem[s + _38361 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37081), address(_37099)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37081), address(_37099)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37292, 0, address(sha3(0, stor4[cd[100]].field_0, _39562, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37099):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38361 + 221] = address(_37099)
                                        mem[_38361 + 241] = address(_37081)
                                        mem[_38361 + 189] = 40
                                        mem[_38361 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38361 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38361 + 314] = sha3(address(_37099), address(_37081))
                                        mem[_38361 + 346] = stor4[cd[100]].field_512
                                        mem[_38361 + 261] = 85
                                        mem[_38361 + 378] = 0
                                        mem[64] = _38361 + 410
                                        mem[_38361 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38361 + 414] = _37292
                                        mem[_38361 + 446] = 0
                                        mem[_38361 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39562, stor4[cd[100]].field_512))
                                        mem[_38361 + 510] = 128
                                        mem[_38361 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38361 + 574] = mem[s + _38361 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37099), address(_37081)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37099), address(_37081)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37292, 0, address(sha3(0, stor4[cd[100]].field_0, _39562, stor4[cd[100]].field_512)), 128, 0
                    else:
                        if not mem[(32 * idx + 1) + _27906 + 44 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        require idx + 1 < mem[s]
                        _37294 = mem[(32 * idx + 1) + s + 32]
                        if mem[(32 * idx) + _27906 + 44 len 20] == mem[(32 * idx + 1) + _27906 + 44 len 20]:
                            if idx >= mem[_27906] - 2:
                                mem[0] = cd[100]
                                mem[32] = 4
                                if address(_37081) == mem[(32 * idx + 1) + _27906 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_37081) < mem[(32 * idx + 1) + _27906 + 44 len 20]:
                                    if not address(_37081):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38366 = mem[64]
                                    mem[mem[64] + 32] = address(_37081)
                                    mem[mem[64] + 52] = address(_37099)
                                    _39580 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39582 = sha3(mem[_39580 + 32 len mem[_39580]])
                                    mem[_38366 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38366 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38366 + 125] = _39582
                                    mem[_38366 + 157] = stor4[cd[100]].field_512
                                    mem[_38366 + 72] = 85
                                    mem[_38366 + 189] = 0
                                    mem[64] = _38366 + 221
                                    mem[_38366 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38366 + 225] = 0
                                    mem[_38366 + 257] = _37294
                                    mem[_38366 + 289] = msg.sender
                                    mem[_38366 + 321] = 128
                                    mem[_38366 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38366 + 385] = mem[s + _38366 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _39582, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _39582, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _37294, msg.sender, 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _27906 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38367 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27906 + 32])
                                    mem[mem[64] + 52] = address(_37081)
                                    _39584 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39586 = sha3(mem[_39584 + 32 len mem[_39584]])
                                    mem[_38367 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38367 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38367 + 125] = _39586
                                    mem[_38367 + 157] = stor4[cd[100]].field_512
                                    mem[_38367 + 72] = 85
                                    mem[_38367 + 189] = 0
                                    mem[64] = _38367 + 221
                                    mem[_38367 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38367 + 225] = 0
                                    mem[_38367 + 257] = _37294
                                    mem[_38367 + 289] = msg.sender
                                    mem[_38367 + 321] = 128
                                    mem[_38367 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38367 + 385] = mem[s + _38367 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _39586, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _39586, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _37294, msg.sender, 128, 0
                            else:
                                require idx + 2 < mem[_27906]
                                _37486 = mem[(32 * idx + 2) + _27906 + 32]
                                mem[0] = cd[100]
                                mem[32] = 4
                                if mem[(32 * idx + 1) + _27906 + 44 len 20] == mem[(32 * idx + 2) + _27906 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx + 1) + _27906 + 44 len 20] < mem[(32 * idx + 2) + _27906 + 44 len 20]:
                                    if not mem[(32 * idx + 1) + _27906 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38364 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27906 + 32])
                                    mem[mem[64] + 52] = address(_37486)
                                    _39572 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39574 = sha3(mem[_39572 + 32 len mem[_39572]])
                                    mem[_38364 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38364 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38364 + 125] = _39574
                                    mem[_38364 + 157] = stor4[cd[100]].field_512
                                    mem[_38364 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37081) == address(_37099):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37081) < address(_37099):
                                        if not address(_37081):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38364 + 221] = address(_37081)
                                        mem[_38364 + 241] = address(_37099)
                                        mem[_38364 + 189] = 40
                                        mem[_38364 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38364 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38364 + 314] = sha3(address(_37081), address(_37099))
                                        mem[_38364 + 346] = stor4[cd[100]].field_512
                                        mem[_38364 + 261] = 85
                                        mem[_38364 + 378] = 0
                                        mem[64] = _38364 + 410
                                        mem[_38364 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38364 + 414] = 0
                                        mem[_38364 + 446] = _37294
                                        mem[_38364 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39574, stor4[cd[100]].field_512))
                                        mem[_38364 + 510] = 128
                                        mem[_38364 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38364 + 574] = mem[s + _38364 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37081), address(_37099)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37081), address(_37099)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37294, address(sha3(0, stor4[cd[100]].field_0, _39574, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37099):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38364 + 221] = address(_37099)
                                        mem[_38364 + 241] = address(_37081)
                                        mem[_38364 + 189] = 40
                                        mem[_38364 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38364 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38364 + 314] = sha3(address(_37099), address(_37081))
                                        mem[_38364 + 346] = stor4[cd[100]].field_512
                                        mem[_38364 + 261] = 85
                                        mem[_38364 + 378] = 0
                                        mem[64] = _38364 + 410
                                        mem[_38364 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38364 + 414] = 0
                                        mem[_38364 + 446] = _37294
                                        mem[_38364 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39574, stor4[cd[100]].field_512))
                                        mem[_38364 + 510] = 128
                                        mem[_38364 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38364 + 574] = mem[s + _38364 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37099), address(_37081)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37099), address(_37081)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37294, address(sha3(0, stor4[cd[100]].field_0, _39574, stor4[cd[100]].field_512)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _27906 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38365 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _27906 + 32])
                                    mem[mem[64] + 52] = address(_37099)
                                    _39576 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39578 = sha3(mem[_39576 + 32 len mem[_39576]])
                                    mem[_38365 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38365 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38365 + 125] = _39578
                                    mem[_38365 + 157] = stor4[cd[100]].field_512
                                    mem[_38365 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37081) == address(_37099):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37081) < address(_37099):
                                        if not address(_37081):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38365 + 221] = address(_37081)
                                        mem[_38365 + 241] = address(_37099)
                                        mem[_38365 + 189] = 40
                                        mem[_38365 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38365 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38365 + 314] = sha3(address(_37081), address(_37099))
                                        mem[_38365 + 346] = stor4[cd[100]].field_512
                                        mem[_38365 + 261] = 85
                                        mem[_38365 + 378] = 0
                                        mem[64] = _38365 + 410
                                        mem[_38365 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38365 + 414] = 0
                                        mem[_38365 + 446] = _37294
                                        mem[_38365 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39578, stor4[cd[100]].field_512))
                                        mem[_38365 + 510] = 128
                                        mem[_38365 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38365 + 574] = mem[s + _38365 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37081), address(_37099)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37081), address(_37099)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37294, address(sha3(0, stor4[cd[100]].field_0, _39578, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37099):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38365 + 221] = address(_37099)
                                        mem[_38365 + 241] = address(_37081)
                                        mem[_38365 + 189] = 40
                                        mem[_38365 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38365 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38365 + 314] = sha3(address(_37099), address(_37081))
                                        mem[_38365 + 346] = stor4[cd[100]].field_512
                                        mem[_38365 + 261] = 85
                                        mem[_38365 + 378] = 0
                                        mem[64] = _38365 + 410
                                        mem[_38365 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38365 + 414] = 0
                                        mem[_38365 + 446] = _37294
                                        mem[_38365 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39578, stor4[cd[100]].field_512))
                                        mem[_38365 + 510] = 128
                                        mem[_38365 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38365 + 574] = mem[s + _38365 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37099), address(_37081)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37099), address(_37081)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37294, address(sha3(0, stor4[cd[100]].field_0, _39578, stor4[cd[100]].field_512)), 128, 0
                        else:
                            if idx >= mem[_27906] - 2:
                                mem[0] = cd[100]
                                mem[32] = 4
                                if address(_37081) == mem[(32 * idx + 1) + _27906 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_37081) < mem[(32 * idx + 1) + _27906 + 44 len 20]:
                                    if not address(_37081):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38370 = mem[64]
                                    mem[mem[64] + 32] = address(_37081)
                                    mem[mem[64] + 52] = address(_37099)
                                    _39596 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39598 = sha3(mem[_39596 + 32 len mem[_39596]])
                                    mem[_38370 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38370 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38370 + 125] = _39598
                                    mem[_38370 + 157] = stor4[cd[100]].field_512
                                    mem[_38370 + 72] = 85
                                    mem[_38370 + 189] = 0
                                    mem[64] = _38370 + 221
                                    mem[_38370 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38370 + 225] = _37294
                                    mem[_38370 + 257] = 0
                                    mem[_38370 + 289] = msg.sender
                                    mem[_38370 + 321] = 128
                                    mem[_38370 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38370 + 385] = mem[s + _38370 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _39598, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _39598, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _37294, 0, msg.sender, 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _27906 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38371 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27906 + 32])
                                    mem[mem[64] + 52] = address(_37081)
                                    _39600 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39602 = sha3(mem[_39600 + 32 len mem[_39600]])
                                    mem[_38371 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38371 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38371 + 125] = _39602
                                    mem[_38371 + 157] = stor4[cd[100]].field_512
                                    mem[_38371 + 72] = 85
                                    mem[_38371 + 189] = 0
                                    mem[64] = _38371 + 221
                                    mem[_38371 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38371 + 225] = _37294
                                    mem[_38371 + 257] = 0
                                    mem[_38371 + 289] = msg.sender
                                    mem[_38371 + 321] = 128
                                    mem[_38371 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38371 + 385] = mem[s + _38371 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _39602, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _39602, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _37294, 0, msg.sender, 128, 0
                            else:
                                require idx + 2 < mem[_27906]
                                _37487 = mem[(32 * idx + 2) + _27906 + 32]
                                mem[0] = cd[100]
                                mem[32] = 4
                                if mem[(32 * idx + 1) + _27906 + 44 len 20] == mem[(32 * idx + 2) + _27906 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx + 1) + _27906 + 44 len 20] < mem[(32 * idx + 2) + _27906 + 44 len 20]:
                                    if not mem[(32 * idx + 1) + _27906 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38368 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27906 + 32])
                                    mem[mem[64] + 52] = address(_37487)
                                    _39588 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39590 = sha3(mem[_39588 + 32 len mem[_39588]])
                                    mem[_38368 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38368 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38368 + 125] = _39590
                                    mem[_38368 + 157] = stor4[cd[100]].field_512
                                    mem[_38368 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37081) == address(_37099):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37081) < address(_37099):
                                        if not address(_37081):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38368 + 221] = address(_37081)
                                        mem[_38368 + 241] = address(_37099)
                                        mem[_38368 + 189] = 40
                                        mem[_38368 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38368 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38368 + 314] = sha3(address(_37081), address(_37099))
                                        mem[_38368 + 346] = stor4[cd[100]].field_512
                                        mem[_38368 + 261] = 85
                                        mem[_38368 + 378] = 0
                                        mem[64] = _38368 + 410
                                        mem[_38368 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38368 + 414] = _37294
                                        mem[_38368 + 446] = 0
                                        mem[_38368 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39590, stor4[cd[100]].field_512))
                                        mem[_38368 + 510] = 128
                                        mem[_38368 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38368 + 574] = mem[s + _38368 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37081), address(_37099)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37081), address(_37099)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37294, 0, address(sha3(0, stor4[cd[100]].field_0, _39590, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37099):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38368 + 221] = address(_37099)
                                        mem[_38368 + 241] = address(_37081)
                                        mem[_38368 + 189] = 40
                                        mem[_38368 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38368 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38368 + 314] = sha3(address(_37099), address(_37081))
                                        mem[_38368 + 346] = stor4[cd[100]].field_512
                                        mem[_38368 + 261] = 85
                                        mem[_38368 + 378] = 0
                                        mem[64] = _38368 + 410
                                        mem[_38368 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38368 + 414] = _37294
                                        mem[_38368 + 446] = 0
                                        mem[_38368 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39590, stor4[cd[100]].field_512))
                                        mem[_38368 + 510] = 128
                                        mem[_38368 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38368 + 574] = mem[s + _38368 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37099), address(_37081)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37099), address(_37081)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37294, 0, address(sha3(0, stor4[cd[100]].field_0, _39590, stor4[cd[100]].field_512)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _27906 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38369 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _27906 + 32])
                                    mem[mem[64] + 52] = address(_37099)
                                    _39592 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39594 = sha3(mem[_39592 + 32 len mem[_39592]])
                                    mem[_38369 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38369 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38369 + 125] = _39594
                                    mem[_38369 + 157] = stor4[cd[100]].field_512
                                    mem[_38369 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37081) == address(_37099):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37081) < address(_37099):
                                        if not address(_37081):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38369 + 221] = address(_37081)
                                        mem[_38369 + 241] = address(_37099)
                                        mem[_38369 + 189] = 40
                                        mem[_38369 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38369 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38369 + 314] = sha3(address(_37081), address(_37099))
                                        mem[_38369 + 346] = stor4[cd[100]].field_512
                                        mem[_38369 + 261] = 85
                                        mem[_38369 + 378] = 0
                                        mem[64] = _38369 + 410
                                        mem[_38369 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38369 + 414] = _37294
                                        mem[_38369 + 446] = 0
                                        mem[_38369 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39594, stor4[cd[100]].field_512))
                                        mem[_38369 + 510] = 128
                                        mem[_38369 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38369 + 574] = mem[s + _38369 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37081), address(_37099)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37081), address(_37099)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37294, 0, address(sha3(0, stor4[cd[100]].field_0, _39594, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37099):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38369 + 221] = address(_37099)
                                        mem[_38369 + 241] = address(_37081)
                                        mem[_38369 + 189] = 40
                                        mem[_38369 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38369 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38369 + 314] = sha3(address(_37099), address(_37081))
                                        mem[_38369 + 346] = stor4[cd[100]].field_512
                                        mem[_38369 + 261] = 85
                                        mem[_38369 + 378] = 0
                                        mem[64] = _38369 + 410
                                        mem[_38369 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38369 + 414] = _37294
                                        mem[_38369 + 446] = 0
                                        mem[_38369 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39594, stor4[cd[100]].field_512))
                                        mem[_38369 + 510] = 128
                                        mem[_38369 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38369 + 574] = mem[s + _38369 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37099), address(_37081)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37099), address(_37081)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37294, 0, address(sha3(0, stor4[cd[100]].field_0, _39594, stor4[cd[100]].field_512)), 128, 0
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    continue 
            else:
                if not address(_28095):
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                mem[_18559 + ceil32(return_data.size) + 354] = address(_28095)
                mem[_18559 + ceil32(return_data.size) + 374] = address(_28084)
                mem[_18559 + ceil32(return_data.size) + 322] = 40
                mem[_18559 + ceil32(return_data.size) + 426] = 0xff00000000000000000000000000000000000000000000000000000000000000
                mem[_18559 + ceil32(return_data.size) + 427] = Mask(160, 96, stor4[cd[100]].field_0)
                mem[_18559 + ceil32(return_data.size) + 447] = sha3(address(_28095), address(_28084))
                mem[_18559 + ceil32(return_data.size) + 479] = stor4[cd[100]].field_512
                mem[_18559 + ceil32(return_data.size) + 394] = 85
                mem[64] = _18559 + ceil32(return_data.size) + 511
                require 0 < mem[s]
                _28330 = mem[s + 32]
                mem[_18559 + ceil32(return_data.size) + 515] = address(sha3(0, stor4[cd[100]].field_0, sha3(address(_28095), address(_28084)), stor4[cd[100]].field_512))
                mem[_18559 + ceil32(return_data.size) + 547] = _28330
                require ext_code.size(stor4[cd[100]].field_1024)
                call stor4[cd[100]].field_1024.0xa9059cbb with:
                     gas gas_remaining wei
                    args address(sha3(0, stor4[cd[100]].field_0, sha3(address(_28095), address(_28084)), stor4[cd[100]].field_512)), _28330
                mem[_18559 + ceil32(return_data.size) + 511] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = _18559 + ceil32(return_data.size) + ceil32(return_data.size) + 511
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                require ext_call.return_data[0]
                _37019 = mem[mem[128]]
                idx = 0
                while idx < _37019 - 1:
                    require idx < mem[_27906]
                    _37083 = mem[(32 * idx) + _27906 + 32]
                    require idx + 1 < mem[_27906]
                    _37100 = mem[(32 * idx + 1) + _27906 + 32]
                    if mem[(32 * idx) + _27906 + 44 len 20] == mem[(32 * idx + 1) + _27906 + 44 len 20]:
                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                    if mem[(32 * idx) + _27906 + 44 len 20] < mem[(32 * idx + 1) + _27906 + 44 len 20]:
                        if not mem[(32 * idx) + _27906 + 44 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        require idx + 1 < mem[s]
                        _37296 = mem[(32 * idx + 1) + s + 32]
                        if mem[(32 * idx) + _27906 + 44 len 20] == mem[(32 * idx) + _27906 + 44 len 20]:
                            if idx >= mem[_27906] - 2:
                                mem[0] = cd[100]
                                mem[32] = 4
                                if address(_37083) == mem[(32 * idx + 1) + _27906 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_37083) < mem[(32 * idx + 1) + _27906 + 44 len 20]:
                                    if not address(_37083):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38374 = mem[64]
                                    mem[mem[64] + 32] = address(_37083)
                                    mem[mem[64] + 52] = address(_37100)
                                    _39612 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39614 = sha3(mem[_39612 + 32 len mem[_39612]])
                                    mem[_38374 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38374 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38374 + 125] = _39614
                                    mem[_38374 + 157] = stor4[cd[100]].field_512
                                    mem[_38374 + 72] = 85
                                    mem[_38374 + 189] = 0
                                    mem[64] = _38374 + 221
                                    mem[_38374 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38374 + 225] = 0
                                    mem[_38374 + 257] = _37296
                                    mem[_38374 + 289] = msg.sender
                                    mem[_38374 + 321] = 128
                                    mem[_38374 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38374 + 385] = mem[s + _38374 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _39614, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _39614, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _37296, msg.sender, 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _27906 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38375 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27906 + 32])
                                    mem[mem[64] + 52] = address(_37083)
                                    _39616 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39618 = sha3(mem[_39616 + 32 len mem[_39616]])
                                    mem[_38375 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38375 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38375 + 125] = _39618
                                    mem[_38375 + 157] = stor4[cd[100]].field_512
                                    mem[_38375 + 72] = 85
                                    mem[_38375 + 189] = 0
                                    mem[64] = _38375 + 221
                                    mem[_38375 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38375 + 225] = 0
                                    mem[_38375 + 257] = _37296
                                    mem[_38375 + 289] = msg.sender
                                    mem[_38375 + 321] = 128
                                    mem[_38375 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38375 + 385] = mem[s + _38375 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _39618, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _39618, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _37296, msg.sender, 128, 0
                            else:
                                require idx + 2 < mem[_27906]
                                _37488 = mem[(32 * idx + 2) + _27906 + 32]
                                mem[0] = cd[100]
                                mem[32] = 4
                                if mem[(32 * idx + 1) + _27906 + 44 len 20] == mem[(32 * idx + 2) + _27906 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx + 1) + _27906 + 44 len 20] < mem[(32 * idx + 2) + _27906 + 44 len 20]:
                                    if not mem[(32 * idx + 1) + _27906 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38372 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27906 + 32])
                                    mem[mem[64] + 52] = address(_37488)
                                    _39604 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39606 = sha3(mem[_39604 + 32 len mem[_39604]])
                                    mem[_38372 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38372 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38372 + 125] = _39606
                                    mem[_38372 + 157] = stor4[cd[100]].field_512
                                    mem[_38372 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37083) == address(_37100):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37083) < address(_37100):
                                        if not address(_37083):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38372 + 221] = address(_37083)
                                        mem[_38372 + 241] = address(_37100)
                                        mem[_38372 + 189] = 40
                                        mem[_38372 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38372 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38372 + 314] = sha3(address(_37083), address(_37100))
                                        mem[_38372 + 346] = stor4[cd[100]].field_512
                                        mem[_38372 + 261] = 85
                                        mem[_38372 + 378] = 0
                                        mem[64] = _38372 + 410
                                        mem[_38372 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38372 + 414] = 0
                                        mem[_38372 + 446] = _37296
                                        mem[_38372 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39606, stor4[cd[100]].field_512))
                                        mem[_38372 + 510] = 128
                                        mem[_38372 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38372 + 574] = mem[s + _38372 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37083), address(_37100)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37083), address(_37100)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37296, address(sha3(0, stor4[cd[100]].field_0, _39606, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37100):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38372 + 221] = address(_37100)
                                        mem[_38372 + 241] = address(_37083)
                                        mem[_38372 + 189] = 40
                                        mem[_38372 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38372 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38372 + 314] = sha3(address(_37100), address(_37083))
                                        mem[_38372 + 346] = stor4[cd[100]].field_512
                                        mem[_38372 + 261] = 85
                                        mem[_38372 + 378] = 0
                                        mem[64] = _38372 + 410
                                        mem[_38372 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38372 + 414] = 0
                                        mem[_38372 + 446] = _37296
                                        mem[_38372 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39606, stor4[cd[100]].field_512))
                                        mem[_38372 + 510] = 128
                                        mem[_38372 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38372 + 574] = mem[s + _38372 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37100), address(_37083)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37100), address(_37083)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37296, address(sha3(0, stor4[cd[100]].field_0, _39606, stor4[cd[100]].field_512)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _27906 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38373 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _27906 + 32])
                                    mem[mem[64] + 52] = address(_37100)
                                    _39608 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39610 = sha3(mem[_39608 + 32 len mem[_39608]])
                                    mem[_38373 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38373 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38373 + 125] = _39610
                                    mem[_38373 + 157] = stor4[cd[100]].field_512
                                    mem[_38373 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37083) == address(_37100):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37083) < address(_37100):
                                        if not address(_37083):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38373 + 221] = address(_37083)
                                        mem[_38373 + 241] = address(_37100)
                                        mem[_38373 + 189] = 40
                                        mem[_38373 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38373 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38373 + 314] = sha3(address(_37083), address(_37100))
                                        mem[_38373 + 346] = stor4[cd[100]].field_512
                                        mem[_38373 + 261] = 85
                                        mem[_38373 + 378] = 0
                                        mem[64] = _38373 + 410
                                        mem[_38373 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38373 + 414] = 0
                                        mem[_38373 + 446] = _37296
                                        mem[_38373 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39610, stor4[cd[100]].field_512))
                                        mem[_38373 + 510] = 128
                                        mem[_38373 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38373 + 574] = mem[s + _38373 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37083), address(_37100)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37083), address(_37100)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37296, address(sha3(0, stor4[cd[100]].field_0, _39610, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37100):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38373 + 221] = address(_37100)
                                        mem[_38373 + 241] = address(_37083)
                                        mem[_38373 + 189] = 40
                                        mem[_38373 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38373 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38373 + 314] = sha3(address(_37100), address(_37083))
                                        mem[_38373 + 346] = stor4[cd[100]].field_512
                                        mem[_38373 + 261] = 85
                                        mem[_38373 + 378] = 0
                                        mem[64] = _38373 + 410
                                        mem[_38373 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38373 + 414] = 0
                                        mem[_38373 + 446] = _37296
                                        mem[_38373 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39610, stor4[cd[100]].field_512))
                                        mem[_38373 + 510] = 128
                                        mem[_38373 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38373 + 574] = mem[s + _38373 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37100), address(_37083)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37100), address(_37083)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37296, address(sha3(0, stor4[cd[100]].field_0, _39610, stor4[cd[100]].field_512)), 128, 0
                        else:
                            if idx >= mem[_27906] - 2:
                                mem[0] = cd[100]
                                mem[32] = 4
                                if address(_37083) == mem[(32 * idx + 1) + _27906 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_37083) < mem[(32 * idx + 1) + _27906 + 44 len 20]:
                                    if not address(_37083):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38378 = mem[64]
                                    mem[mem[64] + 32] = address(_37083)
                                    mem[mem[64] + 52] = address(_37100)
                                    _39628 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39630 = sha3(mem[_39628 + 32 len mem[_39628]])
                                    mem[_38378 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38378 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38378 + 125] = _39630
                                    mem[_38378 + 157] = stor4[cd[100]].field_512
                                    mem[_38378 + 72] = 85
                                    mem[_38378 + 189] = 0
                                    mem[64] = _38378 + 221
                                    mem[_38378 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38378 + 225] = _37296
                                    mem[_38378 + 257] = 0
                                    mem[_38378 + 289] = msg.sender
                                    mem[_38378 + 321] = 128
                                    mem[_38378 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38378 + 385] = mem[s + _38378 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _39630, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _39630, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _37296, 0, msg.sender, 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _27906 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38379 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27906 + 32])
                                    mem[mem[64] + 52] = address(_37083)
                                    _39632 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39634 = sha3(mem[_39632 + 32 len mem[_39632]])
                                    mem[_38379 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38379 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38379 + 125] = _39634
                                    mem[_38379 + 157] = stor4[cd[100]].field_512
                                    mem[_38379 + 72] = 85
                                    mem[_38379 + 189] = 0
                                    mem[64] = _38379 + 221
                                    mem[_38379 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38379 + 225] = _37296
                                    mem[_38379 + 257] = 0
                                    mem[_38379 + 289] = msg.sender
                                    mem[_38379 + 321] = 128
                                    mem[_38379 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38379 + 385] = mem[s + _38379 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _39634, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _39634, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _37296, 0, msg.sender, 128, 0
                            else:
                                require idx + 2 < mem[_27906]
                                _37489 = mem[(32 * idx + 2) + _27906 + 32]
                                mem[0] = cd[100]
                                mem[32] = 4
                                if mem[(32 * idx + 1) + _27906 + 44 len 20] == mem[(32 * idx + 2) + _27906 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx + 1) + _27906 + 44 len 20] < mem[(32 * idx + 2) + _27906 + 44 len 20]:
                                    if not mem[(32 * idx + 1) + _27906 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38376 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27906 + 32])
                                    mem[mem[64] + 52] = address(_37489)
                                    _39620 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39622 = sha3(mem[_39620 + 32 len mem[_39620]])
                                    mem[_38376 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38376 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38376 + 125] = _39622
                                    mem[_38376 + 157] = stor4[cd[100]].field_512
                                    mem[_38376 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37083) == address(_37100):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37083) < address(_37100):
                                        if not address(_37083):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38376 + 221] = address(_37083)
                                        mem[_38376 + 241] = address(_37100)
                                        mem[_38376 + 189] = 40
                                        mem[_38376 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38376 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38376 + 314] = sha3(address(_37083), address(_37100))
                                        mem[_38376 + 346] = stor4[cd[100]].field_512
                                        mem[_38376 + 261] = 85
                                        mem[_38376 + 378] = 0
                                        mem[64] = _38376 + 410
                                        mem[_38376 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38376 + 414] = _37296
                                        mem[_38376 + 446] = 0
                                        mem[_38376 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39622, stor4[cd[100]].field_512))
                                        mem[_38376 + 510] = 128
                                        mem[_38376 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38376 + 574] = mem[s + _38376 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37083), address(_37100)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37083), address(_37100)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37296, 0, address(sha3(0, stor4[cd[100]].field_0, _39622, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37100):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38376 + 221] = address(_37100)
                                        mem[_38376 + 241] = address(_37083)
                                        mem[_38376 + 189] = 40
                                        mem[_38376 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38376 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38376 + 314] = sha3(address(_37100), address(_37083))
                                        mem[_38376 + 346] = stor4[cd[100]].field_512
                                        mem[_38376 + 261] = 85
                                        mem[_38376 + 378] = 0
                                        mem[64] = _38376 + 410
                                        mem[_38376 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38376 + 414] = _37296
                                        mem[_38376 + 446] = 0
                                        mem[_38376 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39622, stor4[cd[100]].field_512))
                                        mem[_38376 + 510] = 128
                                        mem[_38376 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38376 + 574] = mem[s + _38376 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37100), address(_37083)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37100), address(_37083)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37296, 0, address(sha3(0, stor4[cd[100]].field_0, _39622, stor4[cd[100]].field_512)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _27906 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38377 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _27906 + 32])
                                    mem[mem[64] + 52] = address(_37100)
                                    _39624 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39626 = sha3(mem[_39624 + 32 len mem[_39624]])
                                    mem[_38377 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38377 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38377 + 125] = _39626
                                    mem[_38377 + 157] = stor4[cd[100]].field_512
                                    mem[_38377 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37083) == address(_37100):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37083) < address(_37100):
                                        if not address(_37083):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38377 + 221] = address(_37083)
                                        mem[_38377 + 241] = address(_37100)
                                        mem[_38377 + 189] = 40
                                        mem[_38377 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38377 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38377 + 314] = sha3(address(_37083), address(_37100))
                                        mem[_38377 + 346] = stor4[cd[100]].field_512
                                        mem[_38377 + 261] = 85
                                        mem[_38377 + 378] = 0
                                        mem[64] = _38377 + 410
                                        mem[_38377 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38377 + 414] = _37296
                                        mem[_38377 + 446] = 0
                                        mem[_38377 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39626, stor4[cd[100]].field_512))
                                        mem[_38377 + 510] = 128
                                        mem[_38377 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38377 + 574] = mem[s + _38377 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37083), address(_37100)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37083), address(_37100)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37296, 0, address(sha3(0, stor4[cd[100]].field_0, _39626, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37100):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38377 + 221] = address(_37100)
                                        mem[_38377 + 241] = address(_37083)
                                        mem[_38377 + 189] = 40
                                        mem[_38377 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38377 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38377 + 314] = sha3(address(_37100), address(_37083))
                                        mem[_38377 + 346] = stor4[cd[100]].field_512
                                        mem[_38377 + 261] = 85
                                        mem[_38377 + 378] = 0
                                        mem[64] = _38377 + 410
                                        mem[_38377 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38377 + 414] = _37296
                                        mem[_38377 + 446] = 0
                                        mem[_38377 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39626, stor4[cd[100]].field_512))
                                        mem[_38377 + 510] = 128
                                        mem[_38377 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38377 + 574] = mem[s + _38377 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37100), address(_37083)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37100), address(_37083)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37296, 0, address(sha3(0, stor4[cd[100]].field_0, _39626, stor4[cd[100]].field_512)), 128, 0
                    else:
                        if not mem[(32 * idx + 1) + _27906 + 44 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        require idx + 1 < mem[s]
                        _37298 = mem[(32 * idx + 1) + s + 32]
                        if mem[(32 * idx) + _27906 + 44 len 20] == mem[(32 * idx + 1) + _27906 + 44 len 20]:
                            if idx >= mem[_27906] - 2:
                                mem[0] = cd[100]
                                mem[32] = 4
                                if address(_37083) == mem[(32 * idx + 1) + _27906 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_37083) < mem[(32 * idx + 1) + _27906 + 44 len 20]:
                                    if not address(_37083):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38382 = mem[64]
                                    mem[mem[64] + 32] = address(_37083)
                                    mem[mem[64] + 52] = address(_37100)
                                    _39644 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39646 = sha3(mem[_39644 + 32 len mem[_39644]])
                                    mem[_38382 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38382 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38382 + 125] = _39646
                                    mem[_38382 + 157] = stor4[cd[100]].field_512
                                    mem[_38382 + 72] = 85
                                    mem[_38382 + 189] = 0
                                    mem[64] = _38382 + 221
                                    mem[_38382 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38382 + 225] = 0
                                    mem[_38382 + 257] = _37298
                                    mem[_38382 + 289] = msg.sender
                                    mem[_38382 + 321] = 128
                                    mem[_38382 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38382 + 385] = mem[s + _38382 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _39646, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _39646, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _37298, msg.sender, 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _27906 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38383 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27906 + 32])
                                    mem[mem[64] + 52] = address(_37083)
                                    _39648 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39650 = sha3(mem[_39648 + 32 len mem[_39648]])
                                    mem[_38383 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38383 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38383 + 125] = _39650
                                    mem[_38383 + 157] = stor4[cd[100]].field_512
                                    mem[_38383 + 72] = 85
                                    mem[_38383 + 189] = 0
                                    mem[64] = _38383 + 221
                                    mem[_38383 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38383 + 225] = 0
                                    mem[_38383 + 257] = _37298
                                    mem[_38383 + 289] = msg.sender
                                    mem[_38383 + 321] = 128
                                    mem[_38383 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38383 + 385] = mem[s + _38383 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _39650, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _39650, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _37298, msg.sender, 128, 0
                            else:
                                require idx + 2 < mem[_27906]
                                _37490 = mem[(32 * idx + 2) + _27906 + 32]
                                mem[0] = cd[100]
                                mem[32] = 4
                                if mem[(32 * idx + 1) + _27906 + 44 len 20] == mem[(32 * idx + 2) + _27906 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx + 1) + _27906 + 44 len 20] < mem[(32 * idx + 2) + _27906 + 44 len 20]:
                                    if not mem[(32 * idx + 1) + _27906 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38380 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27906 + 32])
                                    mem[mem[64] + 52] = address(_37490)
                                    _39636 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39638 = sha3(mem[_39636 + 32 len mem[_39636]])
                                    mem[_38380 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38380 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38380 + 125] = _39638
                                    mem[_38380 + 157] = stor4[cd[100]].field_512
                                    mem[_38380 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37083) == address(_37100):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37083) < address(_37100):
                                        if not address(_37083):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38380 + 221] = address(_37083)
                                        mem[_38380 + 241] = address(_37100)
                                        mem[_38380 + 189] = 40
                                        mem[_38380 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38380 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38380 + 314] = sha3(address(_37083), address(_37100))
                                        mem[_38380 + 346] = stor4[cd[100]].field_512
                                        mem[_38380 + 261] = 85
                                        mem[_38380 + 378] = 0
                                        mem[64] = _38380 + 410
                                        mem[_38380 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38380 + 414] = 0
                                        mem[_38380 + 446] = _37298
                                        mem[_38380 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39638, stor4[cd[100]].field_512))
                                        mem[_38380 + 510] = 128
                                        mem[_38380 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38380 + 574] = mem[s + _38380 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37083), address(_37100)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37083), address(_37100)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37298, address(sha3(0, stor4[cd[100]].field_0, _39638, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37100):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38380 + 221] = address(_37100)
                                        mem[_38380 + 241] = address(_37083)
                                        mem[_38380 + 189] = 40
                                        mem[_38380 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38380 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38380 + 314] = sha3(address(_37100), address(_37083))
                                        mem[_38380 + 346] = stor4[cd[100]].field_512
                                        mem[_38380 + 261] = 85
                                        mem[_38380 + 378] = 0
                                        mem[64] = _38380 + 410
                                        mem[_38380 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38380 + 414] = 0
                                        mem[_38380 + 446] = _37298
                                        mem[_38380 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39638, stor4[cd[100]].field_512))
                                        mem[_38380 + 510] = 128
                                        mem[_38380 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38380 + 574] = mem[s + _38380 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37100), address(_37083)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37100), address(_37083)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37298, address(sha3(0, stor4[cd[100]].field_0, _39638, stor4[cd[100]].field_512)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _27906 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38381 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _27906 + 32])
                                    mem[mem[64] + 52] = address(_37100)
                                    _39640 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39642 = sha3(mem[_39640 + 32 len mem[_39640]])
                                    mem[_38381 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38381 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38381 + 125] = _39642
                                    mem[_38381 + 157] = stor4[cd[100]].field_512
                                    mem[_38381 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37083) == address(_37100):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37083) < address(_37100):
                                        if not address(_37083):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38381 + 221] = address(_37083)
                                        mem[_38381 + 241] = address(_37100)
                                        mem[_38381 + 189] = 40
                                        mem[_38381 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38381 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38381 + 314] = sha3(address(_37083), address(_37100))
                                        mem[_38381 + 346] = stor4[cd[100]].field_512
                                        mem[_38381 + 261] = 85
                                        mem[_38381 + 378] = 0
                                        mem[64] = _38381 + 410
                                        mem[_38381 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38381 + 414] = 0
                                        mem[_38381 + 446] = _37298
                                        mem[_38381 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39642, stor4[cd[100]].field_512))
                                        mem[_38381 + 510] = 128
                                        mem[_38381 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38381 + 574] = mem[s + _38381 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37083), address(_37100)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37083), address(_37100)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37298, address(sha3(0, stor4[cd[100]].field_0, _39642, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37100):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38381 + 221] = address(_37100)
                                        mem[_38381 + 241] = address(_37083)
                                        mem[_38381 + 189] = 40
                                        mem[_38381 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38381 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38381 + 314] = sha3(address(_37100), address(_37083))
                                        mem[_38381 + 346] = stor4[cd[100]].field_512
                                        mem[_38381 + 261] = 85
                                        mem[_38381 + 378] = 0
                                        mem[64] = _38381 + 410
                                        mem[_38381 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38381 + 414] = 0
                                        mem[_38381 + 446] = _37298
                                        mem[_38381 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39642, stor4[cd[100]].field_512))
                                        mem[_38381 + 510] = 128
                                        mem[_38381 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38381 + 574] = mem[s + _38381 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37100), address(_37083)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37100), address(_37083)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _37298, address(sha3(0, stor4[cd[100]].field_0, _39642, stor4[cd[100]].field_512)), 128, 0
                        else:
                            if idx >= mem[_27906] - 2:
                                mem[0] = cd[100]
                                mem[32] = 4
                                if address(_37083) == mem[(32 * idx + 1) + _27906 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_37083) < mem[(32 * idx + 1) + _27906 + 44 len 20]:
                                    if not address(_37083):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38386 = mem[64]
                                    mem[mem[64] + 32] = address(_37083)
                                    mem[mem[64] + 52] = address(_37100)
                                    _39660 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39662 = sha3(mem[_39660 + 32 len mem[_39660]])
                                    mem[_38386 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38386 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38386 + 125] = _39662
                                    mem[_38386 + 157] = stor4[cd[100]].field_512
                                    mem[_38386 + 72] = 85
                                    mem[_38386 + 189] = 0
                                    mem[64] = _38386 + 221
                                    mem[_38386 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38386 + 225] = _37298
                                    mem[_38386 + 257] = 0
                                    mem[_38386 + 289] = msg.sender
                                    mem[_38386 + 321] = 128
                                    mem[_38386 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38386 + 385] = mem[s + _38386 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _39662, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _39662, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _37298, 0, msg.sender, 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _27906 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38387 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27906 + 32])
                                    mem[mem[64] + 52] = address(_37083)
                                    _39664 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39666 = sha3(mem[_39664 + 32 len mem[_39664]])
                                    mem[_38387 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38387 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38387 + 125] = _39666
                                    mem[_38387 + 157] = stor4[cd[100]].field_512
                                    mem[_38387 + 72] = 85
                                    mem[_38387 + 189] = 0
                                    mem[64] = _38387 + 221
                                    mem[_38387 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_38387 + 225] = _37298
                                    mem[_38387 + 257] = 0
                                    mem[_38387 + 289] = msg.sender
                                    mem[_38387 + 321] = 128
                                    mem[_38387 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _38387 + 385] = mem[s + _38387 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, _39666, stor4[cd[100]].field_512)))
                                    call address(sha3(0, stor4[cd[100]].field_0, _39666, stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _37298, 0, msg.sender, 128, 0
                            else:
                                require idx + 2 < mem[_27906]
                                _37491 = mem[(32 * idx + 2) + _27906 + 32]
                                mem[0] = cd[100]
                                mem[32] = 4
                                if mem[(32 * idx + 1) + _27906 + 44 len 20] == mem[(32 * idx + 2) + _27906 + 44 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx + 1) + _27906 + 44 len 20] < mem[(32 * idx + 2) + _27906 + 44 len 20]:
                                    if not mem[(32 * idx + 1) + _27906 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38384 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _27906 + 32])
                                    mem[mem[64] + 52] = address(_37491)
                                    _39652 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39654 = sha3(mem[_39652 + 32 len mem[_39652]])
                                    mem[_38384 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38384 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38384 + 125] = _39654
                                    mem[_38384 + 157] = stor4[cd[100]].field_512
                                    mem[_38384 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37083) == address(_37100):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37083) < address(_37100):
                                        if not address(_37083):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38384 + 221] = address(_37083)
                                        mem[_38384 + 241] = address(_37100)
                                        mem[_38384 + 189] = 40
                                        mem[_38384 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38384 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38384 + 314] = sha3(address(_37083), address(_37100))
                                        mem[_38384 + 346] = stor4[cd[100]].field_512
                                        mem[_38384 + 261] = 85
                                        mem[_38384 + 378] = 0
                                        mem[64] = _38384 + 410
                                        mem[_38384 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38384 + 414] = _37298
                                        mem[_38384 + 446] = 0
                                        mem[_38384 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39654, stor4[cd[100]].field_512))
                                        mem[_38384 + 510] = 128
                                        mem[_38384 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38384 + 574] = mem[s + _38384 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37083), address(_37100)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37083), address(_37100)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37298, 0, address(sha3(0, stor4[cd[100]].field_0, _39654, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37100):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38384 + 221] = address(_37100)
                                        mem[_38384 + 241] = address(_37083)
                                        mem[_38384 + 189] = 40
                                        mem[_38384 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38384 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38384 + 314] = sha3(address(_37100), address(_37083))
                                        mem[_38384 + 346] = stor4[cd[100]].field_512
                                        mem[_38384 + 261] = 85
                                        mem[_38384 + 378] = 0
                                        mem[64] = _38384 + 410
                                        mem[_38384 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38384 + 414] = _37298
                                        mem[_38384 + 446] = 0
                                        mem[_38384 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39654, stor4[cd[100]].field_512))
                                        mem[_38384 + 510] = 128
                                        mem[_38384 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38384 + 574] = mem[s + _38384 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37100), address(_37083)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37100), address(_37083)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37298, 0, address(sha3(0, stor4[cd[100]].field_0, _39654, stor4[cd[100]].field_512)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _27906 + 44 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _38385 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _27906 + 32])
                                    mem[mem[64] + 52] = address(_37100)
                                    _39656 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _39658 = sha3(mem[_39656 + 32 len mem[_39656]])
                                    mem[_38385 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_38385 + 105] = Mask(160, 96, stor4[cd[100]].field_0)
                                    mem[_38385 + 125] = _39658
                                    mem[_38385 + 157] = stor4[cd[100]].field_512
                                    mem[_38385 + 72] = 85
                                    mem[0] = cd[100]
                                    mem[32] = 4
                                    if address(_37083) == address(_37100):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_37083) < address(_37100):
                                        if not address(_37083):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38385 + 221] = address(_37083)
                                        mem[_38385 + 241] = address(_37100)
                                        mem[_38385 + 189] = 40
                                        mem[_38385 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38385 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38385 + 314] = sha3(address(_37083), address(_37100))
                                        mem[_38385 + 346] = stor4[cd[100]].field_512
                                        mem[_38385 + 261] = 85
                                        mem[_38385 + 378] = 0
                                        mem[64] = _38385 + 410
                                        mem[_38385 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38385 + 414] = _37298
                                        mem[_38385 + 446] = 0
                                        mem[_38385 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39658, stor4[cd[100]].field_512))
                                        mem[_38385 + 510] = 128
                                        mem[_38385 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38385 + 574] = mem[s + _38385 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37083), address(_37100)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37083), address(_37100)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37298, 0, address(sha3(0, stor4[cd[100]].field_0, _39658, stor4[cd[100]].field_512)), 128, 0
                                    else:
                                        if not address(_37100):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_38385 + 221] = address(_37100)
                                        mem[_38385 + 241] = address(_37083)
                                        mem[_38385 + 189] = 40
                                        mem[_38385 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_38385 + 294] = Mask(160, 96, stor4[cd[100]].field_0)
                                        mem[_38385 + 314] = sha3(address(_37100), address(_37083))
                                        mem[_38385 + 346] = stor4[cd[100]].field_512
                                        mem[_38385 + 261] = 85
                                        mem[_38385 + 378] = 0
                                        mem[64] = _38385 + 410
                                        mem[_38385 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_38385 + 414] = _37298
                                        mem[_38385 + 446] = 0
                                        mem[_38385 + 478] = address(sha3(0, stor4[cd[100]].field_0, _39658, stor4[cd[100]].field_512))
                                        mem[_38385 + 510] = 128
                                        mem[_38385 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _38385 + 574] = mem[s + _38385 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37100), address(_37083)), stor4[cd[100]].field_512)))
                                        call address(sha3(0, stor4[cd[100]].field_0, sha3(address(_37100), address(_37083)), stor4[cd[100]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _37298, 0, address(sha3(0, stor4[cd[100]].field_0, _39658, stor4[cd[100]].field_512)), 128, 0
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    continue 
}

function sub_bc881679(?) {
    require calldata.size - 4 >= 96
    require cd[36] <= test266151307()
    require cd[36] + 35 < calldata.size
    require ('cd', 36).length <= test266151307()
    require cd[36] + (32 * ('cd', 36).length) + 36 <= calldata.size
    if not uint8(stor2[msg.sender]):
        revert with 0, 'Ownable: caller is not the Admin'
    mem[96] = ('cd', 36).length
    mem[128 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
    mem[0] = cd[68]
    mem[32] = 4
    if ('cd', 36).length < 2:
        revert with 0, 'PancakeLibrary: INVALID_PATH'
    require ('cd', 36).length <= test266151307()
    mem[(32 * ('cd', 36).length) + 128] = ('cd', 36).length
    mem[64] = (64 * ('cd', 36).length) + 160
    if not ('cd', 36).length:
        require 0 < ('cd', 36).length
        mem[(32 * ('cd', 36).length) + 160] = cd[4]
        idx = 0
        while idx < ('cd', 36).length - 1:
            require idx < mem[96]
            _19101 = mem[(32 * idx) + 128]
            require idx + 1 < mem[96]
            _19105 = mem[(32 * idx + 1) + 128]
            if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
            if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                if not mem[(32 * idx) + 140 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                    if not mem[(32 * idx) + 140 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    _19135 = mem[64]
                    mem[mem[64] + 32] = address(mem[(32 * idx) + 128])
                    mem[mem[64] + 52] = address(_19105)
                    _19151 = mem[64]
                    mem[mem[64]] = 40
                    mem[64] = mem[64] + 72
                    _19153 = sha3(mem[_19151 + 32 len mem[_19151]])
                    mem[_19135 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_19135 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                    mem[_19135 + 125] = _19153
                    mem[_19135 + 157] = stor4[cd[68]].field_512
                    mem[_19135 + 72] = 85
                    if address(_19101) == address(_19105):
                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                    if address(_19101) < address(_19105):
                        if not address(_19101):
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_19135 + 221] = address(_19101)
                        mem[_19135 + 241] = address(_19105)
                        mem[_19135 + 189] = 40
                        mem[_19135 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_19135 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                        mem[_19135 + 314] = sha3(address(_19101), address(_19105))
                        mem[_19135 + 346] = stor4[cd[68]].field_512
                        mem[_19135 + 261] = 85
                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_19101), address(_19105)), stor4[cd[68]].field_512)))
                        staticcall address(sha3(0, stor4[cd[68]].field_0, sha3(address(_19101), address(_19105)), stor4[cd[68]].field_512)).getReserves() with:
                                gas gas_remaining wei
                    else:
                        if not address(_19105):
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_19135 + 221] = address(_19105)
                        mem[_19135 + 241] = address(_19101)
                        mem[_19135 + 189] = 40
                        mem[_19135 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_19135 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                        mem[_19135 + 314] = sha3(address(_19105), address(_19101))
                        mem[_19135 + 346] = stor4[cd[68]].field_512
                        mem[_19135 + 261] = 85
                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_19105), address(_19101)), stor4[cd[68]].field_512)))
                        staticcall address(sha3(0, stor4[cd[68]].field_0, sha3(address(_19105), address(_19101)), stor4[cd[68]].field_512)).getReserves() with:
                                gas gas_remaining wei
                    mem[_19135 + 378 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _19135 + ceil32(return_data.size) + 378
                else:
                    if not mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    _19136 = mem[64]
                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + 128])
                    mem[mem[64] + 52] = address(_19101)
                    _19155 = mem[64]
                    mem[mem[64]] = 40
                    mem[64] = mem[64] + 72
                    _19157 = sha3(mem[_19155 + 32 len mem[_19155]])
                    mem[_19136 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_19136 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                    mem[_19136 + 125] = _19157
                    mem[_19136 + 157] = stor4[cd[68]].field_512
                    mem[_19136 + 72] = 85
                    if address(_19101) == address(_19105):
                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                    if address(_19101) < address(_19105):
                        if not address(_19101):
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_19136 + 221] = address(_19101)
                        mem[_19136 + 241] = address(_19105)
                        mem[_19136 + 189] = 40
                        mem[_19136 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_19136 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                        mem[_19136 + 314] = sha3(address(_19101), address(_19105))
                        mem[_19136 + 346] = stor4[cd[68]].field_512
                        mem[_19136 + 261] = 85
                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_19101), address(_19105)), stor4[cd[68]].field_512)))
                        staticcall address(sha3(0, stor4[cd[68]].field_0, sha3(address(_19101), address(_19105)), stor4[cd[68]].field_512)).getReserves() with:
                                gas gas_remaining wei
                    else:
                        if not address(_19105):
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_19136 + 221] = address(_19105)
                        mem[_19136 + 241] = address(_19101)
                        mem[_19136 + 189] = 40
                        mem[_19136 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_19136 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                        mem[_19136 + 314] = sha3(address(_19105), address(_19101))
                        mem[_19136 + 346] = stor4[cd[68]].field_512
                        mem[_19136 + 261] = 85
                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_19105), address(_19101)), stor4[cd[68]].field_512)))
                        staticcall address(sha3(0, stor4[cd[68]].field_0, sha3(address(_19105), address(_19101)), stor4[cd[68]].field_512)).getReserves() with:
                                gas gas_remaining wei
                    mem[_19136 + 378 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _19136 + ceil32(return_data.size) + 378
                require return_data.size >= 96
                require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                require idx < mem[(32 * ('cd', 36).length) + 128]
                if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] <= 0:
                    revert with 0, 'PancakeLibrary: INSUFFICIENT_INPUT_AMOUNT'
                if address(_19101) == address(_19101):
                    if ext_call.return_data[18 len 14] <= 0:
                        revert with 0, 'PancakeLibrary: INSUFFICIENT_LIQUIDITY'
                    if ext_call.return_data[50 len 14] <= 0:
                        revert with 0, 'PancakeLibrary: INSUFFICIENT_LIQUIDITY'
                    if not stor4[cd[68]].field_256:
                        if ext_call.return_data[50 len 14]:
                            require ext_call.return_data[50 len 14]
                            if 0 / ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[18 len 14] < 10000 * ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require 10000 * ext_call.return_data[18 len 14]
                        require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                        mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = 0 / 10000 * ext_call.return_data[18 len 14]
                    else:
                        require stor4[cd[68]].field_256
                        if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256 / stor4[cd[68]].field_256 != mem[(32 * idx) + (32 * ('cd', 36).length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not ext_call.return_data[50 len 14]:
                            if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256) < 10000 * ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256)
                            require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                            mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = 0 / (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256)
                        else:
                            require ext_call.return_data[50 len 14]
                            if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256) < 10000 * ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256)
                            require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                            mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256 * ext_call.return_data[50 len 14] / (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256)
                else:
                    if ext_call.return_data[50 len 14] <= 0:
                        revert with 0, 'PancakeLibrary: INSUFFICIENT_LIQUIDITY'
                    if ext_call.return_data[18 len 14] <= 0:
                        revert with 0, 'PancakeLibrary: INSUFFICIENT_LIQUIDITY'
                    if not stor4[cd[68]].field_256:
                        if ext_call.return_data[18 len 14]:
                            require ext_call.return_data[18 len 14]
                            if 0 / ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[50 len 14] < 10000 * ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require 10000 * ext_call.return_data[50 len 14]
                        require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                        mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = 0 / 10000 * ext_call.return_data[50 len 14]
                    else:
                        require stor4[cd[68]].field_256
                        if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256 / stor4[cd[68]].field_256 != mem[(32 * idx) + (32 * ('cd', 36).length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not ext_call.return_data[18 len 14]:
                            if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256) < 10000 * ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256)
                            require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                            mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = 0 / (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256)
                        else:
                            require ext_call.return_data[18 len 14]
                            if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256) < 10000 * ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256)
                            require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                            mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256 * ext_call.return_data[18 len 14] / (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256)
            else:
                if not mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                    if not mem[(32 * idx) + 140 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    _19137 = mem[64]
                    mem[mem[64] + 32] = address(mem[(32 * idx) + 128])
                    mem[mem[64] + 52] = address(_19105)
                    _19159 = mem[64]
                    mem[mem[64]] = 40
                    mem[64] = mem[64] + 72
                    _19161 = sha3(mem[_19159 + 32 len mem[_19159]])
                    mem[_19137 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_19137 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                    mem[_19137 + 125] = _19161
                    mem[_19137 + 157] = stor4[cd[68]].field_512
                    mem[_19137 + 72] = 85
                    if address(_19101) == address(_19105):
                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                    if address(_19101) < address(_19105):
                        if not address(_19101):
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_19137 + 221] = address(_19101)
                        mem[_19137 + 241] = address(_19105)
                        mem[_19137 + 189] = 40
                        mem[_19137 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_19137 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                        mem[_19137 + 314] = sha3(address(_19101), address(_19105))
                        mem[_19137 + 346] = stor4[cd[68]].field_512
                        mem[_19137 + 261] = 85
                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_19101), address(_19105)), stor4[cd[68]].field_512)))
                        staticcall address(sha3(0, stor4[cd[68]].field_0, sha3(address(_19101), address(_19105)), stor4[cd[68]].field_512)).getReserves() with:
                                gas gas_remaining wei
                    else:
                        if not address(_19105):
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_19137 + 221] = address(_19105)
                        mem[_19137 + 241] = address(_19101)
                        mem[_19137 + 189] = 40
                        mem[_19137 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_19137 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                        mem[_19137 + 314] = sha3(address(_19105), address(_19101))
                        mem[_19137 + 346] = stor4[cd[68]].field_512
                        mem[_19137 + 261] = 85
                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_19105), address(_19101)), stor4[cd[68]].field_512)))
                        staticcall address(sha3(0, stor4[cd[68]].field_0, sha3(address(_19105), address(_19101)), stor4[cd[68]].field_512)).getReserves() with:
                                gas gas_remaining wei
                    mem[_19137 + 378 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _19137 + ceil32(return_data.size) + 378
                else:
                    if not mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    _19138 = mem[64]
                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + 128])
                    mem[mem[64] + 52] = address(_19101)
                    _19163 = mem[64]
                    mem[mem[64]] = 40
                    mem[64] = mem[64] + 72
                    _19165 = sha3(mem[_19163 + 32 len mem[_19163]])
                    mem[_19138 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_19138 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                    mem[_19138 + 125] = _19165
                    mem[_19138 + 157] = stor4[cd[68]].field_512
                    mem[_19138 + 72] = 85
                    if address(_19101) == address(_19105):
                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                    if address(_19101) < address(_19105):
                        if not address(_19101):
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_19138 + 221] = address(_19101)
                        mem[_19138 + 241] = address(_19105)
                        mem[_19138 + 189] = 40
                        mem[_19138 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_19138 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                        mem[_19138 + 314] = sha3(address(_19101), address(_19105))
                        mem[_19138 + 346] = stor4[cd[68]].field_512
                        mem[_19138 + 261] = 85
                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_19101), address(_19105)), stor4[cd[68]].field_512)))
                        staticcall address(sha3(0, stor4[cd[68]].field_0, sha3(address(_19101), address(_19105)), stor4[cd[68]].field_512)).getReserves() with:
                                gas gas_remaining wei
                    else:
                        if not address(_19105):
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        mem[_19138 + 221] = address(_19105)
                        mem[_19138 + 241] = address(_19101)
                        mem[_19138 + 189] = 40
                        mem[_19138 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_19138 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                        mem[_19138 + 314] = sha3(address(_19105), address(_19101))
                        mem[_19138 + 346] = stor4[cd[68]].field_512
                        mem[_19138 + 261] = 85
                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_19105), address(_19101)), stor4[cd[68]].field_512)))
                        staticcall address(sha3(0, stor4[cd[68]].field_0, sha3(address(_19105), address(_19101)), stor4[cd[68]].field_512)).getReserves() with:
                                gas gas_remaining wei
                    mem[_19138 + 378 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _19138 + ceil32(return_data.size) + 378
                require return_data.size >= 96
                require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                require idx < mem[(32 * ('cd', 36).length) + 128]
                if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] <= 0:
                    revert with 0, 'PancakeLibrary: INSUFFICIENT_INPUT_AMOUNT'
                if address(_19101) == address(_19105):
                    if ext_call.return_data[18 len 14] <= 0:
                        revert with 0, 'PancakeLibrary: INSUFFICIENT_LIQUIDITY'
                    if ext_call.return_data[50 len 14] <= 0:
                        revert with 0, 'PancakeLibrary: INSUFFICIENT_LIQUIDITY'
                    if not stor4[cd[68]].field_256:
                        if ext_call.return_data[50 len 14]:
                            require ext_call.return_data[50 len 14]
                            if 0 / ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[18 len 14] < 10000 * ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require 10000 * ext_call.return_data[18 len 14]
                        require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                        mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = 0 / 10000 * ext_call.return_data[18 len 14]
                    else:
                        require stor4[cd[68]].field_256
                        if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256 / stor4[cd[68]].field_256 != mem[(32 * idx) + (32 * ('cd', 36).length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not ext_call.return_data[50 len 14]:
                            if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256) < 10000 * ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256)
                            require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                            mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = 0 / (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256)
                        else:
                            require ext_call.return_data[50 len 14]
                            if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256) < 10000 * ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256)
                            require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                            mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256 * ext_call.return_data[50 len 14] / (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256)
                else:
                    if ext_call.return_data[50 len 14] <= 0:
                        revert with 0, 'PancakeLibrary: INSUFFICIENT_LIQUIDITY'
                    if ext_call.return_data[18 len 14] <= 0:
                        revert with 0, 'PancakeLibrary: INSUFFICIENT_LIQUIDITY'
                    if not stor4[cd[68]].field_256:
                        if ext_call.return_data[18 len 14]:
                            require ext_call.return_data[18 len 14]
                            if 0 / ext_call.return_data[18 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[50 len 14] < 10000 * ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require 10000 * ext_call.return_data[50 len 14]
                        require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                        mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = 0 / 10000 * ext_call.return_data[50 len 14]
                    else:
                        require stor4[cd[68]].field_256
                        if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256 / stor4[cd[68]].field_256 != mem[(32 * idx) + (32 * ('cd', 36).length) + 160]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not ext_call.return_data[18 len 14]:
                            if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256) < 10000 * ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256)
                            require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                            mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = 0 / (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256)
                        else:
                            require ext_call.return_data[18 len 14]
                            if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256:
                                revert with 0, 'ds-math-mul-overflow'
                            if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-mul-overflow'
                            if (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256) < 10000 * ext_call.return_data[50 len 14]:
                                revert with 0, 'ds-math-add-overflow'
                            require (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256)
                            require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                            mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256 * ext_call.return_data[18 len 14] / (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256)
            idx = idx + 1
            continue 
        require 0 < ('cd', 36).length
        require ('cd', 36)[0] == address(('cd', 36)[0])
        require 0 < ('cd', 36).length
        require ('cd', 36)[0] == address(('cd', 36)[0])
        require 1 < ('cd', 36).length
        require ('cd', 36)[1] == address(('cd', 36)[1])
        mem[0] = cd[68]
        mem[32] = 4
        if address(('cd', 36)[0]) == address(('cd', 36)[1]):
            revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
        if address(('cd', 36)[0]) < address(('cd', 36)[1]):
            if not address(('cd', 36)[0]):
                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
            _19345 = mem[64]
            mem[mem[64] + 32] = address(('cd', 36)[0])
            mem[mem[64] + 52] = address(('cd', 36)[1])
            _19401 = mem[64]
            mem[mem[64]] = 40
            mem[64] = mem[64] + 72
            _19403 = sha3(mem[_19401 + 32 len mem[_19401]])
            mem[_19345 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
            mem[_19345 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
            mem[_19345 + 125] = _19403
            mem[_19345 + 157] = stor4[cd[68]].field_512
            mem[_19345 + 72] = 85
            require 0 < mem[(32 * ('cd', 36).length) + 128]
            _19497 = mem[(32 * ('cd', 36).length) + 160]
            mem[_19345 + 225] = address(sha3(0, stor4[cd[68]].field_0, _19403, stor4[cd[68]].field_512))
            mem[_19345 + 257] = _19497
            mem[_19345 + 189] = 68
            mem[_19345 + 221 len 4] = unknown_0xa9059cbb(?????)
            mem[_19345 + 289 len 96] = 0, address(sha3(0, stor4[cd[68]].field_0, _19403, stor4[cd[68]].field_512)), _19497, mem[_19345 + 289 len 28]
            mem[_19345 + 357] = 0
            call address(('cd', 36)[0]) with:
                 gas gas_remaining wei
                args mem[_19345 + 293 len 64]
            if not return_data.size:
                if not ext_call.success:
                    revert with 0, 'TransferHelper: TRANSFER_FAILED'
                if not mem[96]:
                    mem[64] = _19345 + (32 * ('cd', 36).length) + 321
                    mem[_19345 + 289] = ('cd', 36).length
                    mem[_19345 + 321 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
                    mem[_19345 + (32 * ('cd', 36).length) + 321] = 0
                    idx = 0
                    while idx < ('cd', 36).length - 1:
                        require idx < mem[_19345 + 289]
                        _55793 = mem[(32 * idx) + _19345 + 321]
                        require idx + 1 < mem[_19345 + 289]
                        _55858 = mem[(32 * idx + 1) + _19345 + 321]
                        if mem[(32 * idx) + _19345 + 333 len 20] == mem[(32 * idx + 1) + _19345 + 333 len 20]:
                            revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                        if mem[(32 * idx) + _19345 + 333 len 20] < mem[(32 * idx + 1) + _19345 + 333 len 20]:
                            if not mem[(32 * idx) + _19345 + 333 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                            _56217 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                            if mem[(32 * idx) + _19345 + 333 len 20] == mem[(32 * idx) + _19345 + 333 len 20]:
                                if idx >= mem[_19345 + 289] - 2:
                                    mem[0] = cd[68]
                                    mem[32] = 4
                                    if mem[(32 * idx) + _19345 + 333 len 20] == mem[(32 * idx + 1) + _19345 + 333 len 20]:
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if mem[(32 * idx) + _19345 + 333 len 20] < mem[(32 * idx + 1) + _19345 + 333 len 20]:
                                        if not mem[(32 * idx) + _19345 + 333 len 20]:
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        _58059 = mem[64]
                                        mem[mem[64] + 32] = address(mem[(32 * idx) + _19345 + 321])
                                        mem[mem[64] + 52] = address(_55858)
                                        _59281 = mem[64]
                                        mem[mem[64]] = 40
                                        mem[64] = mem[64] + 72
                                        _59283 = sha3(mem[_59281 + 32 len mem[_59281]])
                                        mem[_58059 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58059 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58059 + 125] = _59283
                                        mem[_58059 + 157] = stor4[cd[68]].field_512
                                        mem[_58059 + 72] = 85
                                        mem[_58059 + 189] = 0
                                        mem[64] = _58059 + 221
                                        mem[_58059 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58059 + 225] = 0
                                        mem[_58059 + 257] = _56217
                                        mem[_58059 + 289] = msg.sender
                                        mem[_58059 + 321] = 128
                                        mem[_58059 + 353] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58059 + 385] = mem[s + _58059 + 221]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _59283, stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, _59283, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _56217, msg.sender, 128, 0
                                    else:
                                        if not mem[(32 * idx + 1) + _19345 + 333 len 20]:
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        _58060 = mem[64]
                                        mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19345 + 321])
                                        mem[mem[64] + 52] = address(_55793)
                                        _59285 = mem[64]
                                        mem[mem[64]] = 40
                                        mem[64] = mem[64] + 72
                                        _59287 = sha3(mem[_59285 + 32 len mem[_59285]])
                                        mem[_58060 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58060 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58060 + 125] = _59287
                                        mem[_58060 + 157] = stor4[cd[68]].field_512
                                        mem[_58060 + 72] = 85
                                        mem[_58060 + 189] = 0
                                        mem[64] = _58060 + 221
                                        mem[_58060 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58060 + 225] = 0
                                        mem[_58060 + 257] = _56217
                                        mem[_58060 + 289] = msg.sender
                                        mem[_58060 + 321] = 128
                                        mem[_58060 + 353] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58060 + 385] = mem[s + _58060 + 221]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _59287, stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, _59287, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _56217, msg.sender, 128, 0
                                else:
                                    require idx + 2 < mem[_19345 + 289]
                                    _56601 = mem[(32 * idx + 2) + _19345 + 321]
                                    mem[0] = cd[68]
                                    mem[32] = 4
                                    if mem[(32 * idx + 1) + _19345 + 333 len 20] == mem[(32 * idx + 2) + _19345 + 333 len 20]:
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if mem[(32 * idx + 1) + _19345 + 333 len 20] < mem[(32 * idx + 2) + _19345 + 333 len 20]:
                                        if not mem[(32 * idx + 1) + _19345 + 333 len 20]:
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        _58057 = mem[64]
                                        mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19345 + 321])
                                        mem[mem[64] + 52] = address(_56601)
                                        _59273 = mem[64]
                                        mem[mem[64]] = 40
                                        mem[64] = mem[64] + 72
                                        _59275 = sha3(mem[_59273 + 32 len mem[_59273]])
                                        mem[_58057 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58057 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58057 + 125] = _59275
                                        mem[_58057 + 157] = stor4[cd[68]].field_512
                                        mem[_58057 + 72] = 85
                                        mem[0] = cd[68]
                                        mem[32] = 4
                                        if address(_55793) == address(_55858):
                                            revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                        if address(_55793) < address(_55858):
                                            if not address(_55793):
                                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                            mem[_58057 + 221] = address(_55793)
                                            mem[_58057 + 241] = address(_55858)
                                            mem[_58057 + 189] = 40
                                            mem[_58057 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_58057 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                            mem[_58057 + 314] = sha3(address(_55793), address(_55858))
                                            mem[_58057 + 346] = stor4[cd[68]].field_512
                                            mem[_58057 + 261] = 85
                                            mem[_58057 + 378] = 0
                                            mem[64] = _58057 + 410
                                            mem[_58057 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_58057 + 414] = 0
                                            mem[_58057 + 446] = _56217
                                            mem[_58057 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59275, stor4[cd[68]].field_512))
                                            mem[_58057 + 510] = 128
                                            mem[_58057 + 542] = 0
                                            s = 0
                                            while s < 0:
                                                mem[s + _58057 + 574] = mem[s + _58057 + 410]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55793), address(_55858)), stor4[cd[68]].field_512)))
                                            call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55793), address(_55858)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _56217, address(sha3(0, stor4[cd[68]].field_0, _59275, stor4[cd[68]].field_512)), 128, 0
                                        else:
                                            if not address(_55858):
                                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                            mem[_58057 + 221] = address(_55858)
                                            mem[_58057 + 241] = address(_55793)
                                            mem[_58057 + 189] = 40
                                            mem[_58057 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_58057 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                            mem[_58057 + 314] = sha3(address(_55858), address(_55793))
                                            mem[_58057 + 346] = stor4[cd[68]].field_512
                                            mem[_58057 + 261] = 85
                                            mem[_58057 + 378] = 0
                                            mem[64] = _58057 + 410
                                            mem[_58057 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_58057 + 414] = 0
                                            mem[_58057 + 446] = _56217
                                            mem[_58057 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59275, stor4[cd[68]].field_512))
                                            mem[_58057 + 510] = 128
                                            mem[_58057 + 542] = 0
                                            s = 0
                                            while s < 0:
                                                mem[s + _58057 + 574] = mem[s + _58057 + 410]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55858), address(_55793)), stor4[cd[68]].field_512)))
                                            call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55858), address(_55793)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _56217, address(sha3(0, stor4[cd[68]].field_0, _59275, stor4[cd[68]].field_512)), 128, 0
                                    else:
                                        if not mem[(32 * idx + 2) + _19345 + 333 len 20]:
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        _58058 = mem[64]
                                        mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19345 + 321])
                                        mem[mem[64] + 52] = address(_55858)
                                        _59277 = mem[64]
                                        mem[mem[64]] = 40
                                        mem[64] = mem[64] + 72
                                        _59279 = sha3(mem[_59277 + 32 len mem[_59277]])
                                        mem[_58058 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58058 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58058 + 125] = _59279
                                        mem[_58058 + 157] = stor4[cd[68]].field_512
                                        mem[_58058 + 72] = 85
                                        mem[0] = cd[68]
                                        mem[32] = 4
                                        if address(_55793) == address(_55858):
                                            revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                        if address(_55793) < address(_55858):
                                            if not address(_55793):
                                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                            mem[_58058 + 221] = address(_55793)
                                            mem[_58058 + 241] = address(_55858)
                                            mem[_58058 + 189] = 40
                                            mem[_58058 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_58058 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                            mem[_58058 + 314] = sha3(address(_55793), address(_55858))
                                            mem[_58058 + 346] = stor4[cd[68]].field_512
                                            mem[_58058 + 261] = 85
                                            mem[_58058 + 378] = 0
                                            mem[64] = _58058 + 410
                                            mem[_58058 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_58058 + 414] = 0
                                            mem[_58058 + 446] = _56217
                                            mem[_58058 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59279, stor4[cd[68]].field_512))
                                            mem[_58058 + 510] = 128
                                            mem[_58058 + 542] = 0
                                            s = 0
                                            while s < 0:
                                                mem[s + _58058 + 574] = mem[s + _58058 + 410]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55793), address(_55858)), stor4[cd[68]].field_512)))
                                            call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55793), address(_55858)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _56217, address(sha3(0, stor4[cd[68]].field_0, _59279, stor4[cd[68]].field_512)), 128, 0
                                        else:
                                            if not address(_55858):
                                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                            mem[_58058 + 221] = address(_55858)
                                            mem[_58058 + 241] = address(_55793)
                                            mem[_58058 + 189] = 40
                                            mem[_58058 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_58058 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                            mem[_58058 + 314] = sha3(address(_55858), address(_55793))
                                            mem[_58058 + 346] = stor4[cd[68]].field_512
                                            mem[_58058 + 261] = 85
                                            mem[_58058 + 378] = 0
                                            mem[64] = _58058 + 410
                                            mem[_58058 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_58058 + 414] = 0
                                            mem[_58058 + 446] = _56217
                                            mem[_58058 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59279, stor4[cd[68]].field_512))
                                            mem[_58058 + 510] = 128
                                            mem[_58058 + 542] = 0
                                            s = 0
                                            while s < 0:
                                                mem[s + _58058 + 574] = mem[s + _58058 + 410]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55858), address(_55793)), stor4[cd[68]].field_512)))
                                            call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55858), address(_55793)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _56217, address(sha3(0, stor4[cd[68]].field_0, _59279, stor4[cd[68]].field_512)), 128, 0
                            else:
                                if idx >= mem[_19345 + 289] - 2:
                                    mem[0] = cd[68]
                                    mem[32] = 4
                                    if mem[(32 * idx) + _19345 + 333 len 20] == mem[(32 * idx + 1) + _19345 + 333 len 20]:
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if mem[(32 * idx) + _19345 + 333 len 20] < mem[(32 * idx + 1) + _19345 + 333 len 20]:
                                        if not mem[(32 * idx) + _19345 + 333 len 20]:
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        _58063 = mem[64]
                                        mem[mem[64] + 32] = address(mem[(32 * idx) + _19345 + 321])
                                        mem[mem[64] + 52] = address(_55858)
                                        _59297 = mem[64]
                                        mem[mem[64]] = 40
                                        mem[64] = mem[64] + 72
                                        _59299 = sha3(mem[_59297 + 32 len mem[_59297]])
                                        mem[_58063 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58063 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58063 + 125] = _59299
                                        mem[_58063 + 157] = stor4[cd[68]].field_512
                                        mem[_58063 + 72] = 85
                                        mem[_58063 + 189] = 0
                                        mem[64] = _58063 + 221
                                        mem[_58063 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58063 + 225] = _56217
                                        mem[_58063 + 257] = 0
                                        mem[_58063 + 289] = msg.sender
                                        mem[_58063 + 321] = 128
                                        mem[_58063 + 353] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58063 + 385] = mem[s + _58063 + 221]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _59299, stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, _59299, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _56217, 0, msg.sender, 128, 0
                                    else:
                                        if not mem[(32 * idx + 1) + _19345 + 333 len 20]:
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        _58064 = mem[64]
                                        mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19345 + 321])
                                        mem[mem[64] + 52] = address(_55793)
                                        _59301 = mem[64]
                                        mem[mem[64]] = 40
                                        mem[64] = mem[64] + 72
                                        _59303 = sha3(mem[_59301 + 32 len mem[_59301]])
                                        mem[_58064 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58064 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58064 + 125] = _59303
                                        mem[_58064 + 157] = stor4[cd[68]].field_512
                                        mem[_58064 + 72] = 85
                                        mem[_58064 + 189] = 0
                                        mem[64] = _58064 + 221
                                        mem[_58064 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58064 + 225] = _56217
                                        mem[_58064 + 257] = 0
                                        mem[_58064 + 289] = msg.sender
                                        mem[_58064 + 321] = 128
                                        mem[_58064 + 353] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58064 + 385] = mem[s + _58064 + 221]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _59303, stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, _59303, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _56217, 0, msg.sender, 128, 0
                                else:
                                    require idx + 2 < mem[_19345 + 289]
                                    _56602 = mem[(32 * idx + 2) + _19345 + 321]
                                    mem[0] = cd[68]
                                    mem[32] = 4
                                    if mem[(32 * idx + 1) + _19345 + 333 len 20] == mem[(32 * idx + 2) + _19345 + 333 len 20]:
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if mem[(32 * idx + 1) + _19345 + 333 len 20] < mem[(32 * idx + 2) + _19345 + 333 len 20]:
                                        if not mem[(32 * idx + 1) + _19345 + 333 len 20]:
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        _58061 = mem[64]
                                        mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19345 + 321])
                                        mem[mem[64] + 52] = address(_56602)
                                        _59289 = mem[64]
                                        mem[mem[64]] = 40
                                        mem[64] = mem[64] + 72
                                        _59291 = sha3(mem[_59289 + 32 len mem[_59289]])
                                        mem[_58061 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58061 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58061 + 125] = _59291
                                        mem[_58061 + 157] = stor4[cd[68]].field_512
                                        mem[_58061 + 72] = 85
                                        mem[0] = cd[68]
                                        mem[32] = 4
                                        if address(_55793) == address(_55858):
                                            revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                        if address(_55793) < address(_55858):
                                            if not address(_55793):
                                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                            mem[_58061 + 221] = address(_55793)
                                            mem[_58061 + 241] = address(_55858)
                                            mem[_58061 + 189] = 40
                                            mem[_58061 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_58061 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                            mem[_58061 + 314] = sha3(address(_55793), address(_55858))
                                            mem[_58061 + 346] = stor4[cd[68]].field_512
                                            mem[_58061 + 261] = 85
                                            mem[_58061 + 378] = 0
                                            mem[64] = _58061 + 410
                                            mem[_58061 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_58061 + 414] = _56217
                                            mem[_58061 + 446] = 0
                                            mem[_58061 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59291, stor4[cd[68]].field_512))
                                            mem[_58061 + 510] = 128
                                            mem[_58061 + 542] = 0
                                            s = 0
                                            while s < 0:
                                                mem[s + _58061 + 574] = mem[s + _58061 + 410]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55793), address(_55858)), stor4[cd[68]].field_512)))
                                            call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55793), address(_55858)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _56217, 0, address(sha3(0, stor4[cd[68]].field_0, _59291, stor4[cd[68]].field_512)), 128, 0
                                        else:
                                            if not address(_55858):
                                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                            mem[_58061 + 221] = address(_55858)
                                            mem[_58061 + 241] = address(_55793)
                                            mem[_58061 + 189] = 40
                                            mem[_58061 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_58061 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                            mem[_58061 + 314] = sha3(address(_55858), address(_55793))
                                            mem[_58061 + 346] = stor4[cd[68]].field_512
                                            mem[_58061 + 261] = 85
                                            mem[_58061 + 378] = 0
                                            mem[64] = _58061 + 410
                                            mem[_58061 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_58061 + 414] = _56217
                                            mem[_58061 + 446] = 0
                                            mem[_58061 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59291, stor4[cd[68]].field_512))
                                            mem[_58061 + 510] = 128
                                            mem[_58061 + 542] = 0
                                            s = 0
                                            while s < 0:
                                                mem[s + _58061 + 574] = mem[s + _58061 + 410]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55858), address(_55793)), stor4[cd[68]].field_512)))
                                            call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55858), address(_55793)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _56217, 0, address(sha3(0, stor4[cd[68]].field_0, _59291, stor4[cd[68]].field_512)), 128, 0
                                    else:
                                        if not mem[(32 * idx + 2) + _19345 + 333 len 20]:
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        _58062 = mem[64]
                                        mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19345 + 321])
                                        mem[mem[64] + 52] = address(_55858)
                                        _59293 = mem[64]
                                        mem[mem[64]] = 40
                                        mem[64] = mem[64] + 72
                                        _59295 = sha3(mem[_59293 + 32 len mem[_59293]])
                                        mem[_58062 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58062 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58062 + 125] = _59295
                                        mem[_58062 + 157] = stor4[cd[68]].field_512
                                        mem[_58062 + 72] = 85
                                        mem[0] = cd[68]
                                        mem[32] = 4
                                        if address(_55793) == address(_55858):
                                            revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                        if address(_55793) < address(_55858):
                                            if not address(_55793):
                                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                            mem[_58062 + 221] = address(_55793)
                                            mem[_58062 + 241] = address(_55858)
                                            mem[_58062 + 189] = 40
                                            mem[_58062 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_58062 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                            mem[_58062 + 314] = sha3(address(_55793), address(_55858))
                                            mem[_58062 + 346] = stor4[cd[68]].field_512
                                            mem[_58062 + 261] = 85
                                            mem[_58062 + 378] = 0
                                            mem[64] = _58062 + 410
                                            mem[_58062 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_58062 + 414] = _56217
                                            mem[_58062 + 446] = 0
                                            mem[_58062 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59295, stor4[cd[68]].field_512))
                                            mem[_58062 + 510] = 128
                                            mem[_58062 + 542] = 0
                                            s = 0
                                            while s < 0:
                                                mem[s + _58062 + 574] = mem[s + _58062 + 410]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55793), address(_55858)), stor4[cd[68]].field_512)))
                                            call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55793), address(_55858)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _56217, 0, address(sha3(0, stor4[cd[68]].field_0, _59295, stor4[cd[68]].field_512)), 128, 0
                                        else:
                                            if not address(_55858):
                                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                            mem[_58062 + 221] = address(_55858)
                                            mem[_58062 + 241] = address(_55793)
                                            mem[_58062 + 189] = 40
                                            mem[_58062 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_58062 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                            mem[_58062 + 314] = sha3(address(_55858), address(_55793))
                                            mem[_58062 + 346] = stor4[cd[68]].field_512
                                            mem[_58062 + 261] = 85
                                            mem[_58062 + 378] = 0
                                            mem[64] = _58062 + 410
                                            mem[_58062 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_58062 + 414] = _56217
                                            mem[_58062 + 446] = 0
                                            mem[_58062 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59295, stor4[cd[68]].field_512))
                                            mem[_58062 + 510] = 128
                                            mem[_58062 + 542] = 0
                                            s = 0
                                            while s < 0:
                                                mem[s + _58062 + 574] = mem[s + _58062 + 410]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55858), address(_55793)), stor4[cd[68]].field_512)))
                                            call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55858), address(_55793)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _56217, 0, address(sha3(0, stor4[cd[68]].field_0, _59295, stor4[cd[68]].field_512)), 128, 0
                        else:
                            if not mem[(32 * idx + 1) + _19345 + 333 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                            _56219 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                            if mem[(32 * idx) + _19345 + 333 len 20] == mem[(32 * idx + 1) + _19345 + 333 len 20]:
                                if idx >= mem[_19345 + 289] - 2:
                                    mem[0] = cd[68]
                                    mem[32] = 4
                                    if mem[(32 * idx) + _19345 + 333 len 20] == mem[(32 * idx + 1) + _19345 + 333 len 20]:
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if mem[(32 * idx) + _19345 + 333 len 20] < mem[(32 * idx + 1) + _19345 + 333 len 20]:
                                        if not mem[(32 * idx) + _19345 + 333 len 20]:
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        _58067 = mem[64]
                                        mem[mem[64] + 32] = address(mem[(32 * idx) + _19345 + 321])
                                        mem[mem[64] + 52] = address(_55858)
                                        _59313 = mem[64]
                                        mem[mem[64]] = 40
                                        mem[64] = mem[64] + 72
                                        _59315 = sha3(mem[_59313 + 32 len mem[_59313]])
                                        mem[_58067 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58067 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58067 + 125] = _59315
                                        mem[_58067 + 157] = stor4[cd[68]].field_512
                                        mem[_58067 + 72] = 85
                                        mem[_58067 + 189] = 0
                                        mem[64] = _58067 + 221
                                        mem[_58067 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58067 + 225] = 0
                                        mem[_58067 + 257] = _56219
                                        mem[_58067 + 289] = msg.sender
                                        mem[_58067 + 321] = 128
                                        mem[_58067 + 353] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58067 + 385] = mem[s + _58067 + 221]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _59315, stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, _59315, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _56219, msg.sender, 128, 0
                                    else:
                                        if not mem[(32 * idx + 1) + _19345 + 333 len 20]:
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        _58068 = mem[64]
                                        mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19345 + 321])
                                        mem[mem[64] + 52] = address(_55793)
                                        _59317 = mem[64]
                                        mem[mem[64]] = 40
                                        mem[64] = mem[64] + 72
                                        _59319 = sha3(mem[_59317 + 32 len mem[_59317]])
                                        mem[_58068 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58068 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58068 + 125] = _59319
                                        mem[_58068 + 157] = stor4[cd[68]].field_512
                                        mem[_58068 + 72] = 85
                                        mem[_58068 + 189] = 0
                                        mem[64] = _58068 + 221
                                        mem[_58068 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58068 + 225] = 0
                                        mem[_58068 + 257] = _56219
                                        mem[_58068 + 289] = msg.sender
                                        mem[_58068 + 321] = 128
                                        mem[_58068 + 353] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58068 + 385] = mem[s + _58068 + 221]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _59319, stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, _59319, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _56219, msg.sender, 128, 0
                                else:
                                    require idx + 2 < mem[_19345 + 289]
                                    _56603 = mem[(32 * idx + 2) + _19345 + 321]
                                    mem[0] = cd[68]
                                    mem[32] = 4
                                    if mem[(32 * idx + 1) + _19345 + 333 len 20] == mem[(32 * idx + 2) + _19345 + 333 len 20]:
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if mem[(32 * idx + 1) + _19345 + 333 len 20] < mem[(32 * idx + 2) + _19345 + 333 len 20]:
                                        if not mem[(32 * idx + 1) + _19345 + 333 len 20]:
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        _58065 = mem[64]
                                        mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19345 + 321])
                                        mem[mem[64] + 52] = address(_56603)
                                        _59305 = mem[64]
                                        mem[mem[64]] = 40
                                        mem[64] = mem[64] + 72
                                        _59307 = sha3(mem[_59305 + 32 len mem[_59305]])
                                        mem[_58065 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58065 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58065 + 125] = _59307
                                        mem[_58065 + 157] = stor4[cd[68]].field_512
                                        mem[_58065 + 72] = 85
                                        mem[0] = cd[68]
                                        mem[32] = 4
                                        if address(_55793) == address(_55858):
                                            revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                        if address(_55793) < address(_55858):
                                            if not address(_55793):
                                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                            mem[_58065 + 221] = address(_55793)
                                            mem[_58065 + 241] = address(_55858)
                                            mem[_58065 + 189] = 40
                                            mem[_58065 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_58065 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                            mem[_58065 + 314] = sha3(address(_55793), address(_55858))
                                            mem[_58065 + 346] = stor4[cd[68]].field_512
                                            mem[_58065 + 261] = 85
                                            mem[_58065 + 378] = 0
                                            mem[64] = _58065 + 410
                                            mem[_58065 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_58065 + 414] = 0
                                            mem[_58065 + 446] = _56219
                                            mem[_58065 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59307, stor4[cd[68]].field_512))
                                            mem[_58065 + 510] = 128
                                            mem[_58065 + 542] = 0
                                            s = 0
                                            while s < 0:
                                                mem[s + _58065 + 574] = mem[s + _58065 + 410]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55793), address(_55858)), stor4[cd[68]].field_512)))
                                            call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55793), address(_55858)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _56219, address(sha3(0, stor4[cd[68]].field_0, _59307, stor4[cd[68]].field_512)), 128, 0
                                        else:
                                            if not address(_55858):
                                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                            mem[_58065 + 221] = address(_55858)
                                            mem[_58065 + 241] = address(_55793)
                                            mem[_58065 + 189] = 40
                                            mem[_58065 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_58065 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                            mem[_58065 + 314] = sha3(address(_55858), address(_55793))
                                            mem[_58065 + 346] = stor4[cd[68]].field_512
                                            mem[_58065 + 261] = 85
                                            mem[_58065 + 378] = 0
                                            mem[64] = _58065 + 410
                                            mem[_58065 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_58065 + 414] = 0
                                            mem[_58065 + 446] = _56219
                                            mem[_58065 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59307, stor4[cd[68]].field_512))
                                            mem[_58065 + 510] = 128
                                            mem[_58065 + 542] = 0
                                            s = 0
                                            while s < 0:
                                                mem[s + _58065 + 574] = mem[s + _58065 + 410]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55858), address(_55793)), stor4[cd[68]].field_512)))
                                            call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55858), address(_55793)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _56219, address(sha3(0, stor4[cd[68]].field_0, _59307, stor4[cd[68]].field_512)), 128, 0
                                    else:
                                        if not mem[(32 * idx + 2) + _19345 + 333 len 20]:
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        _58066 = mem[64]
                                        mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19345 + 321])
                                        mem[mem[64] + 52] = address(_55858)
                                        _59309 = mem[64]
                                        mem[mem[64]] = 40
                                        mem[64] = mem[64] + 72
                                        _59311 = sha3(mem[_59309 + 32 len mem[_59309]])
                                        mem[_58066 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58066 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58066 + 125] = _59311
                                        mem[_58066 + 157] = stor4[cd[68]].field_512
                                        mem[_58066 + 72] = 85
                                        mem[0] = cd[68]
                                        mem[32] = 4
                                        if address(_55793) == address(_55858):
                                            revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                        if address(_55793) < address(_55858):
                                            if not address(_55793):
                                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                            mem[_58066 + 221] = address(_55793)
                                            mem[_58066 + 241] = address(_55858)
                                            mem[_58066 + 189] = 40
                                            mem[_58066 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_58066 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                            mem[_58066 + 314] = sha3(address(_55793), address(_55858))
                                            mem[_58066 + 346] = stor4[cd[68]].field_512
                                            mem[_58066 + 261] = 85
                                            mem[_58066 + 378] = 0
                                            mem[64] = _58066 + 410
                                            mem[_58066 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_58066 + 414] = 0
                                            mem[_58066 + 446] = _56219
                                            mem[_58066 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59311, stor4[cd[68]].field_512))
                                            mem[_58066 + 510] = 128
                                            mem[_58066 + 542] = 0
                                            s = 0
                                            while s < 0:
                                                mem[s + _58066 + 574] = mem[s + _58066 + 410]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55793), address(_55858)), stor4[cd[68]].field_512)))
                                            call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55793), address(_55858)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _56219, address(sha3(0, stor4[cd[68]].field_0, _59311, stor4[cd[68]].field_512)), 128, 0
                                        else:
                                            if not address(_55858):
                                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                            mem[_58066 + 221] = address(_55858)
                                            mem[_58066 + 241] = address(_55793)
                                            mem[_58066 + 189] = 40
                                            mem[_58066 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_58066 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                            mem[_58066 + 314] = sha3(address(_55858), address(_55793))
                                            mem[_58066 + 346] = stor4[cd[68]].field_512
                                            mem[_58066 + 261] = 85
                                            mem[_58066 + 378] = 0
                                            mem[64] = _58066 + 410
                                            mem[_58066 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_58066 + 414] = 0
                                            mem[_58066 + 446] = _56219
                                            mem[_58066 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59311, stor4[cd[68]].field_512))
                                            mem[_58066 + 510] = 128
                                            mem[_58066 + 542] = 0
                                            s = 0
                                            while s < 0:
                                                mem[s + _58066 + 574] = mem[s + _58066 + 410]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55858), address(_55793)), stor4[cd[68]].field_512)))
                                            call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55858), address(_55793)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _56219, address(sha3(0, stor4[cd[68]].field_0, _59311, stor4[cd[68]].field_512)), 128, 0
                            else:
                                if idx >= mem[_19345 + 289] - 2:
                                    mem[0] = cd[68]
                                    mem[32] = 4
                                    if mem[(32 * idx) + _19345 + 333 len 20] == mem[(32 * idx + 1) + _19345 + 333 len 20]:
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if mem[(32 * idx) + _19345 + 333 len 20] < mem[(32 * idx + 1) + _19345 + 333 len 20]:
                                        if not mem[(32 * idx) + _19345 + 333 len 20]:
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        _58071 = mem[64]
                                        mem[mem[64] + 32] = address(mem[(32 * idx) + _19345 + 321])
                                        mem[mem[64] + 52] = address(_55858)
                                        _59329 = mem[64]
                                        mem[mem[64]] = 40
                                        mem[64] = mem[64] + 72
                                        _59331 = sha3(mem[_59329 + 32 len mem[_59329]])
                                        mem[_58071 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58071 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58071 + 125] = _59331
                                        mem[_58071 + 157] = stor4[cd[68]].field_512
                                        mem[_58071 + 72] = 85
                                        mem[_58071 + 189] = 0
                                        mem[64] = _58071 + 221
                                        mem[_58071 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58071 + 225] = _56219
                                        mem[_58071 + 257] = 0
                                        mem[_58071 + 289] = msg.sender
                                        mem[_58071 + 321] = 128
                                        mem[_58071 + 353] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58071 + 385] = mem[s + _58071 + 221]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _59331, stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, _59331, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _56219, 0, msg.sender, 128, 0
                                    else:
                                        if not mem[(32 * idx + 1) + _19345 + 333 len 20]:
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        _58072 = mem[64]
                                        mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19345 + 321])
                                        mem[mem[64] + 52] = address(_55793)
                                        _59333 = mem[64]
                                        mem[mem[64]] = 40
                                        mem[64] = mem[64] + 72
                                        _59335 = sha3(mem[_59333 + 32 len mem[_59333]])
                                        mem[_58072 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58072 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58072 + 125] = _59335
                                        mem[_58072 + 157] = stor4[cd[68]].field_512
                                        mem[_58072 + 72] = 85
                                        mem[_58072 + 189] = 0
                                        mem[64] = _58072 + 221
                                        mem[_58072 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58072 + 225] = _56219
                                        mem[_58072 + 257] = 0
                                        mem[_58072 + 289] = msg.sender
                                        mem[_58072 + 321] = 128
                                        mem[_58072 + 353] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58072 + 385] = mem[s + _58072 + 221]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _59335, stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, _59335, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _56219, 0, msg.sender, 128, 0
                                else:
                                    require idx + 2 < mem[_19345 + 289]
                                    _56604 = mem[(32 * idx + 2) + _19345 + 321]
                                    mem[0] = cd[68]
                                    mem[32] = 4
                                    if mem[(32 * idx + 1) + _19345 + 333 len 20] == mem[(32 * idx + 2) + _19345 + 333 len 20]:
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if mem[(32 * idx + 1) + _19345 + 333 len 20] < mem[(32 * idx + 2) + _19345 + 333 len 20]:
                                        if not mem[(32 * idx + 1) + _19345 + 333 len 20]:
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        _58069 = mem[64]
                                        mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19345 + 321])
                                        mem[mem[64] + 52] = address(_56604)
                                        _59321 = mem[64]
                                        mem[mem[64]] = 40
                                        mem[64] = mem[64] + 72
                                        _59323 = sha3(mem[_59321 + 32 len mem[_59321]])
                                        mem[_58069 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58069 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58069 + 125] = _59323
                                        mem[_58069 + 157] = stor4[cd[68]].field_512
                                        mem[_58069 + 72] = 85
                                        mem[0] = cd[68]
                                        mem[32] = 4
                                        if address(_55793) == address(_55858):
                                            revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                        if address(_55793) < address(_55858):
                                            if not address(_55793):
                                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                            mem[_58069 + 221] = address(_55793)
                                            mem[_58069 + 241] = address(_55858)
                                            mem[_58069 + 189] = 40
                                            mem[_58069 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_58069 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                            mem[_58069 + 314] = sha3(address(_55793), address(_55858))
                                            mem[_58069 + 346] = stor4[cd[68]].field_512
                                            mem[_58069 + 261] = 85
                                            mem[_58069 + 378] = 0
                                            mem[64] = _58069 + 410
                                            mem[_58069 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_58069 + 414] = _56219
                                            mem[_58069 + 446] = 0
                                            mem[_58069 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59323, stor4[cd[68]].field_512))
                                            mem[_58069 + 510] = 128
                                            mem[_58069 + 542] = 0
                                            s = 0
                                            while s < 0:
                                                mem[s + _58069 + 574] = mem[s + _58069 + 410]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55793), address(_55858)), stor4[cd[68]].field_512)))
                                            call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55793), address(_55858)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _56219, 0, address(sha3(0, stor4[cd[68]].field_0, _59323, stor4[cd[68]].field_512)), 128, 0
                                        else:
                                            if not address(_55858):
                                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                            mem[_58069 + 221] = address(_55858)
                                            mem[_58069 + 241] = address(_55793)
                                            mem[_58069 + 189] = 40
                                            mem[_58069 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_58069 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                            mem[_58069 + 314] = sha3(address(_55858), address(_55793))
                                            mem[_58069 + 346] = stor4[cd[68]].field_512
                                            mem[_58069 + 261] = 85
                                            mem[_58069 + 378] = 0
                                            mem[64] = _58069 + 410
                                            mem[_58069 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_58069 + 414] = _56219
                                            mem[_58069 + 446] = 0
                                            mem[_58069 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59323, stor4[cd[68]].field_512))
                                            mem[_58069 + 510] = 128
                                            mem[_58069 + 542] = 0
                                            s = 0
                                            while s < 0:
                                                mem[s + _58069 + 574] = mem[s + _58069 + 410]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55858), address(_55793)), stor4[cd[68]].field_512)))
                                            call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55858), address(_55793)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _56219, 0, address(sha3(0, stor4[cd[68]].field_0, _59323, stor4[cd[68]].field_512)), 128, 0
                                    else:
                                        if not mem[(32 * idx + 2) + _19345 + 333 len 20]:
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        _58070 = mem[64]
                                        mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19345 + 321])
                                        mem[mem[64] + 52] = address(_55858)
                                        _59325 = mem[64]
                                        mem[mem[64]] = 40
                                        mem[64] = mem[64] + 72
                                        _59327 = sha3(mem[_59325 + 32 len mem[_59325]])
                                        mem[_58070 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58070 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58070 + 125] = _59327
                                        mem[_58070 + 157] = stor4[cd[68]].field_512
                                        mem[_58070 + 72] = 85
                                        mem[0] = cd[68]
                                        mem[32] = 4
                                        if address(_55793) == address(_55858):
                                            revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                        if address(_55793) < address(_55858):
                                            if not address(_55793):
                                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                            mem[_58070 + 221] = address(_55793)
                                            mem[_58070 + 241] = address(_55858)
                                            mem[_58070 + 189] = 40
                                            mem[_58070 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_58070 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                            mem[_58070 + 314] = sha3(address(_55793), address(_55858))
                                            mem[_58070 + 346] = stor4[cd[68]].field_512
                                            mem[_58070 + 261] = 85
                                            mem[_58070 + 378] = 0
                                            mem[64] = _58070 + 410
                                            mem[_58070 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_58070 + 414] = _56219
                                            mem[_58070 + 446] = 0
                                            mem[_58070 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59327, stor4[cd[68]].field_512))
                                            mem[_58070 + 510] = 128
                                            mem[_58070 + 542] = 0
                                            s = 0
                                            while s < 0:
                                                mem[s + _58070 + 574] = mem[s + _58070 + 410]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55793), address(_55858)), stor4[cd[68]].field_512)))
                                            call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55793), address(_55858)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _56219, 0, address(sha3(0, stor4[cd[68]].field_0, _59327, stor4[cd[68]].field_512)), 128, 0
                                        else:
                                            if not address(_55858):
                                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                            mem[_58070 + 221] = address(_55858)
                                            mem[_58070 + 241] = address(_55793)
                                            mem[_58070 + 189] = 40
                                            mem[_58070 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                            mem[_58070 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                            mem[_58070 + 314] = sha3(address(_55858), address(_55793))
                                            mem[_58070 + 346] = stor4[cd[68]].field_512
                                            mem[_58070 + 261] = 85
                                            mem[_58070 + 378] = 0
                                            mem[64] = _58070 + 410
                                            mem[_58070 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_58070 + 414] = _56219
                                            mem[_58070 + 446] = 0
                                            mem[_58070 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59327, stor4[cd[68]].field_512))
                                            mem[_58070 + 510] = 128
                                            mem[_58070 + 542] = 0
                                            s = 0
                                            while s < 0:
                                                mem[s + _58070 + 574] = mem[s + _58070 + 410]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55858), address(_55793)), stor4[cd[68]].field_512)))
                                            call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55858), address(_55793)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _56219, 0, address(sha3(0, stor4[cd[68]].field_0, _59327, stor4[cd[68]].field_512)), 128, 0
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        continue 
                    mem[mem[64]] = 32
                    _55921 = mem[(32 * ('cd', 36).length) + 128]
                    mem[mem[64] + 32] = mem[(32 * ('cd', 36).length) + 128]
                    mem[mem[64] + 64 len 32 * _55921] = mem[(32 * ('cd', 36).length) + 160 len 32 * _55921]
                    return 32, mem[mem[64] + 32 len (32 * _55921) + 32]
                require mem[96] >= 32
                require mem[128] == bool(mem[128])
                if not mem[128]:
                    revert with 0, 'TransferHelper: TRANSFER_FAILED'
                mem[64] = _19345 + (32 * ('cd', 36).length) + 321
                mem[_19345 + 289] = ('cd', 36).length
                mem[_19345 + 321 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
                mem[_19345 + (32 * ('cd', 36).length) + 321] = 0
                idx = 0
                while idx < ('cd', 36).length - 1:
                    require idx < mem[_19345 + 289]
                    _55795 = mem[(32 * idx) + _19345 + 321]
                    require idx + 1 < mem[_19345 + 289]
                    _55860 = mem[(32 * idx + 1) + _19345 + 321]
                    if mem[(32 * idx) + _19345 + 333 len 20] == mem[(32 * idx + 1) + _19345 + 333 len 20]:
                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                    if mem[(32 * idx) + _19345 + 333 len 20] < mem[(32 * idx + 1) + _19345 + 333 len 20]:
                        if not mem[(32 * idx) + _19345 + 333 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                        _56221 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                        if mem[(32 * idx) + _19345 + 333 len 20] == mem[(32 * idx) + _19345 + 333 len 20]:
                            if idx >= mem[_19345 + 289] - 2:
                                mem[0] = cd[68]
                                mem[32] = 4
                                if mem[(32 * idx) + _19345 + 333 len 20] == mem[(32 * idx + 1) + _19345 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx) + _19345 + 333 len 20] < mem[(32 * idx + 1) + _19345 + 333 len 20]:
                                    if not mem[(32 * idx) + _19345 + 333 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58075 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx) + _19345 + 321])
                                    mem[mem[64] + 52] = address(_55860)
                                    _59345 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _59347 = sha3(mem[_59345 + 32 len mem[_59345]])
                                    mem[_58075 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58075 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58075 + 125] = _59347
                                    mem[_58075 + 157] = stor4[cd[68]].field_512
                                    mem[_58075 + 72] = 85
                                    mem[_58075 + 189] = 0
                                    mem[64] = _58075 + 221
                                    mem[_58075 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58075 + 225] = 0
                                    mem[_58075 + 257] = _56221
                                    mem[_58075 + 289] = msg.sender
                                    mem[_58075 + 321] = 128
                                    mem[_58075 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58075 + 385] = mem[s + _58075 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _59347, stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, _59347, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56221, msg.sender, 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _19345 + 333 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58076 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19345 + 321])
                                    mem[mem[64] + 52] = address(_55795)
                                    _59349 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _59351 = sha3(mem[_59349 + 32 len mem[_59349]])
                                    mem[_58076 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58076 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58076 + 125] = _59351
                                    mem[_58076 + 157] = stor4[cd[68]].field_512
                                    mem[_58076 + 72] = 85
                                    mem[_58076 + 189] = 0
                                    mem[64] = _58076 + 221
                                    mem[_58076 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58076 + 225] = 0
                                    mem[_58076 + 257] = _56221
                                    mem[_58076 + 289] = msg.sender
                                    mem[_58076 + 321] = 128
                                    mem[_58076 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58076 + 385] = mem[s + _58076 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _59351, stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, _59351, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56221, msg.sender, 128, 0
                            else:
                                require idx + 2 < mem[_19345 + 289]
                                _56605 = mem[(32 * idx + 2) + _19345 + 321]
                                mem[0] = cd[68]
                                mem[32] = 4
                                if mem[(32 * idx + 1) + _19345 + 333 len 20] == mem[(32 * idx + 2) + _19345 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx + 1) + _19345 + 333 len 20] < mem[(32 * idx + 2) + _19345 + 333 len 20]:
                                    if not mem[(32 * idx + 1) + _19345 + 333 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58073 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19345 + 321])
                                    mem[mem[64] + 52] = address(_56605)
                                    _59337 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _59339 = sha3(mem[_59337 + 32 len mem[_59337]])
                                    mem[_58073 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58073 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58073 + 125] = _59339
                                    mem[_58073 + 157] = stor4[cd[68]].field_512
                                    mem[_58073 + 72] = 85
                                    mem[0] = cd[68]
                                    mem[32] = 4
                                    if address(_55795) == address(_55860):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_55795) < address(_55860):
                                        if not address(_55795):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58073 + 221] = address(_55795)
                                        mem[_58073 + 241] = address(_55860)
                                        mem[_58073 + 189] = 40
                                        mem[_58073 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58073 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58073 + 314] = sha3(address(_55795), address(_55860))
                                        mem[_58073 + 346] = stor4[cd[68]].field_512
                                        mem[_58073 + 261] = 85
                                        mem[_58073 + 378] = 0
                                        mem[64] = _58073 + 410
                                        mem[_58073 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58073 + 414] = 0
                                        mem[_58073 + 446] = _56221
                                        mem[_58073 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59339, stor4[cd[68]].field_512))
                                        mem[_58073 + 510] = 128
                                        mem[_58073 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58073 + 574] = mem[s + _58073 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55795), address(_55860)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55795), address(_55860)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _56221, address(sha3(0, stor4[cd[68]].field_0, _59339, stor4[cd[68]].field_512)), 128, 0
                                    else:
                                        if not address(_55860):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58073 + 221] = address(_55860)
                                        mem[_58073 + 241] = address(_55795)
                                        mem[_58073 + 189] = 40
                                        mem[_58073 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58073 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58073 + 314] = sha3(address(_55860), address(_55795))
                                        mem[_58073 + 346] = stor4[cd[68]].field_512
                                        mem[_58073 + 261] = 85
                                        mem[_58073 + 378] = 0
                                        mem[64] = _58073 + 410
                                        mem[_58073 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58073 + 414] = 0
                                        mem[_58073 + 446] = _56221
                                        mem[_58073 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59339, stor4[cd[68]].field_512))
                                        mem[_58073 + 510] = 128
                                        mem[_58073 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58073 + 574] = mem[s + _58073 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55860), address(_55795)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55860), address(_55795)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _56221, address(sha3(0, stor4[cd[68]].field_0, _59339, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _19345 + 333 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58074 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19345 + 321])
                                    mem[mem[64] + 52] = address(_55860)
                                    _59341 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _59343 = sha3(mem[_59341 + 32 len mem[_59341]])
                                    mem[_58074 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58074 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58074 + 125] = _59343
                                    mem[_58074 + 157] = stor4[cd[68]].field_512
                                    mem[_58074 + 72] = 85
                                    mem[0] = cd[68]
                                    mem[32] = 4
                                    if address(_55795) == address(_55860):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_55795) < address(_55860):
                                        if not address(_55795):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58074 + 221] = address(_55795)
                                        mem[_58074 + 241] = address(_55860)
                                        mem[_58074 + 189] = 40
                                        mem[_58074 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58074 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58074 + 314] = sha3(address(_55795), address(_55860))
                                        mem[_58074 + 346] = stor4[cd[68]].field_512
                                        mem[_58074 + 261] = 85
                                        mem[_58074 + 378] = 0
                                        mem[64] = _58074 + 410
                                        mem[_58074 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58074 + 414] = 0
                                        mem[_58074 + 446] = _56221
                                        mem[_58074 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59343, stor4[cd[68]].field_512))
                                        mem[_58074 + 510] = 128
                                        mem[_58074 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58074 + 574] = mem[s + _58074 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55795), address(_55860)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55795), address(_55860)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _56221, address(sha3(0, stor4[cd[68]].field_0, _59343, stor4[cd[68]].field_512)), 128, 0
                                    else:
                                        if not address(_55860):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58074 + 221] = address(_55860)
                                        mem[_58074 + 241] = address(_55795)
                                        mem[_58074 + 189] = 40
                                        mem[_58074 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58074 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58074 + 314] = sha3(address(_55860), address(_55795))
                                        mem[_58074 + 346] = stor4[cd[68]].field_512
                                        mem[_58074 + 261] = 85
                                        mem[_58074 + 378] = 0
                                        mem[64] = _58074 + 410
                                        mem[_58074 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58074 + 414] = 0
                                        mem[_58074 + 446] = _56221
                                        mem[_58074 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59343, stor4[cd[68]].field_512))
                                        mem[_58074 + 510] = 128
                                        mem[_58074 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58074 + 574] = mem[s + _58074 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55860), address(_55795)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55860), address(_55795)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _56221, address(sha3(0, stor4[cd[68]].field_0, _59343, stor4[cd[68]].field_512)), 128, 0
                        else:
                            if idx >= mem[_19345 + 289] - 2:
                                mem[0] = cd[68]
                                mem[32] = 4
                                if mem[(32 * idx) + _19345 + 333 len 20] == mem[(32 * idx + 1) + _19345 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx) + _19345 + 333 len 20] < mem[(32 * idx + 1) + _19345 + 333 len 20]:
                                    if not mem[(32 * idx) + _19345 + 333 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58079 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx) + _19345 + 321])
                                    mem[mem[64] + 52] = address(_55860)
                                    _59361 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _59363 = sha3(mem[_59361 + 32 len mem[_59361]])
                                    mem[_58079 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58079 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58079 + 125] = _59363
                                    mem[_58079 + 157] = stor4[cd[68]].field_512
                                    mem[_58079 + 72] = 85
                                    mem[_58079 + 189] = 0
                                    mem[64] = _58079 + 221
                                    mem[_58079 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58079 + 225] = _56221
                                    mem[_58079 + 257] = 0
                                    mem[_58079 + 289] = msg.sender
                                    mem[_58079 + 321] = 128
                                    mem[_58079 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58079 + 385] = mem[s + _58079 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _59363, stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, _59363, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56221, 0, msg.sender, 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _19345 + 333 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58080 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19345 + 321])
                                    mem[mem[64] + 52] = address(_55795)
                                    _59365 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _59367 = sha3(mem[_59365 + 32 len mem[_59365]])
                                    mem[_58080 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58080 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58080 + 125] = _59367
                                    mem[_58080 + 157] = stor4[cd[68]].field_512
                                    mem[_58080 + 72] = 85
                                    mem[_58080 + 189] = 0
                                    mem[64] = _58080 + 221
                                    mem[_58080 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58080 + 225] = _56221
                                    mem[_58080 + 257] = 0
                                    mem[_58080 + 289] = msg.sender
                                    mem[_58080 + 321] = 128
                                    mem[_58080 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58080 + 385] = mem[s + _58080 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _59367, stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, _59367, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56221, 0, msg.sender, 128, 0
                            else:
                                require idx + 2 < mem[_19345 + 289]
                                _56606 = mem[(32 * idx + 2) + _19345 + 321]
                                mem[0] = cd[68]
                                mem[32] = 4
                                if mem[(32 * idx + 1) + _19345 + 333 len 20] == mem[(32 * idx + 2) + _19345 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx + 1) + _19345 + 333 len 20] < mem[(32 * idx + 2) + _19345 + 333 len 20]:
                                    if not mem[(32 * idx + 1) + _19345 + 333 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58077 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19345 + 321])
                                    mem[mem[64] + 52] = address(_56606)
                                    _59353 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _59355 = sha3(mem[_59353 + 32 len mem[_59353]])
                                    mem[_58077 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58077 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58077 + 125] = _59355
                                    mem[_58077 + 157] = stor4[cd[68]].field_512
                                    mem[_58077 + 72] = 85
                                    mem[0] = cd[68]
                                    mem[32] = 4
                                    if address(_55795) == address(_55860):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_55795) < address(_55860):
                                        if not address(_55795):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58077 + 221] = address(_55795)
                                        mem[_58077 + 241] = address(_55860)
                                        mem[_58077 + 189] = 40
                                        mem[_58077 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58077 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58077 + 314] = sha3(address(_55795), address(_55860))
                                        mem[_58077 + 346] = stor4[cd[68]].field_512
                                        mem[_58077 + 261] = 85
                                        mem[_58077 + 378] = 0
                                        mem[64] = _58077 + 410
                                        mem[_58077 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58077 + 414] = _56221
                                        mem[_58077 + 446] = 0
                                        mem[_58077 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59355, stor4[cd[68]].field_512))
                                        mem[_58077 + 510] = 128
                                        mem[_58077 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58077 + 574] = mem[s + _58077 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55795), address(_55860)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55795), address(_55860)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _56221, 0, address(sha3(0, stor4[cd[68]].field_0, _59355, stor4[cd[68]].field_512)), 128, 0
                                    else:
                                        if not address(_55860):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58077 + 221] = address(_55860)
                                        mem[_58077 + 241] = address(_55795)
                                        mem[_58077 + 189] = 40
                                        mem[_58077 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58077 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58077 + 314] = sha3(address(_55860), address(_55795))
                                        mem[_58077 + 346] = stor4[cd[68]].field_512
                                        mem[_58077 + 261] = 85
                                        mem[_58077 + 378] = 0
                                        mem[64] = _58077 + 410
                                        mem[_58077 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58077 + 414] = _56221
                                        mem[_58077 + 446] = 0
                                        mem[_58077 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59355, stor4[cd[68]].field_512))
                                        mem[_58077 + 510] = 128
                                        mem[_58077 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58077 + 574] = mem[s + _58077 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55860), address(_55795)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55860), address(_55795)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _56221, 0, address(sha3(0, stor4[cd[68]].field_0, _59355, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _19345 + 333 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58078 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19345 + 321])
                                    mem[mem[64] + 52] = address(_55860)
                                    _59357 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _59359 = sha3(mem[_59357 + 32 len mem[_59357]])
                                    mem[_58078 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58078 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58078 + 125] = _59359
                                    mem[_58078 + 157] = stor4[cd[68]].field_512
                                    mem[_58078 + 72] = 85
                                    mem[0] = cd[68]
                                    mem[32] = 4
                                    if address(_55795) == address(_55860):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_55795) < address(_55860):
                                        if not address(_55795):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58078 + 221] = address(_55795)
                                        mem[_58078 + 241] = address(_55860)
                                        mem[_58078 + 189] = 40
                                        mem[_58078 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58078 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58078 + 314] = sha3(address(_55795), address(_55860))
                                        mem[_58078 + 346] = stor4[cd[68]].field_512
                                        mem[_58078 + 261] = 85
                                        mem[_58078 + 378] = 0
                                        mem[64] = _58078 + 410
                                        mem[_58078 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58078 + 414] = _56221
                                        mem[_58078 + 446] = 0
                                        mem[_58078 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59359, stor4[cd[68]].field_512))
                                        mem[_58078 + 510] = 128
                                        mem[_58078 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58078 + 574] = mem[s + _58078 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55795), address(_55860)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55795), address(_55860)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _56221, 0, address(sha3(0, stor4[cd[68]].field_0, _59359, stor4[cd[68]].field_512)), 128, 0
                                    else:
                                        if not address(_55860):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58078 + 221] = address(_55860)
                                        mem[_58078 + 241] = address(_55795)
                                        mem[_58078 + 189] = 40
                                        mem[_58078 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58078 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58078 + 314] = sha3(address(_55860), address(_55795))
                                        mem[_58078 + 346] = stor4[cd[68]].field_512
                                        mem[_58078 + 261] = 85
                                        mem[_58078 + 378] = 0
                                        mem[64] = _58078 + 410
                                        mem[_58078 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58078 + 414] = _56221
                                        mem[_58078 + 446] = 0
                                        mem[_58078 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59359, stor4[cd[68]].field_512))
                                        mem[_58078 + 510] = 128
                                        mem[_58078 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58078 + 574] = mem[s + _58078 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55860), address(_55795)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55860), address(_55795)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _56221, 0, address(sha3(0, stor4[cd[68]].field_0, _59359, stor4[cd[68]].field_512)), 128, 0
                    else:
                        if not mem[(32 * idx + 1) + _19345 + 333 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                        _56223 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                        if mem[(32 * idx) + _19345 + 333 len 20] == mem[(32 * idx + 1) + _19345 + 333 len 20]:
                            if idx >= mem[_19345 + 289] - 2:
                                mem[0] = cd[68]
                                mem[32] = 4
                                if mem[(32 * idx) + _19345 + 333 len 20] == mem[(32 * idx + 1) + _19345 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx) + _19345 + 333 len 20] < mem[(32 * idx + 1) + _19345 + 333 len 20]:
                                    if not mem[(32 * idx) + _19345 + 333 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58083 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx) + _19345 + 321])
                                    mem[mem[64] + 52] = address(_55860)
                                    _59377 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _59379 = sha3(mem[_59377 + 32 len mem[_59377]])
                                    mem[_58083 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58083 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58083 + 125] = _59379
                                    mem[_58083 + 157] = stor4[cd[68]].field_512
                                    mem[_58083 + 72] = 85
                                    mem[_58083 + 189] = 0
                                    mem[64] = _58083 + 221
                                    mem[_58083 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58083 + 225] = 0
                                    mem[_58083 + 257] = _56223
                                    mem[_58083 + 289] = msg.sender
                                    mem[_58083 + 321] = 128
                                    mem[_58083 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58083 + 385] = mem[s + _58083 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _59379, stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, _59379, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56223, msg.sender, 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _19345 + 333 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58084 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19345 + 321])
                                    mem[mem[64] + 52] = address(_55795)
                                    _59381 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _59383 = sha3(mem[_59381 + 32 len mem[_59381]])
                                    mem[_58084 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58084 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58084 + 125] = _59383
                                    mem[_58084 + 157] = stor4[cd[68]].field_512
                                    mem[_58084 + 72] = 85
                                    mem[_58084 + 189] = 0
                                    mem[64] = _58084 + 221
                                    mem[_58084 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58084 + 225] = 0
                                    mem[_58084 + 257] = _56223
                                    mem[_58084 + 289] = msg.sender
                                    mem[_58084 + 321] = 128
                                    mem[_58084 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58084 + 385] = mem[s + _58084 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _59383, stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, _59383, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56223, msg.sender, 128, 0
                            else:
                                require idx + 2 < mem[_19345 + 289]
                                _56607 = mem[(32 * idx + 2) + _19345 + 321]
                                mem[0] = cd[68]
                                mem[32] = 4
                                if mem[(32 * idx + 1) + _19345 + 333 len 20] == mem[(32 * idx + 2) + _19345 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx + 1) + _19345 + 333 len 20] < mem[(32 * idx + 2) + _19345 + 333 len 20]:
                                    if not mem[(32 * idx + 1) + _19345 + 333 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58081 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19345 + 321])
                                    mem[mem[64] + 52] = address(_56607)
                                    _59369 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _59371 = sha3(mem[_59369 + 32 len mem[_59369]])
                                    mem[_58081 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58081 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58081 + 125] = _59371
                                    mem[_58081 + 157] = stor4[cd[68]].field_512
                                    mem[_58081 + 72] = 85
                                    mem[0] = cd[68]
                                    mem[32] = 4
                                    if address(_55795) == address(_55860):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_55795) < address(_55860):
                                        if not address(_55795):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58081 + 221] = address(_55795)
                                        mem[_58081 + 241] = address(_55860)
                                        mem[_58081 + 189] = 40
                                        mem[_58081 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58081 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58081 + 314] = sha3(address(_55795), address(_55860))
                                        mem[_58081 + 346] = stor4[cd[68]].field_512
                                        mem[_58081 + 261] = 85
                                        mem[_58081 + 378] = 0
                                        mem[64] = _58081 + 410
                                        mem[_58081 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58081 + 414] = 0
                                        mem[_58081 + 446] = _56223
                                        mem[_58081 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59371, stor4[cd[68]].field_512))
                                        mem[_58081 + 510] = 128
                                        mem[_58081 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58081 + 574] = mem[s + _58081 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55795), address(_55860)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55795), address(_55860)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _56223, address(sha3(0, stor4[cd[68]].field_0, _59371, stor4[cd[68]].field_512)), 128, 0
                                    else:
                                        if not address(_55860):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58081 + 221] = address(_55860)
                                        mem[_58081 + 241] = address(_55795)
                                        mem[_58081 + 189] = 40
                                        mem[_58081 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58081 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58081 + 314] = sha3(address(_55860), address(_55795))
                                        mem[_58081 + 346] = stor4[cd[68]].field_512
                                        mem[_58081 + 261] = 85
                                        mem[_58081 + 378] = 0
                                        mem[64] = _58081 + 410
                                        mem[_58081 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58081 + 414] = 0
                                        mem[_58081 + 446] = _56223
                                        mem[_58081 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59371, stor4[cd[68]].field_512))
                                        mem[_58081 + 510] = 128
                                        mem[_58081 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58081 + 574] = mem[s + _58081 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55860), address(_55795)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55860), address(_55795)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _56223, address(sha3(0, stor4[cd[68]].field_0, _59371, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _19345 + 333 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58082 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19345 + 321])
                                    mem[mem[64] + 52] = address(_55860)
                                    _59373 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _59375 = sha3(mem[_59373 + 32 len mem[_59373]])
                                    mem[_58082 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58082 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58082 + 125] = _59375
                                    mem[_58082 + 157] = stor4[cd[68]].field_512
                                    mem[_58082 + 72] = 85
                                    mem[0] = cd[68]
                                    mem[32] = 4
                                    if address(_55795) == address(_55860):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_55795) < address(_55860):
                                        if not address(_55795):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58082 + 221] = address(_55795)
                                        mem[_58082 + 241] = address(_55860)
                                        mem[_58082 + 189] = 40
                                        mem[_58082 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58082 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58082 + 314] = sha3(address(_55795), address(_55860))
                                        mem[_58082 + 346] = stor4[cd[68]].field_512
                                        mem[_58082 + 261] = 85
                                        mem[_58082 + 378] = 0
                                        mem[64] = _58082 + 410
                                        mem[_58082 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58082 + 414] = 0
                                        mem[_58082 + 446] = _56223
                                        mem[_58082 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59375, stor4[cd[68]].field_512))
                                        mem[_58082 + 510] = 128
                                        mem[_58082 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58082 + 574] = mem[s + _58082 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55795), address(_55860)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55795), address(_55860)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _56223, address(sha3(0, stor4[cd[68]].field_0, _59375, stor4[cd[68]].field_512)), 128, 0
                                    else:
                                        if not address(_55860):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58082 + 221] = address(_55860)
                                        mem[_58082 + 241] = address(_55795)
                                        mem[_58082 + 189] = 40
                                        mem[_58082 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58082 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58082 + 314] = sha3(address(_55860), address(_55795))
                                        mem[_58082 + 346] = stor4[cd[68]].field_512
                                        mem[_58082 + 261] = 85
                                        mem[_58082 + 378] = 0
                                        mem[64] = _58082 + 410
                                        mem[_58082 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58082 + 414] = 0
                                        mem[_58082 + 446] = _56223
                                        mem[_58082 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59375, stor4[cd[68]].field_512))
                                        mem[_58082 + 510] = 128
                                        mem[_58082 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58082 + 574] = mem[s + _58082 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55860), address(_55795)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55860), address(_55795)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _56223, address(sha3(0, stor4[cd[68]].field_0, _59375, stor4[cd[68]].field_512)), 128, 0
                        else:
                            if idx >= mem[_19345 + 289] - 2:
                                mem[0] = cd[68]
                                mem[32] = 4
                                if mem[(32 * idx) + _19345 + 333 len 20] == mem[(32 * idx + 1) + _19345 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx) + _19345 + 333 len 20] < mem[(32 * idx + 1) + _19345 + 333 len 20]:
                                    if not mem[(32 * idx) + _19345 + 333 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58087 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx) + _19345 + 321])
                                    mem[mem[64] + 52] = address(_55860)
                                    _59393 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _59395 = sha3(mem[_59393 + 32 len mem[_59393]])
                                    mem[_58087 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58087 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58087 + 125] = _59395
                                    mem[_58087 + 157] = stor4[cd[68]].field_512
                                    mem[_58087 + 72] = 85
                                    mem[_58087 + 189] = 0
                                    mem[64] = _58087 + 221
                                    mem[_58087 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58087 + 225] = _56223
                                    mem[_58087 + 257] = 0
                                    mem[_58087 + 289] = msg.sender
                                    mem[_58087 + 321] = 128
                                    mem[_58087 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58087 + 385] = mem[s + _58087 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _59395, stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, _59395, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56223, 0, msg.sender, 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _19345 + 333 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58088 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19345 + 321])
                                    mem[mem[64] + 52] = address(_55795)
                                    _59397 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _59399 = sha3(mem[_59397 + 32 len mem[_59397]])
                                    mem[_58088 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58088 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58088 + 125] = _59399
                                    mem[_58088 + 157] = stor4[cd[68]].field_512
                                    mem[_58088 + 72] = 85
                                    mem[_58088 + 189] = 0
                                    mem[64] = _58088 + 221
                                    mem[_58088 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58088 + 225] = _56223
                                    mem[_58088 + 257] = 0
                                    mem[_58088 + 289] = msg.sender
                                    mem[_58088 + 321] = 128
                                    mem[_58088 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58088 + 385] = mem[s + _58088 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _59399, stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, _59399, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56223, 0, msg.sender, 128, 0
                            else:
                                require idx + 2 < mem[_19345 + 289]
                                _56608 = mem[(32 * idx + 2) + _19345 + 321]
                                mem[0] = cd[68]
                                mem[32] = 4
                                if mem[(32 * idx + 1) + _19345 + 333 len 20] == mem[(32 * idx + 2) + _19345 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx + 1) + _19345 + 333 len 20] < mem[(32 * idx + 2) + _19345 + 333 len 20]:
                                    if not mem[(32 * idx + 1) + _19345 + 333 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58085 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19345 + 321])
                                    mem[mem[64] + 52] = address(_56608)
                                    _59385 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _59387 = sha3(mem[_59385 + 32 len mem[_59385]])
                                    mem[_58085 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58085 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58085 + 125] = _59387
                                    mem[_58085 + 157] = stor4[cd[68]].field_512
                                    mem[_58085 + 72] = 85
                                    mem[0] = cd[68]
                                    mem[32] = 4
                                    if address(_55795) == address(_55860):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_55795) < address(_55860):
                                        if not address(_55795):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58085 + 221] = address(_55795)
                                        mem[_58085 + 241] = address(_55860)
                                        mem[_58085 + 189] = 40
                                        mem[_58085 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58085 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58085 + 314] = sha3(address(_55795), address(_55860))
                                        mem[_58085 + 346] = stor4[cd[68]].field_512
                                        mem[_58085 + 261] = 85
                                        mem[_58085 + 378] = 0
                                        mem[64] = _58085 + 410
                                        mem[_58085 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58085 + 414] = _56223
                                        mem[_58085 + 446] = 0
                                        mem[_58085 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59387, stor4[cd[68]].field_512))
                                        mem[_58085 + 510] = 128
                                        mem[_58085 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58085 + 574] = mem[s + _58085 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55795), address(_55860)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55795), address(_55860)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _56223, 0, address(sha3(0, stor4[cd[68]].field_0, _59387, stor4[cd[68]].field_512)), 128, 0
                                    else:
                                        if not address(_55860):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58085 + 221] = address(_55860)
                                        mem[_58085 + 241] = address(_55795)
                                        mem[_58085 + 189] = 40
                                        mem[_58085 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58085 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58085 + 314] = sha3(address(_55860), address(_55795))
                                        mem[_58085 + 346] = stor4[cd[68]].field_512
                                        mem[_58085 + 261] = 85
                                        mem[_58085 + 378] = 0
                                        mem[64] = _58085 + 410
                                        mem[_58085 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58085 + 414] = _56223
                                        mem[_58085 + 446] = 0
                                        mem[_58085 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59387, stor4[cd[68]].field_512))
                                        mem[_58085 + 510] = 128
                                        mem[_58085 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58085 + 574] = mem[s + _58085 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55860), address(_55795)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55860), address(_55795)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _56223, 0, address(sha3(0, stor4[cd[68]].field_0, _59387, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _19345 + 333 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58086 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19345 + 321])
                                    mem[mem[64] + 52] = address(_55860)
                                    _59389 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _59391 = sha3(mem[_59389 + 32 len mem[_59389]])
                                    mem[_58086 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58086 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58086 + 125] = _59391
                                    mem[_58086 + 157] = stor4[cd[68]].field_512
                                    mem[_58086 + 72] = 85
                                    mem[0] = cd[68]
                                    mem[32] = 4
                                    if address(_55795) == address(_55860):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_55795) < address(_55860):
                                        if not address(_55795):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58086 + 221] = address(_55795)
                                        mem[_58086 + 241] = address(_55860)
                                        mem[_58086 + 189] = 40
                                        mem[_58086 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58086 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58086 + 314] = sha3(address(_55795), address(_55860))
                                        mem[_58086 + 346] = stor4[cd[68]].field_512
                                        mem[_58086 + 261] = 85
                                        mem[_58086 + 378] = 0
                                        mem[64] = _58086 + 410
                                        mem[_58086 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58086 + 414] = _56223
                                        mem[_58086 + 446] = 0
                                        mem[_58086 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59391, stor4[cd[68]].field_512))
                                        mem[_58086 + 510] = 128
                                        mem[_58086 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58086 + 574] = mem[s + _58086 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55795), address(_55860)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55795), address(_55860)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _56223, 0, address(sha3(0, stor4[cd[68]].field_0, _59391, stor4[cd[68]].field_512)), 128, 0
                                    else:
                                        if not address(_55860):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58086 + 221] = address(_55860)
                                        mem[_58086 + 241] = address(_55795)
                                        mem[_58086 + 189] = 40
                                        mem[_58086 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58086 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58086 + 314] = sha3(address(_55860), address(_55795))
                                        mem[_58086 + 346] = stor4[cd[68]].field_512
                                        mem[_58086 + 261] = 85
                                        mem[_58086 + 378] = 0
                                        mem[64] = _58086 + 410
                                        mem[_58086 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58086 + 414] = _56223
                                        mem[_58086 + 446] = 0
                                        mem[_58086 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59391, stor4[cd[68]].field_512))
                                        mem[_58086 + 510] = 128
                                        mem[_58086 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58086 + 574] = mem[s + _58086 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55860), address(_55795)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55860), address(_55795)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _56223, 0, address(sha3(0, stor4[cd[68]].field_0, _59391, stor4[cd[68]].field_512)), 128, 0
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    continue 
                mem[mem[64]] = 32
                _55923 = mem[(32 * ('cd', 36).length) + 128]
                mem[mem[64] + 32] = mem[(32 * ('cd', 36).length) + 128]
                mem[mem[64] + 64 len 32 * _55923] = mem[(32 * ('cd', 36).length) + 160 len 32 * _55923]
                return 32, mem[mem[64] + 32 len (32 * _55923) + 32]
            mem[_19345 + 289] = return_data.size
            mem[_19345 + 321 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                revert with 0, 'TransferHelper: TRANSFER_FAILED'
            if not return_data.size:
                mem[64] = _19345 + ceil32(return_data.size) + (32 * ('cd', 36).length) + 322
                mem[_19345 + ceil32(return_data.size) + 290] = ('cd', 36).length
                mem[_19345 + ceil32(return_data.size) + 322 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
                mem[_19345 + ceil32(return_data.size) + (32 * ('cd', 36).length) + 322] = 0
                idx = 0
                while idx < ('cd', 36).length - 1:
                    require idx < mem[_19345 + ceil32(return_data.size) + 290]
                    _55797 = mem[(32 * idx) + _19345 + ceil32(return_data.size) + 322]
                    require idx + 1 < mem[_19345 + ceil32(return_data.size) + 290]
                    _55862 = mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 322]
                    if mem[(32 * idx) + _19345 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 334 len 20]:
                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                    if mem[(32 * idx) + _19345 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 334 len 20]:
                        if not mem[(32 * idx) + _19345 + ceil32(return_data.size) + 334 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                        _56225 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                        if mem[(32 * idx) + _19345 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx) + _19345 + ceil32(return_data.size) + 334 len 20]:
                            if idx >= mem[_19345 + ceil32(return_data.size) + 290] - 2:
                                mem[0] = cd[68]
                                mem[32] = 4
                                if mem[(32 * idx) + _19345 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx) + _19345 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                    if not mem[(32 * idx) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58091 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx) + _19345 + ceil32(return_data.size) + 322])
                                    mem[mem[64] + 52] = address(_55862)
                                    _59409 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _59411 = sha3(mem[_59409 + 32 len mem[_59409]])
                                    mem[_58091 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58091 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58091 + 125] = _59411
                                    mem[_58091 + 157] = stor4[cd[68]].field_512
                                    mem[_58091 + 72] = 85
                                    mem[_58091 + 189] = 0
                                    mem[64] = _58091 + 221
                                    mem[_58091 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58091 + 225] = 0
                                    mem[_58091 + 257] = _56225
                                    mem[_58091 + 289] = msg.sender
                                    mem[_58091 + 321] = 128
                                    mem[_58091 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58091 + 385] = mem[s + _58091 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _59411, stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, _59411, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56225, msg.sender, 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58092 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 322])
                                    mem[mem[64] + 52] = address(_55797)
                                    _59413 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _59415 = sha3(mem[_59413 + 32 len mem[_59413]])
                                    mem[_58092 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58092 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58092 + 125] = _59415
                                    mem[_58092 + 157] = stor4[cd[68]].field_512
                                    mem[_58092 + 72] = 85
                                    mem[_58092 + 189] = 0
                                    mem[64] = _58092 + 221
                                    mem[_58092 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58092 + 225] = 0
                                    mem[_58092 + 257] = _56225
                                    mem[_58092 + 289] = msg.sender
                                    mem[_58092 + 321] = 128
                                    mem[_58092 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58092 + 385] = mem[s + _58092 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _59415, stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, _59415, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56225, msg.sender, 128, 0
                            else:
                                require idx + 2 < mem[_19345 + ceil32(return_data.size) + 290]
                                _56609 = mem[(32 * idx + 2) + _19345 + ceil32(return_data.size) + 322]
                                mem[0] = cd[68]
                                mem[32] = 4
                                if mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 2) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 2) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                    if not mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58089 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 322])
                                    mem[mem[64] + 52] = address(_56609)
                                    _59401 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _59403 = sha3(mem[_59401 + 32 len mem[_59401]])
                                    mem[_58089 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58089 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58089 + 125] = _59403
                                    mem[_58089 + 157] = stor4[cd[68]].field_512
                                    mem[_58089 + 72] = 85
                                    mem[0] = cd[68]
                                    mem[32] = 4
                                    if address(_55797) == address(_55862):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_55797) < address(_55862):
                                        if not address(_55797):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58089 + 221] = address(_55797)
                                        mem[_58089 + 241] = address(_55862)
                                        mem[_58089 + 189] = 40
                                        mem[_58089 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58089 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58089 + 314] = sha3(address(_55797), address(_55862))
                                        mem[_58089 + 346] = stor4[cd[68]].field_512
                                        mem[_58089 + 261] = 85
                                        mem[_58089 + 378] = 0
                                        mem[64] = _58089 + 410
                                        mem[_58089 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58089 + 414] = 0
                                        mem[_58089 + 446] = _56225
                                        mem[_58089 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59403, stor4[cd[68]].field_512))
                                        mem[_58089 + 510] = 128
                                        mem[_58089 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58089 + 574] = mem[s + _58089 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55797), address(_55862)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55797), address(_55862)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _56225, address(sha3(0, stor4[cd[68]].field_0, _59403, stor4[cd[68]].field_512)), 128, 0
                                    else:
                                        if not address(_55862):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58089 + 221] = address(_55862)
                                        mem[_58089 + 241] = address(_55797)
                                        mem[_58089 + 189] = 40
                                        mem[_58089 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58089 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58089 + 314] = sha3(address(_55862), address(_55797))
                                        mem[_58089 + 346] = stor4[cd[68]].field_512
                                        mem[_58089 + 261] = 85
                                        mem[_58089 + 378] = 0
                                        mem[64] = _58089 + 410
                                        mem[_58089 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58089 + 414] = 0
                                        mem[_58089 + 446] = _56225
                                        mem[_58089 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59403, stor4[cd[68]].field_512))
                                        mem[_58089 + 510] = 128
                                        mem[_58089 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58089 + 574] = mem[s + _58089 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55862), address(_55797)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55862), address(_55797)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _56225, address(sha3(0, stor4[cd[68]].field_0, _59403, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58090 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19345 + ceil32(return_data.size) + 322])
                                    mem[mem[64] + 52] = address(_55862)
                                    _59405 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _59407 = sha3(mem[_59405 + 32 len mem[_59405]])
                                    mem[_58090 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58090 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58090 + 125] = _59407
                                    mem[_58090 + 157] = stor4[cd[68]].field_512
                                    mem[_58090 + 72] = 85
                                    mem[0] = cd[68]
                                    mem[32] = 4
                                    if address(_55797) == address(_55862):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_55797) < address(_55862):
                                        if not address(_55797):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58090 + 221] = address(_55797)
                                        mem[_58090 + 241] = address(_55862)
                                        mem[_58090 + 189] = 40
                                        mem[_58090 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58090 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58090 + 314] = sha3(address(_55797), address(_55862))
                                        mem[_58090 + 346] = stor4[cd[68]].field_512
                                        mem[_58090 + 261] = 85
                                        mem[_58090 + 378] = 0
                                        mem[64] = _58090 + 410
                                        mem[_58090 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58090 + 414] = 0
                                        mem[_58090 + 446] = _56225
                                        mem[_58090 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59407, stor4[cd[68]].field_512))
                                        mem[_58090 + 510] = 128
                                        mem[_58090 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58090 + 574] = mem[s + _58090 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55797), address(_55862)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55797), address(_55862)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _56225, address(sha3(0, stor4[cd[68]].field_0, _59407, stor4[cd[68]].field_512)), 128, 0
                                    else:
                                        if not address(_55862):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58090 + 221] = address(_55862)
                                        mem[_58090 + 241] = address(_55797)
                                        mem[_58090 + 189] = 40
                                        mem[_58090 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58090 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58090 + 314] = sha3(address(_55862), address(_55797))
                                        mem[_58090 + 346] = stor4[cd[68]].field_512
                                        mem[_58090 + 261] = 85
                                        mem[_58090 + 378] = 0
                                        mem[64] = _58090 + 410
                                        mem[_58090 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58090 + 414] = 0
                                        mem[_58090 + 446] = _56225
                                        mem[_58090 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59407, stor4[cd[68]].field_512))
                                        mem[_58090 + 510] = 128
                                        mem[_58090 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58090 + 574] = mem[s + _58090 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55862), address(_55797)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55862), address(_55797)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _56225, address(sha3(0, stor4[cd[68]].field_0, _59407, stor4[cd[68]].field_512)), 128, 0
                        else:
                            if idx >= mem[_19345 + ceil32(return_data.size) + 290] - 2:
                                mem[0] = cd[68]
                                mem[32] = 4
                                if mem[(32 * idx) + _19345 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx) + _19345 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                    if not mem[(32 * idx) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58095 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx) + _19345 + ceil32(return_data.size) + 322])
                                    mem[mem[64] + 52] = address(_55862)
                                    _59425 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _59427 = sha3(mem[_59425 + 32 len mem[_59425]])
                                    mem[_58095 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58095 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58095 + 125] = _59427
                                    mem[_58095 + 157] = stor4[cd[68]].field_512
                                    mem[_58095 + 72] = 85
                                    mem[_58095 + 189] = 0
                                    mem[64] = _58095 + 221
                                    mem[_58095 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58095 + 225] = _56225
                                    mem[_58095 + 257] = 0
                                    mem[_58095 + 289] = msg.sender
                                    mem[_58095 + 321] = 128
                                    mem[_58095 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58095 + 385] = mem[s + _58095 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _59427, stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, _59427, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56225, 0, msg.sender, 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58096 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 322])
                                    mem[mem[64] + 52] = address(_55797)
                                    _59429 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _59431 = sha3(mem[_59429 + 32 len mem[_59429]])
                                    mem[_58096 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58096 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58096 + 125] = _59431
                                    mem[_58096 + 157] = stor4[cd[68]].field_512
                                    mem[_58096 + 72] = 85
                                    mem[_58096 + 189] = 0
                                    mem[64] = _58096 + 221
                                    mem[_58096 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58096 + 225] = _56225
                                    mem[_58096 + 257] = 0
                                    mem[_58096 + 289] = msg.sender
                                    mem[_58096 + 321] = 128
                                    mem[_58096 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58096 + 385] = mem[s + _58096 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _59431, stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, _59431, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56225, 0, msg.sender, 128, 0
                            else:
                                require idx + 2 < mem[_19345 + ceil32(return_data.size) + 290]
                                _56610 = mem[(32 * idx + 2) + _19345 + ceil32(return_data.size) + 322]
                                mem[0] = cd[68]
                                mem[32] = 4
                                if mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 2) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 2) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                    if not mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58093 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 322])
                                    mem[mem[64] + 52] = address(_56610)
                                    _59417 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _59419 = sha3(mem[_59417 + 32 len mem[_59417]])
                                    mem[_58093 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58093 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58093 + 125] = _59419
                                    mem[_58093 + 157] = stor4[cd[68]].field_512
                                    mem[_58093 + 72] = 85
                                    mem[0] = cd[68]
                                    mem[32] = 4
                                    if address(_55797) == address(_55862):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_55797) < address(_55862):
                                        if not address(_55797):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58093 + 221] = address(_55797)
                                        mem[_58093 + 241] = address(_55862)
                                        mem[_58093 + 189] = 40
                                        mem[_58093 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58093 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58093 + 314] = sha3(address(_55797), address(_55862))
                                        mem[_58093 + 346] = stor4[cd[68]].field_512
                                        mem[_58093 + 261] = 85
                                        mem[_58093 + 378] = 0
                                        mem[64] = _58093 + 410
                                        mem[_58093 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58093 + 414] = _56225
                                        mem[_58093 + 446] = 0
                                        mem[_58093 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59419, stor4[cd[68]].field_512))
                                        mem[_58093 + 510] = 128
                                        mem[_58093 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58093 + 574] = mem[s + _58093 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55797), address(_55862)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55797), address(_55862)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _56225, 0, address(sha3(0, stor4[cd[68]].field_0, _59419, stor4[cd[68]].field_512)), 128, 0
                                    else:
                                        if not address(_55862):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58093 + 221] = address(_55862)
                                        mem[_58093 + 241] = address(_55797)
                                        mem[_58093 + 189] = 40
                                        mem[_58093 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58093 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58093 + 314] = sha3(address(_55862), address(_55797))
                                        mem[_58093 + 346] = stor4[cd[68]].field_512
                                        mem[_58093 + 261] = 85
                                        mem[_58093 + 378] = 0
                                        mem[64] = _58093 + 410
                                        mem[_58093 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58093 + 414] = _56225
                                        mem[_58093 + 446] = 0
                                        mem[_58093 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59419, stor4[cd[68]].field_512))
                                        mem[_58093 + 510] = 128
                                        mem[_58093 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58093 + 574] = mem[s + _58093 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55862), address(_55797)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55862), address(_55797)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _56225, 0, address(sha3(0, stor4[cd[68]].field_0, _59419, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58094 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19345 + ceil32(return_data.size) + 322])
                                    mem[mem[64] + 52] = address(_55862)
                                    _59421 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _59423 = sha3(mem[_59421 + 32 len mem[_59421]])
                                    mem[_58094 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58094 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58094 + 125] = _59423
                                    mem[_58094 + 157] = stor4[cd[68]].field_512
                                    mem[_58094 + 72] = 85
                                    mem[0] = cd[68]
                                    mem[32] = 4
                                    if address(_55797) == address(_55862):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_55797) < address(_55862):
                                        if not address(_55797):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58094 + 221] = address(_55797)
                                        mem[_58094 + 241] = address(_55862)
                                        mem[_58094 + 189] = 40
                                        mem[_58094 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58094 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58094 + 314] = sha3(address(_55797), address(_55862))
                                        mem[_58094 + 346] = stor4[cd[68]].field_512
                                        mem[_58094 + 261] = 85
                                        mem[_58094 + 378] = 0
                                        mem[64] = _58094 + 410
                                        mem[_58094 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58094 + 414] = _56225
                                        mem[_58094 + 446] = 0
                                        mem[_58094 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59423, stor4[cd[68]].field_512))
                                        mem[_58094 + 510] = 128
                                        mem[_58094 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58094 + 574] = mem[s + _58094 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55797), address(_55862)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55797), address(_55862)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _56225, 0, address(sha3(0, stor4[cd[68]].field_0, _59423, stor4[cd[68]].field_512)), 128, 0
                                    else:
                                        if not address(_55862):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58094 + 221] = address(_55862)
                                        mem[_58094 + 241] = address(_55797)
                                        mem[_58094 + 189] = 40
                                        mem[_58094 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58094 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58094 + 314] = sha3(address(_55862), address(_55797))
                                        mem[_58094 + 346] = stor4[cd[68]].field_512
                                        mem[_58094 + 261] = 85
                                        mem[_58094 + 378] = 0
                                        mem[64] = _58094 + 410
                                        mem[_58094 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58094 + 414] = _56225
                                        mem[_58094 + 446] = 0
                                        mem[_58094 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59423, stor4[cd[68]].field_512))
                                        mem[_58094 + 510] = 128
                                        mem[_58094 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58094 + 574] = mem[s + _58094 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55862), address(_55797)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55862), address(_55797)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _56225, 0, address(sha3(0, stor4[cd[68]].field_0, _59423, stor4[cd[68]].field_512)), 128, 0
                    else:
                        if not mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 334 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                        _56227 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                        if mem[(32 * idx) + _19345 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 334 len 20]:
                            if idx >= mem[_19345 + ceil32(return_data.size) + 290] - 2:
                                mem[0] = cd[68]
                                mem[32] = 4
                                if mem[(32 * idx) + _19345 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx) + _19345 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                    if not mem[(32 * idx) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58099 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx) + _19345 + ceil32(return_data.size) + 322])
                                    mem[mem[64] + 52] = address(_55862)
                                    _59441 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _59443 = sha3(mem[_59441 + 32 len mem[_59441]])
                                    mem[_58099 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58099 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58099 + 125] = _59443
                                    mem[_58099 + 157] = stor4[cd[68]].field_512
                                    mem[_58099 + 72] = 85
                                    mem[_58099 + 189] = 0
                                    mem[64] = _58099 + 221
                                    mem[_58099 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58099 + 225] = 0
                                    mem[_58099 + 257] = _56227
                                    mem[_58099 + 289] = msg.sender
                                    mem[_58099 + 321] = 128
                                    mem[_58099 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58099 + 385] = mem[s + _58099 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _59443, stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, _59443, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56227, msg.sender, 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58100 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 322])
                                    mem[mem[64] + 52] = address(_55797)
                                    _59445 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _59447 = sha3(mem[_59445 + 32 len mem[_59445]])
                                    mem[_58100 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58100 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58100 + 125] = _59447
                                    mem[_58100 + 157] = stor4[cd[68]].field_512
                                    mem[_58100 + 72] = 85
                                    mem[_58100 + 189] = 0
                                    mem[64] = _58100 + 221
                                    mem[_58100 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58100 + 225] = 0
                                    mem[_58100 + 257] = _56227
                                    mem[_58100 + 289] = msg.sender
                                    mem[_58100 + 321] = 128
                                    mem[_58100 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58100 + 385] = mem[s + _58100 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _59447, stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, _59447, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56227, msg.sender, 128, 0
                            else:
                                require idx + 2 < mem[_19345 + ceil32(return_data.size) + 290]
                                _56611 = mem[(32 * idx + 2) + _19345 + ceil32(return_data.size) + 322]
                                mem[0] = cd[68]
                                mem[32] = 4
                                if mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 2) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 2) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                    if not mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58097 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 322])
                                    mem[mem[64] + 52] = address(_56611)
                                    _59433 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _59435 = sha3(mem[_59433 + 32 len mem[_59433]])
                                    mem[_58097 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58097 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58097 + 125] = _59435
                                    mem[_58097 + 157] = stor4[cd[68]].field_512
                                    mem[_58097 + 72] = 85
                                    mem[0] = cd[68]
                                    mem[32] = 4
                                    if address(_55797) == address(_55862):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_55797) < address(_55862):
                                        if not address(_55797):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58097 + 221] = address(_55797)
                                        mem[_58097 + 241] = address(_55862)
                                        mem[_58097 + 189] = 40
                                        mem[_58097 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58097 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58097 + 314] = sha3(address(_55797), address(_55862))
                                        mem[_58097 + 346] = stor4[cd[68]].field_512
                                        mem[_58097 + 261] = 85
                                        mem[_58097 + 378] = 0
                                        mem[64] = _58097 + 410
                                        mem[_58097 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58097 + 414] = 0
                                        mem[_58097 + 446] = _56227
                                        mem[_58097 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59435, stor4[cd[68]].field_512))
                                        mem[_58097 + 510] = 128
                                        mem[_58097 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58097 + 574] = mem[s + _58097 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55797), address(_55862)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55797), address(_55862)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _56227, address(sha3(0, stor4[cd[68]].field_0, _59435, stor4[cd[68]].field_512)), 128, 0
                                    else:
                                        if not address(_55862):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58097 + 221] = address(_55862)
                                        mem[_58097 + 241] = address(_55797)
                                        mem[_58097 + 189] = 40
                                        mem[_58097 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58097 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58097 + 314] = sha3(address(_55862), address(_55797))
                                        mem[_58097 + 346] = stor4[cd[68]].field_512
                                        mem[_58097 + 261] = 85
                                        mem[_58097 + 378] = 0
                                        mem[64] = _58097 + 410
                                        mem[_58097 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58097 + 414] = 0
                                        mem[_58097 + 446] = _56227
                                        mem[_58097 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59435, stor4[cd[68]].field_512))
                                        mem[_58097 + 510] = 128
                                        mem[_58097 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58097 + 574] = mem[s + _58097 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55862), address(_55797)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55862), address(_55797)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _56227, address(sha3(0, stor4[cd[68]].field_0, _59435, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58098 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19345 + ceil32(return_data.size) + 322])
                                    mem[mem[64] + 52] = address(_55862)
                                    _59437 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _59439 = sha3(mem[_59437 + 32 len mem[_59437]])
                                    mem[_58098 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58098 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58098 + 125] = _59439
                                    mem[_58098 + 157] = stor4[cd[68]].field_512
                                    mem[_58098 + 72] = 85
                                    mem[0] = cd[68]
                                    mem[32] = 4
                                    if address(_55797) == address(_55862):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_55797) < address(_55862):
                                        if not address(_55797):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58098 + 221] = address(_55797)
                                        mem[_58098 + 241] = address(_55862)
                                        mem[_58098 + 189] = 40
                                        mem[_58098 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58098 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58098 + 314] = sha3(address(_55797), address(_55862))
                                        mem[_58098 + 346] = stor4[cd[68]].field_512
                                        mem[_58098 + 261] = 85
                                        mem[_58098 + 378] = 0
                                        mem[64] = _58098 + 410
                                        mem[_58098 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58098 + 414] = 0
                                        mem[_58098 + 446] = _56227
                                        mem[_58098 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59439, stor4[cd[68]].field_512))
                                        mem[_58098 + 510] = 128
                                        mem[_58098 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58098 + 574] = mem[s + _58098 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55797), address(_55862)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55797), address(_55862)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _56227, address(sha3(0, stor4[cd[68]].field_0, _59439, stor4[cd[68]].field_512)), 128, 0
                                    else:
                                        if not address(_55862):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58098 + 221] = address(_55862)
                                        mem[_58098 + 241] = address(_55797)
                                        mem[_58098 + 189] = 40
                                        mem[_58098 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58098 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58098 + 314] = sha3(address(_55862), address(_55797))
                                        mem[_58098 + 346] = stor4[cd[68]].field_512
                                        mem[_58098 + 261] = 85
                                        mem[_58098 + 378] = 0
                                        mem[64] = _58098 + 410
                                        mem[_58098 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58098 + 414] = 0
                                        mem[_58098 + 446] = _56227
                                        mem[_58098 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59439, stor4[cd[68]].field_512))
                                        mem[_58098 + 510] = 128
                                        mem[_58098 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58098 + 574] = mem[s + _58098 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55862), address(_55797)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55862), address(_55797)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _56227, address(sha3(0, stor4[cd[68]].field_0, _59439, stor4[cd[68]].field_512)), 128, 0
                        else:
                            if idx >= mem[_19345 + ceil32(return_data.size) + 290] - 2:
                                mem[0] = cd[68]
                                mem[32] = 4
                                if mem[(32 * idx) + _19345 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx) + _19345 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                    if not mem[(32 * idx) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58103 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx) + _19345 + ceil32(return_data.size) + 322])
                                    mem[mem[64] + 52] = address(_55862)
                                    _59457 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _59459 = sha3(mem[_59457 + 32 len mem[_59457]])
                                    mem[_58103 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58103 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58103 + 125] = _59459
                                    mem[_58103 + 157] = stor4[cd[68]].field_512
                                    mem[_58103 + 72] = 85
                                    mem[_58103 + 189] = 0
                                    mem[64] = _58103 + 221
                                    mem[_58103 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58103 + 225] = _56227
                                    mem[_58103 + 257] = 0
                                    mem[_58103 + 289] = msg.sender
                                    mem[_58103 + 321] = 128
                                    mem[_58103 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58103 + 385] = mem[s + _58103 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _59459, stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, _59459, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56227, 0, msg.sender, 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58104 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 322])
                                    mem[mem[64] + 52] = address(_55797)
                                    _59461 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _59463 = sha3(mem[_59461 + 32 len mem[_59461]])
                                    mem[_58104 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58104 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58104 + 125] = _59463
                                    mem[_58104 + 157] = stor4[cd[68]].field_512
                                    mem[_58104 + 72] = 85
                                    mem[_58104 + 189] = 0
                                    mem[64] = _58104 + 221
                                    mem[_58104 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58104 + 225] = _56227
                                    mem[_58104 + 257] = 0
                                    mem[_58104 + 289] = msg.sender
                                    mem[_58104 + 321] = 128
                                    mem[_58104 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58104 + 385] = mem[s + _58104 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _59463, stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, _59463, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56227, 0, msg.sender, 128, 0
                            else:
                                require idx + 2 < mem[_19345 + ceil32(return_data.size) + 290]
                                _56612 = mem[(32 * idx + 2) + _19345 + ceil32(return_data.size) + 322]
                                mem[0] = cd[68]
                                mem[32] = 4
                                if mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 2) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 2) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                    if not mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58101 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 322])
                                    mem[mem[64] + 52] = address(_56612)
                                    _59449 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _59451 = sha3(mem[_59449 + 32 len mem[_59449]])
                                    mem[_58101 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58101 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58101 + 125] = _59451
                                    mem[_58101 + 157] = stor4[cd[68]].field_512
                                    mem[_58101 + 72] = 85
                                    mem[0] = cd[68]
                                    mem[32] = 4
                                    if address(_55797) == address(_55862):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_55797) < address(_55862):
                                        if not address(_55797):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58101 + 221] = address(_55797)
                                        mem[_58101 + 241] = address(_55862)
                                        mem[_58101 + 189] = 40
                                        mem[_58101 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58101 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58101 + 314] = sha3(address(_55797), address(_55862))
                                        mem[_58101 + 346] = stor4[cd[68]].field_512
                                        mem[_58101 + 261] = 85
                                        mem[_58101 + 378] = 0
                                        mem[64] = _58101 + 410
                                        mem[_58101 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58101 + 414] = _56227
                                        mem[_58101 + 446] = 0
                                        mem[_58101 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59451, stor4[cd[68]].field_512))
                                        mem[_58101 + 510] = 128
                                        mem[_58101 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58101 + 574] = mem[s + _58101 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55797), address(_55862)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55797), address(_55862)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _56227, 0, address(sha3(0, stor4[cd[68]].field_0, _59451, stor4[cd[68]].field_512)), 128, 0
                                    else:
                                        if not address(_55862):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58101 + 221] = address(_55862)
                                        mem[_58101 + 241] = address(_55797)
                                        mem[_58101 + 189] = 40
                                        mem[_58101 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58101 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58101 + 314] = sha3(address(_55862), address(_55797))
                                        mem[_58101 + 346] = stor4[cd[68]].field_512
                                        mem[_58101 + 261] = 85
                                        mem[_58101 + 378] = 0
                                        mem[64] = _58101 + 410
                                        mem[_58101 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58101 + 414] = _56227
                                        mem[_58101 + 446] = 0
                                        mem[_58101 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59451, stor4[cd[68]].field_512))
                                        mem[_58101 + 510] = 128
                                        mem[_58101 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58101 + 574] = mem[s + _58101 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55862), address(_55797)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55862), address(_55797)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _56227, 0, address(sha3(0, stor4[cd[68]].field_0, _59451, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58102 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19345 + ceil32(return_data.size) + 322])
                                    mem[mem[64] + 52] = address(_55862)
                                    _59453 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _59455 = sha3(mem[_59453 + 32 len mem[_59453]])
                                    mem[_58102 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58102 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58102 + 125] = _59455
                                    mem[_58102 + 157] = stor4[cd[68]].field_512
                                    mem[_58102 + 72] = 85
                                    mem[0] = cd[68]
                                    mem[32] = 4
                                    if address(_55797) == address(_55862):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_55797) < address(_55862):
                                        if not address(_55797):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58102 + 221] = address(_55797)
                                        mem[_58102 + 241] = address(_55862)
                                        mem[_58102 + 189] = 40
                                        mem[_58102 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58102 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58102 + 314] = sha3(address(_55797), address(_55862))
                                        mem[_58102 + 346] = stor4[cd[68]].field_512
                                        mem[_58102 + 261] = 85
                                        mem[_58102 + 378] = 0
                                        mem[64] = _58102 + 410
                                        mem[_58102 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58102 + 414] = _56227
                                        mem[_58102 + 446] = 0
                                        mem[_58102 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59455, stor4[cd[68]].field_512))
                                        mem[_58102 + 510] = 128
                                        mem[_58102 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58102 + 574] = mem[s + _58102 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55797), address(_55862)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55797), address(_55862)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _56227, 0, address(sha3(0, stor4[cd[68]].field_0, _59455, stor4[cd[68]].field_512)), 128, 0
                                    else:
                                        if not address(_55862):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58102 + 221] = address(_55862)
                                        mem[_58102 + 241] = address(_55797)
                                        mem[_58102 + 189] = 40
                                        mem[_58102 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58102 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58102 + 314] = sha3(address(_55862), address(_55797))
                                        mem[_58102 + 346] = stor4[cd[68]].field_512
                                        mem[_58102 + 261] = 85
                                        mem[_58102 + 378] = 0
                                        mem[64] = _58102 + 410
                                        mem[_58102 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58102 + 414] = _56227
                                        mem[_58102 + 446] = 0
                                        mem[_58102 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59455, stor4[cd[68]].field_512))
                                        mem[_58102 + 510] = 128
                                        mem[_58102 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58102 + 574] = mem[s + _58102 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55862), address(_55797)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55862), address(_55797)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _56227, 0, address(sha3(0, stor4[cd[68]].field_0, _59455, stor4[cd[68]].field_512)), 128, 0
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    continue 
                mem[mem[64]] = 32
                _55925 = mem[(32 * ('cd', 36).length) + 128]
                mem[mem[64] + 32] = mem[(32 * ('cd', 36).length) + 128]
                mem[mem[64] + 64 len 32 * _55925] = mem[(32 * ('cd', 36).length) + 160 len 32 * _55925]
                return 32, mem[mem[64] + 32 len (32 * _55925) + 32]
            require return_data.size >= 32
            require mem[_19345 + 321] == bool(mem[_19345 + 321])
            if not mem[_19345 + 321]:
                revert with 0, 'TransferHelper: TRANSFER_FAILED'
            mem[64] = _19345 + ceil32(return_data.size) + (32 * ('cd', 36).length) + 322
            mem[_19345 + ceil32(return_data.size) + 290] = ('cd', 36).length
            mem[_19345 + ceil32(return_data.size) + 322 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
            mem[_19345 + ceil32(return_data.size) + (32 * ('cd', 36).length) + 322] = 0
            idx = 0
            while idx < ('cd', 36).length - 1:
                require idx < mem[_19345 + ceil32(return_data.size) + 290]
                _55799 = mem[(32 * idx) + _19345 + ceil32(return_data.size) + 322]
                require idx + 1 < mem[_19345 + ceil32(return_data.size) + 290]
                _55864 = mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 322]
                if mem[(32 * idx) + _19345 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 334 len 20]:
                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                if mem[(32 * idx) + _19345 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 334 len 20]:
                    if not mem[(32 * idx) + _19345 + ceil32(return_data.size) + 334 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                    _56229 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                    if mem[(32 * idx) + _19345 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx) + _19345 + ceil32(return_data.size) + 334 len 20]:
                        if idx >= mem[_19345 + ceil32(return_data.size) + 290] - 2:
                            mem[0] = cd[68]
                            mem[32] = 4
                            if mem[(32 * idx) + _19345 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if mem[(32 * idx) + _19345 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                if not mem[(32 * idx) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58107 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _19345 + ceil32(return_data.size) + 322])
                                mem[mem[64] + 52] = address(_55864)
                                _59473 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _59475 = sha3(mem[_59473 + 32 len mem[_59473]])
                                mem[_58107 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58107 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58107 + 125] = _59475
                                mem[_58107 + 157] = stor4[cd[68]].field_512
                                mem[_58107 + 72] = 85
                                mem[_58107 + 189] = 0
                                mem[64] = _58107 + 221
                                mem[_58107 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58107 + 225] = 0
                                mem[_58107 + 257] = _56229
                                mem[_58107 + 289] = msg.sender
                                mem[_58107 + 321] = 128
                                mem[_58107 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58107 + 385] = mem[s + _58107 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _59475, stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, _59475, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _56229, msg.sender, 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58108 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 322])
                                mem[mem[64] + 52] = address(_55799)
                                _59477 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _59479 = sha3(mem[_59477 + 32 len mem[_59477]])
                                mem[_58108 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58108 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58108 + 125] = _59479
                                mem[_58108 + 157] = stor4[cd[68]].field_512
                                mem[_58108 + 72] = 85
                                mem[_58108 + 189] = 0
                                mem[64] = _58108 + 221
                                mem[_58108 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58108 + 225] = 0
                                mem[_58108 + 257] = _56229
                                mem[_58108 + 289] = msg.sender
                                mem[_58108 + 321] = 128
                                mem[_58108 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58108 + 385] = mem[s + _58108 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _59479, stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, _59479, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _56229, msg.sender, 128, 0
                        else:
                            require idx + 2 < mem[_19345 + ceil32(return_data.size) + 290]
                            _56613 = mem[(32 * idx + 2) + _19345 + ceil32(return_data.size) + 322]
                            mem[0] = cd[68]
                            mem[32] = 4
                            if mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 2) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 2) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                if not mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58105 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 322])
                                mem[mem[64] + 52] = address(_56613)
                                _59465 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _59467 = sha3(mem[_59465 + 32 len mem[_59465]])
                                mem[_58105 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58105 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58105 + 125] = _59467
                                mem[_58105 + 157] = stor4[cd[68]].field_512
                                mem[_58105 + 72] = 85
                                mem[0] = cd[68]
                                mem[32] = 4
                                if address(_55799) == address(_55864):
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_55799) < address(_55864):
                                    if not address(_55799):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58105 + 221] = address(_55799)
                                    mem[_58105 + 241] = address(_55864)
                                    mem[_58105 + 189] = 40
                                    mem[_58105 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58105 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58105 + 314] = sha3(address(_55799), address(_55864))
                                    mem[_58105 + 346] = stor4[cd[68]].field_512
                                    mem[_58105 + 261] = 85
                                    mem[_58105 + 378] = 0
                                    mem[64] = _58105 + 410
                                    mem[_58105 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58105 + 414] = 0
                                    mem[_58105 + 446] = _56229
                                    mem[_58105 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59467, stor4[cd[68]].field_512))
                                    mem[_58105 + 510] = 128
                                    mem[_58105 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58105 + 574] = mem[s + _58105 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55799), address(_55864)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55799), address(_55864)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56229, address(sha3(0, stor4[cd[68]].field_0, _59467, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not address(_55864):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58105 + 221] = address(_55864)
                                    mem[_58105 + 241] = address(_55799)
                                    mem[_58105 + 189] = 40
                                    mem[_58105 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58105 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58105 + 314] = sha3(address(_55864), address(_55799))
                                    mem[_58105 + 346] = stor4[cd[68]].field_512
                                    mem[_58105 + 261] = 85
                                    mem[_58105 + 378] = 0
                                    mem[64] = _58105 + 410
                                    mem[_58105 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58105 + 414] = 0
                                    mem[_58105 + 446] = _56229
                                    mem[_58105 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59467, stor4[cd[68]].field_512))
                                    mem[_58105 + 510] = 128
                                    mem[_58105 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58105 + 574] = mem[s + _58105 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55864), address(_55799)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55864), address(_55799)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56229, address(sha3(0, stor4[cd[68]].field_0, _59467, stor4[cd[68]].field_512)), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58106 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19345 + ceil32(return_data.size) + 322])
                                mem[mem[64] + 52] = address(_55864)
                                _59469 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _59471 = sha3(mem[_59469 + 32 len mem[_59469]])
                                mem[_58106 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58106 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58106 + 125] = _59471
                                mem[_58106 + 157] = stor4[cd[68]].field_512
                                mem[_58106 + 72] = 85
                                mem[0] = cd[68]
                                mem[32] = 4
                                if address(_55799) == address(_55864):
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_55799) < address(_55864):
                                    if not address(_55799):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58106 + 221] = address(_55799)
                                    mem[_58106 + 241] = address(_55864)
                                    mem[_58106 + 189] = 40
                                    mem[_58106 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58106 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58106 + 314] = sha3(address(_55799), address(_55864))
                                    mem[_58106 + 346] = stor4[cd[68]].field_512
                                    mem[_58106 + 261] = 85
                                    mem[_58106 + 378] = 0
                                    mem[64] = _58106 + 410
                                    mem[_58106 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58106 + 414] = 0
                                    mem[_58106 + 446] = _56229
                                    mem[_58106 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59471, stor4[cd[68]].field_512))
                                    mem[_58106 + 510] = 128
                                    mem[_58106 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58106 + 574] = mem[s + _58106 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55799), address(_55864)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55799), address(_55864)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56229, address(sha3(0, stor4[cd[68]].field_0, _59471, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not address(_55864):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58106 + 221] = address(_55864)
                                    mem[_58106 + 241] = address(_55799)
                                    mem[_58106 + 189] = 40
                                    mem[_58106 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58106 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58106 + 314] = sha3(address(_55864), address(_55799))
                                    mem[_58106 + 346] = stor4[cd[68]].field_512
                                    mem[_58106 + 261] = 85
                                    mem[_58106 + 378] = 0
                                    mem[64] = _58106 + 410
                                    mem[_58106 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58106 + 414] = 0
                                    mem[_58106 + 446] = _56229
                                    mem[_58106 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59471, stor4[cd[68]].field_512))
                                    mem[_58106 + 510] = 128
                                    mem[_58106 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58106 + 574] = mem[s + _58106 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55864), address(_55799)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55864), address(_55799)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56229, address(sha3(0, stor4[cd[68]].field_0, _59471, stor4[cd[68]].field_512)), 128, 0
                    else:
                        if idx >= mem[_19345 + ceil32(return_data.size) + 290] - 2:
                            mem[0] = cd[68]
                            mem[32] = 4
                            if mem[(32 * idx) + _19345 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if mem[(32 * idx) + _19345 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                if not mem[(32 * idx) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58111 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _19345 + ceil32(return_data.size) + 322])
                                mem[mem[64] + 52] = address(_55864)
                                _59489 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _59491 = sha3(mem[_59489 + 32 len mem[_59489]])
                                mem[_58111 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58111 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58111 + 125] = _59491
                                mem[_58111 + 157] = stor4[cd[68]].field_512
                                mem[_58111 + 72] = 85
                                mem[_58111 + 189] = 0
                                mem[64] = _58111 + 221
                                mem[_58111 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58111 + 225] = _56229
                                mem[_58111 + 257] = 0
                                mem[_58111 + 289] = msg.sender
                                mem[_58111 + 321] = 128
                                mem[_58111 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58111 + 385] = mem[s + _58111 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _59491, stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, _59491, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _56229, 0, msg.sender, 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58112 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 322])
                                mem[mem[64] + 52] = address(_55799)
                                _59493 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _59495 = sha3(mem[_59493 + 32 len mem[_59493]])
                                mem[_58112 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58112 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58112 + 125] = _59495
                                mem[_58112 + 157] = stor4[cd[68]].field_512
                                mem[_58112 + 72] = 85
                                mem[_58112 + 189] = 0
                                mem[64] = _58112 + 221
                                mem[_58112 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58112 + 225] = _56229
                                mem[_58112 + 257] = 0
                                mem[_58112 + 289] = msg.sender
                                mem[_58112 + 321] = 128
                                mem[_58112 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58112 + 385] = mem[s + _58112 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _59495, stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, _59495, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _56229, 0, msg.sender, 128, 0
                        else:
                            require idx + 2 < mem[_19345 + ceil32(return_data.size) + 290]
                            _56614 = mem[(32 * idx + 2) + _19345 + ceil32(return_data.size) + 322]
                            mem[0] = cd[68]
                            mem[32] = 4
                            if mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 2) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 2) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                if not mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58109 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 322])
                                mem[mem[64] + 52] = address(_56614)
                                _59481 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _59483 = sha3(mem[_59481 + 32 len mem[_59481]])
                                mem[_58109 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58109 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58109 + 125] = _59483
                                mem[_58109 + 157] = stor4[cd[68]].field_512
                                mem[_58109 + 72] = 85
                                mem[0] = cd[68]
                                mem[32] = 4
                                if address(_55799) == address(_55864):
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_55799) < address(_55864):
                                    if not address(_55799):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58109 + 221] = address(_55799)
                                    mem[_58109 + 241] = address(_55864)
                                    mem[_58109 + 189] = 40
                                    mem[_58109 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58109 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58109 + 314] = sha3(address(_55799), address(_55864))
                                    mem[_58109 + 346] = stor4[cd[68]].field_512
                                    mem[_58109 + 261] = 85
                                    mem[_58109 + 378] = 0
                                    mem[64] = _58109 + 410
                                    mem[_58109 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58109 + 414] = _56229
                                    mem[_58109 + 446] = 0
                                    mem[_58109 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59483, stor4[cd[68]].field_512))
                                    mem[_58109 + 510] = 128
                                    mem[_58109 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58109 + 574] = mem[s + _58109 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55799), address(_55864)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55799), address(_55864)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56229, 0, address(sha3(0, stor4[cd[68]].field_0, _59483, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not address(_55864):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58109 + 221] = address(_55864)
                                    mem[_58109 + 241] = address(_55799)
                                    mem[_58109 + 189] = 40
                                    mem[_58109 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58109 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58109 + 314] = sha3(address(_55864), address(_55799))
                                    mem[_58109 + 346] = stor4[cd[68]].field_512
                                    mem[_58109 + 261] = 85
                                    mem[_58109 + 378] = 0
                                    mem[64] = _58109 + 410
                                    mem[_58109 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58109 + 414] = _56229
                                    mem[_58109 + 446] = 0
                                    mem[_58109 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59483, stor4[cd[68]].field_512))
                                    mem[_58109 + 510] = 128
                                    mem[_58109 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58109 + 574] = mem[s + _58109 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55864), address(_55799)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55864), address(_55799)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56229, 0, address(sha3(0, stor4[cd[68]].field_0, _59483, stor4[cd[68]].field_512)), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58110 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19345 + ceil32(return_data.size) + 322])
                                mem[mem[64] + 52] = address(_55864)
                                _59485 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _59487 = sha3(mem[_59485 + 32 len mem[_59485]])
                                mem[_58110 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58110 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58110 + 125] = _59487
                                mem[_58110 + 157] = stor4[cd[68]].field_512
                                mem[_58110 + 72] = 85
                                mem[0] = cd[68]
                                mem[32] = 4
                                if address(_55799) == address(_55864):
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_55799) < address(_55864):
                                    if not address(_55799):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58110 + 221] = address(_55799)
                                    mem[_58110 + 241] = address(_55864)
                                    mem[_58110 + 189] = 40
                                    mem[_58110 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58110 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58110 + 314] = sha3(address(_55799), address(_55864))
                                    mem[_58110 + 346] = stor4[cd[68]].field_512
                                    mem[_58110 + 261] = 85
                                    mem[_58110 + 378] = 0
                                    mem[64] = _58110 + 410
                                    mem[_58110 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58110 + 414] = _56229
                                    mem[_58110 + 446] = 0
                                    mem[_58110 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59487, stor4[cd[68]].field_512))
                                    mem[_58110 + 510] = 128
                                    mem[_58110 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58110 + 574] = mem[s + _58110 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55799), address(_55864)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55799), address(_55864)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56229, 0, address(sha3(0, stor4[cd[68]].field_0, _59487, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not address(_55864):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58110 + 221] = address(_55864)
                                    mem[_58110 + 241] = address(_55799)
                                    mem[_58110 + 189] = 40
                                    mem[_58110 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58110 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58110 + 314] = sha3(address(_55864), address(_55799))
                                    mem[_58110 + 346] = stor4[cd[68]].field_512
                                    mem[_58110 + 261] = 85
                                    mem[_58110 + 378] = 0
                                    mem[64] = _58110 + 410
                                    mem[_58110 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58110 + 414] = _56229
                                    mem[_58110 + 446] = 0
                                    mem[_58110 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59487, stor4[cd[68]].field_512))
                                    mem[_58110 + 510] = 128
                                    mem[_58110 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58110 + 574] = mem[s + _58110 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55864), address(_55799)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55864), address(_55799)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56229, 0, address(sha3(0, stor4[cd[68]].field_0, _59487, stor4[cd[68]].field_512)), 128, 0
                else:
                    if not mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 334 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                    _56231 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                    if mem[(32 * idx) + _19345 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 334 len 20]:
                        if idx >= mem[_19345 + ceil32(return_data.size) + 290] - 2:
                            mem[0] = cd[68]
                            mem[32] = 4
                            if mem[(32 * idx) + _19345 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if mem[(32 * idx) + _19345 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                if not mem[(32 * idx) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58115 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _19345 + ceil32(return_data.size) + 322])
                                mem[mem[64] + 52] = address(_55864)
                                _59505 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _59507 = sha3(mem[_59505 + 32 len mem[_59505]])
                                mem[_58115 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58115 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58115 + 125] = _59507
                                mem[_58115 + 157] = stor4[cd[68]].field_512
                                mem[_58115 + 72] = 85
                                mem[_58115 + 189] = 0
                                mem[64] = _58115 + 221
                                mem[_58115 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58115 + 225] = 0
                                mem[_58115 + 257] = _56231
                                mem[_58115 + 289] = msg.sender
                                mem[_58115 + 321] = 128
                                mem[_58115 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58115 + 385] = mem[s + _58115 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _59507, stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, _59507, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _56231, msg.sender, 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58116 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 322])
                                mem[mem[64] + 52] = address(_55799)
                                _59509 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _59511 = sha3(mem[_59509 + 32 len mem[_59509]])
                                mem[_58116 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58116 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58116 + 125] = _59511
                                mem[_58116 + 157] = stor4[cd[68]].field_512
                                mem[_58116 + 72] = 85
                                mem[_58116 + 189] = 0
                                mem[64] = _58116 + 221
                                mem[_58116 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58116 + 225] = 0
                                mem[_58116 + 257] = _56231
                                mem[_58116 + 289] = msg.sender
                                mem[_58116 + 321] = 128
                                mem[_58116 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58116 + 385] = mem[s + _58116 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _59511, stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, _59511, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _56231, msg.sender, 128, 0
                        else:
                            require idx + 2 < mem[_19345 + ceil32(return_data.size) + 290]
                            _56615 = mem[(32 * idx + 2) + _19345 + ceil32(return_data.size) + 322]
                            mem[0] = cd[68]
                            mem[32] = 4
                            if mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 2) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 2) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                if not mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58113 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 322])
                                mem[mem[64] + 52] = address(_56615)
                                _59497 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _59499 = sha3(mem[_59497 + 32 len mem[_59497]])
                                mem[_58113 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58113 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58113 + 125] = _59499
                                mem[_58113 + 157] = stor4[cd[68]].field_512
                                mem[_58113 + 72] = 85
                                mem[0] = cd[68]
                                mem[32] = 4
                                if address(_55799) == address(_55864):
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_55799) < address(_55864):
                                    if not address(_55799):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58113 + 221] = address(_55799)
                                    mem[_58113 + 241] = address(_55864)
                                    mem[_58113 + 189] = 40
                                    mem[_58113 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58113 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58113 + 314] = sha3(address(_55799), address(_55864))
                                    mem[_58113 + 346] = stor4[cd[68]].field_512
                                    mem[_58113 + 261] = 85
                                    mem[_58113 + 378] = 0
                                    mem[64] = _58113 + 410
                                    mem[_58113 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58113 + 414] = 0
                                    mem[_58113 + 446] = _56231
                                    mem[_58113 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59499, stor4[cd[68]].field_512))
                                    mem[_58113 + 510] = 128
                                    mem[_58113 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58113 + 574] = mem[s + _58113 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55799), address(_55864)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55799), address(_55864)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56231, address(sha3(0, stor4[cd[68]].field_0, _59499, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not address(_55864):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58113 + 221] = address(_55864)
                                    mem[_58113 + 241] = address(_55799)
                                    mem[_58113 + 189] = 40
                                    mem[_58113 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58113 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58113 + 314] = sha3(address(_55864), address(_55799))
                                    mem[_58113 + 346] = stor4[cd[68]].field_512
                                    mem[_58113 + 261] = 85
                                    mem[_58113 + 378] = 0
                                    mem[64] = _58113 + 410
                                    mem[_58113 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58113 + 414] = 0
                                    mem[_58113 + 446] = _56231
                                    mem[_58113 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59499, stor4[cd[68]].field_512))
                                    mem[_58113 + 510] = 128
                                    mem[_58113 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58113 + 574] = mem[s + _58113 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55864), address(_55799)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55864), address(_55799)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56231, address(sha3(0, stor4[cd[68]].field_0, _59499, stor4[cd[68]].field_512)), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58114 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19345 + ceil32(return_data.size) + 322])
                                mem[mem[64] + 52] = address(_55864)
                                _59501 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _59503 = sha3(mem[_59501 + 32 len mem[_59501]])
                                mem[_58114 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58114 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58114 + 125] = _59503
                                mem[_58114 + 157] = stor4[cd[68]].field_512
                                mem[_58114 + 72] = 85
                                mem[0] = cd[68]
                                mem[32] = 4
                                if address(_55799) == address(_55864):
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_55799) < address(_55864):
                                    if not address(_55799):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58114 + 221] = address(_55799)
                                    mem[_58114 + 241] = address(_55864)
                                    mem[_58114 + 189] = 40
                                    mem[_58114 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58114 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58114 + 314] = sha3(address(_55799), address(_55864))
                                    mem[_58114 + 346] = stor4[cd[68]].field_512
                                    mem[_58114 + 261] = 85
                                    mem[_58114 + 378] = 0
                                    mem[64] = _58114 + 410
                                    mem[_58114 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58114 + 414] = 0
                                    mem[_58114 + 446] = _56231
                                    mem[_58114 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59503, stor4[cd[68]].field_512))
                                    mem[_58114 + 510] = 128
                                    mem[_58114 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58114 + 574] = mem[s + _58114 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55799), address(_55864)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55799), address(_55864)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56231, address(sha3(0, stor4[cd[68]].field_0, _59503, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not address(_55864):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58114 + 221] = address(_55864)
                                    mem[_58114 + 241] = address(_55799)
                                    mem[_58114 + 189] = 40
                                    mem[_58114 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58114 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58114 + 314] = sha3(address(_55864), address(_55799))
                                    mem[_58114 + 346] = stor4[cd[68]].field_512
                                    mem[_58114 + 261] = 85
                                    mem[_58114 + 378] = 0
                                    mem[64] = _58114 + 410
                                    mem[_58114 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58114 + 414] = 0
                                    mem[_58114 + 446] = _56231
                                    mem[_58114 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59503, stor4[cd[68]].field_512))
                                    mem[_58114 + 510] = 128
                                    mem[_58114 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58114 + 574] = mem[s + _58114 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55864), address(_55799)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55864), address(_55799)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56231, address(sha3(0, stor4[cd[68]].field_0, _59503, stor4[cd[68]].field_512)), 128, 0
                    else:
                        if idx >= mem[_19345 + ceil32(return_data.size) + 290] - 2:
                            mem[0] = cd[68]
                            mem[32] = 4
                            if mem[(32 * idx) + _19345 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if mem[(32 * idx) + _19345 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                if not mem[(32 * idx) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58119 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _19345 + ceil32(return_data.size) + 322])
                                mem[mem[64] + 52] = address(_55864)
                                _59521 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _59523 = sha3(mem[_59521 + 32 len mem[_59521]])
                                mem[_58119 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58119 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58119 + 125] = _59523
                                mem[_58119 + 157] = stor4[cd[68]].field_512
                                mem[_58119 + 72] = 85
                                mem[_58119 + 189] = 0
                                mem[64] = _58119 + 221
                                mem[_58119 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58119 + 225] = _56231
                                mem[_58119 + 257] = 0
                                mem[_58119 + 289] = msg.sender
                                mem[_58119 + 321] = 128
                                mem[_58119 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58119 + 385] = mem[s + _58119 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _59523, stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, _59523, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _56231, 0, msg.sender, 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58120 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 322])
                                mem[mem[64] + 52] = address(_55799)
                                _59525 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _59527 = sha3(mem[_59525 + 32 len mem[_59525]])
                                mem[_58120 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58120 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58120 + 125] = _59527
                                mem[_58120 + 157] = stor4[cd[68]].field_512
                                mem[_58120 + 72] = 85
                                mem[_58120 + 189] = 0
                                mem[64] = _58120 + 221
                                mem[_58120 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58120 + 225] = _56231
                                mem[_58120 + 257] = 0
                                mem[_58120 + 289] = msg.sender
                                mem[_58120 + 321] = 128
                                mem[_58120 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58120 + 385] = mem[s + _58120 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _59527, stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, _59527, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _56231, 0, msg.sender, 128, 0
                        else:
                            require idx + 2 < mem[_19345 + ceil32(return_data.size) + 290]
                            _56616 = mem[(32 * idx + 2) + _19345 + ceil32(return_data.size) + 322]
                            mem[0] = cd[68]
                            mem[32] = 4
                            if mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 2) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 2) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                if not mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58117 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19345 + ceil32(return_data.size) + 322])
                                mem[mem[64] + 52] = address(_56616)
                                _59513 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _59515 = sha3(mem[_59513 + 32 len mem[_59513]])
                                mem[_58117 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58117 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58117 + 125] = _59515
                                mem[_58117 + 157] = stor4[cd[68]].field_512
                                mem[_58117 + 72] = 85
                                mem[0] = cd[68]
                                mem[32] = 4
                                if address(_55799) == address(_55864):
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_55799) < address(_55864):
                                    if not address(_55799):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58117 + 221] = address(_55799)
                                    mem[_58117 + 241] = address(_55864)
                                    mem[_58117 + 189] = 40
                                    mem[_58117 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58117 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58117 + 314] = sha3(address(_55799), address(_55864))
                                    mem[_58117 + 346] = stor4[cd[68]].field_512
                                    mem[_58117 + 261] = 85
                                    mem[_58117 + 378] = 0
                                    mem[64] = _58117 + 410
                                    mem[_58117 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58117 + 414] = _56231
                                    mem[_58117 + 446] = 0
                                    mem[_58117 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59515, stor4[cd[68]].field_512))
                                    mem[_58117 + 510] = 128
                                    mem[_58117 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58117 + 574] = mem[s + _58117 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55799), address(_55864)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55799), address(_55864)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56231, 0, address(sha3(0, stor4[cd[68]].field_0, _59515, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not address(_55864):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58117 + 221] = address(_55864)
                                    mem[_58117 + 241] = address(_55799)
                                    mem[_58117 + 189] = 40
                                    mem[_58117 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58117 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58117 + 314] = sha3(address(_55864), address(_55799))
                                    mem[_58117 + 346] = stor4[cd[68]].field_512
                                    mem[_58117 + 261] = 85
                                    mem[_58117 + 378] = 0
                                    mem[64] = _58117 + 410
                                    mem[_58117 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58117 + 414] = _56231
                                    mem[_58117 + 446] = 0
                                    mem[_58117 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59515, stor4[cd[68]].field_512))
                                    mem[_58117 + 510] = 128
                                    mem[_58117 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58117 + 574] = mem[s + _58117 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55864), address(_55799)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55864), address(_55799)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56231, 0, address(sha3(0, stor4[cd[68]].field_0, _59515, stor4[cd[68]].field_512)), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _19345 + ceil32(return_data.size) + 334 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58118 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19345 + ceil32(return_data.size) + 322])
                                mem[mem[64] + 52] = address(_55864)
                                _59517 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _59519 = sha3(mem[_59517 + 32 len mem[_59517]])
                                mem[_58118 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58118 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58118 + 125] = _59519
                                mem[_58118 + 157] = stor4[cd[68]].field_512
                                mem[_58118 + 72] = 85
                                mem[0] = cd[68]
                                mem[32] = 4
                                if address(_55799) == address(_55864):
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_55799) < address(_55864):
                                    if not address(_55799):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58118 + 221] = address(_55799)
                                    mem[_58118 + 241] = address(_55864)
                                    mem[_58118 + 189] = 40
                                    mem[_58118 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58118 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58118 + 314] = sha3(address(_55799), address(_55864))
                                    mem[_58118 + 346] = stor4[cd[68]].field_512
                                    mem[_58118 + 261] = 85
                                    mem[_58118 + 378] = 0
                                    mem[64] = _58118 + 410
                                    mem[_58118 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58118 + 414] = _56231
                                    mem[_58118 + 446] = 0
                                    mem[_58118 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59519, stor4[cd[68]].field_512))
                                    mem[_58118 + 510] = 128
                                    mem[_58118 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58118 + 574] = mem[s + _58118 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55799), address(_55864)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55799), address(_55864)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56231, 0, address(sha3(0, stor4[cd[68]].field_0, _59519, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not address(_55864):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58118 + 221] = address(_55864)
                                    mem[_58118 + 241] = address(_55799)
                                    mem[_58118 + 189] = 40
                                    mem[_58118 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58118 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58118 + 314] = sha3(address(_55864), address(_55799))
                                    mem[_58118 + 346] = stor4[cd[68]].field_512
                                    mem[_58118 + 261] = 85
                                    mem[_58118 + 378] = 0
                                    mem[64] = _58118 + 410
                                    mem[_58118 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58118 + 414] = _56231
                                    mem[_58118 + 446] = 0
                                    mem[_58118 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59519, stor4[cd[68]].field_512))
                                    mem[_58118 + 510] = 128
                                    mem[_58118 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58118 + 574] = mem[s + _58118 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55864), address(_55799)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55864), address(_55799)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56231, 0, address(sha3(0, stor4[cd[68]].field_0, _59519, stor4[cd[68]].field_512)), 128, 0
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                idx = idx + 1
                continue 
            mem[mem[64]] = 32
            _55927 = mem[(32 * ('cd', 36).length) + 128]
            mem[mem[64] + 32] = mem[(32 * ('cd', 36).length) + 128]
            mem[mem[64] + 64 len 32 * _55927] = mem[(32 * ('cd', 36).length) + 160 len 32 * _55927]
            return 32, mem[mem[64] + 32 len (32 * _55927) + 32]
        if not address(('cd', 36)[1]):
            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
        _19346 = mem[64]
        mem[mem[64] + 32] = address(('cd', 36)[1])
        mem[mem[64] + 52] = address(('cd', 36)[0])
        _19405 = mem[64]
        mem[mem[64]] = 40
        mem[64] = mem[64] + 72
        _19407 = sha3(mem[_19405 + 32 len mem[_19405]])
        mem[_19346 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
        mem[_19346 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
        mem[_19346 + 125] = _19407
        mem[_19346 + 157] = stor4[cd[68]].field_512
        mem[_19346 + 72] = 85
        require 0 < mem[(32 * ('cd', 36).length) + 128]
        _19498 = mem[(32 * ('cd', 36).length) + 160]
        mem[_19346 + 225] = address(sha3(0, stor4[cd[68]].field_0, _19407, stor4[cd[68]].field_512))
        mem[_19346 + 257] = _19498
        mem[_19346 + 189] = 68
        mem[_19346 + 221 len 4] = unknown_0xa9059cbb(?????)
        mem[_19346 + 289 len 96] = 0, address(sha3(0, stor4[cd[68]].field_0, _19407, stor4[cd[68]].field_512)), _19498, mem[_19346 + 289 len 28]
        mem[_19346 + 357] = 0
        call address(('cd', 36)[0]) with:
             gas gas_remaining wei
            args mem[_19346 + 293 len 64]
        if not return_data.size:
            if not ext_call.success:
                revert with 0, 'TransferHelper: TRANSFER_FAILED'
            if not mem[96]:
                mem[64] = _19346 + (32 * ('cd', 36).length) + 321
                mem[_19346 + 289] = ('cd', 36).length
                mem[_19346 + 321 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
                mem[_19346 + (32 * ('cd', 36).length) + 321] = 0
                idx = 0
                while idx < ('cd', 36).length - 1:
                    require idx < mem[_19346 + 289]
                    _55809 = mem[(32 * idx) + _19346 + 321]
                    require idx + 1 < mem[_19346 + 289]
                    _55874 = mem[(32 * idx + 1) + _19346 + 321]
                    if mem[(32 * idx) + _19346 + 333 len 20] == mem[(32 * idx + 1) + _19346 + 333 len 20]:
                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                    if mem[(32 * idx) + _19346 + 333 len 20] < mem[(32 * idx + 1) + _19346 + 333 len 20]:
                        if not mem[(32 * idx) + _19346 + 333 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                        _56249 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                        if mem[(32 * idx) + _19346 + 333 len 20] == mem[(32 * idx) + _19346 + 333 len 20]:
                            if idx >= mem[_19346 + 289] - 2:
                                mem[0] = cd[68]
                                mem[32] = 4
                                if mem[(32 * idx) + _19346 + 333 len 20] == mem[(32 * idx + 1) + _19346 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx) + _19346 + 333 len 20] < mem[(32 * idx + 1) + _19346 + 333 len 20]:
                                    if not mem[(32 * idx) + _19346 + 333 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58187 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx) + _19346 + 321])
                                    mem[mem[64] + 52] = address(_55874)
                                    _59793 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _59795 = sha3(mem[_59793 + 32 len mem[_59793]])
                                    mem[_58187 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58187 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58187 + 125] = _59795
                                    mem[_58187 + 157] = stor4[cd[68]].field_512
                                    mem[_58187 + 72] = 85
                                    mem[_58187 + 189] = 0
                                    mem[64] = _58187 + 221
                                    mem[_58187 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58187 + 225] = 0
                                    mem[_58187 + 257] = _56249
                                    mem[_58187 + 289] = msg.sender
                                    mem[_58187 + 321] = 128
                                    mem[_58187 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58187 + 385] = mem[s + _58187 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _59795, stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, _59795, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56249, msg.sender, 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _19346 + 333 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58188 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19346 + 321])
                                    mem[mem[64] + 52] = address(_55809)
                                    _59797 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _59799 = sha3(mem[_59797 + 32 len mem[_59797]])
                                    mem[_58188 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58188 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58188 + 125] = _59799
                                    mem[_58188 + 157] = stor4[cd[68]].field_512
                                    mem[_58188 + 72] = 85
                                    mem[_58188 + 189] = 0
                                    mem[64] = _58188 + 221
                                    mem[_58188 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58188 + 225] = 0
                                    mem[_58188 + 257] = _56249
                                    mem[_58188 + 289] = msg.sender
                                    mem[_58188 + 321] = 128
                                    mem[_58188 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58188 + 385] = mem[s + _58188 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _59799, stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, _59799, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56249, msg.sender, 128, 0
                            else:
                                require idx + 2 < mem[_19346 + 289]
                                _56633 = mem[(32 * idx + 2) + _19346 + 321]
                                mem[0] = cd[68]
                                mem[32] = 4
                                if mem[(32 * idx + 1) + _19346 + 333 len 20] == mem[(32 * idx + 2) + _19346 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx + 1) + _19346 + 333 len 20] < mem[(32 * idx + 2) + _19346 + 333 len 20]:
                                    if not mem[(32 * idx + 1) + _19346 + 333 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58185 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19346 + 321])
                                    mem[mem[64] + 52] = address(_56633)
                                    _59785 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _59787 = sha3(mem[_59785 + 32 len mem[_59785]])
                                    mem[_58185 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58185 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58185 + 125] = _59787
                                    mem[_58185 + 157] = stor4[cd[68]].field_512
                                    mem[_58185 + 72] = 85
                                    mem[0] = cd[68]
                                    mem[32] = 4
                                    if address(_55809) == address(_55874):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_55809) < address(_55874):
                                        if not address(_55809):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58185 + 221] = address(_55809)
                                        mem[_58185 + 241] = address(_55874)
                                        mem[_58185 + 189] = 40
                                        mem[_58185 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58185 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58185 + 314] = sha3(address(_55809), address(_55874))
                                        mem[_58185 + 346] = stor4[cd[68]].field_512
                                        mem[_58185 + 261] = 85
                                        mem[_58185 + 378] = 0
                                        mem[64] = _58185 + 410
                                        mem[_58185 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58185 + 414] = 0
                                        mem[_58185 + 446] = _56249
                                        mem[_58185 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59787, stor4[cd[68]].field_512))
                                        mem[_58185 + 510] = 128
                                        mem[_58185 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58185 + 574] = mem[s + _58185 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55809), address(_55874)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55809), address(_55874)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _56249, address(sha3(0, stor4[cd[68]].field_0, _59787, stor4[cd[68]].field_512)), 128, 0
                                    else:
                                        if not address(_55874):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58185 + 221] = address(_55874)
                                        mem[_58185 + 241] = address(_55809)
                                        mem[_58185 + 189] = 40
                                        mem[_58185 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58185 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58185 + 314] = sha3(address(_55874), address(_55809))
                                        mem[_58185 + 346] = stor4[cd[68]].field_512
                                        mem[_58185 + 261] = 85
                                        mem[_58185 + 378] = 0
                                        mem[64] = _58185 + 410
                                        mem[_58185 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58185 + 414] = 0
                                        mem[_58185 + 446] = _56249
                                        mem[_58185 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59787, stor4[cd[68]].field_512))
                                        mem[_58185 + 510] = 128
                                        mem[_58185 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58185 + 574] = mem[s + _58185 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55874), address(_55809)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55874), address(_55809)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _56249, address(sha3(0, stor4[cd[68]].field_0, _59787, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _19346 + 333 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58186 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19346 + 321])
                                    mem[mem[64] + 52] = address(_55874)
                                    _59789 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _59791 = sha3(mem[_59789 + 32 len mem[_59789]])
                                    mem[_58186 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58186 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58186 + 125] = _59791
                                    mem[_58186 + 157] = stor4[cd[68]].field_512
                                    mem[_58186 + 72] = 85
                                    mem[0] = cd[68]
                                    mem[32] = 4
                                    if address(_55809) == address(_55874):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_55809) < address(_55874):
                                        if not address(_55809):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58186 + 221] = address(_55809)
                                        mem[_58186 + 241] = address(_55874)
                                        mem[_58186 + 189] = 40
                                        mem[_58186 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58186 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58186 + 314] = sha3(address(_55809), address(_55874))
                                        mem[_58186 + 346] = stor4[cd[68]].field_512
                                        mem[_58186 + 261] = 85
                                        mem[_58186 + 378] = 0
                                        mem[64] = _58186 + 410
                                        mem[_58186 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58186 + 414] = 0
                                        mem[_58186 + 446] = _56249
                                        mem[_58186 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59791, stor4[cd[68]].field_512))
                                        mem[_58186 + 510] = 128
                                        mem[_58186 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58186 + 574] = mem[s + _58186 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55809), address(_55874)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55809), address(_55874)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _56249, address(sha3(0, stor4[cd[68]].field_0, _59791, stor4[cd[68]].field_512)), 128, 0
                                    else:
                                        if not address(_55874):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58186 + 221] = address(_55874)
                                        mem[_58186 + 241] = address(_55809)
                                        mem[_58186 + 189] = 40
                                        mem[_58186 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58186 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58186 + 314] = sha3(address(_55874), address(_55809))
                                        mem[_58186 + 346] = stor4[cd[68]].field_512
                                        mem[_58186 + 261] = 85
                                        mem[_58186 + 378] = 0
                                        mem[64] = _58186 + 410
                                        mem[_58186 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58186 + 414] = 0
                                        mem[_58186 + 446] = _56249
                                        mem[_58186 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59791, stor4[cd[68]].field_512))
                                        mem[_58186 + 510] = 128
                                        mem[_58186 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58186 + 574] = mem[s + _58186 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55874), address(_55809)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55874), address(_55809)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _56249, address(sha3(0, stor4[cd[68]].field_0, _59791, stor4[cd[68]].field_512)), 128, 0
                        else:
                            if idx >= mem[_19346 + 289] - 2:
                                mem[0] = cd[68]
                                mem[32] = 4
                                if mem[(32 * idx) + _19346 + 333 len 20] == mem[(32 * idx + 1) + _19346 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx) + _19346 + 333 len 20] < mem[(32 * idx + 1) + _19346 + 333 len 20]:
                                    if not mem[(32 * idx) + _19346 + 333 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58191 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx) + _19346 + 321])
                                    mem[mem[64] + 52] = address(_55874)
                                    _59809 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _59811 = sha3(mem[_59809 + 32 len mem[_59809]])
                                    mem[_58191 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58191 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58191 + 125] = _59811
                                    mem[_58191 + 157] = stor4[cd[68]].field_512
                                    mem[_58191 + 72] = 85
                                    mem[_58191 + 189] = 0
                                    mem[64] = _58191 + 221
                                    mem[_58191 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58191 + 225] = _56249
                                    mem[_58191 + 257] = 0
                                    mem[_58191 + 289] = msg.sender
                                    mem[_58191 + 321] = 128
                                    mem[_58191 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58191 + 385] = mem[s + _58191 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _59811, stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, _59811, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56249, 0, msg.sender, 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _19346 + 333 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58192 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19346 + 321])
                                    mem[mem[64] + 52] = address(_55809)
                                    _59813 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _59815 = sha3(mem[_59813 + 32 len mem[_59813]])
                                    mem[_58192 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58192 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58192 + 125] = _59815
                                    mem[_58192 + 157] = stor4[cd[68]].field_512
                                    mem[_58192 + 72] = 85
                                    mem[_58192 + 189] = 0
                                    mem[64] = _58192 + 221
                                    mem[_58192 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58192 + 225] = _56249
                                    mem[_58192 + 257] = 0
                                    mem[_58192 + 289] = msg.sender
                                    mem[_58192 + 321] = 128
                                    mem[_58192 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58192 + 385] = mem[s + _58192 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _59815, stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, _59815, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56249, 0, msg.sender, 128, 0
                            else:
                                require idx + 2 < mem[_19346 + 289]
                                _56634 = mem[(32 * idx + 2) + _19346 + 321]
                                mem[0] = cd[68]
                                mem[32] = 4
                                if mem[(32 * idx + 1) + _19346 + 333 len 20] == mem[(32 * idx + 2) + _19346 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx + 1) + _19346 + 333 len 20] < mem[(32 * idx + 2) + _19346 + 333 len 20]:
                                    if not mem[(32 * idx + 1) + _19346 + 333 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58189 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19346 + 321])
                                    mem[mem[64] + 52] = address(_56634)
                                    _59801 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _59803 = sha3(mem[_59801 + 32 len mem[_59801]])
                                    mem[_58189 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58189 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58189 + 125] = _59803
                                    mem[_58189 + 157] = stor4[cd[68]].field_512
                                    mem[_58189 + 72] = 85
                                    mem[0] = cd[68]
                                    mem[32] = 4
                                    if address(_55809) == address(_55874):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_55809) < address(_55874):
                                        if not address(_55809):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58189 + 221] = address(_55809)
                                        mem[_58189 + 241] = address(_55874)
                                        mem[_58189 + 189] = 40
                                        mem[_58189 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58189 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58189 + 314] = sha3(address(_55809), address(_55874))
                                        mem[_58189 + 346] = stor4[cd[68]].field_512
                                        mem[_58189 + 261] = 85
                                        mem[_58189 + 378] = 0
                                        mem[64] = _58189 + 410
                                        mem[_58189 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58189 + 414] = _56249
                                        mem[_58189 + 446] = 0
                                        mem[_58189 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59803, stor4[cd[68]].field_512))
                                        mem[_58189 + 510] = 128
                                        mem[_58189 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58189 + 574] = mem[s + _58189 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55809), address(_55874)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55809), address(_55874)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _56249, 0, address(sha3(0, stor4[cd[68]].field_0, _59803, stor4[cd[68]].field_512)), 128, 0
                                    else:
                                        if not address(_55874):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58189 + 221] = address(_55874)
                                        mem[_58189 + 241] = address(_55809)
                                        mem[_58189 + 189] = 40
                                        mem[_58189 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58189 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58189 + 314] = sha3(address(_55874), address(_55809))
                                        mem[_58189 + 346] = stor4[cd[68]].field_512
                                        mem[_58189 + 261] = 85
                                        mem[_58189 + 378] = 0
                                        mem[64] = _58189 + 410
                                        mem[_58189 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58189 + 414] = _56249
                                        mem[_58189 + 446] = 0
                                        mem[_58189 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59803, stor4[cd[68]].field_512))
                                        mem[_58189 + 510] = 128
                                        mem[_58189 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58189 + 574] = mem[s + _58189 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55874), address(_55809)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55874), address(_55809)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _56249, 0, address(sha3(0, stor4[cd[68]].field_0, _59803, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _19346 + 333 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58190 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19346 + 321])
                                    mem[mem[64] + 52] = address(_55874)
                                    _59805 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _59807 = sha3(mem[_59805 + 32 len mem[_59805]])
                                    mem[_58190 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58190 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58190 + 125] = _59807
                                    mem[_58190 + 157] = stor4[cd[68]].field_512
                                    mem[_58190 + 72] = 85
                                    mem[0] = cd[68]
                                    mem[32] = 4
                                    if address(_55809) == address(_55874):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_55809) < address(_55874):
                                        if not address(_55809):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58190 + 221] = address(_55809)
                                        mem[_58190 + 241] = address(_55874)
                                        mem[_58190 + 189] = 40
                                        mem[_58190 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58190 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58190 + 314] = sha3(address(_55809), address(_55874))
                                        mem[_58190 + 346] = stor4[cd[68]].field_512
                                        mem[_58190 + 261] = 85
                                        mem[_58190 + 378] = 0
                                        mem[64] = _58190 + 410
                                        mem[_58190 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58190 + 414] = _56249
                                        mem[_58190 + 446] = 0
                                        mem[_58190 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59807, stor4[cd[68]].field_512))
                                        mem[_58190 + 510] = 128
                                        mem[_58190 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58190 + 574] = mem[s + _58190 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55809), address(_55874)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55809), address(_55874)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _56249, 0, address(sha3(0, stor4[cd[68]].field_0, _59807, stor4[cd[68]].field_512)), 128, 0
                                    else:
                                        if not address(_55874):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58190 + 221] = address(_55874)
                                        mem[_58190 + 241] = address(_55809)
                                        mem[_58190 + 189] = 40
                                        mem[_58190 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58190 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58190 + 314] = sha3(address(_55874), address(_55809))
                                        mem[_58190 + 346] = stor4[cd[68]].field_512
                                        mem[_58190 + 261] = 85
                                        mem[_58190 + 378] = 0
                                        mem[64] = _58190 + 410
                                        mem[_58190 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58190 + 414] = _56249
                                        mem[_58190 + 446] = 0
                                        mem[_58190 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59807, stor4[cd[68]].field_512))
                                        mem[_58190 + 510] = 128
                                        mem[_58190 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58190 + 574] = mem[s + _58190 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55874), address(_55809)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55874), address(_55809)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _56249, 0, address(sha3(0, stor4[cd[68]].field_0, _59807, stor4[cd[68]].field_512)), 128, 0
                    else:
                        if not mem[(32 * idx + 1) + _19346 + 333 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                        _56251 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                        if mem[(32 * idx) + _19346 + 333 len 20] == mem[(32 * idx + 1) + _19346 + 333 len 20]:
                            if idx >= mem[_19346 + 289] - 2:
                                mem[0] = cd[68]
                                mem[32] = 4
                                if mem[(32 * idx) + _19346 + 333 len 20] == mem[(32 * idx + 1) + _19346 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx) + _19346 + 333 len 20] < mem[(32 * idx + 1) + _19346 + 333 len 20]:
                                    if not mem[(32 * idx) + _19346 + 333 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58195 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx) + _19346 + 321])
                                    mem[mem[64] + 52] = address(_55874)
                                    _59825 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _59827 = sha3(mem[_59825 + 32 len mem[_59825]])
                                    mem[_58195 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58195 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58195 + 125] = _59827
                                    mem[_58195 + 157] = stor4[cd[68]].field_512
                                    mem[_58195 + 72] = 85
                                    mem[_58195 + 189] = 0
                                    mem[64] = _58195 + 221
                                    mem[_58195 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58195 + 225] = 0
                                    mem[_58195 + 257] = _56251
                                    mem[_58195 + 289] = msg.sender
                                    mem[_58195 + 321] = 128
                                    mem[_58195 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58195 + 385] = mem[s + _58195 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _59827, stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, _59827, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56251, msg.sender, 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _19346 + 333 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58196 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19346 + 321])
                                    mem[mem[64] + 52] = address(_55809)
                                    _59829 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _59831 = sha3(mem[_59829 + 32 len mem[_59829]])
                                    mem[_58196 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58196 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58196 + 125] = _59831
                                    mem[_58196 + 157] = stor4[cd[68]].field_512
                                    mem[_58196 + 72] = 85
                                    mem[_58196 + 189] = 0
                                    mem[64] = _58196 + 221
                                    mem[_58196 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58196 + 225] = 0
                                    mem[_58196 + 257] = _56251
                                    mem[_58196 + 289] = msg.sender
                                    mem[_58196 + 321] = 128
                                    mem[_58196 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58196 + 385] = mem[s + _58196 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _59831, stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, _59831, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56251, msg.sender, 128, 0
                            else:
                                require idx + 2 < mem[_19346 + 289]
                                _56635 = mem[(32 * idx + 2) + _19346 + 321]
                                mem[0] = cd[68]
                                mem[32] = 4
                                if mem[(32 * idx + 1) + _19346 + 333 len 20] == mem[(32 * idx + 2) + _19346 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx + 1) + _19346 + 333 len 20] < mem[(32 * idx + 2) + _19346 + 333 len 20]:
                                    if not mem[(32 * idx + 1) + _19346 + 333 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58193 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19346 + 321])
                                    mem[mem[64] + 52] = address(_56635)
                                    _59817 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _59819 = sha3(mem[_59817 + 32 len mem[_59817]])
                                    mem[_58193 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58193 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58193 + 125] = _59819
                                    mem[_58193 + 157] = stor4[cd[68]].field_512
                                    mem[_58193 + 72] = 85
                                    mem[0] = cd[68]
                                    mem[32] = 4
                                    if address(_55809) == address(_55874):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_55809) < address(_55874):
                                        if not address(_55809):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58193 + 221] = address(_55809)
                                        mem[_58193 + 241] = address(_55874)
                                        mem[_58193 + 189] = 40
                                        mem[_58193 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58193 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58193 + 314] = sha3(address(_55809), address(_55874))
                                        mem[_58193 + 346] = stor4[cd[68]].field_512
                                        mem[_58193 + 261] = 85
                                        mem[_58193 + 378] = 0
                                        mem[64] = _58193 + 410
                                        mem[_58193 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58193 + 414] = 0
                                        mem[_58193 + 446] = _56251
                                        mem[_58193 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59819, stor4[cd[68]].field_512))
                                        mem[_58193 + 510] = 128
                                        mem[_58193 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58193 + 574] = mem[s + _58193 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55809), address(_55874)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55809), address(_55874)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _56251, address(sha3(0, stor4[cd[68]].field_0, _59819, stor4[cd[68]].field_512)), 128, 0
                                    else:
                                        if not address(_55874):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58193 + 221] = address(_55874)
                                        mem[_58193 + 241] = address(_55809)
                                        mem[_58193 + 189] = 40
                                        mem[_58193 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58193 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58193 + 314] = sha3(address(_55874), address(_55809))
                                        mem[_58193 + 346] = stor4[cd[68]].field_512
                                        mem[_58193 + 261] = 85
                                        mem[_58193 + 378] = 0
                                        mem[64] = _58193 + 410
                                        mem[_58193 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58193 + 414] = 0
                                        mem[_58193 + 446] = _56251
                                        mem[_58193 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59819, stor4[cd[68]].field_512))
                                        mem[_58193 + 510] = 128
                                        mem[_58193 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58193 + 574] = mem[s + _58193 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55874), address(_55809)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55874), address(_55809)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _56251, address(sha3(0, stor4[cd[68]].field_0, _59819, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _19346 + 333 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58194 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19346 + 321])
                                    mem[mem[64] + 52] = address(_55874)
                                    _59821 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _59823 = sha3(mem[_59821 + 32 len mem[_59821]])
                                    mem[_58194 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58194 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58194 + 125] = _59823
                                    mem[_58194 + 157] = stor4[cd[68]].field_512
                                    mem[_58194 + 72] = 85
                                    mem[0] = cd[68]
                                    mem[32] = 4
                                    if address(_55809) == address(_55874):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_55809) < address(_55874):
                                        if not address(_55809):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58194 + 221] = address(_55809)
                                        mem[_58194 + 241] = address(_55874)
                                        mem[_58194 + 189] = 40
                                        mem[_58194 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58194 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58194 + 314] = sha3(address(_55809), address(_55874))
                                        mem[_58194 + 346] = stor4[cd[68]].field_512
                                        mem[_58194 + 261] = 85
                                        mem[_58194 + 378] = 0
                                        mem[64] = _58194 + 410
                                        mem[_58194 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58194 + 414] = 0
                                        mem[_58194 + 446] = _56251
                                        mem[_58194 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59823, stor4[cd[68]].field_512))
                                        mem[_58194 + 510] = 128
                                        mem[_58194 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58194 + 574] = mem[s + _58194 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55809), address(_55874)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55809), address(_55874)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _56251, address(sha3(0, stor4[cd[68]].field_0, _59823, stor4[cd[68]].field_512)), 128, 0
                                    else:
                                        if not address(_55874):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58194 + 221] = address(_55874)
                                        mem[_58194 + 241] = address(_55809)
                                        mem[_58194 + 189] = 40
                                        mem[_58194 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58194 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58194 + 314] = sha3(address(_55874), address(_55809))
                                        mem[_58194 + 346] = stor4[cd[68]].field_512
                                        mem[_58194 + 261] = 85
                                        mem[_58194 + 378] = 0
                                        mem[64] = _58194 + 410
                                        mem[_58194 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58194 + 414] = 0
                                        mem[_58194 + 446] = _56251
                                        mem[_58194 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59823, stor4[cd[68]].field_512))
                                        mem[_58194 + 510] = 128
                                        mem[_58194 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58194 + 574] = mem[s + _58194 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55874), address(_55809)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55874), address(_55809)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _56251, address(sha3(0, stor4[cd[68]].field_0, _59823, stor4[cd[68]].field_512)), 128, 0
                        else:
                            if idx >= mem[_19346 + 289] - 2:
                                mem[0] = cd[68]
                                mem[32] = 4
                                if mem[(32 * idx) + _19346 + 333 len 20] == mem[(32 * idx + 1) + _19346 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx) + _19346 + 333 len 20] < mem[(32 * idx + 1) + _19346 + 333 len 20]:
                                    if not mem[(32 * idx) + _19346 + 333 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58199 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx) + _19346 + 321])
                                    mem[mem[64] + 52] = address(_55874)
                                    _59841 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _59843 = sha3(mem[_59841 + 32 len mem[_59841]])
                                    mem[_58199 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58199 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58199 + 125] = _59843
                                    mem[_58199 + 157] = stor4[cd[68]].field_512
                                    mem[_58199 + 72] = 85
                                    mem[_58199 + 189] = 0
                                    mem[64] = _58199 + 221
                                    mem[_58199 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58199 + 225] = _56251
                                    mem[_58199 + 257] = 0
                                    mem[_58199 + 289] = msg.sender
                                    mem[_58199 + 321] = 128
                                    mem[_58199 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58199 + 385] = mem[s + _58199 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _59843, stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, _59843, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56251, 0, msg.sender, 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _19346 + 333 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58200 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19346 + 321])
                                    mem[mem[64] + 52] = address(_55809)
                                    _59845 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _59847 = sha3(mem[_59845 + 32 len mem[_59845]])
                                    mem[_58200 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58200 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58200 + 125] = _59847
                                    mem[_58200 + 157] = stor4[cd[68]].field_512
                                    mem[_58200 + 72] = 85
                                    mem[_58200 + 189] = 0
                                    mem[64] = _58200 + 221
                                    mem[_58200 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58200 + 225] = _56251
                                    mem[_58200 + 257] = 0
                                    mem[_58200 + 289] = msg.sender
                                    mem[_58200 + 321] = 128
                                    mem[_58200 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58200 + 385] = mem[s + _58200 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _59847, stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, _59847, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56251, 0, msg.sender, 128, 0
                            else:
                                require idx + 2 < mem[_19346 + 289]
                                _56636 = mem[(32 * idx + 2) + _19346 + 321]
                                mem[0] = cd[68]
                                mem[32] = 4
                                if mem[(32 * idx + 1) + _19346 + 333 len 20] == mem[(32 * idx + 2) + _19346 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx + 1) + _19346 + 333 len 20] < mem[(32 * idx + 2) + _19346 + 333 len 20]:
                                    if not mem[(32 * idx + 1) + _19346 + 333 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58197 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19346 + 321])
                                    mem[mem[64] + 52] = address(_56636)
                                    _59833 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _59835 = sha3(mem[_59833 + 32 len mem[_59833]])
                                    mem[_58197 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58197 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58197 + 125] = _59835
                                    mem[_58197 + 157] = stor4[cd[68]].field_512
                                    mem[_58197 + 72] = 85
                                    mem[0] = cd[68]
                                    mem[32] = 4
                                    if address(_55809) == address(_55874):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_55809) < address(_55874):
                                        if not address(_55809):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58197 + 221] = address(_55809)
                                        mem[_58197 + 241] = address(_55874)
                                        mem[_58197 + 189] = 40
                                        mem[_58197 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58197 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58197 + 314] = sha3(address(_55809), address(_55874))
                                        mem[_58197 + 346] = stor4[cd[68]].field_512
                                        mem[_58197 + 261] = 85
                                        mem[_58197 + 378] = 0
                                        mem[64] = _58197 + 410
                                        mem[_58197 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58197 + 414] = _56251
                                        mem[_58197 + 446] = 0
                                        mem[_58197 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59835, stor4[cd[68]].field_512))
                                        mem[_58197 + 510] = 128
                                        mem[_58197 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58197 + 574] = mem[s + _58197 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55809), address(_55874)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55809), address(_55874)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _56251, 0, address(sha3(0, stor4[cd[68]].field_0, _59835, stor4[cd[68]].field_512)), 128, 0
                                    else:
                                        if not address(_55874):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58197 + 221] = address(_55874)
                                        mem[_58197 + 241] = address(_55809)
                                        mem[_58197 + 189] = 40
                                        mem[_58197 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58197 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58197 + 314] = sha3(address(_55874), address(_55809))
                                        mem[_58197 + 346] = stor4[cd[68]].field_512
                                        mem[_58197 + 261] = 85
                                        mem[_58197 + 378] = 0
                                        mem[64] = _58197 + 410
                                        mem[_58197 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58197 + 414] = _56251
                                        mem[_58197 + 446] = 0
                                        mem[_58197 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59835, stor4[cd[68]].field_512))
                                        mem[_58197 + 510] = 128
                                        mem[_58197 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58197 + 574] = mem[s + _58197 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55874), address(_55809)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55874), address(_55809)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _56251, 0, address(sha3(0, stor4[cd[68]].field_0, _59835, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _19346 + 333 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58198 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19346 + 321])
                                    mem[mem[64] + 52] = address(_55874)
                                    _59837 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _59839 = sha3(mem[_59837 + 32 len mem[_59837]])
                                    mem[_58198 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58198 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58198 + 125] = _59839
                                    mem[_58198 + 157] = stor4[cd[68]].field_512
                                    mem[_58198 + 72] = 85
                                    mem[0] = cd[68]
                                    mem[32] = 4
                                    if address(_55809) == address(_55874):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_55809) < address(_55874):
                                        if not address(_55809):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58198 + 221] = address(_55809)
                                        mem[_58198 + 241] = address(_55874)
                                        mem[_58198 + 189] = 40
                                        mem[_58198 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58198 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58198 + 314] = sha3(address(_55809), address(_55874))
                                        mem[_58198 + 346] = stor4[cd[68]].field_512
                                        mem[_58198 + 261] = 85
                                        mem[_58198 + 378] = 0
                                        mem[64] = _58198 + 410
                                        mem[_58198 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58198 + 414] = _56251
                                        mem[_58198 + 446] = 0
                                        mem[_58198 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59839, stor4[cd[68]].field_512))
                                        mem[_58198 + 510] = 128
                                        mem[_58198 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58198 + 574] = mem[s + _58198 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55809), address(_55874)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55809), address(_55874)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _56251, 0, address(sha3(0, stor4[cd[68]].field_0, _59839, stor4[cd[68]].field_512)), 128, 0
                                    else:
                                        if not address(_55874):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58198 + 221] = address(_55874)
                                        mem[_58198 + 241] = address(_55809)
                                        mem[_58198 + 189] = 40
                                        mem[_58198 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58198 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58198 + 314] = sha3(address(_55874), address(_55809))
                                        mem[_58198 + 346] = stor4[cd[68]].field_512
                                        mem[_58198 + 261] = 85
                                        mem[_58198 + 378] = 0
                                        mem[64] = _58198 + 410
                                        mem[_58198 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58198 + 414] = _56251
                                        mem[_58198 + 446] = 0
                                        mem[_58198 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59839, stor4[cd[68]].field_512))
                                        mem[_58198 + 510] = 128
                                        mem[_58198 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58198 + 574] = mem[s + _58198 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55874), address(_55809)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55874), address(_55809)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _56251, 0, address(sha3(0, stor4[cd[68]].field_0, _59839, stor4[cd[68]].field_512)), 128, 0
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    continue 
                mem[mem[64]] = 32
                _55937 = mem[(32 * ('cd', 36).length) + 128]
                mem[mem[64] + 32] = mem[(32 * ('cd', 36).length) + 128]
                mem[mem[64] + 64 len 32 * _55937] = mem[(32 * ('cd', 36).length) + 160 len 32 * _55937]
                return 32, mem[mem[64] + 32 len (32 * _55937) + 32]
            require mem[96] >= 32
            require mem[128] == bool(mem[128])
            if not mem[128]:
                revert with 0, 'TransferHelper: TRANSFER_FAILED'
            mem[64] = _19346 + (32 * ('cd', 36).length) + 321
            mem[_19346 + 289] = ('cd', 36).length
            mem[_19346 + 321 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
            mem[_19346 + (32 * ('cd', 36).length) + 321] = 0
            idx = 0
            while idx < ('cd', 36).length - 1:
                require idx < mem[_19346 + 289]
                _55811 = mem[(32 * idx) + _19346 + 321]
                require idx + 1 < mem[_19346 + 289]
                _55876 = mem[(32 * idx + 1) + _19346 + 321]
                if mem[(32 * idx) + _19346 + 333 len 20] == mem[(32 * idx + 1) + _19346 + 333 len 20]:
                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                if mem[(32 * idx) + _19346 + 333 len 20] < mem[(32 * idx + 1) + _19346 + 333 len 20]:
                    if not mem[(32 * idx) + _19346 + 333 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                    _56253 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                    if mem[(32 * idx) + _19346 + 333 len 20] == mem[(32 * idx) + _19346 + 333 len 20]:
                        if idx >= mem[_19346 + 289] - 2:
                            mem[0] = cd[68]
                            mem[32] = 4
                            if mem[(32 * idx) + _19346 + 333 len 20] == mem[(32 * idx + 1) + _19346 + 333 len 20]:
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if mem[(32 * idx) + _19346 + 333 len 20] < mem[(32 * idx + 1) + _19346 + 333 len 20]:
                                if not mem[(32 * idx) + _19346 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58203 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _19346 + 321])
                                mem[mem[64] + 52] = address(_55876)
                                _59857 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _59859 = sha3(mem[_59857 + 32 len mem[_59857]])
                                mem[_58203 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58203 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58203 + 125] = _59859
                                mem[_58203 + 157] = stor4[cd[68]].field_512
                                mem[_58203 + 72] = 85
                                mem[_58203 + 189] = 0
                                mem[64] = _58203 + 221
                                mem[_58203 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58203 + 225] = 0
                                mem[_58203 + 257] = _56253
                                mem[_58203 + 289] = msg.sender
                                mem[_58203 + 321] = 128
                                mem[_58203 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58203 + 385] = mem[s + _58203 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _59859, stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, _59859, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _56253, msg.sender, 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _19346 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58204 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19346 + 321])
                                mem[mem[64] + 52] = address(_55811)
                                _59861 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _59863 = sha3(mem[_59861 + 32 len mem[_59861]])
                                mem[_58204 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58204 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58204 + 125] = _59863
                                mem[_58204 + 157] = stor4[cd[68]].field_512
                                mem[_58204 + 72] = 85
                                mem[_58204 + 189] = 0
                                mem[64] = _58204 + 221
                                mem[_58204 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58204 + 225] = 0
                                mem[_58204 + 257] = _56253
                                mem[_58204 + 289] = msg.sender
                                mem[_58204 + 321] = 128
                                mem[_58204 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58204 + 385] = mem[s + _58204 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _59863, stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, _59863, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _56253, msg.sender, 128, 0
                        else:
                            require idx + 2 < mem[_19346 + 289]
                            _56637 = mem[(32 * idx + 2) + _19346 + 321]
                            mem[0] = cd[68]
                            mem[32] = 4
                            if mem[(32 * idx + 1) + _19346 + 333 len 20] == mem[(32 * idx + 2) + _19346 + 333 len 20]:
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if mem[(32 * idx + 1) + _19346 + 333 len 20] < mem[(32 * idx + 2) + _19346 + 333 len 20]:
                                if not mem[(32 * idx + 1) + _19346 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58201 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19346 + 321])
                                mem[mem[64] + 52] = address(_56637)
                                _59849 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _59851 = sha3(mem[_59849 + 32 len mem[_59849]])
                                mem[_58201 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58201 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58201 + 125] = _59851
                                mem[_58201 + 157] = stor4[cd[68]].field_512
                                mem[_58201 + 72] = 85
                                mem[0] = cd[68]
                                mem[32] = 4
                                if address(_55811) == address(_55876):
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_55811) < address(_55876):
                                    if not address(_55811):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58201 + 221] = address(_55811)
                                    mem[_58201 + 241] = address(_55876)
                                    mem[_58201 + 189] = 40
                                    mem[_58201 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58201 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58201 + 314] = sha3(address(_55811), address(_55876))
                                    mem[_58201 + 346] = stor4[cd[68]].field_512
                                    mem[_58201 + 261] = 85
                                    mem[_58201 + 378] = 0
                                    mem[64] = _58201 + 410
                                    mem[_58201 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58201 + 414] = 0
                                    mem[_58201 + 446] = _56253
                                    mem[_58201 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59851, stor4[cd[68]].field_512))
                                    mem[_58201 + 510] = 128
                                    mem[_58201 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58201 + 574] = mem[s + _58201 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55811), address(_55876)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55811), address(_55876)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56253, address(sha3(0, stor4[cd[68]].field_0, _59851, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not address(_55876):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58201 + 221] = address(_55876)
                                    mem[_58201 + 241] = address(_55811)
                                    mem[_58201 + 189] = 40
                                    mem[_58201 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58201 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58201 + 314] = sha3(address(_55876), address(_55811))
                                    mem[_58201 + 346] = stor4[cd[68]].field_512
                                    mem[_58201 + 261] = 85
                                    mem[_58201 + 378] = 0
                                    mem[64] = _58201 + 410
                                    mem[_58201 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58201 + 414] = 0
                                    mem[_58201 + 446] = _56253
                                    mem[_58201 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59851, stor4[cd[68]].field_512))
                                    mem[_58201 + 510] = 128
                                    mem[_58201 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58201 + 574] = mem[s + _58201 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55876), address(_55811)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55876), address(_55811)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56253, address(sha3(0, stor4[cd[68]].field_0, _59851, stor4[cd[68]].field_512)), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _19346 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58202 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19346 + 321])
                                mem[mem[64] + 52] = address(_55876)
                                _59853 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _59855 = sha3(mem[_59853 + 32 len mem[_59853]])
                                mem[_58202 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58202 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58202 + 125] = _59855
                                mem[_58202 + 157] = stor4[cd[68]].field_512
                                mem[_58202 + 72] = 85
                                mem[0] = cd[68]
                                mem[32] = 4
                                if address(_55811) == address(_55876):
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_55811) < address(_55876):
                                    if not address(_55811):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58202 + 221] = address(_55811)
                                    mem[_58202 + 241] = address(_55876)
                                    mem[_58202 + 189] = 40
                                    mem[_58202 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58202 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58202 + 314] = sha3(address(_55811), address(_55876))
                                    mem[_58202 + 346] = stor4[cd[68]].field_512
                                    mem[_58202 + 261] = 85
                                    mem[_58202 + 378] = 0
                                    mem[64] = _58202 + 410
                                    mem[_58202 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58202 + 414] = 0
                                    mem[_58202 + 446] = _56253
                                    mem[_58202 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59855, stor4[cd[68]].field_512))
                                    mem[_58202 + 510] = 128
                                    mem[_58202 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58202 + 574] = mem[s + _58202 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55811), address(_55876)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55811), address(_55876)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56253, address(sha3(0, stor4[cd[68]].field_0, _59855, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not address(_55876):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58202 + 221] = address(_55876)
                                    mem[_58202 + 241] = address(_55811)
                                    mem[_58202 + 189] = 40
                                    mem[_58202 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58202 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58202 + 314] = sha3(address(_55876), address(_55811))
                                    mem[_58202 + 346] = stor4[cd[68]].field_512
                                    mem[_58202 + 261] = 85
                                    mem[_58202 + 378] = 0
                                    mem[64] = _58202 + 410
                                    mem[_58202 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58202 + 414] = 0
                                    mem[_58202 + 446] = _56253
                                    mem[_58202 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59855, stor4[cd[68]].field_512))
                                    mem[_58202 + 510] = 128
                                    mem[_58202 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58202 + 574] = mem[s + _58202 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55876), address(_55811)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55876), address(_55811)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56253, address(sha3(0, stor4[cd[68]].field_0, _59855, stor4[cd[68]].field_512)), 128, 0
                    else:
                        if idx >= mem[_19346 + 289] - 2:
                            mem[0] = cd[68]
                            mem[32] = 4
                            if mem[(32 * idx) + _19346 + 333 len 20] == mem[(32 * idx + 1) + _19346 + 333 len 20]:
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if mem[(32 * idx) + _19346 + 333 len 20] < mem[(32 * idx + 1) + _19346 + 333 len 20]:
                                if not mem[(32 * idx) + _19346 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58207 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _19346 + 321])
                                mem[mem[64] + 52] = address(_55876)
                                _59873 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _59875 = sha3(mem[_59873 + 32 len mem[_59873]])
                                mem[_58207 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58207 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58207 + 125] = _59875
                                mem[_58207 + 157] = stor4[cd[68]].field_512
                                mem[_58207 + 72] = 85
                                mem[_58207 + 189] = 0
                                mem[64] = _58207 + 221
                                mem[_58207 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58207 + 225] = _56253
                                mem[_58207 + 257] = 0
                                mem[_58207 + 289] = msg.sender
                                mem[_58207 + 321] = 128
                                mem[_58207 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58207 + 385] = mem[s + _58207 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _59875, stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, _59875, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _56253, 0, msg.sender, 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _19346 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58208 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19346 + 321])
                                mem[mem[64] + 52] = address(_55811)
                                _59877 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _59879 = sha3(mem[_59877 + 32 len mem[_59877]])
                                mem[_58208 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58208 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58208 + 125] = _59879
                                mem[_58208 + 157] = stor4[cd[68]].field_512
                                mem[_58208 + 72] = 85
                                mem[_58208 + 189] = 0
                                mem[64] = _58208 + 221
                                mem[_58208 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58208 + 225] = _56253
                                mem[_58208 + 257] = 0
                                mem[_58208 + 289] = msg.sender
                                mem[_58208 + 321] = 128
                                mem[_58208 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58208 + 385] = mem[s + _58208 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _59879, stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, _59879, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _56253, 0, msg.sender, 128, 0
                        else:
                            require idx + 2 < mem[_19346 + 289]
                            _56638 = mem[(32 * idx + 2) + _19346 + 321]
                            mem[0] = cd[68]
                            mem[32] = 4
                            if mem[(32 * idx + 1) + _19346 + 333 len 20] == mem[(32 * idx + 2) + _19346 + 333 len 20]:
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if mem[(32 * idx + 1) + _19346 + 333 len 20] < mem[(32 * idx + 2) + _19346 + 333 len 20]:
                                if not mem[(32 * idx + 1) + _19346 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58205 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19346 + 321])
                                mem[mem[64] + 52] = address(_56638)
                                _59865 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _59867 = sha3(mem[_59865 + 32 len mem[_59865]])
                                mem[_58205 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58205 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58205 + 125] = _59867
                                mem[_58205 + 157] = stor4[cd[68]].field_512
                                mem[_58205 + 72] = 85
                                mem[0] = cd[68]
                                mem[32] = 4
                                if address(_55811) == address(_55876):
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_55811) < address(_55876):
                                    if not address(_55811):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58205 + 221] = address(_55811)
                                    mem[_58205 + 241] = address(_55876)
                                    mem[_58205 + 189] = 40
                                    mem[_58205 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58205 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58205 + 314] = sha3(address(_55811), address(_55876))
                                    mem[_58205 + 346] = stor4[cd[68]].field_512
                                    mem[_58205 + 261] = 85
                                    mem[_58205 + 378] = 0
                                    mem[64] = _58205 + 410
                                    mem[_58205 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58205 + 414] = _56253
                                    mem[_58205 + 446] = 0
                                    mem[_58205 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59867, stor4[cd[68]].field_512))
                                    mem[_58205 + 510] = 128
                                    mem[_58205 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58205 + 574] = mem[s + _58205 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55811), address(_55876)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55811), address(_55876)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56253, 0, address(sha3(0, stor4[cd[68]].field_0, _59867, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not address(_55876):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58205 + 221] = address(_55876)
                                    mem[_58205 + 241] = address(_55811)
                                    mem[_58205 + 189] = 40
                                    mem[_58205 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58205 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58205 + 314] = sha3(address(_55876), address(_55811))
                                    mem[_58205 + 346] = stor4[cd[68]].field_512
                                    mem[_58205 + 261] = 85
                                    mem[_58205 + 378] = 0
                                    mem[64] = _58205 + 410
                                    mem[_58205 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58205 + 414] = _56253
                                    mem[_58205 + 446] = 0
                                    mem[_58205 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59867, stor4[cd[68]].field_512))
                                    mem[_58205 + 510] = 128
                                    mem[_58205 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58205 + 574] = mem[s + _58205 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55876), address(_55811)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55876), address(_55811)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56253, 0, address(sha3(0, stor4[cd[68]].field_0, _59867, stor4[cd[68]].field_512)), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _19346 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58206 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19346 + 321])
                                mem[mem[64] + 52] = address(_55876)
                                _59869 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _59871 = sha3(mem[_59869 + 32 len mem[_59869]])
                                mem[_58206 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58206 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58206 + 125] = _59871
                                mem[_58206 + 157] = stor4[cd[68]].field_512
                                mem[_58206 + 72] = 85
                                mem[0] = cd[68]
                                mem[32] = 4
                                if address(_55811) == address(_55876):
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_55811) < address(_55876):
                                    if not address(_55811):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58206 + 221] = address(_55811)
                                    mem[_58206 + 241] = address(_55876)
                                    mem[_58206 + 189] = 40
                                    mem[_58206 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58206 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58206 + 314] = sha3(address(_55811), address(_55876))
                                    mem[_58206 + 346] = stor4[cd[68]].field_512
                                    mem[_58206 + 261] = 85
                                    mem[_58206 + 378] = 0
                                    mem[64] = _58206 + 410
                                    mem[_58206 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58206 + 414] = _56253
                                    mem[_58206 + 446] = 0
                                    mem[_58206 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59871, stor4[cd[68]].field_512))
                                    mem[_58206 + 510] = 128
                                    mem[_58206 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58206 + 574] = mem[s + _58206 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55811), address(_55876)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55811), address(_55876)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56253, 0, address(sha3(0, stor4[cd[68]].field_0, _59871, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not address(_55876):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58206 + 221] = address(_55876)
                                    mem[_58206 + 241] = address(_55811)
                                    mem[_58206 + 189] = 40
                                    mem[_58206 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58206 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58206 + 314] = sha3(address(_55876), address(_55811))
                                    mem[_58206 + 346] = stor4[cd[68]].field_512
                                    mem[_58206 + 261] = 85
                                    mem[_58206 + 378] = 0
                                    mem[64] = _58206 + 410
                                    mem[_58206 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58206 + 414] = _56253
                                    mem[_58206 + 446] = 0
                                    mem[_58206 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59871, stor4[cd[68]].field_512))
                                    mem[_58206 + 510] = 128
                                    mem[_58206 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58206 + 574] = mem[s + _58206 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55876), address(_55811)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55876), address(_55811)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56253, 0, address(sha3(0, stor4[cd[68]].field_0, _59871, stor4[cd[68]].field_512)), 128, 0
                else:
                    if not mem[(32 * idx + 1) + _19346 + 333 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                    _56255 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                    if mem[(32 * idx) + _19346 + 333 len 20] == mem[(32 * idx + 1) + _19346 + 333 len 20]:
                        if idx >= mem[_19346 + 289] - 2:
                            mem[0] = cd[68]
                            mem[32] = 4
                            if mem[(32 * idx) + _19346 + 333 len 20] == mem[(32 * idx + 1) + _19346 + 333 len 20]:
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if mem[(32 * idx) + _19346 + 333 len 20] < mem[(32 * idx + 1) + _19346 + 333 len 20]:
                                if not mem[(32 * idx) + _19346 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58211 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _19346 + 321])
                                mem[mem[64] + 52] = address(_55876)
                                _59889 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _59891 = sha3(mem[_59889 + 32 len mem[_59889]])
                                mem[_58211 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58211 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58211 + 125] = _59891
                                mem[_58211 + 157] = stor4[cd[68]].field_512
                                mem[_58211 + 72] = 85
                                mem[_58211 + 189] = 0
                                mem[64] = _58211 + 221
                                mem[_58211 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58211 + 225] = 0
                                mem[_58211 + 257] = _56255
                                mem[_58211 + 289] = msg.sender
                                mem[_58211 + 321] = 128
                                mem[_58211 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58211 + 385] = mem[s + _58211 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _59891, stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, _59891, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _56255, msg.sender, 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _19346 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58212 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19346 + 321])
                                mem[mem[64] + 52] = address(_55811)
                                _59893 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _59895 = sha3(mem[_59893 + 32 len mem[_59893]])
                                mem[_58212 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58212 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58212 + 125] = _59895
                                mem[_58212 + 157] = stor4[cd[68]].field_512
                                mem[_58212 + 72] = 85
                                mem[_58212 + 189] = 0
                                mem[64] = _58212 + 221
                                mem[_58212 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58212 + 225] = 0
                                mem[_58212 + 257] = _56255
                                mem[_58212 + 289] = msg.sender
                                mem[_58212 + 321] = 128
                                mem[_58212 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58212 + 385] = mem[s + _58212 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _59895, stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, _59895, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _56255, msg.sender, 128, 0
                        else:
                            require idx + 2 < mem[_19346 + 289]
                            _56639 = mem[(32 * idx + 2) + _19346 + 321]
                            mem[0] = cd[68]
                            mem[32] = 4
                            if mem[(32 * idx + 1) + _19346 + 333 len 20] == mem[(32 * idx + 2) + _19346 + 333 len 20]:
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if mem[(32 * idx + 1) + _19346 + 333 len 20] < mem[(32 * idx + 2) + _19346 + 333 len 20]:
                                if not mem[(32 * idx + 1) + _19346 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58209 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19346 + 321])
                                mem[mem[64] + 52] = address(_56639)
                                _59881 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _59883 = sha3(mem[_59881 + 32 len mem[_59881]])
                                mem[_58209 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58209 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58209 + 125] = _59883
                                mem[_58209 + 157] = stor4[cd[68]].field_512
                                mem[_58209 + 72] = 85
                                mem[0] = cd[68]
                                mem[32] = 4
                                if address(_55811) == address(_55876):
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_55811) < address(_55876):
                                    if not address(_55811):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58209 + 221] = address(_55811)
                                    mem[_58209 + 241] = address(_55876)
                                    mem[_58209 + 189] = 40
                                    mem[_58209 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58209 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58209 + 314] = sha3(address(_55811), address(_55876))
                                    mem[_58209 + 346] = stor4[cd[68]].field_512
                                    mem[_58209 + 261] = 85
                                    mem[_58209 + 378] = 0
                                    mem[64] = _58209 + 410
                                    mem[_58209 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58209 + 414] = 0
                                    mem[_58209 + 446] = _56255
                                    mem[_58209 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59883, stor4[cd[68]].field_512))
                                    mem[_58209 + 510] = 128
                                    mem[_58209 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58209 + 574] = mem[s + _58209 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55811), address(_55876)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55811), address(_55876)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56255, address(sha3(0, stor4[cd[68]].field_0, _59883, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not address(_55876):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58209 + 221] = address(_55876)
                                    mem[_58209 + 241] = address(_55811)
                                    mem[_58209 + 189] = 40
                                    mem[_58209 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58209 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58209 + 314] = sha3(address(_55876), address(_55811))
                                    mem[_58209 + 346] = stor4[cd[68]].field_512
                                    mem[_58209 + 261] = 85
                                    mem[_58209 + 378] = 0
                                    mem[64] = _58209 + 410
                                    mem[_58209 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58209 + 414] = 0
                                    mem[_58209 + 446] = _56255
                                    mem[_58209 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59883, stor4[cd[68]].field_512))
                                    mem[_58209 + 510] = 128
                                    mem[_58209 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58209 + 574] = mem[s + _58209 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55876), address(_55811)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55876), address(_55811)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56255, address(sha3(0, stor4[cd[68]].field_0, _59883, stor4[cd[68]].field_512)), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _19346 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58210 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19346 + 321])
                                mem[mem[64] + 52] = address(_55876)
                                _59885 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _59887 = sha3(mem[_59885 + 32 len mem[_59885]])
                                mem[_58210 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58210 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58210 + 125] = _59887
                                mem[_58210 + 157] = stor4[cd[68]].field_512
                                mem[_58210 + 72] = 85
                                mem[0] = cd[68]
                                mem[32] = 4
                                if address(_55811) == address(_55876):
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_55811) < address(_55876):
                                    if not address(_55811):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58210 + 221] = address(_55811)
                                    mem[_58210 + 241] = address(_55876)
                                    mem[_58210 + 189] = 40
                                    mem[_58210 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58210 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58210 + 314] = sha3(address(_55811), address(_55876))
                                    mem[_58210 + 346] = stor4[cd[68]].field_512
                                    mem[_58210 + 261] = 85
                                    mem[_58210 + 378] = 0
                                    mem[64] = _58210 + 410
                                    mem[_58210 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58210 + 414] = 0
                                    mem[_58210 + 446] = _56255
                                    mem[_58210 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59887, stor4[cd[68]].field_512))
                                    mem[_58210 + 510] = 128
                                    mem[_58210 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58210 + 574] = mem[s + _58210 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55811), address(_55876)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55811), address(_55876)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56255, address(sha3(0, stor4[cd[68]].field_0, _59887, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not address(_55876):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58210 + 221] = address(_55876)
                                    mem[_58210 + 241] = address(_55811)
                                    mem[_58210 + 189] = 40
                                    mem[_58210 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58210 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58210 + 314] = sha3(address(_55876), address(_55811))
                                    mem[_58210 + 346] = stor4[cd[68]].field_512
                                    mem[_58210 + 261] = 85
                                    mem[_58210 + 378] = 0
                                    mem[64] = _58210 + 410
                                    mem[_58210 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58210 + 414] = 0
                                    mem[_58210 + 446] = _56255
                                    mem[_58210 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59887, stor4[cd[68]].field_512))
                                    mem[_58210 + 510] = 128
                                    mem[_58210 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58210 + 574] = mem[s + _58210 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55876), address(_55811)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55876), address(_55811)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56255, address(sha3(0, stor4[cd[68]].field_0, _59887, stor4[cd[68]].field_512)), 128, 0
                    else:
                        if idx >= mem[_19346 + 289] - 2:
                            mem[0] = cd[68]
                            mem[32] = 4
                            if mem[(32 * idx) + _19346 + 333 len 20] == mem[(32 * idx + 1) + _19346 + 333 len 20]:
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if mem[(32 * idx) + _19346 + 333 len 20] < mem[(32 * idx + 1) + _19346 + 333 len 20]:
                                if not mem[(32 * idx) + _19346 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58215 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _19346 + 321])
                                mem[mem[64] + 52] = address(_55876)
                                _59905 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _59907 = sha3(mem[_59905 + 32 len mem[_59905]])
                                mem[_58215 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58215 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58215 + 125] = _59907
                                mem[_58215 + 157] = stor4[cd[68]].field_512
                                mem[_58215 + 72] = 85
                                mem[_58215 + 189] = 0
                                mem[64] = _58215 + 221
                                mem[_58215 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58215 + 225] = _56255
                                mem[_58215 + 257] = 0
                                mem[_58215 + 289] = msg.sender
                                mem[_58215 + 321] = 128
                                mem[_58215 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58215 + 385] = mem[s + _58215 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _59907, stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, _59907, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _56255, 0, msg.sender, 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _19346 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58216 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19346 + 321])
                                mem[mem[64] + 52] = address(_55811)
                                _59909 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _59911 = sha3(mem[_59909 + 32 len mem[_59909]])
                                mem[_58216 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58216 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58216 + 125] = _59911
                                mem[_58216 + 157] = stor4[cd[68]].field_512
                                mem[_58216 + 72] = 85
                                mem[_58216 + 189] = 0
                                mem[64] = _58216 + 221
                                mem[_58216 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58216 + 225] = _56255
                                mem[_58216 + 257] = 0
                                mem[_58216 + 289] = msg.sender
                                mem[_58216 + 321] = 128
                                mem[_58216 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58216 + 385] = mem[s + _58216 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _59911, stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, _59911, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _56255, 0, msg.sender, 128, 0
                        else:
                            require idx + 2 < mem[_19346 + 289]
                            _56640 = mem[(32 * idx + 2) + _19346 + 321]
                            mem[0] = cd[68]
                            mem[32] = 4
                            if mem[(32 * idx + 1) + _19346 + 333 len 20] == mem[(32 * idx + 2) + _19346 + 333 len 20]:
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if mem[(32 * idx + 1) + _19346 + 333 len 20] < mem[(32 * idx + 2) + _19346 + 333 len 20]:
                                if not mem[(32 * idx + 1) + _19346 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58213 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19346 + 321])
                                mem[mem[64] + 52] = address(_56640)
                                _59897 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _59899 = sha3(mem[_59897 + 32 len mem[_59897]])
                                mem[_58213 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58213 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58213 + 125] = _59899
                                mem[_58213 + 157] = stor4[cd[68]].field_512
                                mem[_58213 + 72] = 85
                                mem[0] = cd[68]
                                mem[32] = 4
                                if address(_55811) == address(_55876):
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_55811) < address(_55876):
                                    if not address(_55811):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58213 + 221] = address(_55811)
                                    mem[_58213 + 241] = address(_55876)
                                    mem[_58213 + 189] = 40
                                    mem[_58213 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58213 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58213 + 314] = sha3(address(_55811), address(_55876))
                                    mem[_58213 + 346] = stor4[cd[68]].field_512
                                    mem[_58213 + 261] = 85
                                    mem[_58213 + 378] = 0
                                    mem[64] = _58213 + 410
                                    mem[_58213 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58213 + 414] = _56255
                                    mem[_58213 + 446] = 0
                                    mem[_58213 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59899, stor4[cd[68]].field_512))
                                    mem[_58213 + 510] = 128
                                    mem[_58213 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58213 + 574] = mem[s + _58213 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55811), address(_55876)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55811), address(_55876)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56255, 0, address(sha3(0, stor4[cd[68]].field_0, _59899, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not address(_55876):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58213 + 221] = address(_55876)
                                    mem[_58213 + 241] = address(_55811)
                                    mem[_58213 + 189] = 40
                                    mem[_58213 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58213 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58213 + 314] = sha3(address(_55876), address(_55811))
                                    mem[_58213 + 346] = stor4[cd[68]].field_512
                                    mem[_58213 + 261] = 85
                                    mem[_58213 + 378] = 0
                                    mem[64] = _58213 + 410
                                    mem[_58213 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58213 + 414] = _56255
                                    mem[_58213 + 446] = 0
                                    mem[_58213 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59899, stor4[cd[68]].field_512))
                                    mem[_58213 + 510] = 128
                                    mem[_58213 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58213 + 574] = mem[s + _58213 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55876), address(_55811)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55876), address(_55811)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56255, 0, address(sha3(0, stor4[cd[68]].field_0, _59899, stor4[cd[68]].field_512)), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _19346 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58214 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19346 + 321])
                                mem[mem[64] + 52] = address(_55876)
                                _59901 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _59903 = sha3(mem[_59901 + 32 len mem[_59901]])
                                mem[_58214 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58214 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58214 + 125] = _59903
                                mem[_58214 + 157] = stor4[cd[68]].field_512
                                mem[_58214 + 72] = 85
                                mem[0] = cd[68]
                                mem[32] = 4
                                if address(_55811) == address(_55876):
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_55811) < address(_55876):
                                    if not address(_55811):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58214 + 221] = address(_55811)
                                    mem[_58214 + 241] = address(_55876)
                                    mem[_58214 + 189] = 40
                                    mem[_58214 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58214 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58214 + 314] = sha3(address(_55811), address(_55876))
                                    mem[_58214 + 346] = stor4[cd[68]].field_512
                                    mem[_58214 + 261] = 85
                                    mem[_58214 + 378] = 0
                                    mem[64] = _58214 + 410
                                    mem[_58214 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58214 + 414] = _56255
                                    mem[_58214 + 446] = 0
                                    mem[_58214 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59903, stor4[cd[68]].field_512))
                                    mem[_58214 + 510] = 128
                                    mem[_58214 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58214 + 574] = mem[s + _58214 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55811), address(_55876)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55811), address(_55876)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56255, 0, address(sha3(0, stor4[cd[68]].field_0, _59903, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not address(_55876):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58214 + 221] = address(_55876)
                                    mem[_58214 + 241] = address(_55811)
                                    mem[_58214 + 189] = 40
                                    mem[_58214 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58214 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58214 + 314] = sha3(address(_55876), address(_55811))
                                    mem[_58214 + 346] = stor4[cd[68]].field_512
                                    mem[_58214 + 261] = 85
                                    mem[_58214 + 378] = 0
                                    mem[64] = _58214 + 410
                                    mem[_58214 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58214 + 414] = _56255
                                    mem[_58214 + 446] = 0
                                    mem[_58214 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59903, stor4[cd[68]].field_512))
                                    mem[_58214 + 510] = 128
                                    mem[_58214 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58214 + 574] = mem[s + _58214 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55876), address(_55811)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55876), address(_55811)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56255, 0, address(sha3(0, stor4[cd[68]].field_0, _59903, stor4[cd[68]].field_512)), 128, 0
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                idx = idx + 1
                continue 
            mem[mem[64]] = 32
            _55939 = mem[(32 * ('cd', 36).length) + 128]
            mem[mem[64] + 32] = mem[(32 * ('cd', 36).length) + 128]
            mem[mem[64] + 64 len 32 * _55939] = mem[(32 * ('cd', 36).length) + 160 len 32 * _55939]
            return 32, mem[mem[64] + 32 len (32 * _55939) + 32]
        mem[_19346 + 289] = return_data.size
        mem[_19346 + 321 len return_data.size] = ext_call.return_data[0 len return_data.size]
        if not ext_call.success:
            revert with 0, 'TransferHelper: TRANSFER_FAILED'
        if not return_data.size:
            mem[64] = _19346 + ceil32(return_data.size) + (32 * ('cd', 36).length) + 322
            mem[_19346 + ceil32(return_data.size) + 290] = ('cd', 36).length
            mem[_19346 + ceil32(return_data.size) + 322 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
            mem[_19346 + ceil32(return_data.size) + (32 * ('cd', 36).length) + 322] = 0
            idx = 0
            while idx < ('cd', 36).length - 1:
                require idx < mem[_19346 + ceil32(return_data.size) + 290]
                _55813 = mem[(32 * idx) + _19346 + ceil32(return_data.size) + 322]
                require idx + 1 < mem[_19346 + ceil32(return_data.size) + 290]
                _55878 = mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 322]
                if mem[(32 * idx) + _19346 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 334 len 20]:
                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                if mem[(32 * idx) + _19346 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 334 len 20]:
                    if not mem[(32 * idx) + _19346 + ceil32(return_data.size) + 334 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                    _56257 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                    if mem[(32 * idx) + _19346 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx) + _19346 + ceil32(return_data.size) + 334 len 20]:
                        if idx >= mem[_19346 + ceil32(return_data.size) + 290] - 2:
                            mem[0] = cd[68]
                            mem[32] = 4
                            if mem[(32 * idx) + _19346 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if mem[(32 * idx) + _19346 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 334 len 20]:
                                if not mem[(32 * idx) + _19346 + ceil32(return_data.size) + 334 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58219 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _19346 + ceil32(return_data.size) + 322])
                                mem[mem[64] + 52] = address(_55878)
                                _59921 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _59923 = sha3(mem[_59921 + 32 len mem[_59921]])
                                mem[_58219 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58219 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58219 + 125] = _59923
                                mem[_58219 + 157] = stor4[cd[68]].field_512
                                mem[_58219 + 72] = 85
                                mem[_58219 + 189] = 0
                                mem[64] = _58219 + 221
                                mem[_58219 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58219 + 225] = 0
                                mem[_58219 + 257] = _56257
                                mem[_58219 + 289] = msg.sender
                                mem[_58219 + 321] = 128
                                mem[_58219 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58219 + 385] = mem[s + _58219 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _59923, stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, _59923, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _56257, msg.sender, 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 334 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58220 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 322])
                                mem[mem[64] + 52] = address(_55813)
                                _59925 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _59927 = sha3(mem[_59925 + 32 len mem[_59925]])
                                mem[_58220 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58220 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58220 + 125] = _59927
                                mem[_58220 + 157] = stor4[cd[68]].field_512
                                mem[_58220 + 72] = 85
                                mem[_58220 + 189] = 0
                                mem[64] = _58220 + 221
                                mem[_58220 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58220 + 225] = 0
                                mem[_58220 + 257] = _56257
                                mem[_58220 + 289] = msg.sender
                                mem[_58220 + 321] = 128
                                mem[_58220 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58220 + 385] = mem[s + _58220 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _59927, stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, _59927, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _56257, msg.sender, 128, 0
                        else:
                            require idx + 2 < mem[_19346 + ceil32(return_data.size) + 290]
                            _56641 = mem[(32 * idx + 2) + _19346 + ceil32(return_data.size) + 322]
                            mem[0] = cd[68]
                            mem[32] = 4
                            if mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 2) + _19346 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 2) + _19346 + ceil32(return_data.size) + 334 len 20]:
                                if not mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 334 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58217 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 322])
                                mem[mem[64] + 52] = address(_56641)
                                _59913 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _59915 = sha3(mem[_59913 + 32 len mem[_59913]])
                                mem[_58217 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58217 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58217 + 125] = _59915
                                mem[_58217 + 157] = stor4[cd[68]].field_512
                                mem[_58217 + 72] = 85
                                mem[0] = cd[68]
                                mem[32] = 4
                                if address(_55813) == address(_55878):
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_55813) < address(_55878):
                                    if not address(_55813):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58217 + 221] = address(_55813)
                                    mem[_58217 + 241] = address(_55878)
                                    mem[_58217 + 189] = 40
                                    mem[_58217 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58217 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58217 + 314] = sha3(address(_55813), address(_55878))
                                    mem[_58217 + 346] = stor4[cd[68]].field_512
                                    mem[_58217 + 261] = 85
                                    mem[_58217 + 378] = 0
                                    mem[64] = _58217 + 410
                                    mem[_58217 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58217 + 414] = 0
                                    mem[_58217 + 446] = _56257
                                    mem[_58217 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59915, stor4[cd[68]].field_512))
                                    mem[_58217 + 510] = 128
                                    mem[_58217 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58217 + 574] = mem[s + _58217 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55813), address(_55878)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55813), address(_55878)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56257, address(sha3(0, stor4[cd[68]].field_0, _59915, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not address(_55878):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58217 + 221] = address(_55878)
                                    mem[_58217 + 241] = address(_55813)
                                    mem[_58217 + 189] = 40
                                    mem[_58217 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58217 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58217 + 314] = sha3(address(_55878), address(_55813))
                                    mem[_58217 + 346] = stor4[cd[68]].field_512
                                    mem[_58217 + 261] = 85
                                    mem[_58217 + 378] = 0
                                    mem[64] = _58217 + 410
                                    mem[_58217 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58217 + 414] = 0
                                    mem[_58217 + 446] = _56257
                                    mem[_58217 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59915, stor4[cd[68]].field_512))
                                    mem[_58217 + 510] = 128
                                    mem[_58217 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58217 + 574] = mem[s + _58217 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55878), address(_55813)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55878), address(_55813)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56257, address(sha3(0, stor4[cd[68]].field_0, _59915, stor4[cd[68]].field_512)), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _19346 + ceil32(return_data.size) + 334 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58218 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19346 + ceil32(return_data.size) + 322])
                                mem[mem[64] + 52] = address(_55878)
                                _59917 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _59919 = sha3(mem[_59917 + 32 len mem[_59917]])
                                mem[_58218 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58218 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58218 + 125] = _59919
                                mem[_58218 + 157] = stor4[cd[68]].field_512
                                mem[_58218 + 72] = 85
                                mem[0] = cd[68]
                                mem[32] = 4
                                if address(_55813) == address(_55878):
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_55813) < address(_55878):
                                    if not address(_55813):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58218 + 221] = address(_55813)
                                    mem[_58218 + 241] = address(_55878)
                                    mem[_58218 + 189] = 40
                                    mem[_58218 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58218 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58218 + 314] = sha3(address(_55813), address(_55878))
                                    mem[_58218 + 346] = stor4[cd[68]].field_512
                                    mem[_58218 + 261] = 85
                                    mem[_58218 + 378] = 0
                                    mem[64] = _58218 + 410
                                    mem[_58218 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58218 + 414] = 0
                                    mem[_58218 + 446] = _56257
                                    mem[_58218 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59919, stor4[cd[68]].field_512))
                                    mem[_58218 + 510] = 128
                                    mem[_58218 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58218 + 574] = mem[s + _58218 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55813), address(_55878)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55813), address(_55878)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56257, address(sha3(0, stor4[cd[68]].field_0, _59919, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not address(_55878):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58218 + 221] = address(_55878)
                                    mem[_58218 + 241] = address(_55813)
                                    mem[_58218 + 189] = 40
                                    mem[_58218 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58218 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58218 + 314] = sha3(address(_55878), address(_55813))
                                    mem[_58218 + 346] = stor4[cd[68]].field_512
                                    mem[_58218 + 261] = 85
                                    mem[_58218 + 378] = 0
                                    mem[64] = _58218 + 410
                                    mem[_58218 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58218 + 414] = 0
                                    mem[_58218 + 446] = _56257
                                    mem[_58218 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59919, stor4[cd[68]].field_512))
                                    mem[_58218 + 510] = 128
                                    mem[_58218 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58218 + 574] = mem[s + _58218 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55878), address(_55813)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55878), address(_55813)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56257, address(sha3(0, stor4[cd[68]].field_0, _59919, stor4[cd[68]].field_512)), 128, 0
                    else:
                        if idx >= mem[_19346 + ceil32(return_data.size) + 290] - 2:
                            mem[0] = cd[68]
                            mem[32] = 4
                            if mem[(32 * idx) + _19346 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if mem[(32 * idx) + _19346 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 334 len 20]:
                                if not mem[(32 * idx) + _19346 + ceil32(return_data.size) + 334 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58223 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _19346 + ceil32(return_data.size) + 322])
                                mem[mem[64] + 52] = address(_55878)
                                _59937 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _59939 = sha3(mem[_59937 + 32 len mem[_59937]])
                                mem[_58223 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58223 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58223 + 125] = _59939
                                mem[_58223 + 157] = stor4[cd[68]].field_512
                                mem[_58223 + 72] = 85
                                mem[_58223 + 189] = 0
                                mem[64] = _58223 + 221
                                mem[_58223 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58223 + 225] = _56257
                                mem[_58223 + 257] = 0
                                mem[_58223 + 289] = msg.sender
                                mem[_58223 + 321] = 128
                                mem[_58223 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58223 + 385] = mem[s + _58223 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _59939, stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, _59939, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _56257, 0, msg.sender, 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 334 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58224 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 322])
                                mem[mem[64] + 52] = address(_55813)
                                _59941 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _59943 = sha3(mem[_59941 + 32 len mem[_59941]])
                                mem[_58224 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58224 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58224 + 125] = _59943
                                mem[_58224 + 157] = stor4[cd[68]].field_512
                                mem[_58224 + 72] = 85
                                mem[_58224 + 189] = 0
                                mem[64] = _58224 + 221
                                mem[_58224 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58224 + 225] = _56257
                                mem[_58224 + 257] = 0
                                mem[_58224 + 289] = msg.sender
                                mem[_58224 + 321] = 128
                                mem[_58224 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58224 + 385] = mem[s + _58224 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _59943, stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, _59943, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _56257, 0, msg.sender, 128, 0
                        else:
                            require idx + 2 < mem[_19346 + ceil32(return_data.size) + 290]
                            _56642 = mem[(32 * idx + 2) + _19346 + ceil32(return_data.size) + 322]
                            mem[0] = cd[68]
                            mem[32] = 4
                            if mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 2) + _19346 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 2) + _19346 + ceil32(return_data.size) + 334 len 20]:
                                if not mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 334 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58221 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 322])
                                mem[mem[64] + 52] = address(_56642)
                                _59929 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _59931 = sha3(mem[_59929 + 32 len mem[_59929]])
                                mem[_58221 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58221 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58221 + 125] = _59931
                                mem[_58221 + 157] = stor4[cd[68]].field_512
                                mem[_58221 + 72] = 85
                                mem[0] = cd[68]
                                mem[32] = 4
                                if address(_55813) == address(_55878):
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_55813) < address(_55878):
                                    if not address(_55813):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58221 + 221] = address(_55813)
                                    mem[_58221 + 241] = address(_55878)
                                    mem[_58221 + 189] = 40
                                    mem[_58221 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58221 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58221 + 314] = sha3(address(_55813), address(_55878))
                                    mem[_58221 + 346] = stor4[cd[68]].field_512
                                    mem[_58221 + 261] = 85
                                    mem[_58221 + 378] = 0
                                    mem[64] = _58221 + 410
                                    mem[_58221 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58221 + 414] = _56257
                                    mem[_58221 + 446] = 0
                                    mem[_58221 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59931, stor4[cd[68]].field_512))
                                    mem[_58221 + 510] = 128
                                    mem[_58221 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58221 + 574] = mem[s + _58221 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55813), address(_55878)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55813), address(_55878)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56257, 0, address(sha3(0, stor4[cd[68]].field_0, _59931, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not address(_55878):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58221 + 221] = address(_55878)
                                    mem[_58221 + 241] = address(_55813)
                                    mem[_58221 + 189] = 40
                                    mem[_58221 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58221 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58221 + 314] = sha3(address(_55878), address(_55813))
                                    mem[_58221 + 346] = stor4[cd[68]].field_512
                                    mem[_58221 + 261] = 85
                                    mem[_58221 + 378] = 0
                                    mem[64] = _58221 + 410
                                    mem[_58221 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58221 + 414] = _56257
                                    mem[_58221 + 446] = 0
                                    mem[_58221 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59931, stor4[cd[68]].field_512))
                                    mem[_58221 + 510] = 128
                                    mem[_58221 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58221 + 574] = mem[s + _58221 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55878), address(_55813)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55878), address(_55813)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56257, 0, address(sha3(0, stor4[cd[68]].field_0, _59931, stor4[cd[68]].field_512)), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _19346 + ceil32(return_data.size) + 334 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58222 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19346 + ceil32(return_data.size) + 322])
                                mem[mem[64] + 52] = address(_55878)
                                _59933 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _59935 = sha3(mem[_59933 + 32 len mem[_59933]])
                                mem[_58222 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58222 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58222 + 125] = _59935
                                mem[_58222 + 157] = stor4[cd[68]].field_512
                                mem[_58222 + 72] = 85
                                mem[0] = cd[68]
                                mem[32] = 4
                                if address(_55813) == address(_55878):
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_55813) < address(_55878):
                                    if not address(_55813):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58222 + 221] = address(_55813)
                                    mem[_58222 + 241] = address(_55878)
                                    mem[_58222 + 189] = 40
                                    mem[_58222 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58222 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58222 + 314] = sha3(address(_55813), address(_55878))
                                    mem[_58222 + 346] = stor4[cd[68]].field_512
                                    mem[_58222 + 261] = 85
                                    mem[_58222 + 378] = 0
                                    mem[64] = _58222 + 410
                                    mem[_58222 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58222 + 414] = _56257
                                    mem[_58222 + 446] = 0
                                    mem[_58222 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59935, stor4[cd[68]].field_512))
                                    mem[_58222 + 510] = 128
                                    mem[_58222 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58222 + 574] = mem[s + _58222 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55813), address(_55878)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55813), address(_55878)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56257, 0, address(sha3(0, stor4[cd[68]].field_0, _59935, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not address(_55878):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58222 + 221] = address(_55878)
                                    mem[_58222 + 241] = address(_55813)
                                    mem[_58222 + 189] = 40
                                    mem[_58222 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58222 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58222 + 314] = sha3(address(_55878), address(_55813))
                                    mem[_58222 + 346] = stor4[cd[68]].field_512
                                    mem[_58222 + 261] = 85
                                    mem[_58222 + 378] = 0
                                    mem[64] = _58222 + 410
                                    mem[_58222 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58222 + 414] = _56257
                                    mem[_58222 + 446] = 0
                                    mem[_58222 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59935, stor4[cd[68]].field_512))
                                    mem[_58222 + 510] = 128
                                    mem[_58222 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58222 + 574] = mem[s + _58222 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55878), address(_55813)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55878), address(_55813)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56257, 0, address(sha3(0, stor4[cd[68]].field_0, _59935, stor4[cd[68]].field_512)), 128, 0
                else:
                    if not mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 334 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                    _56259 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                    if mem[(32 * idx) + _19346 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 334 len 20]:
                        if idx >= mem[_19346 + ceil32(return_data.size) + 290] - 2:
                            mem[0] = cd[68]
                            mem[32] = 4
                            if mem[(32 * idx) + _19346 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if mem[(32 * idx) + _19346 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 334 len 20]:
                                if not mem[(32 * idx) + _19346 + ceil32(return_data.size) + 334 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58227 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _19346 + ceil32(return_data.size) + 322])
                                mem[mem[64] + 52] = address(_55878)
                                _59953 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _59955 = sha3(mem[_59953 + 32 len mem[_59953]])
                                mem[_58227 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58227 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58227 + 125] = _59955
                                mem[_58227 + 157] = stor4[cd[68]].field_512
                                mem[_58227 + 72] = 85
                                mem[_58227 + 189] = 0
                                mem[64] = _58227 + 221
                                mem[_58227 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58227 + 225] = 0
                                mem[_58227 + 257] = _56259
                                mem[_58227 + 289] = msg.sender
                                mem[_58227 + 321] = 128
                                mem[_58227 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58227 + 385] = mem[s + _58227 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _59955, stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, _59955, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _56259, msg.sender, 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 334 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58228 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 322])
                                mem[mem[64] + 52] = address(_55813)
                                _59957 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _59959 = sha3(mem[_59957 + 32 len mem[_59957]])
                                mem[_58228 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58228 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58228 + 125] = _59959
                                mem[_58228 + 157] = stor4[cd[68]].field_512
                                mem[_58228 + 72] = 85
                                mem[_58228 + 189] = 0
                                mem[64] = _58228 + 221
                                mem[_58228 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58228 + 225] = 0
                                mem[_58228 + 257] = _56259
                                mem[_58228 + 289] = msg.sender
                                mem[_58228 + 321] = 128
                                mem[_58228 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58228 + 385] = mem[s + _58228 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _59959, stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, _59959, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _56259, msg.sender, 128, 0
                        else:
                            require idx + 2 < mem[_19346 + ceil32(return_data.size) + 290]
                            _56643 = mem[(32 * idx + 2) + _19346 + ceil32(return_data.size) + 322]
                            mem[0] = cd[68]
                            mem[32] = 4
                            if mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 2) + _19346 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 2) + _19346 + ceil32(return_data.size) + 334 len 20]:
                                if not mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 334 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58225 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 322])
                                mem[mem[64] + 52] = address(_56643)
                                _59945 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _59947 = sha3(mem[_59945 + 32 len mem[_59945]])
                                mem[_58225 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58225 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58225 + 125] = _59947
                                mem[_58225 + 157] = stor4[cd[68]].field_512
                                mem[_58225 + 72] = 85
                                mem[0] = cd[68]
                                mem[32] = 4
                                if address(_55813) == address(_55878):
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_55813) < address(_55878):
                                    if not address(_55813):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58225 + 221] = address(_55813)
                                    mem[_58225 + 241] = address(_55878)
                                    mem[_58225 + 189] = 40
                                    mem[_58225 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58225 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58225 + 314] = sha3(address(_55813), address(_55878))
                                    mem[_58225 + 346] = stor4[cd[68]].field_512
                                    mem[_58225 + 261] = 85
                                    mem[_58225 + 378] = 0
                                    mem[64] = _58225 + 410
                                    mem[_58225 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58225 + 414] = 0
                                    mem[_58225 + 446] = _56259
                                    mem[_58225 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59947, stor4[cd[68]].field_512))
                                    mem[_58225 + 510] = 128
                                    mem[_58225 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58225 + 574] = mem[s + _58225 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55813), address(_55878)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55813), address(_55878)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56259, address(sha3(0, stor4[cd[68]].field_0, _59947, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not address(_55878):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58225 + 221] = address(_55878)
                                    mem[_58225 + 241] = address(_55813)
                                    mem[_58225 + 189] = 40
                                    mem[_58225 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58225 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58225 + 314] = sha3(address(_55878), address(_55813))
                                    mem[_58225 + 346] = stor4[cd[68]].field_512
                                    mem[_58225 + 261] = 85
                                    mem[_58225 + 378] = 0
                                    mem[64] = _58225 + 410
                                    mem[_58225 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58225 + 414] = 0
                                    mem[_58225 + 446] = _56259
                                    mem[_58225 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59947, stor4[cd[68]].field_512))
                                    mem[_58225 + 510] = 128
                                    mem[_58225 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58225 + 574] = mem[s + _58225 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55878), address(_55813)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55878), address(_55813)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56259, address(sha3(0, stor4[cd[68]].field_0, _59947, stor4[cd[68]].field_512)), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _19346 + ceil32(return_data.size) + 334 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58226 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19346 + ceil32(return_data.size) + 322])
                                mem[mem[64] + 52] = address(_55878)
                                _59949 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _59951 = sha3(mem[_59949 + 32 len mem[_59949]])
                                mem[_58226 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58226 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58226 + 125] = _59951
                                mem[_58226 + 157] = stor4[cd[68]].field_512
                                mem[_58226 + 72] = 85
                                mem[0] = cd[68]
                                mem[32] = 4
                                if address(_55813) == address(_55878):
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_55813) < address(_55878):
                                    if not address(_55813):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58226 + 221] = address(_55813)
                                    mem[_58226 + 241] = address(_55878)
                                    mem[_58226 + 189] = 40
                                    mem[_58226 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58226 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58226 + 314] = sha3(address(_55813), address(_55878))
                                    mem[_58226 + 346] = stor4[cd[68]].field_512
                                    mem[_58226 + 261] = 85
                                    mem[_58226 + 378] = 0
                                    mem[64] = _58226 + 410
                                    mem[_58226 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58226 + 414] = 0
                                    mem[_58226 + 446] = _56259
                                    mem[_58226 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59951, stor4[cd[68]].field_512))
                                    mem[_58226 + 510] = 128
                                    mem[_58226 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58226 + 574] = mem[s + _58226 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55813), address(_55878)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55813), address(_55878)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56259, address(sha3(0, stor4[cd[68]].field_0, _59951, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not address(_55878):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58226 + 221] = address(_55878)
                                    mem[_58226 + 241] = address(_55813)
                                    mem[_58226 + 189] = 40
                                    mem[_58226 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58226 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58226 + 314] = sha3(address(_55878), address(_55813))
                                    mem[_58226 + 346] = stor4[cd[68]].field_512
                                    mem[_58226 + 261] = 85
                                    mem[_58226 + 378] = 0
                                    mem[64] = _58226 + 410
                                    mem[_58226 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58226 + 414] = 0
                                    mem[_58226 + 446] = _56259
                                    mem[_58226 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59951, stor4[cd[68]].field_512))
                                    mem[_58226 + 510] = 128
                                    mem[_58226 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58226 + 574] = mem[s + _58226 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55878), address(_55813)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55878), address(_55813)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56259, address(sha3(0, stor4[cd[68]].field_0, _59951, stor4[cd[68]].field_512)), 128, 0
                    else:
                        if idx >= mem[_19346 + ceil32(return_data.size) + 290] - 2:
                            mem[0] = cd[68]
                            mem[32] = 4
                            if mem[(32 * idx) + _19346 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if mem[(32 * idx) + _19346 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 334 len 20]:
                                if not mem[(32 * idx) + _19346 + ceil32(return_data.size) + 334 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58231 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _19346 + ceil32(return_data.size) + 322])
                                mem[mem[64] + 52] = address(_55878)
                                _59969 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _59971 = sha3(mem[_59969 + 32 len mem[_59969]])
                                mem[_58231 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58231 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58231 + 125] = _59971
                                mem[_58231 + 157] = stor4[cd[68]].field_512
                                mem[_58231 + 72] = 85
                                mem[_58231 + 189] = 0
                                mem[64] = _58231 + 221
                                mem[_58231 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58231 + 225] = _56259
                                mem[_58231 + 257] = 0
                                mem[_58231 + 289] = msg.sender
                                mem[_58231 + 321] = 128
                                mem[_58231 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58231 + 385] = mem[s + _58231 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _59971, stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, _59971, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _56259, 0, msg.sender, 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 334 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58232 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 322])
                                mem[mem[64] + 52] = address(_55813)
                                _59973 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _59975 = sha3(mem[_59973 + 32 len mem[_59973]])
                                mem[_58232 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58232 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58232 + 125] = _59975
                                mem[_58232 + 157] = stor4[cd[68]].field_512
                                mem[_58232 + 72] = 85
                                mem[_58232 + 189] = 0
                                mem[64] = _58232 + 221
                                mem[_58232 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58232 + 225] = _56259
                                mem[_58232 + 257] = 0
                                mem[_58232 + 289] = msg.sender
                                mem[_58232 + 321] = 128
                                mem[_58232 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58232 + 385] = mem[s + _58232 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _59975, stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, _59975, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _56259, 0, msg.sender, 128, 0
                        else:
                            require idx + 2 < mem[_19346 + ceil32(return_data.size) + 290]
                            _56644 = mem[(32 * idx + 2) + _19346 + ceil32(return_data.size) + 322]
                            mem[0] = cd[68]
                            mem[32] = 4
                            if mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 2) + _19346 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 2) + _19346 + ceil32(return_data.size) + 334 len 20]:
                                if not mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 334 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58229 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 322])
                                mem[mem[64] + 52] = address(_56644)
                                _59961 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _59963 = sha3(mem[_59961 + 32 len mem[_59961]])
                                mem[_58229 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58229 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58229 + 125] = _59963
                                mem[_58229 + 157] = stor4[cd[68]].field_512
                                mem[_58229 + 72] = 85
                                mem[0] = cd[68]
                                mem[32] = 4
                                if address(_55813) == address(_55878):
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_55813) < address(_55878):
                                    if not address(_55813):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58229 + 221] = address(_55813)
                                    mem[_58229 + 241] = address(_55878)
                                    mem[_58229 + 189] = 40
                                    mem[_58229 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58229 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58229 + 314] = sha3(address(_55813), address(_55878))
                                    mem[_58229 + 346] = stor4[cd[68]].field_512
                                    mem[_58229 + 261] = 85
                                    mem[_58229 + 378] = 0
                                    mem[64] = _58229 + 410
                                    mem[_58229 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58229 + 414] = _56259
                                    mem[_58229 + 446] = 0
                                    mem[_58229 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59963, stor4[cd[68]].field_512))
                                    mem[_58229 + 510] = 128
                                    mem[_58229 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58229 + 574] = mem[s + _58229 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55813), address(_55878)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55813), address(_55878)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56259, 0, address(sha3(0, stor4[cd[68]].field_0, _59963, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not address(_55878):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58229 + 221] = address(_55878)
                                    mem[_58229 + 241] = address(_55813)
                                    mem[_58229 + 189] = 40
                                    mem[_58229 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58229 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58229 + 314] = sha3(address(_55878), address(_55813))
                                    mem[_58229 + 346] = stor4[cd[68]].field_512
                                    mem[_58229 + 261] = 85
                                    mem[_58229 + 378] = 0
                                    mem[64] = _58229 + 410
                                    mem[_58229 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58229 + 414] = _56259
                                    mem[_58229 + 446] = 0
                                    mem[_58229 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59963, stor4[cd[68]].field_512))
                                    mem[_58229 + 510] = 128
                                    mem[_58229 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58229 + 574] = mem[s + _58229 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55878), address(_55813)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55878), address(_55813)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56259, 0, address(sha3(0, stor4[cd[68]].field_0, _59963, stor4[cd[68]].field_512)), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _19346 + ceil32(return_data.size) + 334 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58230 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19346 + ceil32(return_data.size) + 322])
                                mem[mem[64] + 52] = address(_55878)
                                _59965 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _59967 = sha3(mem[_59965 + 32 len mem[_59965]])
                                mem[_58230 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58230 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58230 + 125] = _59967
                                mem[_58230 + 157] = stor4[cd[68]].field_512
                                mem[_58230 + 72] = 85
                                mem[0] = cd[68]
                                mem[32] = 4
                                if address(_55813) == address(_55878):
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_55813) < address(_55878):
                                    if not address(_55813):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58230 + 221] = address(_55813)
                                    mem[_58230 + 241] = address(_55878)
                                    mem[_58230 + 189] = 40
                                    mem[_58230 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58230 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58230 + 314] = sha3(address(_55813), address(_55878))
                                    mem[_58230 + 346] = stor4[cd[68]].field_512
                                    mem[_58230 + 261] = 85
                                    mem[_58230 + 378] = 0
                                    mem[64] = _58230 + 410
                                    mem[_58230 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58230 + 414] = _56259
                                    mem[_58230 + 446] = 0
                                    mem[_58230 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59967, stor4[cd[68]].field_512))
                                    mem[_58230 + 510] = 128
                                    mem[_58230 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58230 + 574] = mem[s + _58230 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55813), address(_55878)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55813), address(_55878)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56259, 0, address(sha3(0, stor4[cd[68]].field_0, _59967, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not address(_55878):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58230 + 221] = address(_55878)
                                    mem[_58230 + 241] = address(_55813)
                                    mem[_58230 + 189] = 40
                                    mem[_58230 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58230 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58230 + 314] = sha3(address(_55878), address(_55813))
                                    mem[_58230 + 346] = stor4[cd[68]].field_512
                                    mem[_58230 + 261] = 85
                                    mem[_58230 + 378] = 0
                                    mem[64] = _58230 + 410
                                    mem[_58230 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58230 + 414] = _56259
                                    mem[_58230 + 446] = 0
                                    mem[_58230 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59967, stor4[cd[68]].field_512))
                                    mem[_58230 + 510] = 128
                                    mem[_58230 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58230 + 574] = mem[s + _58230 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55878), address(_55813)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55878), address(_55813)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56259, 0, address(sha3(0, stor4[cd[68]].field_0, _59967, stor4[cd[68]].field_512)), 128, 0
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                idx = idx + 1
                continue 
            mem[mem[64]] = 32
            _55941 = mem[(32 * ('cd', 36).length) + 128]
            mem[mem[64] + 32] = mem[(32 * ('cd', 36).length) + 128]
            mem[mem[64] + 64 len 32 * _55941] = mem[(32 * ('cd', 36).length) + 160 len 32 * _55941]
            return 32, mem[mem[64] + 32 len (32 * _55941) + 32]
        require return_data.size >= 32
        require mem[_19346 + 321] == bool(mem[_19346 + 321])
        if not mem[_19346 + 321]:
            revert with 0, 'TransferHelper: TRANSFER_FAILED'
        mem[64] = _19346 + ceil32(return_data.size) + (32 * ('cd', 36).length) + 322
        mem[_19346 + ceil32(return_data.size) + 290] = ('cd', 36).length
        mem[_19346 + ceil32(return_data.size) + 322 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
        mem[_19346 + ceil32(return_data.size) + (32 * ('cd', 36).length) + 322] = 0
        idx = 0
        while idx < ('cd', 36).length - 1:
            require idx < mem[_19346 + ceil32(return_data.size) + 290]
            _55815 = mem[(32 * idx) + _19346 + ceil32(return_data.size) + 322]
            require idx + 1 < mem[_19346 + ceil32(return_data.size) + 290]
            _55880 = mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 322]
            if mem[(32 * idx) + _19346 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 334 len 20]:
                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
            if mem[(32 * idx) + _19346 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 334 len 20]:
                if not mem[(32 * idx) + _19346 + ceil32(return_data.size) + 334 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                _56261 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                if mem[(32 * idx) + _19346 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx) + _19346 + ceil32(return_data.size) + 334 len 20]:
                    if idx >= mem[_19346 + ceil32(return_data.size) + 290] - 2:
                        mem[0] = cd[68]
                        mem[32] = 4
                        if mem[(32 * idx) + _19346 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 334 len 20]:
                            revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                        if mem[(32 * idx) + _19346 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 334 len 20]:
                            if not mem[(32 * idx) + _19346 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58235 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx) + _19346 + ceil32(return_data.size) + 322])
                            mem[mem[64] + 52] = address(_55880)
                            _59985 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _59987 = sha3(mem[_59985 + 32 len mem[_59985]])
                            mem[_58235 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58235 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58235 + 125] = _59987
                            mem[_58235 + 157] = stor4[cd[68]].field_512
                            mem[_58235 + 72] = 85
                            mem[_58235 + 189] = 0
                            mem[64] = _58235 + 221
                            mem[_58235 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_58235 + 225] = 0
                            mem[_58235 + 257] = _56261
                            mem[_58235 + 289] = msg.sender
                            mem[_58235 + 321] = 128
                            mem[_58235 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _58235 + 385] = mem[s + _58235 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _59987, stor4[cd[68]].field_512)))
                            call address(sha3(0, stor4[cd[68]].field_0, _59987, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _56261, msg.sender, 128, 0
                        else:
                            if not mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58236 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 322])
                            mem[mem[64] + 52] = address(_55815)
                            _59989 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _59991 = sha3(mem[_59989 + 32 len mem[_59989]])
                            mem[_58236 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58236 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58236 + 125] = _59991
                            mem[_58236 + 157] = stor4[cd[68]].field_512
                            mem[_58236 + 72] = 85
                            mem[_58236 + 189] = 0
                            mem[64] = _58236 + 221
                            mem[_58236 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_58236 + 225] = 0
                            mem[_58236 + 257] = _56261
                            mem[_58236 + 289] = msg.sender
                            mem[_58236 + 321] = 128
                            mem[_58236 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _58236 + 385] = mem[s + _58236 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _59991, stor4[cd[68]].field_512)))
                            call address(sha3(0, stor4[cd[68]].field_0, _59991, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _56261, msg.sender, 128, 0
                    else:
                        require idx + 2 < mem[_19346 + ceil32(return_data.size) + 290]
                        _56645 = mem[(32 * idx + 2) + _19346 + ceil32(return_data.size) + 322]
                        mem[0] = cd[68]
                        mem[32] = 4
                        if mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 2) + _19346 + ceil32(return_data.size) + 334 len 20]:
                            revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                        if mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 2) + _19346 + ceil32(return_data.size) + 334 len 20]:
                            if not mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58233 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 322])
                            mem[mem[64] + 52] = address(_56645)
                            _59977 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _59979 = sha3(mem[_59977 + 32 len mem[_59977]])
                            mem[_58233 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58233 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58233 + 125] = _59979
                            mem[_58233 + 157] = stor4[cd[68]].field_512
                            mem[_58233 + 72] = 85
                            mem[0] = cd[68]
                            mem[32] = 4
                            if address(_55815) == address(_55880):
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if address(_55815) < address(_55880):
                                if not address(_55815):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58233 + 221] = address(_55815)
                                mem[_58233 + 241] = address(_55880)
                                mem[_58233 + 189] = 40
                                mem[_58233 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58233 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58233 + 314] = sha3(address(_55815), address(_55880))
                                mem[_58233 + 346] = stor4[cd[68]].field_512
                                mem[_58233 + 261] = 85
                                mem[_58233 + 378] = 0
                                mem[64] = _58233 + 410
                                mem[_58233 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58233 + 414] = 0
                                mem[_58233 + 446] = _56261
                                mem[_58233 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59979, stor4[cd[68]].field_512))
                                mem[_58233 + 510] = 128
                                mem[_58233 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58233 + 574] = mem[s + _58233 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55815), address(_55880)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55815), address(_55880)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _56261, address(sha3(0, stor4[cd[68]].field_0, _59979, stor4[cd[68]].field_512)), 128, 0
                            else:
                                if not address(_55880):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58233 + 221] = address(_55880)
                                mem[_58233 + 241] = address(_55815)
                                mem[_58233 + 189] = 40
                                mem[_58233 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58233 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58233 + 314] = sha3(address(_55880), address(_55815))
                                mem[_58233 + 346] = stor4[cd[68]].field_512
                                mem[_58233 + 261] = 85
                                mem[_58233 + 378] = 0
                                mem[64] = _58233 + 410
                                mem[_58233 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58233 + 414] = 0
                                mem[_58233 + 446] = _56261
                                mem[_58233 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59979, stor4[cd[68]].field_512))
                                mem[_58233 + 510] = 128
                                mem[_58233 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58233 + 574] = mem[s + _58233 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55880), address(_55815)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55880), address(_55815)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _56261, address(sha3(0, stor4[cd[68]].field_0, _59979, stor4[cd[68]].field_512)), 128, 0
                        else:
                            if not mem[(32 * idx + 2) + _19346 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58234 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19346 + ceil32(return_data.size) + 322])
                            mem[mem[64] + 52] = address(_55880)
                            _59981 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _59983 = sha3(mem[_59981 + 32 len mem[_59981]])
                            mem[_58234 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58234 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58234 + 125] = _59983
                            mem[_58234 + 157] = stor4[cd[68]].field_512
                            mem[_58234 + 72] = 85
                            mem[0] = cd[68]
                            mem[32] = 4
                            if address(_55815) == address(_55880):
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if address(_55815) < address(_55880):
                                if not address(_55815):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58234 + 221] = address(_55815)
                                mem[_58234 + 241] = address(_55880)
                                mem[_58234 + 189] = 40
                                mem[_58234 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58234 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58234 + 314] = sha3(address(_55815), address(_55880))
                                mem[_58234 + 346] = stor4[cd[68]].field_512
                                mem[_58234 + 261] = 85
                                mem[_58234 + 378] = 0
                                mem[64] = _58234 + 410
                                mem[_58234 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58234 + 414] = 0
                                mem[_58234 + 446] = _56261
                                mem[_58234 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59983, stor4[cd[68]].field_512))
                                mem[_58234 + 510] = 128
                                mem[_58234 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58234 + 574] = mem[s + _58234 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55815), address(_55880)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55815), address(_55880)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _56261, address(sha3(0, stor4[cd[68]].field_0, _59983, stor4[cd[68]].field_512)), 128, 0
                            else:
                                if not address(_55880):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58234 + 221] = address(_55880)
                                mem[_58234 + 241] = address(_55815)
                                mem[_58234 + 189] = 40
                                mem[_58234 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58234 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58234 + 314] = sha3(address(_55880), address(_55815))
                                mem[_58234 + 346] = stor4[cd[68]].field_512
                                mem[_58234 + 261] = 85
                                mem[_58234 + 378] = 0
                                mem[64] = _58234 + 410
                                mem[_58234 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58234 + 414] = 0
                                mem[_58234 + 446] = _56261
                                mem[_58234 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59983, stor4[cd[68]].field_512))
                                mem[_58234 + 510] = 128
                                mem[_58234 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58234 + 574] = mem[s + _58234 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55880), address(_55815)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55880), address(_55815)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _56261, address(sha3(0, stor4[cd[68]].field_0, _59983, stor4[cd[68]].field_512)), 128, 0
                else:
                    if idx >= mem[_19346 + ceil32(return_data.size) + 290] - 2:
                        mem[0] = cd[68]
                        mem[32] = 4
                        if mem[(32 * idx) + _19346 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 334 len 20]:
                            revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                        if mem[(32 * idx) + _19346 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 334 len 20]:
                            if not mem[(32 * idx) + _19346 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58239 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx) + _19346 + ceil32(return_data.size) + 322])
                            mem[mem[64] + 52] = address(_55880)
                            _60001 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _60003 = sha3(mem[_60001 + 32 len mem[_60001]])
                            mem[_58239 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58239 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58239 + 125] = _60003
                            mem[_58239 + 157] = stor4[cd[68]].field_512
                            mem[_58239 + 72] = 85
                            mem[_58239 + 189] = 0
                            mem[64] = _58239 + 221
                            mem[_58239 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_58239 + 225] = _56261
                            mem[_58239 + 257] = 0
                            mem[_58239 + 289] = msg.sender
                            mem[_58239 + 321] = 128
                            mem[_58239 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _58239 + 385] = mem[s + _58239 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60003, stor4[cd[68]].field_512)))
                            call address(sha3(0, stor4[cd[68]].field_0, _60003, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _56261, 0, msg.sender, 128, 0
                        else:
                            if not mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58240 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 322])
                            mem[mem[64] + 52] = address(_55815)
                            _60005 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _60007 = sha3(mem[_60005 + 32 len mem[_60005]])
                            mem[_58240 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58240 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58240 + 125] = _60007
                            mem[_58240 + 157] = stor4[cd[68]].field_512
                            mem[_58240 + 72] = 85
                            mem[_58240 + 189] = 0
                            mem[64] = _58240 + 221
                            mem[_58240 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_58240 + 225] = _56261
                            mem[_58240 + 257] = 0
                            mem[_58240 + 289] = msg.sender
                            mem[_58240 + 321] = 128
                            mem[_58240 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _58240 + 385] = mem[s + _58240 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60007, stor4[cd[68]].field_512)))
                            call address(sha3(0, stor4[cd[68]].field_0, _60007, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _56261, 0, msg.sender, 128, 0
                    else:
                        require idx + 2 < mem[_19346 + ceil32(return_data.size) + 290]
                        _56646 = mem[(32 * idx + 2) + _19346 + ceil32(return_data.size) + 322]
                        mem[0] = cd[68]
                        mem[32] = 4
                        if mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 2) + _19346 + ceil32(return_data.size) + 334 len 20]:
                            revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                        if mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 2) + _19346 + ceil32(return_data.size) + 334 len 20]:
                            if not mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58237 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 322])
                            mem[mem[64] + 52] = address(_56646)
                            _59993 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _59995 = sha3(mem[_59993 + 32 len mem[_59993]])
                            mem[_58237 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58237 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58237 + 125] = _59995
                            mem[_58237 + 157] = stor4[cd[68]].field_512
                            mem[_58237 + 72] = 85
                            mem[0] = cd[68]
                            mem[32] = 4
                            if address(_55815) == address(_55880):
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if address(_55815) < address(_55880):
                                if not address(_55815):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58237 + 221] = address(_55815)
                                mem[_58237 + 241] = address(_55880)
                                mem[_58237 + 189] = 40
                                mem[_58237 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58237 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58237 + 314] = sha3(address(_55815), address(_55880))
                                mem[_58237 + 346] = stor4[cd[68]].field_512
                                mem[_58237 + 261] = 85
                                mem[_58237 + 378] = 0
                                mem[64] = _58237 + 410
                                mem[_58237 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58237 + 414] = _56261
                                mem[_58237 + 446] = 0
                                mem[_58237 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59995, stor4[cd[68]].field_512))
                                mem[_58237 + 510] = 128
                                mem[_58237 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58237 + 574] = mem[s + _58237 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55815), address(_55880)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55815), address(_55880)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _56261, 0, address(sha3(0, stor4[cd[68]].field_0, _59995, stor4[cd[68]].field_512)), 128, 0
                            else:
                                if not address(_55880):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58237 + 221] = address(_55880)
                                mem[_58237 + 241] = address(_55815)
                                mem[_58237 + 189] = 40
                                mem[_58237 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58237 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58237 + 314] = sha3(address(_55880), address(_55815))
                                mem[_58237 + 346] = stor4[cd[68]].field_512
                                mem[_58237 + 261] = 85
                                mem[_58237 + 378] = 0
                                mem[64] = _58237 + 410
                                mem[_58237 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58237 + 414] = _56261
                                mem[_58237 + 446] = 0
                                mem[_58237 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59995, stor4[cd[68]].field_512))
                                mem[_58237 + 510] = 128
                                mem[_58237 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58237 + 574] = mem[s + _58237 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55880), address(_55815)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55880), address(_55815)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _56261, 0, address(sha3(0, stor4[cd[68]].field_0, _59995, stor4[cd[68]].field_512)), 128, 0
                        else:
                            if not mem[(32 * idx + 2) + _19346 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58238 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19346 + ceil32(return_data.size) + 322])
                            mem[mem[64] + 52] = address(_55880)
                            _59997 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _59999 = sha3(mem[_59997 + 32 len mem[_59997]])
                            mem[_58238 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58238 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58238 + 125] = _59999
                            mem[_58238 + 157] = stor4[cd[68]].field_512
                            mem[_58238 + 72] = 85
                            mem[0] = cd[68]
                            mem[32] = 4
                            if address(_55815) == address(_55880):
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if address(_55815) < address(_55880):
                                if not address(_55815):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58238 + 221] = address(_55815)
                                mem[_58238 + 241] = address(_55880)
                                mem[_58238 + 189] = 40
                                mem[_58238 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58238 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58238 + 314] = sha3(address(_55815), address(_55880))
                                mem[_58238 + 346] = stor4[cd[68]].field_512
                                mem[_58238 + 261] = 85
                                mem[_58238 + 378] = 0
                                mem[64] = _58238 + 410
                                mem[_58238 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58238 + 414] = _56261
                                mem[_58238 + 446] = 0
                                mem[_58238 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59999, stor4[cd[68]].field_512))
                                mem[_58238 + 510] = 128
                                mem[_58238 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58238 + 574] = mem[s + _58238 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55815), address(_55880)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55815), address(_55880)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _56261, 0, address(sha3(0, stor4[cd[68]].field_0, _59999, stor4[cd[68]].field_512)), 128, 0
                            else:
                                if not address(_55880):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58238 + 221] = address(_55880)
                                mem[_58238 + 241] = address(_55815)
                                mem[_58238 + 189] = 40
                                mem[_58238 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58238 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58238 + 314] = sha3(address(_55880), address(_55815))
                                mem[_58238 + 346] = stor4[cd[68]].field_512
                                mem[_58238 + 261] = 85
                                mem[_58238 + 378] = 0
                                mem[64] = _58238 + 410
                                mem[_58238 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58238 + 414] = _56261
                                mem[_58238 + 446] = 0
                                mem[_58238 + 478] = address(sha3(0, stor4[cd[68]].field_0, _59999, stor4[cd[68]].field_512))
                                mem[_58238 + 510] = 128
                                mem[_58238 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58238 + 574] = mem[s + _58238 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55880), address(_55815)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55880), address(_55815)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _56261, 0, address(sha3(0, stor4[cd[68]].field_0, _59999, stor4[cd[68]].field_512)), 128, 0
            else:
                if not mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 334 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                _56263 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                if mem[(32 * idx) + _19346 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 334 len 20]:
                    if idx >= mem[_19346 + ceil32(return_data.size) + 290] - 2:
                        mem[0] = cd[68]
                        mem[32] = 4
                        if mem[(32 * idx) + _19346 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 334 len 20]:
                            revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                        if mem[(32 * idx) + _19346 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 334 len 20]:
                            if not mem[(32 * idx) + _19346 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58243 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx) + _19346 + ceil32(return_data.size) + 322])
                            mem[mem[64] + 52] = address(_55880)
                            _60017 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _60019 = sha3(mem[_60017 + 32 len mem[_60017]])
                            mem[_58243 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58243 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58243 + 125] = _60019
                            mem[_58243 + 157] = stor4[cd[68]].field_512
                            mem[_58243 + 72] = 85
                            mem[_58243 + 189] = 0
                            mem[64] = _58243 + 221
                            mem[_58243 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_58243 + 225] = 0
                            mem[_58243 + 257] = _56263
                            mem[_58243 + 289] = msg.sender
                            mem[_58243 + 321] = 128
                            mem[_58243 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _58243 + 385] = mem[s + _58243 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60019, stor4[cd[68]].field_512)))
                            call address(sha3(0, stor4[cd[68]].field_0, _60019, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _56263, msg.sender, 128, 0
                        else:
                            if not mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58244 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 322])
                            mem[mem[64] + 52] = address(_55815)
                            _60021 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _60023 = sha3(mem[_60021 + 32 len mem[_60021]])
                            mem[_58244 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58244 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58244 + 125] = _60023
                            mem[_58244 + 157] = stor4[cd[68]].field_512
                            mem[_58244 + 72] = 85
                            mem[_58244 + 189] = 0
                            mem[64] = _58244 + 221
                            mem[_58244 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_58244 + 225] = 0
                            mem[_58244 + 257] = _56263
                            mem[_58244 + 289] = msg.sender
                            mem[_58244 + 321] = 128
                            mem[_58244 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _58244 + 385] = mem[s + _58244 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60023, stor4[cd[68]].field_512)))
                            call address(sha3(0, stor4[cd[68]].field_0, _60023, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _56263, msg.sender, 128, 0
                    else:
                        require idx + 2 < mem[_19346 + ceil32(return_data.size) + 290]
                        _56647 = mem[(32 * idx + 2) + _19346 + ceil32(return_data.size) + 322]
                        mem[0] = cd[68]
                        mem[32] = 4
                        if mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 2) + _19346 + ceil32(return_data.size) + 334 len 20]:
                            revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                        if mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 2) + _19346 + ceil32(return_data.size) + 334 len 20]:
                            if not mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58241 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 322])
                            mem[mem[64] + 52] = address(_56647)
                            _60009 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _60011 = sha3(mem[_60009 + 32 len mem[_60009]])
                            mem[_58241 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58241 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58241 + 125] = _60011
                            mem[_58241 + 157] = stor4[cd[68]].field_512
                            mem[_58241 + 72] = 85
                            mem[0] = cd[68]
                            mem[32] = 4
                            if address(_55815) == address(_55880):
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if address(_55815) < address(_55880):
                                if not address(_55815):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58241 + 221] = address(_55815)
                                mem[_58241 + 241] = address(_55880)
                                mem[_58241 + 189] = 40
                                mem[_58241 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58241 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58241 + 314] = sha3(address(_55815), address(_55880))
                                mem[_58241 + 346] = stor4[cd[68]].field_512
                                mem[_58241 + 261] = 85
                                mem[_58241 + 378] = 0
                                mem[64] = _58241 + 410
                                mem[_58241 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58241 + 414] = 0
                                mem[_58241 + 446] = _56263
                                mem[_58241 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60011, stor4[cd[68]].field_512))
                                mem[_58241 + 510] = 128
                                mem[_58241 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58241 + 574] = mem[s + _58241 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55815), address(_55880)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55815), address(_55880)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _56263, address(sha3(0, stor4[cd[68]].field_0, _60011, stor4[cd[68]].field_512)), 128, 0
                            else:
                                if not address(_55880):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58241 + 221] = address(_55880)
                                mem[_58241 + 241] = address(_55815)
                                mem[_58241 + 189] = 40
                                mem[_58241 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58241 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58241 + 314] = sha3(address(_55880), address(_55815))
                                mem[_58241 + 346] = stor4[cd[68]].field_512
                                mem[_58241 + 261] = 85
                                mem[_58241 + 378] = 0
                                mem[64] = _58241 + 410
                                mem[_58241 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58241 + 414] = 0
                                mem[_58241 + 446] = _56263
                                mem[_58241 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60011, stor4[cd[68]].field_512))
                                mem[_58241 + 510] = 128
                                mem[_58241 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58241 + 574] = mem[s + _58241 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55880), address(_55815)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55880), address(_55815)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _56263, address(sha3(0, stor4[cd[68]].field_0, _60011, stor4[cd[68]].field_512)), 128, 0
                        else:
                            if not mem[(32 * idx + 2) + _19346 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58242 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19346 + ceil32(return_data.size) + 322])
                            mem[mem[64] + 52] = address(_55880)
                            _60013 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _60015 = sha3(mem[_60013 + 32 len mem[_60013]])
                            mem[_58242 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58242 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58242 + 125] = _60015
                            mem[_58242 + 157] = stor4[cd[68]].field_512
                            mem[_58242 + 72] = 85
                            mem[0] = cd[68]
                            mem[32] = 4
                            if address(_55815) == address(_55880):
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if address(_55815) < address(_55880):
                                if not address(_55815):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58242 + 221] = address(_55815)
                                mem[_58242 + 241] = address(_55880)
                                mem[_58242 + 189] = 40
                                mem[_58242 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58242 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58242 + 314] = sha3(address(_55815), address(_55880))
                                mem[_58242 + 346] = stor4[cd[68]].field_512
                                mem[_58242 + 261] = 85
                                mem[_58242 + 378] = 0
                                mem[64] = _58242 + 410
                                mem[_58242 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58242 + 414] = 0
                                mem[_58242 + 446] = _56263
                                mem[_58242 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60015, stor4[cd[68]].field_512))
                                mem[_58242 + 510] = 128
                                mem[_58242 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58242 + 574] = mem[s + _58242 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55815), address(_55880)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55815), address(_55880)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _56263, address(sha3(0, stor4[cd[68]].field_0, _60015, stor4[cd[68]].field_512)), 128, 0
                            else:
                                if not address(_55880):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58242 + 221] = address(_55880)
                                mem[_58242 + 241] = address(_55815)
                                mem[_58242 + 189] = 40
                                mem[_58242 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58242 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58242 + 314] = sha3(address(_55880), address(_55815))
                                mem[_58242 + 346] = stor4[cd[68]].field_512
                                mem[_58242 + 261] = 85
                                mem[_58242 + 378] = 0
                                mem[64] = _58242 + 410
                                mem[_58242 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58242 + 414] = 0
                                mem[_58242 + 446] = _56263
                                mem[_58242 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60015, stor4[cd[68]].field_512))
                                mem[_58242 + 510] = 128
                                mem[_58242 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58242 + 574] = mem[s + _58242 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55880), address(_55815)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55880), address(_55815)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _56263, address(sha3(0, stor4[cd[68]].field_0, _60015, stor4[cd[68]].field_512)), 128, 0
                else:
                    if idx >= mem[_19346 + ceil32(return_data.size) + 290] - 2:
                        mem[0] = cd[68]
                        mem[32] = 4
                        if mem[(32 * idx) + _19346 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 334 len 20]:
                            revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                        if mem[(32 * idx) + _19346 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 334 len 20]:
                            if not mem[(32 * idx) + _19346 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58247 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx) + _19346 + ceil32(return_data.size) + 322])
                            mem[mem[64] + 52] = address(_55880)
                            _60033 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _60035 = sha3(mem[_60033 + 32 len mem[_60033]])
                            mem[_58247 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58247 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58247 + 125] = _60035
                            mem[_58247 + 157] = stor4[cd[68]].field_512
                            mem[_58247 + 72] = 85
                            mem[_58247 + 189] = 0
                            mem[64] = _58247 + 221
                            mem[_58247 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_58247 + 225] = _56263
                            mem[_58247 + 257] = 0
                            mem[_58247 + 289] = msg.sender
                            mem[_58247 + 321] = 128
                            mem[_58247 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _58247 + 385] = mem[s + _58247 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60035, stor4[cd[68]].field_512)))
                            call address(sha3(0, stor4[cd[68]].field_0, _60035, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _56263, 0, msg.sender, 128, 0
                        else:
                            if not mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58248 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 322])
                            mem[mem[64] + 52] = address(_55815)
                            _60037 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _60039 = sha3(mem[_60037 + 32 len mem[_60037]])
                            mem[_58248 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58248 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58248 + 125] = _60039
                            mem[_58248 + 157] = stor4[cd[68]].field_512
                            mem[_58248 + 72] = 85
                            mem[_58248 + 189] = 0
                            mem[64] = _58248 + 221
                            mem[_58248 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_58248 + 225] = _56263
                            mem[_58248 + 257] = 0
                            mem[_58248 + 289] = msg.sender
                            mem[_58248 + 321] = 128
                            mem[_58248 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _58248 + 385] = mem[s + _58248 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60039, stor4[cd[68]].field_512)))
                            call address(sha3(0, stor4[cd[68]].field_0, _60039, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _56263, 0, msg.sender, 128, 0
                    else:
                        require idx + 2 < mem[_19346 + ceil32(return_data.size) + 290]
                        _56648 = mem[(32 * idx + 2) + _19346 + ceil32(return_data.size) + 322]
                        mem[0] = cd[68]
                        mem[32] = 4
                        if mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 2) + _19346 + ceil32(return_data.size) + 334 len 20]:
                            revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                        if mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 2) + _19346 + ceil32(return_data.size) + 334 len 20]:
                            if not mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58245 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19346 + ceil32(return_data.size) + 322])
                            mem[mem[64] + 52] = address(_56648)
                            _60025 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _60027 = sha3(mem[_60025 + 32 len mem[_60025]])
                            mem[_58245 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58245 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58245 + 125] = _60027
                            mem[_58245 + 157] = stor4[cd[68]].field_512
                            mem[_58245 + 72] = 85
                            mem[0] = cd[68]
                            mem[32] = 4
                            if address(_55815) == address(_55880):
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if address(_55815) < address(_55880):
                                if not address(_55815):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58245 + 221] = address(_55815)
                                mem[_58245 + 241] = address(_55880)
                                mem[_58245 + 189] = 40
                                mem[_58245 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58245 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58245 + 314] = sha3(address(_55815), address(_55880))
                                mem[_58245 + 346] = stor4[cd[68]].field_512
                                mem[_58245 + 261] = 85
                                mem[_58245 + 378] = 0
                                mem[64] = _58245 + 410
                                mem[_58245 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58245 + 414] = _56263
                                mem[_58245 + 446] = 0
                                mem[_58245 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60027, stor4[cd[68]].field_512))
                                mem[_58245 + 510] = 128
                                mem[_58245 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58245 + 574] = mem[s + _58245 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55815), address(_55880)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55815), address(_55880)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _56263, 0, address(sha3(0, stor4[cd[68]].field_0, _60027, stor4[cd[68]].field_512)), 128, 0
                            else:
                                if not address(_55880):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58245 + 221] = address(_55880)
                                mem[_58245 + 241] = address(_55815)
                                mem[_58245 + 189] = 40
                                mem[_58245 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58245 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58245 + 314] = sha3(address(_55880), address(_55815))
                                mem[_58245 + 346] = stor4[cd[68]].field_512
                                mem[_58245 + 261] = 85
                                mem[_58245 + 378] = 0
                                mem[64] = _58245 + 410
                                mem[_58245 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58245 + 414] = _56263
                                mem[_58245 + 446] = 0
                                mem[_58245 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60027, stor4[cd[68]].field_512))
                                mem[_58245 + 510] = 128
                                mem[_58245 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58245 + 574] = mem[s + _58245 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55880), address(_55815)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55880), address(_55815)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _56263, 0, address(sha3(0, stor4[cd[68]].field_0, _60027, stor4[cd[68]].field_512)), 128, 0
                        else:
                            if not mem[(32 * idx + 2) + _19346 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58246 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19346 + ceil32(return_data.size) + 322])
                            mem[mem[64] + 52] = address(_55880)
                            _60029 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _60031 = sha3(mem[_60029 + 32 len mem[_60029]])
                            mem[_58246 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58246 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58246 + 125] = _60031
                            mem[_58246 + 157] = stor4[cd[68]].field_512
                            mem[_58246 + 72] = 85
                            mem[0] = cd[68]
                            mem[32] = 4
                            if address(_55815) == address(_55880):
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if address(_55815) < address(_55880):
                                if not address(_55815):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58246 + 221] = address(_55815)
                                mem[_58246 + 241] = address(_55880)
                                mem[_58246 + 189] = 40
                                mem[_58246 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58246 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58246 + 314] = sha3(address(_55815), address(_55880))
                                mem[_58246 + 346] = stor4[cd[68]].field_512
                                mem[_58246 + 261] = 85
                                mem[_58246 + 378] = 0
                                mem[64] = _58246 + 410
                                mem[_58246 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58246 + 414] = _56263
                                mem[_58246 + 446] = 0
                                mem[_58246 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60031, stor4[cd[68]].field_512))
                                mem[_58246 + 510] = 128
                                mem[_58246 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58246 + 574] = mem[s + _58246 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55815), address(_55880)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55815), address(_55880)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _56263, 0, address(sha3(0, stor4[cd[68]].field_0, _60031, stor4[cd[68]].field_512)), 128, 0
                            else:
                                if not address(_55880):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58246 + 221] = address(_55880)
                                mem[_58246 + 241] = address(_55815)
                                mem[_58246 + 189] = 40
                                mem[_58246 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58246 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58246 + 314] = sha3(address(_55880), address(_55815))
                                mem[_58246 + 346] = stor4[cd[68]].field_512
                                mem[_58246 + 261] = 85
                                mem[_58246 + 378] = 0
                                mem[64] = _58246 + 410
                                mem[_58246 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58246 + 414] = _56263
                                mem[_58246 + 446] = 0
                                mem[_58246 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60031, stor4[cd[68]].field_512))
                                mem[_58246 + 510] = 128
                                mem[_58246 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58246 + 574] = mem[s + _58246 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55880), address(_55815)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55880), address(_55815)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _56263, 0, address(sha3(0, stor4[cd[68]].field_0, _60031, stor4[cd[68]].field_512)), 128, 0
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            idx = idx + 1
            continue 
        mem[mem[64]] = 32
        _55943 = mem[(32 * ('cd', 36).length) + 128]
        mem[mem[64] + 32] = mem[(32 * ('cd', 36).length) + 128]
        mem[mem[64] + 64 len 32 * _55943] = mem[(32 * ('cd', 36).length) + 160 len 32 * _55943]
        return 32, mem[mem[64] + 32 len (32 * _55943) + 32]
    mem[(32 * ('cd', 36).length) + 160 len 32 * ('cd', 36).length] = call.data[calldata.size len 32 * ('cd', 36).length]
    require 0 < ('cd', 36).length
    mem[(32 * ('cd', 36).length) + 160] = cd[4]
    idx = 0
    while idx < ('cd', 36).length - 1:
        require idx < mem[96]
        _19103 = mem[(32 * idx) + 128]
        require idx + 1 < mem[96]
        _19106 = mem[(32 * idx + 1) + 128]
        if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
            revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
        if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
            if not mem[(32 * idx) + 140 len 20]:
                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
            if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
            if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                if not mem[(32 * idx) + 140 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                _19139 = mem[64]
                mem[mem[64] + 32] = address(mem[(32 * idx) + 128])
                mem[mem[64] + 52] = address(_19106)
                _19167 = mem[64]
                mem[mem[64]] = 40
                mem[64] = mem[64] + 72
                _19169 = sha3(mem[_19167 + 32 len mem[_19167]])
                mem[_19139 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                mem[_19139 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                mem[_19139 + 125] = _19169
                mem[_19139 + 157] = stor4[cd[68]].field_512
                mem[_19139 + 72] = 85
                if address(_19103) == address(_19106):
                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                if address(_19103) < address(_19106):
                    if not address(_19103):
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    mem[_19139 + 221] = address(_19103)
                    mem[_19139 + 241] = address(_19106)
                    mem[_19139 + 189] = 40
                    mem[_19139 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_19139 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                    mem[_19139 + 314] = sha3(address(_19103), address(_19106))
                    mem[_19139 + 346] = stor4[cd[68]].field_512
                    mem[_19139 + 261] = 85
                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_19103), address(_19106)), stor4[cd[68]].field_512)))
                    staticcall address(sha3(0, stor4[cd[68]].field_0, sha3(address(_19103), address(_19106)), stor4[cd[68]].field_512)).getReserves() with:
                            gas gas_remaining wei
                else:
                    if not address(_19106):
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    mem[_19139 + 221] = address(_19106)
                    mem[_19139 + 241] = address(_19103)
                    mem[_19139 + 189] = 40
                    mem[_19139 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_19139 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                    mem[_19139 + 314] = sha3(address(_19106), address(_19103))
                    mem[_19139 + 346] = stor4[cd[68]].field_512
                    mem[_19139 + 261] = 85
                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_19106), address(_19103)), stor4[cd[68]].field_512)))
                    staticcall address(sha3(0, stor4[cd[68]].field_0, sha3(address(_19106), address(_19103)), stor4[cd[68]].field_512)).getReserves() with:
                            gas gas_remaining wei
                mem[_19139 + 378 len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = _19139 + ceil32(return_data.size) + 378
            else:
                if not mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                _19140 = mem[64]
                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + 128])
                mem[mem[64] + 52] = address(_19103)
                _19171 = mem[64]
                mem[mem[64]] = 40
                mem[64] = mem[64] + 72
                _19173 = sha3(mem[_19171 + 32 len mem[_19171]])
                mem[_19140 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                mem[_19140 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                mem[_19140 + 125] = _19173
                mem[_19140 + 157] = stor4[cd[68]].field_512
                mem[_19140 + 72] = 85
                if address(_19103) == address(_19106):
                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                if address(_19103) < address(_19106):
                    if not address(_19103):
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    mem[_19140 + 221] = address(_19103)
                    mem[_19140 + 241] = address(_19106)
                    mem[_19140 + 189] = 40
                    mem[_19140 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_19140 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                    mem[_19140 + 314] = sha3(address(_19103), address(_19106))
                    mem[_19140 + 346] = stor4[cd[68]].field_512
                    mem[_19140 + 261] = 85
                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_19103), address(_19106)), stor4[cd[68]].field_512)))
                    staticcall address(sha3(0, stor4[cd[68]].field_0, sha3(address(_19103), address(_19106)), stor4[cd[68]].field_512)).getReserves() with:
                            gas gas_remaining wei
                else:
                    if not address(_19106):
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    mem[_19140 + 221] = address(_19106)
                    mem[_19140 + 241] = address(_19103)
                    mem[_19140 + 189] = 40
                    mem[_19140 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_19140 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                    mem[_19140 + 314] = sha3(address(_19106), address(_19103))
                    mem[_19140 + 346] = stor4[cd[68]].field_512
                    mem[_19140 + 261] = 85
                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_19106), address(_19103)), stor4[cd[68]].field_512)))
                    staticcall address(sha3(0, stor4[cd[68]].field_0, sha3(address(_19106), address(_19103)), stor4[cd[68]].field_512)).getReserves() with:
                            gas gas_remaining wei
                mem[_19140 + 378 len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = _19140 + ceil32(return_data.size) + 378
            require return_data.size >= 96
            require ext_call.return_data[0] == ext_call.return_data[18 len 14]
            require ext_call.return_data[32] == ext_call.return_data[50 len 14]
            require ext_call.return_data[64] == ext_call.return_data[92 len 4]
            require idx < mem[(32 * ('cd', 36).length) + 128]
            if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] <= 0:
                revert with 0, 'PancakeLibrary: INSUFFICIENT_INPUT_AMOUNT'
            if address(_19103) == address(_19103):
                if ext_call.return_data[18 len 14] <= 0:
                    revert with 0, 'PancakeLibrary: INSUFFICIENT_LIQUIDITY'
                if ext_call.return_data[50 len 14] <= 0:
                    revert with 0, 'PancakeLibrary: INSUFFICIENT_LIQUIDITY'
                if not stor4[cd[68]].field_256:
                    if ext_call.return_data[50 len 14]:
                        require ext_call.return_data[50 len 14]
                        if 0 / ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                    if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                        revert with 0, 'ds-math-mul-overflow'
                    if 10000 * ext_call.return_data[18 len 14] < 10000 * ext_call.return_data[18 len 14]:
                        revert with 0, 'ds-math-add-overflow'
                    require 10000 * ext_call.return_data[18 len 14]
                    require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                    mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = 0 / 10000 * ext_call.return_data[18 len 14]
                else:
                    require stor4[cd[68]].field_256
                    if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256 / stor4[cd[68]].field_256 != mem[(32 * idx) + (32 * ('cd', 36).length) + 160]:
                        revert with 0, 'ds-math-mul-overflow'
                    if not ext_call.return_data[50 len 14]:
                        if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256) < 10000 * ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256)
                        require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                        mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = 0 / (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256)
                    else:
                        require ext_call.return_data[50 len 14]
                        if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256:
                            revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256) < 10000 * ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256)
                        require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                        mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256 * ext_call.return_data[50 len 14] / (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256)
            else:
                if ext_call.return_data[50 len 14] <= 0:
                    revert with 0, 'PancakeLibrary: INSUFFICIENT_LIQUIDITY'
                if ext_call.return_data[18 len 14] <= 0:
                    revert with 0, 'PancakeLibrary: INSUFFICIENT_LIQUIDITY'
                if not stor4[cd[68]].field_256:
                    if ext_call.return_data[18 len 14]:
                        require ext_call.return_data[18 len 14]
                        if 0 / ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                    if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                        revert with 0, 'ds-math-mul-overflow'
                    if 10000 * ext_call.return_data[50 len 14] < 10000 * ext_call.return_data[50 len 14]:
                        revert with 0, 'ds-math-add-overflow'
                    require 10000 * ext_call.return_data[50 len 14]
                    require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                    mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = 0 / 10000 * ext_call.return_data[50 len 14]
                else:
                    require stor4[cd[68]].field_256
                    if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256 / stor4[cd[68]].field_256 != mem[(32 * idx) + (32 * ('cd', 36).length) + 160]:
                        revert with 0, 'ds-math-mul-overflow'
                    if not ext_call.return_data[18 len 14]:
                        if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256) < 10000 * ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256)
                        require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                        mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = 0 / (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256)
                    else:
                        require ext_call.return_data[18 len 14]
                        if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256:
                            revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256) < 10000 * ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256)
                        require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                        mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256 * ext_call.return_data[18 len 14] / (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256)
        else:
            if not mem[(32 * idx + 1) + 140 len 20]:
                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
            if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
            if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                if not mem[(32 * idx) + 140 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                _19141 = mem[64]
                mem[mem[64] + 32] = address(mem[(32 * idx) + 128])
                mem[mem[64] + 52] = address(_19106)
                _19175 = mem[64]
                mem[mem[64]] = 40
                mem[64] = mem[64] + 72
                _19177 = sha3(mem[_19175 + 32 len mem[_19175]])
                mem[_19141 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                mem[_19141 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                mem[_19141 + 125] = _19177
                mem[_19141 + 157] = stor4[cd[68]].field_512
                mem[_19141 + 72] = 85
                if address(_19103) == address(_19106):
                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                if address(_19103) < address(_19106):
                    if not address(_19103):
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    mem[_19141 + 221] = address(_19103)
                    mem[_19141 + 241] = address(_19106)
                    mem[_19141 + 189] = 40
                    mem[_19141 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_19141 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                    mem[_19141 + 314] = sha3(address(_19103), address(_19106))
                    mem[_19141 + 346] = stor4[cd[68]].field_512
                    mem[_19141 + 261] = 85
                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_19103), address(_19106)), stor4[cd[68]].field_512)))
                    staticcall address(sha3(0, stor4[cd[68]].field_0, sha3(address(_19103), address(_19106)), stor4[cd[68]].field_512)).getReserves() with:
                            gas gas_remaining wei
                else:
                    if not address(_19106):
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    mem[_19141 + 221] = address(_19106)
                    mem[_19141 + 241] = address(_19103)
                    mem[_19141 + 189] = 40
                    mem[_19141 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_19141 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                    mem[_19141 + 314] = sha3(address(_19106), address(_19103))
                    mem[_19141 + 346] = stor4[cd[68]].field_512
                    mem[_19141 + 261] = 85
                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_19106), address(_19103)), stor4[cd[68]].field_512)))
                    staticcall address(sha3(0, stor4[cd[68]].field_0, sha3(address(_19106), address(_19103)), stor4[cd[68]].field_512)).getReserves() with:
                            gas gas_remaining wei
                mem[_19141 + 378 len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = _19141 + ceil32(return_data.size) + 378
            else:
                if not mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                _19142 = mem[64]
                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + 128])
                mem[mem[64] + 52] = address(_19103)
                _19179 = mem[64]
                mem[mem[64]] = 40
                mem[64] = mem[64] + 72
                _19181 = sha3(mem[_19179 + 32 len mem[_19179]])
                mem[_19142 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                mem[_19142 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                mem[_19142 + 125] = _19181
                mem[_19142 + 157] = stor4[cd[68]].field_512
                mem[_19142 + 72] = 85
                if address(_19103) == address(_19106):
                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                if address(_19103) < address(_19106):
                    if not address(_19103):
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    mem[_19142 + 221] = address(_19103)
                    mem[_19142 + 241] = address(_19106)
                    mem[_19142 + 189] = 40
                    mem[_19142 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_19142 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                    mem[_19142 + 314] = sha3(address(_19103), address(_19106))
                    mem[_19142 + 346] = stor4[cd[68]].field_512
                    mem[_19142 + 261] = 85
                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_19103), address(_19106)), stor4[cd[68]].field_512)))
                    staticcall address(sha3(0, stor4[cd[68]].field_0, sha3(address(_19103), address(_19106)), stor4[cd[68]].field_512)).getReserves() with:
                            gas gas_remaining wei
                else:
                    if not address(_19106):
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    mem[_19142 + 221] = address(_19106)
                    mem[_19142 + 241] = address(_19103)
                    mem[_19142 + 189] = 40
                    mem[_19142 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                    mem[_19142 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                    mem[_19142 + 314] = sha3(address(_19106), address(_19103))
                    mem[_19142 + 346] = stor4[cd[68]].field_512
                    mem[_19142 + 261] = 85
                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_19106), address(_19103)), stor4[cd[68]].field_512)))
                    staticcall address(sha3(0, stor4[cd[68]].field_0, sha3(address(_19106), address(_19103)), stor4[cd[68]].field_512)).getReserves() with:
                            gas gas_remaining wei
                mem[_19142 + 378 len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = _19142 + ceil32(return_data.size) + 378
            require return_data.size >= 96
            require ext_call.return_data[0] == ext_call.return_data[18 len 14]
            require ext_call.return_data[32] == ext_call.return_data[50 len 14]
            require ext_call.return_data[64] == ext_call.return_data[92 len 4]
            require idx < mem[(32 * ('cd', 36).length) + 128]
            if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] <= 0:
                revert with 0, 'PancakeLibrary: INSUFFICIENT_INPUT_AMOUNT'
            if address(_19103) == address(_19106):
                if ext_call.return_data[18 len 14] <= 0:
                    revert with 0, 'PancakeLibrary: INSUFFICIENT_LIQUIDITY'
                if ext_call.return_data[50 len 14] <= 0:
                    revert with 0, 'PancakeLibrary: INSUFFICIENT_LIQUIDITY'
                if not stor4[cd[68]].field_256:
                    if ext_call.return_data[50 len 14]:
                        require ext_call.return_data[50 len 14]
                        if 0 / ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                    if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                        revert with 0, 'ds-math-mul-overflow'
                    if 10000 * ext_call.return_data[18 len 14] < 10000 * ext_call.return_data[18 len 14]:
                        revert with 0, 'ds-math-add-overflow'
                    require 10000 * ext_call.return_data[18 len 14]
                    require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                    mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = 0 / 10000 * ext_call.return_data[18 len 14]
                else:
                    require stor4[cd[68]].field_256
                    if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256 / stor4[cd[68]].field_256 != mem[(32 * idx) + (32 * ('cd', 36).length) + 160]:
                        revert with 0, 'ds-math-mul-overflow'
                    if not ext_call.return_data[50 len 14]:
                        if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256) < 10000 * ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256)
                        require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                        mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = 0 / (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256)
                    else:
                        require ext_call.return_data[50 len 14]
                        if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256:
                            revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[18 len 14] / 10000 != ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256) < 10000 * ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256)
                        require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                        mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256 * ext_call.return_data[50 len 14] / (10000 * ext_call.return_data[18 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256)
            else:
                if ext_call.return_data[50 len 14] <= 0:
                    revert with 0, 'PancakeLibrary: INSUFFICIENT_LIQUIDITY'
                if ext_call.return_data[18 len 14] <= 0:
                    revert with 0, 'PancakeLibrary: INSUFFICIENT_LIQUIDITY'
                if not stor4[cd[68]].field_256:
                    if ext_call.return_data[18 len 14]:
                        require ext_call.return_data[18 len 14]
                        if 0 / ext_call.return_data[18 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                    if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                        revert with 0, 'ds-math-mul-overflow'
                    if 10000 * ext_call.return_data[50 len 14] < 10000 * ext_call.return_data[50 len 14]:
                        revert with 0, 'ds-math-add-overflow'
                    require 10000 * ext_call.return_data[50 len 14]
                    require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                    mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = 0 / 10000 * ext_call.return_data[50 len 14]
                else:
                    require stor4[cd[68]].field_256
                    if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256 / stor4[cd[68]].field_256 != mem[(32 * idx) + (32 * ('cd', 36).length) + 160]:
                        revert with 0, 'ds-math-mul-overflow'
                    if not ext_call.return_data[18 len 14]:
                        if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256) < 10000 * ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256)
                        require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                        mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = 0 / (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256)
                    else:
                        require ext_call.return_data[18 len 14]
                        if mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256:
                            revert with 0, 'ds-math-mul-overflow'
                        if 10000 * ext_call.return_data[50 len 14] / 10000 != ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-mul-overflow'
                        if (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256) < 10000 * ext_call.return_data[50 len 14]:
                            revert with 0, 'ds-math-add-overflow'
                        require (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256)
                        require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                        mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160] = mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256 * ext_call.return_data[18 len 14] / (10000 * ext_call.return_data[50 len 14]) + (mem[(32 * idx) + (32 * ('cd', 36).length) + 160] * stor4[cd[68]].field_256)
        idx = idx + 1
        continue 
    require 0 < ('cd', 36).length
    require ('cd', 36)[0] == address(('cd', 36)[0])
    require 0 < ('cd', 36).length
    require ('cd', 36)[0] == address(('cd', 36)[0])
    require 1 < ('cd', 36).length
    require ('cd', 36)[1] == address(('cd', 36)[1])
    mem[0] = cd[68]
    mem[32] = 4
    if address(('cd', 36)[0]) == address(('cd', 36)[1]):
        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
    if address(('cd', 36)[0]) < address(('cd', 36)[1]):
        if not address(('cd', 36)[0]):
            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
        _19347 = mem[64]
        mem[mem[64] + 32] = address(('cd', 36)[0])
        mem[mem[64] + 52] = address(('cd', 36)[1])
        _19425 = mem[64]
        mem[mem[64]] = 40
        mem[64] = mem[64] + 72
        _19427 = sha3(mem[_19425 + 32 len mem[_19425]])
        mem[_19347 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
        mem[_19347 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
        mem[_19347 + 125] = _19427
        mem[_19347 + 157] = stor4[cd[68]].field_512
        mem[_19347 + 72] = 85
        require 0 < mem[(32 * ('cd', 36).length) + 128]
        _19499 = mem[(32 * ('cd', 36).length) + 160]
        mem[_19347 + 225] = address(sha3(0, stor4[cd[68]].field_0, _19427, stor4[cd[68]].field_512))
        mem[_19347 + 257] = _19499
        mem[_19347 + 189] = 68
        mem[_19347 + 221 len 4] = unknown_0xa9059cbb(?????)
        mem[_19347 + 289 len 96] = 0, address(sha3(0, stor4[cd[68]].field_0, _19427, stor4[cd[68]].field_512)), _19499, mem[_19347 + 289 len 28]
        mem[_19347 + 357] = 0
        call address(('cd', 36)[0]) with:
             gas gas_remaining wei
            args mem[_19347 + 293 len 64]
        if not return_data.size:
            if not ext_call.success:
                revert with 0, 'TransferHelper: TRANSFER_FAILED'
            if not mem[96]:
                mem[64] = _19347 + (32 * ('cd', 36).length) + 321
                mem[_19347 + 289] = ('cd', 36).length
                mem[_19347 + 321 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
                mem[_19347 + (32 * ('cd', 36).length) + 321] = 0
                idx = 0
                while idx < ('cd', 36).length - 1:
                    require idx < mem[_19347 + 289]
                    _55825 = mem[(32 * idx) + _19347 + 321]
                    require idx + 1 < mem[_19347 + 289]
                    _55890 = mem[(32 * idx + 1) + _19347 + 321]
                    if mem[(32 * idx) + _19347 + 333 len 20] == mem[(32 * idx + 1) + _19347 + 333 len 20]:
                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                    if mem[(32 * idx) + _19347 + 333 len 20] < mem[(32 * idx + 1) + _19347 + 333 len 20]:
                        if not mem[(32 * idx) + _19347 + 333 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                        _56281 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                        if mem[(32 * idx) + _19347 + 333 len 20] == mem[(32 * idx) + _19347 + 333 len 20]:
                            if idx >= mem[_19347 + 289] - 2:
                                mem[0] = cd[68]
                                mem[32] = 4
                                if mem[(32 * idx) + _19347 + 333 len 20] == mem[(32 * idx + 1) + _19347 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx) + _19347 + 333 len 20] < mem[(32 * idx + 1) + _19347 + 333 len 20]:
                                    if not mem[(32 * idx) + _19347 + 333 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58315 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx) + _19347 + 321])
                                    mem[mem[64] + 52] = address(_55890)
                                    _60305 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _60307 = sha3(mem[_60305 + 32 len mem[_60305]])
                                    mem[_58315 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58315 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58315 + 125] = _60307
                                    mem[_58315 + 157] = stor4[cd[68]].field_512
                                    mem[_58315 + 72] = 85
                                    mem[_58315 + 189] = 0
                                    mem[64] = _58315 + 221
                                    mem[_58315 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58315 + 225] = 0
                                    mem[_58315 + 257] = _56281
                                    mem[_58315 + 289] = msg.sender
                                    mem[_58315 + 321] = 128
                                    mem[_58315 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58315 + 385] = mem[s + _58315 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60307, stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, _60307, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56281, msg.sender, 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _19347 + 333 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58316 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19347 + 321])
                                    mem[mem[64] + 52] = address(_55825)
                                    _60309 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _60311 = sha3(mem[_60309 + 32 len mem[_60309]])
                                    mem[_58316 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58316 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58316 + 125] = _60311
                                    mem[_58316 + 157] = stor4[cd[68]].field_512
                                    mem[_58316 + 72] = 85
                                    mem[_58316 + 189] = 0
                                    mem[64] = _58316 + 221
                                    mem[_58316 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58316 + 225] = 0
                                    mem[_58316 + 257] = _56281
                                    mem[_58316 + 289] = msg.sender
                                    mem[_58316 + 321] = 128
                                    mem[_58316 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58316 + 385] = mem[s + _58316 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60311, stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, _60311, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56281, msg.sender, 128, 0
                            else:
                                require idx + 2 < mem[_19347 + 289]
                                _56665 = mem[(32 * idx + 2) + _19347 + 321]
                                mem[0] = cd[68]
                                mem[32] = 4
                                if mem[(32 * idx + 1) + _19347 + 333 len 20] == mem[(32 * idx + 2) + _19347 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx + 1) + _19347 + 333 len 20] < mem[(32 * idx + 2) + _19347 + 333 len 20]:
                                    if not mem[(32 * idx + 1) + _19347 + 333 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58313 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19347 + 321])
                                    mem[mem[64] + 52] = address(_56665)
                                    _60297 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _60299 = sha3(mem[_60297 + 32 len mem[_60297]])
                                    mem[_58313 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58313 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58313 + 125] = _60299
                                    mem[_58313 + 157] = stor4[cd[68]].field_512
                                    mem[_58313 + 72] = 85
                                    mem[0] = cd[68]
                                    mem[32] = 4
                                    if address(_55825) == address(_55890):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_55825) < address(_55890):
                                        if not address(_55825):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58313 + 221] = address(_55825)
                                        mem[_58313 + 241] = address(_55890)
                                        mem[_58313 + 189] = 40
                                        mem[_58313 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58313 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58313 + 314] = sha3(address(_55825), address(_55890))
                                        mem[_58313 + 346] = stor4[cd[68]].field_512
                                        mem[_58313 + 261] = 85
                                        mem[_58313 + 378] = 0
                                        mem[64] = _58313 + 410
                                        mem[_58313 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58313 + 414] = 0
                                        mem[_58313 + 446] = _56281
                                        mem[_58313 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60299, stor4[cd[68]].field_512))
                                        mem[_58313 + 510] = 128
                                        mem[_58313 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58313 + 574] = mem[s + _58313 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55825), address(_55890)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55825), address(_55890)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _56281, address(sha3(0, stor4[cd[68]].field_0, _60299, stor4[cd[68]].field_512)), 128, 0
                                    else:
                                        if not address(_55890):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58313 + 221] = address(_55890)
                                        mem[_58313 + 241] = address(_55825)
                                        mem[_58313 + 189] = 40
                                        mem[_58313 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58313 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58313 + 314] = sha3(address(_55890), address(_55825))
                                        mem[_58313 + 346] = stor4[cd[68]].field_512
                                        mem[_58313 + 261] = 85
                                        mem[_58313 + 378] = 0
                                        mem[64] = _58313 + 410
                                        mem[_58313 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58313 + 414] = 0
                                        mem[_58313 + 446] = _56281
                                        mem[_58313 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60299, stor4[cd[68]].field_512))
                                        mem[_58313 + 510] = 128
                                        mem[_58313 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58313 + 574] = mem[s + _58313 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55890), address(_55825)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55890), address(_55825)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _56281, address(sha3(0, stor4[cd[68]].field_0, _60299, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _19347 + 333 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58314 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19347 + 321])
                                    mem[mem[64] + 52] = address(_55890)
                                    _60301 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _60303 = sha3(mem[_60301 + 32 len mem[_60301]])
                                    mem[_58314 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58314 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58314 + 125] = _60303
                                    mem[_58314 + 157] = stor4[cd[68]].field_512
                                    mem[_58314 + 72] = 85
                                    mem[0] = cd[68]
                                    mem[32] = 4
                                    if address(_55825) == address(_55890):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_55825) < address(_55890):
                                        if not address(_55825):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58314 + 221] = address(_55825)
                                        mem[_58314 + 241] = address(_55890)
                                        mem[_58314 + 189] = 40
                                        mem[_58314 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58314 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58314 + 314] = sha3(address(_55825), address(_55890))
                                        mem[_58314 + 346] = stor4[cd[68]].field_512
                                        mem[_58314 + 261] = 85
                                        mem[_58314 + 378] = 0
                                        mem[64] = _58314 + 410
                                        mem[_58314 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58314 + 414] = 0
                                        mem[_58314 + 446] = _56281
                                        mem[_58314 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60303, stor4[cd[68]].field_512))
                                        mem[_58314 + 510] = 128
                                        mem[_58314 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58314 + 574] = mem[s + _58314 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55825), address(_55890)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55825), address(_55890)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _56281, address(sha3(0, stor4[cd[68]].field_0, _60303, stor4[cd[68]].field_512)), 128, 0
                                    else:
                                        if not address(_55890):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58314 + 221] = address(_55890)
                                        mem[_58314 + 241] = address(_55825)
                                        mem[_58314 + 189] = 40
                                        mem[_58314 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58314 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58314 + 314] = sha3(address(_55890), address(_55825))
                                        mem[_58314 + 346] = stor4[cd[68]].field_512
                                        mem[_58314 + 261] = 85
                                        mem[_58314 + 378] = 0
                                        mem[64] = _58314 + 410
                                        mem[_58314 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58314 + 414] = 0
                                        mem[_58314 + 446] = _56281
                                        mem[_58314 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60303, stor4[cd[68]].field_512))
                                        mem[_58314 + 510] = 128
                                        mem[_58314 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58314 + 574] = mem[s + _58314 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55890), address(_55825)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55890), address(_55825)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _56281, address(sha3(0, stor4[cd[68]].field_0, _60303, stor4[cd[68]].field_512)), 128, 0
                        else:
                            if idx >= mem[_19347 + 289] - 2:
                                mem[0] = cd[68]
                                mem[32] = 4
                                if mem[(32 * idx) + _19347 + 333 len 20] == mem[(32 * idx + 1) + _19347 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx) + _19347 + 333 len 20] < mem[(32 * idx + 1) + _19347 + 333 len 20]:
                                    if not mem[(32 * idx) + _19347 + 333 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58319 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx) + _19347 + 321])
                                    mem[mem[64] + 52] = address(_55890)
                                    _60321 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _60323 = sha3(mem[_60321 + 32 len mem[_60321]])
                                    mem[_58319 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58319 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58319 + 125] = _60323
                                    mem[_58319 + 157] = stor4[cd[68]].field_512
                                    mem[_58319 + 72] = 85
                                    mem[_58319 + 189] = 0
                                    mem[64] = _58319 + 221
                                    mem[_58319 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58319 + 225] = _56281
                                    mem[_58319 + 257] = 0
                                    mem[_58319 + 289] = msg.sender
                                    mem[_58319 + 321] = 128
                                    mem[_58319 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58319 + 385] = mem[s + _58319 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60323, stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, _60323, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56281, 0, msg.sender, 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _19347 + 333 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58320 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19347 + 321])
                                    mem[mem[64] + 52] = address(_55825)
                                    _60325 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _60327 = sha3(mem[_60325 + 32 len mem[_60325]])
                                    mem[_58320 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58320 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58320 + 125] = _60327
                                    mem[_58320 + 157] = stor4[cd[68]].field_512
                                    mem[_58320 + 72] = 85
                                    mem[_58320 + 189] = 0
                                    mem[64] = _58320 + 221
                                    mem[_58320 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58320 + 225] = _56281
                                    mem[_58320 + 257] = 0
                                    mem[_58320 + 289] = msg.sender
                                    mem[_58320 + 321] = 128
                                    mem[_58320 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58320 + 385] = mem[s + _58320 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60327, stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, _60327, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56281, 0, msg.sender, 128, 0
                            else:
                                require idx + 2 < mem[_19347 + 289]
                                _56666 = mem[(32 * idx + 2) + _19347 + 321]
                                mem[0] = cd[68]
                                mem[32] = 4
                                if mem[(32 * idx + 1) + _19347 + 333 len 20] == mem[(32 * idx + 2) + _19347 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx + 1) + _19347 + 333 len 20] < mem[(32 * idx + 2) + _19347 + 333 len 20]:
                                    if not mem[(32 * idx + 1) + _19347 + 333 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58317 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19347 + 321])
                                    mem[mem[64] + 52] = address(_56666)
                                    _60313 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _60315 = sha3(mem[_60313 + 32 len mem[_60313]])
                                    mem[_58317 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58317 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58317 + 125] = _60315
                                    mem[_58317 + 157] = stor4[cd[68]].field_512
                                    mem[_58317 + 72] = 85
                                    mem[0] = cd[68]
                                    mem[32] = 4
                                    if address(_55825) == address(_55890):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_55825) < address(_55890):
                                        if not address(_55825):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58317 + 221] = address(_55825)
                                        mem[_58317 + 241] = address(_55890)
                                        mem[_58317 + 189] = 40
                                        mem[_58317 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58317 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58317 + 314] = sha3(address(_55825), address(_55890))
                                        mem[_58317 + 346] = stor4[cd[68]].field_512
                                        mem[_58317 + 261] = 85
                                        mem[_58317 + 378] = 0
                                        mem[64] = _58317 + 410
                                        mem[_58317 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58317 + 414] = _56281
                                        mem[_58317 + 446] = 0
                                        mem[_58317 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60315, stor4[cd[68]].field_512))
                                        mem[_58317 + 510] = 128
                                        mem[_58317 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58317 + 574] = mem[s + _58317 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55825), address(_55890)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55825), address(_55890)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _56281, 0, address(sha3(0, stor4[cd[68]].field_0, _60315, stor4[cd[68]].field_512)), 128, 0
                                    else:
                                        if not address(_55890):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58317 + 221] = address(_55890)
                                        mem[_58317 + 241] = address(_55825)
                                        mem[_58317 + 189] = 40
                                        mem[_58317 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58317 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58317 + 314] = sha3(address(_55890), address(_55825))
                                        mem[_58317 + 346] = stor4[cd[68]].field_512
                                        mem[_58317 + 261] = 85
                                        mem[_58317 + 378] = 0
                                        mem[64] = _58317 + 410
                                        mem[_58317 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58317 + 414] = _56281
                                        mem[_58317 + 446] = 0
                                        mem[_58317 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60315, stor4[cd[68]].field_512))
                                        mem[_58317 + 510] = 128
                                        mem[_58317 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58317 + 574] = mem[s + _58317 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55890), address(_55825)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55890), address(_55825)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _56281, 0, address(sha3(0, stor4[cd[68]].field_0, _60315, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _19347 + 333 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58318 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19347 + 321])
                                    mem[mem[64] + 52] = address(_55890)
                                    _60317 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _60319 = sha3(mem[_60317 + 32 len mem[_60317]])
                                    mem[_58318 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58318 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58318 + 125] = _60319
                                    mem[_58318 + 157] = stor4[cd[68]].field_512
                                    mem[_58318 + 72] = 85
                                    mem[0] = cd[68]
                                    mem[32] = 4
                                    if address(_55825) == address(_55890):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_55825) < address(_55890):
                                        if not address(_55825):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58318 + 221] = address(_55825)
                                        mem[_58318 + 241] = address(_55890)
                                        mem[_58318 + 189] = 40
                                        mem[_58318 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58318 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58318 + 314] = sha3(address(_55825), address(_55890))
                                        mem[_58318 + 346] = stor4[cd[68]].field_512
                                        mem[_58318 + 261] = 85
                                        mem[_58318 + 378] = 0
                                        mem[64] = _58318 + 410
                                        mem[_58318 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58318 + 414] = _56281
                                        mem[_58318 + 446] = 0
                                        mem[_58318 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60319, stor4[cd[68]].field_512))
                                        mem[_58318 + 510] = 128
                                        mem[_58318 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58318 + 574] = mem[s + _58318 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55825), address(_55890)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55825), address(_55890)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _56281, 0, address(sha3(0, stor4[cd[68]].field_0, _60319, stor4[cd[68]].field_512)), 128, 0
                                    else:
                                        if not address(_55890):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58318 + 221] = address(_55890)
                                        mem[_58318 + 241] = address(_55825)
                                        mem[_58318 + 189] = 40
                                        mem[_58318 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58318 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58318 + 314] = sha3(address(_55890), address(_55825))
                                        mem[_58318 + 346] = stor4[cd[68]].field_512
                                        mem[_58318 + 261] = 85
                                        mem[_58318 + 378] = 0
                                        mem[64] = _58318 + 410
                                        mem[_58318 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58318 + 414] = _56281
                                        mem[_58318 + 446] = 0
                                        mem[_58318 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60319, stor4[cd[68]].field_512))
                                        mem[_58318 + 510] = 128
                                        mem[_58318 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58318 + 574] = mem[s + _58318 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55890), address(_55825)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55890), address(_55825)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _56281, 0, address(sha3(0, stor4[cd[68]].field_0, _60319, stor4[cd[68]].field_512)), 128, 0
                    else:
                        if not mem[(32 * idx + 1) + _19347 + 333 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                        _56283 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                        if mem[(32 * idx) + _19347 + 333 len 20] == mem[(32 * idx + 1) + _19347 + 333 len 20]:
                            if idx >= mem[_19347 + 289] - 2:
                                mem[0] = cd[68]
                                mem[32] = 4
                                if mem[(32 * idx) + _19347 + 333 len 20] == mem[(32 * idx + 1) + _19347 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx) + _19347 + 333 len 20] < mem[(32 * idx + 1) + _19347 + 333 len 20]:
                                    if not mem[(32 * idx) + _19347 + 333 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58323 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx) + _19347 + 321])
                                    mem[mem[64] + 52] = address(_55890)
                                    _60337 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _60339 = sha3(mem[_60337 + 32 len mem[_60337]])
                                    mem[_58323 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58323 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58323 + 125] = _60339
                                    mem[_58323 + 157] = stor4[cd[68]].field_512
                                    mem[_58323 + 72] = 85
                                    mem[_58323 + 189] = 0
                                    mem[64] = _58323 + 221
                                    mem[_58323 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58323 + 225] = 0
                                    mem[_58323 + 257] = _56283
                                    mem[_58323 + 289] = msg.sender
                                    mem[_58323 + 321] = 128
                                    mem[_58323 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58323 + 385] = mem[s + _58323 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60339, stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, _60339, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56283, msg.sender, 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _19347 + 333 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58324 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19347 + 321])
                                    mem[mem[64] + 52] = address(_55825)
                                    _60341 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _60343 = sha3(mem[_60341 + 32 len mem[_60341]])
                                    mem[_58324 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58324 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58324 + 125] = _60343
                                    mem[_58324 + 157] = stor4[cd[68]].field_512
                                    mem[_58324 + 72] = 85
                                    mem[_58324 + 189] = 0
                                    mem[64] = _58324 + 221
                                    mem[_58324 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58324 + 225] = 0
                                    mem[_58324 + 257] = _56283
                                    mem[_58324 + 289] = msg.sender
                                    mem[_58324 + 321] = 128
                                    mem[_58324 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58324 + 385] = mem[s + _58324 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60343, stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, _60343, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56283, msg.sender, 128, 0
                            else:
                                require idx + 2 < mem[_19347 + 289]
                                _56667 = mem[(32 * idx + 2) + _19347 + 321]
                                mem[0] = cd[68]
                                mem[32] = 4
                                if mem[(32 * idx + 1) + _19347 + 333 len 20] == mem[(32 * idx + 2) + _19347 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx + 1) + _19347 + 333 len 20] < mem[(32 * idx + 2) + _19347 + 333 len 20]:
                                    if not mem[(32 * idx + 1) + _19347 + 333 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58321 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19347 + 321])
                                    mem[mem[64] + 52] = address(_56667)
                                    _60329 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _60331 = sha3(mem[_60329 + 32 len mem[_60329]])
                                    mem[_58321 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58321 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58321 + 125] = _60331
                                    mem[_58321 + 157] = stor4[cd[68]].field_512
                                    mem[_58321 + 72] = 85
                                    mem[0] = cd[68]
                                    mem[32] = 4
                                    if address(_55825) == address(_55890):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_55825) < address(_55890):
                                        if not address(_55825):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58321 + 221] = address(_55825)
                                        mem[_58321 + 241] = address(_55890)
                                        mem[_58321 + 189] = 40
                                        mem[_58321 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58321 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58321 + 314] = sha3(address(_55825), address(_55890))
                                        mem[_58321 + 346] = stor4[cd[68]].field_512
                                        mem[_58321 + 261] = 85
                                        mem[_58321 + 378] = 0
                                        mem[64] = _58321 + 410
                                        mem[_58321 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58321 + 414] = 0
                                        mem[_58321 + 446] = _56283
                                        mem[_58321 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60331, stor4[cd[68]].field_512))
                                        mem[_58321 + 510] = 128
                                        mem[_58321 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58321 + 574] = mem[s + _58321 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55825), address(_55890)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55825), address(_55890)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _56283, address(sha3(0, stor4[cd[68]].field_0, _60331, stor4[cd[68]].field_512)), 128, 0
                                    else:
                                        if not address(_55890):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58321 + 221] = address(_55890)
                                        mem[_58321 + 241] = address(_55825)
                                        mem[_58321 + 189] = 40
                                        mem[_58321 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58321 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58321 + 314] = sha3(address(_55890), address(_55825))
                                        mem[_58321 + 346] = stor4[cd[68]].field_512
                                        mem[_58321 + 261] = 85
                                        mem[_58321 + 378] = 0
                                        mem[64] = _58321 + 410
                                        mem[_58321 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58321 + 414] = 0
                                        mem[_58321 + 446] = _56283
                                        mem[_58321 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60331, stor4[cd[68]].field_512))
                                        mem[_58321 + 510] = 128
                                        mem[_58321 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58321 + 574] = mem[s + _58321 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55890), address(_55825)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55890), address(_55825)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _56283, address(sha3(0, stor4[cd[68]].field_0, _60331, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _19347 + 333 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58322 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19347 + 321])
                                    mem[mem[64] + 52] = address(_55890)
                                    _60333 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _60335 = sha3(mem[_60333 + 32 len mem[_60333]])
                                    mem[_58322 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58322 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58322 + 125] = _60335
                                    mem[_58322 + 157] = stor4[cd[68]].field_512
                                    mem[_58322 + 72] = 85
                                    mem[0] = cd[68]
                                    mem[32] = 4
                                    if address(_55825) == address(_55890):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_55825) < address(_55890):
                                        if not address(_55825):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58322 + 221] = address(_55825)
                                        mem[_58322 + 241] = address(_55890)
                                        mem[_58322 + 189] = 40
                                        mem[_58322 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58322 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58322 + 314] = sha3(address(_55825), address(_55890))
                                        mem[_58322 + 346] = stor4[cd[68]].field_512
                                        mem[_58322 + 261] = 85
                                        mem[_58322 + 378] = 0
                                        mem[64] = _58322 + 410
                                        mem[_58322 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58322 + 414] = 0
                                        mem[_58322 + 446] = _56283
                                        mem[_58322 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60335, stor4[cd[68]].field_512))
                                        mem[_58322 + 510] = 128
                                        mem[_58322 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58322 + 574] = mem[s + _58322 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55825), address(_55890)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55825), address(_55890)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _56283, address(sha3(0, stor4[cd[68]].field_0, _60335, stor4[cd[68]].field_512)), 128, 0
                                    else:
                                        if not address(_55890):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58322 + 221] = address(_55890)
                                        mem[_58322 + 241] = address(_55825)
                                        mem[_58322 + 189] = 40
                                        mem[_58322 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58322 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58322 + 314] = sha3(address(_55890), address(_55825))
                                        mem[_58322 + 346] = stor4[cd[68]].field_512
                                        mem[_58322 + 261] = 85
                                        mem[_58322 + 378] = 0
                                        mem[64] = _58322 + 410
                                        mem[_58322 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58322 + 414] = 0
                                        mem[_58322 + 446] = _56283
                                        mem[_58322 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60335, stor4[cd[68]].field_512))
                                        mem[_58322 + 510] = 128
                                        mem[_58322 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58322 + 574] = mem[s + _58322 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55890), address(_55825)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55890), address(_55825)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _56283, address(sha3(0, stor4[cd[68]].field_0, _60335, stor4[cd[68]].field_512)), 128, 0
                        else:
                            if idx >= mem[_19347 + 289] - 2:
                                mem[0] = cd[68]
                                mem[32] = 4
                                if mem[(32 * idx) + _19347 + 333 len 20] == mem[(32 * idx + 1) + _19347 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx) + _19347 + 333 len 20] < mem[(32 * idx + 1) + _19347 + 333 len 20]:
                                    if not mem[(32 * idx) + _19347 + 333 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58327 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx) + _19347 + 321])
                                    mem[mem[64] + 52] = address(_55890)
                                    _60353 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _60355 = sha3(mem[_60353 + 32 len mem[_60353]])
                                    mem[_58327 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58327 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58327 + 125] = _60355
                                    mem[_58327 + 157] = stor4[cd[68]].field_512
                                    mem[_58327 + 72] = 85
                                    mem[_58327 + 189] = 0
                                    mem[64] = _58327 + 221
                                    mem[_58327 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58327 + 225] = _56283
                                    mem[_58327 + 257] = 0
                                    mem[_58327 + 289] = msg.sender
                                    mem[_58327 + 321] = 128
                                    mem[_58327 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58327 + 385] = mem[s + _58327 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60355, stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, _60355, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56283, 0, msg.sender, 128, 0
                                else:
                                    if not mem[(32 * idx + 1) + _19347 + 333 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58328 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19347 + 321])
                                    mem[mem[64] + 52] = address(_55825)
                                    _60357 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _60359 = sha3(mem[_60357 + 32 len mem[_60357]])
                                    mem[_58328 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58328 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58328 + 125] = _60359
                                    mem[_58328 + 157] = stor4[cd[68]].field_512
                                    mem[_58328 + 72] = 85
                                    mem[_58328 + 189] = 0
                                    mem[64] = _58328 + 221
                                    mem[_58328 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58328 + 225] = _56283
                                    mem[_58328 + 257] = 0
                                    mem[_58328 + 289] = msg.sender
                                    mem[_58328 + 321] = 128
                                    mem[_58328 + 353] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58328 + 385] = mem[s + _58328 + 221]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60359, stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, _60359, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56283, 0, msg.sender, 128, 0
                            else:
                                require idx + 2 < mem[_19347 + 289]
                                _56668 = mem[(32 * idx + 2) + _19347 + 321]
                                mem[0] = cd[68]
                                mem[32] = 4
                                if mem[(32 * idx + 1) + _19347 + 333 len 20] == mem[(32 * idx + 2) + _19347 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if mem[(32 * idx + 1) + _19347 + 333 len 20] < mem[(32 * idx + 2) + _19347 + 333 len 20]:
                                    if not mem[(32 * idx + 1) + _19347 + 333 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58325 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19347 + 321])
                                    mem[mem[64] + 52] = address(_56668)
                                    _60345 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _60347 = sha3(mem[_60345 + 32 len mem[_60345]])
                                    mem[_58325 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58325 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58325 + 125] = _60347
                                    mem[_58325 + 157] = stor4[cd[68]].field_512
                                    mem[_58325 + 72] = 85
                                    mem[0] = cd[68]
                                    mem[32] = 4
                                    if address(_55825) == address(_55890):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_55825) < address(_55890):
                                        if not address(_55825):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58325 + 221] = address(_55825)
                                        mem[_58325 + 241] = address(_55890)
                                        mem[_58325 + 189] = 40
                                        mem[_58325 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58325 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58325 + 314] = sha3(address(_55825), address(_55890))
                                        mem[_58325 + 346] = stor4[cd[68]].field_512
                                        mem[_58325 + 261] = 85
                                        mem[_58325 + 378] = 0
                                        mem[64] = _58325 + 410
                                        mem[_58325 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58325 + 414] = _56283
                                        mem[_58325 + 446] = 0
                                        mem[_58325 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60347, stor4[cd[68]].field_512))
                                        mem[_58325 + 510] = 128
                                        mem[_58325 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58325 + 574] = mem[s + _58325 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55825), address(_55890)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55825), address(_55890)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _56283, 0, address(sha3(0, stor4[cd[68]].field_0, _60347, stor4[cd[68]].field_512)), 128, 0
                                    else:
                                        if not address(_55890):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58325 + 221] = address(_55890)
                                        mem[_58325 + 241] = address(_55825)
                                        mem[_58325 + 189] = 40
                                        mem[_58325 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58325 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58325 + 314] = sha3(address(_55890), address(_55825))
                                        mem[_58325 + 346] = stor4[cd[68]].field_512
                                        mem[_58325 + 261] = 85
                                        mem[_58325 + 378] = 0
                                        mem[64] = _58325 + 410
                                        mem[_58325 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58325 + 414] = _56283
                                        mem[_58325 + 446] = 0
                                        mem[_58325 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60347, stor4[cd[68]].field_512))
                                        mem[_58325 + 510] = 128
                                        mem[_58325 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58325 + 574] = mem[s + _58325 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55890), address(_55825)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55890), address(_55825)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _56283, 0, address(sha3(0, stor4[cd[68]].field_0, _60347, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not mem[(32 * idx + 2) + _19347 + 333 len 20]:
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    _58326 = mem[64]
                                    mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19347 + 321])
                                    mem[mem[64] + 52] = address(_55890)
                                    _60349 = mem[64]
                                    mem[mem[64]] = 40
                                    mem[64] = mem[64] + 72
                                    _60351 = sha3(mem[_60349 + 32 len mem[_60349]])
                                    mem[_58326 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58326 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58326 + 125] = _60351
                                    mem[_58326 + 157] = stor4[cd[68]].field_512
                                    mem[_58326 + 72] = 85
                                    mem[0] = cd[68]
                                    mem[32] = 4
                                    if address(_55825) == address(_55890):
                                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                    if address(_55825) < address(_55890):
                                        if not address(_55825):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58326 + 221] = address(_55825)
                                        mem[_58326 + 241] = address(_55890)
                                        mem[_58326 + 189] = 40
                                        mem[_58326 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58326 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58326 + 314] = sha3(address(_55825), address(_55890))
                                        mem[_58326 + 346] = stor4[cd[68]].field_512
                                        mem[_58326 + 261] = 85
                                        mem[_58326 + 378] = 0
                                        mem[64] = _58326 + 410
                                        mem[_58326 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58326 + 414] = _56283
                                        mem[_58326 + 446] = 0
                                        mem[_58326 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60351, stor4[cd[68]].field_512))
                                        mem[_58326 + 510] = 128
                                        mem[_58326 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58326 + 574] = mem[s + _58326 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55825), address(_55890)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55825), address(_55890)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _56283, 0, address(sha3(0, stor4[cd[68]].field_0, _60351, stor4[cd[68]].field_512)), 128, 0
                                    else:
                                        if not address(_55890):
                                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                        mem[_58326 + 221] = address(_55890)
                                        mem[_58326 + 241] = address(_55825)
                                        mem[_58326 + 189] = 40
                                        mem[_58326 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                        mem[_58326 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                        mem[_58326 + 314] = sha3(address(_55890), address(_55825))
                                        mem[_58326 + 346] = stor4[cd[68]].field_512
                                        mem[_58326 + 261] = 85
                                        mem[_58326 + 378] = 0
                                        mem[64] = _58326 + 410
                                        mem[_58326 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_58326 + 414] = _56283
                                        mem[_58326 + 446] = 0
                                        mem[_58326 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60351, stor4[cd[68]].field_512))
                                        mem[_58326 + 510] = 128
                                        mem[_58326 + 542] = 0
                                        s = 0
                                        while s < 0:
                                            mem[s + _58326 + 574] = mem[s + _58326 + 410]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55890), address(_55825)), stor4[cd[68]].field_512)))
                                        call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55890), address(_55825)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _56283, 0, address(sha3(0, stor4[cd[68]].field_0, _60351, stor4[cd[68]].field_512)), 128, 0
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    continue 
                mem[mem[64]] = 32
                _55953 = mem[(32 * ('cd', 36).length) + 128]
                mem[mem[64] + 32] = mem[(32 * ('cd', 36).length) + 128]
                mem[mem[64] + 64 len 32 * _55953] = mem[(32 * ('cd', 36).length) + 160 len 32 * _55953]
                return 32, mem[mem[64] + 32 len (32 * _55953) + 32]
            require mem[96] >= 32
            require mem[128] == bool(mem[128])
            if not mem[128]:
                revert with 0, 'TransferHelper: TRANSFER_FAILED'
            mem[64] = _19347 + (32 * ('cd', 36).length) + 321
            mem[_19347 + 289] = ('cd', 36).length
            mem[_19347 + 321 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
            mem[_19347 + (32 * ('cd', 36).length) + 321] = 0
            idx = 0
            while idx < ('cd', 36).length - 1:
                require idx < mem[_19347 + 289]
                _55827 = mem[(32 * idx) + _19347 + 321]
                require idx + 1 < mem[_19347 + 289]
                _55892 = mem[(32 * idx + 1) + _19347 + 321]
                if mem[(32 * idx) + _19347 + 333 len 20] == mem[(32 * idx + 1) + _19347 + 333 len 20]:
                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                if mem[(32 * idx) + _19347 + 333 len 20] < mem[(32 * idx + 1) + _19347 + 333 len 20]:
                    if not mem[(32 * idx) + _19347 + 333 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                    _56285 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                    if mem[(32 * idx) + _19347 + 333 len 20] == mem[(32 * idx) + _19347 + 333 len 20]:
                        if idx >= mem[_19347 + 289] - 2:
                            mem[0] = cd[68]
                            mem[32] = 4
                            if mem[(32 * idx) + _19347 + 333 len 20] == mem[(32 * idx + 1) + _19347 + 333 len 20]:
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if mem[(32 * idx) + _19347 + 333 len 20] < mem[(32 * idx + 1) + _19347 + 333 len 20]:
                                if not mem[(32 * idx) + _19347 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58331 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _19347 + 321])
                                mem[mem[64] + 52] = address(_55892)
                                _60369 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _60371 = sha3(mem[_60369 + 32 len mem[_60369]])
                                mem[_58331 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58331 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58331 + 125] = _60371
                                mem[_58331 + 157] = stor4[cd[68]].field_512
                                mem[_58331 + 72] = 85
                                mem[_58331 + 189] = 0
                                mem[64] = _58331 + 221
                                mem[_58331 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58331 + 225] = 0
                                mem[_58331 + 257] = _56285
                                mem[_58331 + 289] = msg.sender
                                mem[_58331 + 321] = 128
                                mem[_58331 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58331 + 385] = mem[s + _58331 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60371, stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, _60371, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _56285, msg.sender, 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _19347 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58332 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19347 + 321])
                                mem[mem[64] + 52] = address(_55827)
                                _60373 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _60375 = sha3(mem[_60373 + 32 len mem[_60373]])
                                mem[_58332 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58332 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58332 + 125] = _60375
                                mem[_58332 + 157] = stor4[cd[68]].field_512
                                mem[_58332 + 72] = 85
                                mem[_58332 + 189] = 0
                                mem[64] = _58332 + 221
                                mem[_58332 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58332 + 225] = 0
                                mem[_58332 + 257] = _56285
                                mem[_58332 + 289] = msg.sender
                                mem[_58332 + 321] = 128
                                mem[_58332 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58332 + 385] = mem[s + _58332 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60375, stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, _60375, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _56285, msg.sender, 128, 0
                        else:
                            require idx + 2 < mem[_19347 + 289]
                            _56669 = mem[(32 * idx + 2) + _19347 + 321]
                            mem[0] = cd[68]
                            mem[32] = 4
                            if mem[(32 * idx + 1) + _19347 + 333 len 20] == mem[(32 * idx + 2) + _19347 + 333 len 20]:
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if mem[(32 * idx + 1) + _19347 + 333 len 20] < mem[(32 * idx + 2) + _19347 + 333 len 20]:
                                if not mem[(32 * idx + 1) + _19347 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58329 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19347 + 321])
                                mem[mem[64] + 52] = address(_56669)
                                _60361 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _60363 = sha3(mem[_60361 + 32 len mem[_60361]])
                                mem[_58329 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58329 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58329 + 125] = _60363
                                mem[_58329 + 157] = stor4[cd[68]].field_512
                                mem[_58329 + 72] = 85
                                mem[0] = cd[68]
                                mem[32] = 4
                                if address(_55827) == address(_55892):
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_55827) < address(_55892):
                                    if not address(_55827):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58329 + 221] = address(_55827)
                                    mem[_58329 + 241] = address(_55892)
                                    mem[_58329 + 189] = 40
                                    mem[_58329 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58329 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58329 + 314] = sha3(address(_55827), address(_55892))
                                    mem[_58329 + 346] = stor4[cd[68]].field_512
                                    mem[_58329 + 261] = 85
                                    mem[_58329 + 378] = 0
                                    mem[64] = _58329 + 410
                                    mem[_58329 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58329 + 414] = 0
                                    mem[_58329 + 446] = _56285
                                    mem[_58329 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60363, stor4[cd[68]].field_512))
                                    mem[_58329 + 510] = 128
                                    mem[_58329 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58329 + 574] = mem[s + _58329 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55827), address(_55892)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55827), address(_55892)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56285, address(sha3(0, stor4[cd[68]].field_0, _60363, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not address(_55892):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58329 + 221] = address(_55892)
                                    mem[_58329 + 241] = address(_55827)
                                    mem[_58329 + 189] = 40
                                    mem[_58329 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58329 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58329 + 314] = sha3(address(_55892), address(_55827))
                                    mem[_58329 + 346] = stor4[cd[68]].field_512
                                    mem[_58329 + 261] = 85
                                    mem[_58329 + 378] = 0
                                    mem[64] = _58329 + 410
                                    mem[_58329 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58329 + 414] = 0
                                    mem[_58329 + 446] = _56285
                                    mem[_58329 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60363, stor4[cd[68]].field_512))
                                    mem[_58329 + 510] = 128
                                    mem[_58329 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58329 + 574] = mem[s + _58329 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55892), address(_55827)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55892), address(_55827)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56285, address(sha3(0, stor4[cd[68]].field_0, _60363, stor4[cd[68]].field_512)), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _19347 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58330 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19347 + 321])
                                mem[mem[64] + 52] = address(_55892)
                                _60365 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _60367 = sha3(mem[_60365 + 32 len mem[_60365]])
                                mem[_58330 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58330 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58330 + 125] = _60367
                                mem[_58330 + 157] = stor4[cd[68]].field_512
                                mem[_58330 + 72] = 85
                                mem[0] = cd[68]
                                mem[32] = 4
                                if address(_55827) == address(_55892):
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_55827) < address(_55892):
                                    if not address(_55827):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58330 + 221] = address(_55827)
                                    mem[_58330 + 241] = address(_55892)
                                    mem[_58330 + 189] = 40
                                    mem[_58330 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58330 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58330 + 314] = sha3(address(_55827), address(_55892))
                                    mem[_58330 + 346] = stor4[cd[68]].field_512
                                    mem[_58330 + 261] = 85
                                    mem[_58330 + 378] = 0
                                    mem[64] = _58330 + 410
                                    mem[_58330 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58330 + 414] = 0
                                    mem[_58330 + 446] = _56285
                                    mem[_58330 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60367, stor4[cd[68]].field_512))
                                    mem[_58330 + 510] = 128
                                    mem[_58330 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58330 + 574] = mem[s + _58330 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55827), address(_55892)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55827), address(_55892)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56285, address(sha3(0, stor4[cd[68]].field_0, _60367, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not address(_55892):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58330 + 221] = address(_55892)
                                    mem[_58330 + 241] = address(_55827)
                                    mem[_58330 + 189] = 40
                                    mem[_58330 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58330 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58330 + 314] = sha3(address(_55892), address(_55827))
                                    mem[_58330 + 346] = stor4[cd[68]].field_512
                                    mem[_58330 + 261] = 85
                                    mem[_58330 + 378] = 0
                                    mem[64] = _58330 + 410
                                    mem[_58330 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58330 + 414] = 0
                                    mem[_58330 + 446] = _56285
                                    mem[_58330 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60367, stor4[cd[68]].field_512))
                                    mem[_58330 + 510] = 128
                                    mem[_58330 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58330 + 574] = mem[s + _58330 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55892), address(_55827)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55892), address(_55827)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56285, address(sha3(0, stor4[cd[68]].field_0, _60367, stor4[cd[68]].field_512)), 128, 0
                    else:
                        if idx >= mem[_19347 + 289] - 2:
                            mem[0] = cd[68]
                            mem[32] = 4
                            if mem[(32 * idx) + _19347 + 333 len 20] == mem[(32 * idx + 1) + _19347 + 333 len 20]:
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if mem[(32 * idx) + _19347 + 333 len 20] < mem[(32 * idx + 1) + _19347 + 333 len 20]:
                                if not mem[(32 * idx) + _19347 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58335 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _19347 + 321])
                                mem[mem[64] + 52] = address(_55892)
                                _60385 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _60387 = sha3(mem[_60385 + 32 len mem[_60385]])
                                mem[_58335 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58335 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58335 + 125] = _60387
                                mem[_58335 + 157] = stor4[cd[68]].field_512
                                mem[_58335 + 72] = 85
                                mem[_58335 + 189] = 0
                                mem[64] = _58335 + 221
                                mem[_58335 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58335 + 225] = _56285
                                mem[_58335 + 257] = 0
                                mem[_58335 + 289] = msg.sender
                                mem[_58335 + 321] = 128
                                mem[_58335 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58335 + 385] = mem[s + _58335 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60387, stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, _60387, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _56285, 0, msg.sender, 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _19347 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58336 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19347 + 321])
                                mem[mem[64] + 52] = address(_55827)
                                _60389 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _60391 = sha3(mem[_60389 + 32 len mem[_60389]])
                                mem[_58336 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58336 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58336 + 125] = _60391
                                mem[_58336 + 157] = stor4[cd[68]].field_512
                                mem[_58336 + 72] = 85
                                mem[_58336 + 189] = 0
                                mem[64] = _58336 + 221
                                mem[_58336 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58336 + 225] = _56285
                                mem[_58336 + 257] = 0
                                mem[_58336 + 289] = msg.sender
                                mem[_58336 + 321] = 128
                                mem[_58336 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58336 + 385] = mem[s + _58336 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60391, stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, _60391, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _56285, 0, msg.sender, 128, 0
                        else:
                            require idx + 2 < mem[_19347 + 289]
                            _56670 = mem[(32 * idx + 2) + _19347 + 321]
                            mem[0] = cd[68]
                            mem[32] = 4
                            if mem[(32 * idx + 1) + _19347 + 333 len 20] == mem[(32 * idx + 2) + _19347 + 333 len 20]:
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if mem[(32 * idx + 1) + _19347 + 333 len 20] < mem[(32 * idx + 2) + _19347 + 333 len 20]:
                                if not mem[(32 * idx + 1) + _19347 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58333 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19347 + 321])
                                mem[mem[64] + 52] = address(_56670)
                                _60377 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _60379 = sha3(mem[_60377 + 32 len mem[_60377]])
                                mem[_58333 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58333 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58333 + 125] = _60379
                                mem[_58333 + 157] = stor4[cd[68]].field_512
                                mem[_58333 + 72] = 85
                                mem[0] = cd[68]
                                mem[32] = 4
                                if address(_55827) == address(_55892):
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_55827) < address(_55892):
                                    if not address(_55827):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58333 + 221] = address(_55827)
                                    mem[_58333 + 241] = address(_55892)
                                    mem[_58333 + 189] = 40
                                    mem[_58333 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58333 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58333 + 314] = sha3(address(_55827), address(_55892))
                                    mem[_58333 + 346] = stor4[cd[68]].field_512
                                    mem[_58333 + 261] = 85
                                    mem[_58333 + 378] = 0
                                    mem[64] = _58333 + 410
                                    mem[_58333 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58333 + 414] = _56285
                                    mem[_58333 + 446] = 0
                                    mem[_58333 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60379, stor4[cd[68]].field_512))
                                    mem[_58333 + 510] = 128
                                    mem[_58333 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58333 + 574] = mem[s + _58333 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55827), address(_55892)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55827), address(_55892)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56285, 0, address(sha3(0, stor4[cd[68]].field_0, _60379, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not address(_55892):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58333 + 221] = address(_55892)
                                    mem[_58333 + 241] = address(_55827)
                                    mem[_58333 + 189] = 40
                                    mem[_58333 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58333 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58333 + 314] = sha3(address(_55892), address(_55827))
                                    mem[_58333 + 346] = stor4[cd[68]].field_512
                                    mem[_58333 + 261] = 85
                                    mem[_58333 + 378] = 0
                                    mem[64] = _58333 + 410
                                    mem[_58333 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58333 + 414] = _56285
                                    mem[_58333 + 446] = 0
                                    mem[_58333 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60379, stor4[cd[68]].field_512))
                                    mem[_58333 + 510] = 128
                                    mem[_58333 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58333 + 574] = mem[s + _58333 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55892), address(_55827)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55892), address(_55827)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56285, 0, address(sha3(0, stor4[cd[68]].field_0, _60379, stor4[cd[68]].field_512)), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _19347 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58334 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19347 + 321])
                                mem[mem[64] + 52] = address(_55892)
                                _60381 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _60383 = sha3(mem[_60381 + 32 len mem[_60381]])
                                mem[_58334 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58334 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58334 + 125] = _60383
                                mem[_58334 + 157] = stor4[cd[68]].field_512
                                mem[_58334 + 72] = 85
                                mem[0] = cd[68]
                                mem[32] = 4
                                if address(_55827) == address(_55892):
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_55827) < address(_55892):
                                    if not address(_55827):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58334 + 221] = address(_55827)
                                    mem[_58334 + 241] = address(_55892)
                                    mem[_58334 + 189] = 40
                                    mem[_58334 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58334 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58334 + 314] = sha3(address(_55827), address(_55892))
                                    mem[_58334 + 346] = stor4[cd[68]].field_512
                                    mem[_58334 + 261] = 85
                                    mem[_58334 + 378] = 0
                                    mem[64] = _58334 + 410
                                    mem[_58334 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58334 + 414] = _56285
                                    mem[_58334 + 446] = 0
                                    mem[_58334 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60383, stor4[cd[68]].field_512))
                                    mem[_58334 + 510] = 128
                                    mem[_58334 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58334 + 574] = mem[s + _58334 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55827), address(_55892)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55827), address(_55892)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56285, 0, address(sha3(0, stor4[cd[68]].field_0, _60383, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not address(_55892):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58334 + 221] = address(_55892)
                                    mem[_58334 + 241] = address(_55827)
                                    mem[_58334 + 189] = 40
                                    mem[_58334 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58334 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58334 + 314] = sha3(address(_55892), address(_55827))
                                    mem[_58334 + 346] = stor4[cd[68]].field_512
                                    mem[_58334 + 261] = 85
                                    mem[_58334 + 378] = 0
                                    mem[64] = _58334 + 410
                                    mem[_58334 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58334 + 414] = _56285
                                    mem[_58334 + 446] = 0
                                    mem[_58334 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60383, stor4[cd[68]].field_512))
                                    mem[_58334 + 510] = 128
                                    mem[_58334 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58334 + 574] = mem[s + _58334 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55892), address(_55827)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55892), address(_55827)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56285, 0, address(sha3(0, stor4[cd[68]].field_0, _60383, stor4[cd[68]].field_512)), 128, 0
                else:
                    if not mem[(32 * idx + 1) + _19347 + 333 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                    _56287 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                    if mem[(32 * idx) + _19347 + 333 len 20] == mem[(32 * idx + 1) + _19347 + 333 len 20]:
                        if idx >= mem[_19347 + 289] - 2:
                            mem[0] = cd[68]
                            mem[32] = 4
                            if mem[(32 * idx) + _19347 + 333 len 20] == mem[(32 * idx + 1) + _19347 + 333 len 20]:
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if mem[(32 * idx) + _19347 + 333 len 20] < mem[(32 * idx + 1) + _19347 + 333 len 20]:
                                if not mem[(32 * idx) + _19347 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58339 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _19347 + 321])
                                mem[mem[64] + 52] = address(_55892)
                                _60401 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _60403 = sha3(mem[_60401 + 32 len mem[_60401]])
                                mem[_58339 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58339 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58339 + 125] = _60403
                                mem[_58339 + 157] = stor4[cd[68]].field_512
                                mem[_58339 + 72] = 85
                                mem[_58339 + 189] = 0
                                mem[64] = _58339 + 221
                                mem[_58339 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58339 + 225] = 0
                                mem[_58339 + 257] = _56287
                                mem[_58339 + 289] = msg.sender
                                mem[_58339 + 321] = 128
                                mem[_58339 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58339 + 385] = mem[s + _58339 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60403, stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, _60403, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _56287, msg.sender, 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _19347 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58340 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19347 + 321])
                                mem[mem[64] + 52] = address(_55827)
                                _60405 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _60407 = sha3(mem[_60405 + 32 len mem[_60405]])
                                mem[_58340 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58340 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58340 + 125] = _60407
                                mem[_58340 + 157] = stor4[cd[68]].field_512
                                mem[_58340 + 72] = 85
                                mem[_58340 + 189] = 0
                                mem[64] = _58340 + 221
                                mem[_58340 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58340 + 225] = 0
                                mem[_58340 + 257] = _56287
                                mem[_58340 + 289] = msg.sender
                                mem[_58340 + 321] = 128
                                mem[_58340 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58340 + 385] = mem[s + _58340 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60407, stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, _60407, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _56287, msg.sender, 128, 0
                        else:
                            require idx + 2 < mem[_19347 + 289]
                            _56671 = mem[(32 * idx + 2) + _19347 + 321]
                            mem[0] = cd[68]
                            mem[32] = 4
                            if mem[(32 * idx + 1) + _19347 + 333 len 20] == mem[(32 * idx + 2) + _19347 + 333 len 20]:
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if mem[(32 * idx + 1) + _19347 + 333 len 20] < mem[(32 * idx + 2) + _19347 + 333 len 20]:
                                if not mem[(32 * idx + 1) + _19347 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58337 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19347 + 321])
                                mem[mem[64] + 52] = address(_56671)
                                _60393 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _60395 = sha3(mem[_60393 + 32 len mem[_60393]])
                                mem[_58337 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58337 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58337 + 125] = _60395
                                mem[_58337 + 157] = stor4[cd[68]].field_512
                                mem[_58337 + 72] = 85
                                mem[0] = cd[68]
                                mem[32] = 4
                                if address(_55827) == address(_55892):
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_55827) < address(_55892):
                                    if not address(_55827):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58337 + 221] = address(_55827)
                                    mem[_58337 + 241] = address(_55892)
                                    mem[_58337 + 189] = 40
                                    mem[_58337 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58337 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58337 + 314] = sha3(address(_55827), address(_55892))
                                    mem[_58337 + 346] = stor4[cd[68]].field_512
                                    mem[_58337 + 261] = 85
                                    mem[_58337 + 378] = 0
                                    mem[64] = _58337 + 410
                                    mem[_58337 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58337 + 414] = 0
                                    mem[_58337 + 446] = _56287
                                    mem[_58337 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60395, stor4[cd[68]].field_512))
                                    mem[_58337 + 510] = 128
                                    mem[_58337 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58337 + 574] = mem[s + _58337 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55827), address(_55892)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55827), address(_55892)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56287, address(sha3(0, stor4[cd[68]].field_0, _60395, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not address(_55892):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58337 + 221] = address(_55892)
                                    mem[_58337 + 241] = address(_55827)
                                    mem[_58337 + 189] = 40
                                    mem[_58337 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58337 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58337 + 314] = sha3(address(_55892), address(_55827))
                                    mem[_58337 + 346] = stor4[cd[68]].field_512
                                    mem[_58337 + 261] = 85
                                    mem[_58337 + 378] = 0
                                    mem[64] = _58337 + 410
                                    mem[_58337 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58337 + 414] = 0
                                    mem[_58337 + 446] = _56287
                                    mem[_58337 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60395, stor4[cd[68]].field_512))
                                    mem[_58337 + 510] = 128
                                    mem[_58337 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58337 + 574] = mem[s + _58337 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55892), address(_55827)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55892), address(_55827)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56287, address(sha3(0, stor4[cd[68]].field_0, _60395, stor4[cd[68]].field_512)), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _19347 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58338 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19347 + 321])
                                mem[mem[64] + 52] = address(_55892)
                                _60397 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _60399 = sha3(mem[_60397 + 32 len mem[_60397]])
                                mem[_58338 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58338 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58338 + 125] = _60399
                                mem[_58338 + 157] = stor4[cd[68]].field_512
                                mem[_58338 + 72] = 85
                                mem[0] = cd[68]
                                mem[32] = 4
                                if address(_55827) == address(_55892):
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_55827) < address(_55892):
                                    if not address(_55827):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58338 + 221] = address(_55827)
                                    mem[_58338 + 241] = address(_55892)
                                    mem[_58338 + 189] = 40
                                    mem[_58338 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58338 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58338 + 314] = sha3(address(_55827), address(_55892))
                                    mem[_58338 + 346] = stor4[cd[68]].field_512
                                    mem[_58338 + 261] = 85
                                    mem[_58338 + 378] = 0
                                    mem[64] = _58338 + 410
                                    mem[_58338 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58338 + 414] = 0
                                    mem[_58338 + 446] = _56287
                                    mem[_58338 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60399, stor4[cd[68]].field_512))
                                    mem[_58338 + 510] = 128
                                    mem[_58338 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58338 + 574] = mem[s + _58338 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55827), address(_55892)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55827), address(_55892)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56287, address(sha3(0, stor4[cd[68]].field_0, _60399, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not address(_55892):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58338 + 221] = address(_55892)
                                    mem[_58338 + 241] = address(_55827)
                                    mem[_58338 + 189] = 40
                                    mem[_58338 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58338 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58338 + 314] = sha3(address(_55892), address(_55827))
                                    mem[_58338 + 346] = stor4[cd[68]].field_512
                                    mem[_58338 + 261] = 85
                                    mem[_58338 + 378] = 0
                                    mem[64] = _58338 + 410
                                    mem[_58338 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58338 + 414] = 0
                                    mem[_58338 + 446] = _56287
                                    mem[_58338 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60399, stor4[cd[68]].field_512))
                                    mem[_58338 + 510] = 128
                                    mem[_58338 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58338 + 574] = mem[s + _58338 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55892), address(_55827)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55892), address(_55827)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56287, address(sha3(0, stor4[cd[68]].field_0, _60399, stor4[cd[68]].field_512)), 128, 0
                    else:
                        if idx >= mem[_19347 + 289] - 2:
                            mem[0] = cd[68]
                            mem[32] = 4
                            if mem[(32 * idx) + _19347 + 333 len 20] == mem[(32 * idx + 1) + _19347 + 333 len 20]:
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if mem[(32 * idx) + _19347 + 333 len 20] < mem[(32 * idx + 1) + _19347 + 333 len 20]:
                                if not mem[(32 * idx) + _19347 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58343 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _19347 + 321])
                                mem[mem[64] + 52] = address(_55892)
                                _60417 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _60419 = sha3(mem[_60417 + 32 len mem[_60417]])
                                mem[_58343 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58343 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58343 + 125] = _60419
                                mem[_58343 + 157] = stor4[cd[68]].field_512
                                mem[_58343 + 72] = 85
                                mem[_58343 + 189] = 0
                                mem[64] = _58343 + 221
                                mem[_58343 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58343 + 225] = _56287
                                mem[_58343 + 257] = 0
                                mem[_58343 + 289] = msg.sender
                                mem[_58343 + 321] = 128
                                mem[_58343 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58343 + 385] = mem[s + _58343 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60419, stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, _60419, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _56287, 0, msg.sender, 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _19347 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58344 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19347 + 321])
                                mem[mem[64] + 52] = address(_55827)
                                _60421 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _60423 = sha3(mem[_60421 + 32 len mem[_60421]])
                                mem[_58344 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58344 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58344 + 125] = _60423
                                mem[_58344 + 157] = stor4[cd[68]].field_512
                                mem[_58344 + 72] = 85
                                mem[_58344 + 189] = 0
                                mem[64] = _58344 + 221
                                mem[_58344 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58344 + 225] = _56287
                                mem[_58344 + 257] = 0
                                mem[_58344 + 289] = msg.sender
                                mem[_58344 + 321] = 128
                                mem[_58344 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58344 + 385] = mem[s + _58344 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60423, stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, _60423, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _56287, 0, msg.sender, 128, 0
                        else:
                            require idx + 2 < mem[_19347 + 289]
                            _56672 = mem[(32 * idx + 2) + _19347 + 321]
                            mem[0] = cd[68]
                            mem[32] = 4
                            if mem[(32 * idx + 1) + _19347 + 333 len 20] == mem[(32 * idx + 2) + _19347 + 333 len 20]:
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if mem[(32 * idx + 1) + _19347 + 333 len 20] < mem[(32 * idx + 2) + _19347 + 333 len 20]:
                                if not mem[(32 * idx + 1) + _19347 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58341 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19347 + 321])
                                mem[mem[64] + 52] = address(_56672)
                                _60409 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _60411 = sha3(mem[_60409 + 32 len mem[_60409]])
                                mem[_58341 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58341 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58341 + 125] = _60411
                                mem[_58341 + 157] = stor4[cd[68]].field_512
                                mem[_58341 + 72] = 85
                                mem[0] = cd[68]
                                mem[32] = 4
                                if address(_55827) == address(_55892):
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_55827) < address(_55892):
                                    if not address(_55827):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58341 + 221] = address(_55827)
                                    mem[_58341 + 241] = address(_55892)
                                    mem[_58341 + 189] = 40
                                    mem[_58341 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58341 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58341 + 314] = sha3(address(_55827), address(_55892))
                                    mem[_58341 + 346] = stor4[cd[68]].field_512
                                    mem[_58341 + 261] = 85
                                    mem[_58341 + 378] = 0
                                    mem[64] = _58341 + 410
                                    mem[_58341 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58341 + 414] = _56287
                                    mem[_58341 + 446] = 0
                                    mem[_58341 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60411, stor4[cd[68]].field_512))
                                    mem[_58341 + 510] = 128
                                    mem[_58341 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58341 + 574] = mem[s + _58341 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55827), address(_55892)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55827), address(_55892)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56287, 0, address(sha3(0, stor4[cd[68]].field_0, _60411, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not address(_55892):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58341 + 221] = address(_55892)
                                    mem[_58341 + 241] = address(_55827)
                                    mem[_58341 + 189] = 40
                                    mem[_58341 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58341 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58341 + 314] = sha3(address(_55892), address(_55827))
                                    mem[_58341 + 346] = stor4[cd[68]].field_512
                                    mem[_58341 + 261] = 85
                                    mem[_58341 + 378] = 0
                                    mem[64] = _58341 + 410
                                    mem[_58341 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58341 + 414] = _56287
                                    mem[_58341 + 446] = 0
                                    mem[_58341 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60411, stor4[cd[68]].field_512))
                                    mem[_58341 + 510] = 128
                                    mem[_58341 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58341 + 574] = mem[s + _58341 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55892), address(_55827)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55892), address(_55827)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56287, 0, address(sha3(0, stor4[cd[68]].field_0, _60411, stor4[cd[68]].field_512)), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _19347 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58342 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19347 + 321])
                                mem[mem[64] + 52] = address(_55892)
                                _60413 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _60415 = sha3(mem[_60413 + 32 len mem[_60413]])
                                mem[_58342 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58342 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58342 + 125] = _60415
                                mem[_58342 + 157] = stor4[cd[68]].field_512
                                mem[_58342 + 72] = 85
                                mem[0] = cd[68]
                                mem[32] = 4
                                if address(_55827) == address(_55892):
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_55827) < address(_55892):
                                    if not address(_55827):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58342 + 221] = address(_55827)
                                    mem[_58342 + 241] = address(_55892)
                                    mem[_58342 + 189] = 40
                                    mem[_58342 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58342 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58342 + 314] = sha3(address(_55827), address(_55892))
                                    mem[_58342 + 346] = stor4[cd[68]].field_512
                                    mem[_58342 + 261] = 85
                                    mem[_58342 + 378] = 0
                                    mem[64] = _58342 + 410
                                    mem[_58342 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58342 + 414] = _56287
                                    mem[_58342 + 446] = 0
                                    mem[_58342 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60415, stor4[cd[68]].field_512))
                                    mem[_58342 + 510] = 128
                                    mem[_58342 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58342 + 574] = mem[s + _58342 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55827), address(_55892)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55827), address(_55892)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56287, 0, address(sha3(0, stor4[cd[68]].field_0, _60415, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not address(_55892):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58342 + 221] = address(_55892)
                                    mem[_58342 + 241] = address(_55827)
                                    mem[_58342 + 189] = 40
                                    mem[_58342 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58342 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58342 + 314] = sha3(address(_55892), address(_55827))
                                    mem[_58342 + 346] = stor4[cd[68]].field_512
                                    mem[_58342 + 261] = 85
                                    mem[_58342 + 378] = 0
                                    mem[64] = _58342 + 410
                                    mem[_58342 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58342 + 414] = _56287
                                    mem[_58342 + 446] = 0
                                    mem[_58342 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60415, stor4[cd[68]].field_512))
                                    mem[_58342 + 510] = 128
                                    mem[_58342 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58342 + 574] = mem[s + _58342 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55892), address(_55827)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55892), address(_55827)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56287, 0, address(sha3(0, stor4[cd[68]].field_0, _60415, stor4[cd[68]].field_512)), 128, 0
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                idx = idx + 1
                continue 
            mem[mem[64]] = 32
            _55955 = mem[(32 * ('cd', 36).length) + 128]
            mem[mem[64] + 32] = mem[(32 * ('cd', 36).length) + 128]
            mem[mem[64] + 64 len 32 * _55955] = mem[(32 * ('cd', 36).length) + 160 len 32 * _55955]
            return 32, mem[mem[64] + 32 len (32 * _55955) + 32]
        mem[_19347 + 289] = return_data.size
        mem[_19347 + 321 len return_data.size] = ext_call.return_data[0 len return_data.size]
        if not ext_call.success:
            revert with 0, 'TransferHelper: TRANSFER_FAILED'
        if not return_data.size:
            mem[64] = _19347 + ceil32(return_data.size) + (32 * ('cd', 36).length) + 322
            mem[_19347 + ceil32(return_data.size) + 290] = ('cd', 36).length
            mem[_19347 + ceil32(return_data.size) + 322 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
            mem[_19347 + ceil32(return_data.size) + (32 * ('cd', 36).length) + 322] = 0
            idx = 0
            while idx < ('cd', 36).length - 1:
                require idx < mem[_19347 + ceil32(return_data.size) + 290]
                _55829 = mem[(32 * idx) + _19347 + ceil32(return_data.size) + 322]
                require idx + 1 < mem[_19347 + ceil32(return_data.size) + 290]
                _55894 = mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 322]
                if mem[(32 * idx) + _19347 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 334 len 20]:
                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                if mem[(32 * idx) + _19347 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 334 len 20]:
                    if not mem[(32 * idx) + _19347 + ceil32(return_data.size) + 334 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                    _56289 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                    if mem[(32 * idx) + _19347 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx) + _19347 + ceil32(return_data.size) + 334 len 20]:
                        if idx >= mem[_19347 + ceil32(return_data.size) + 290] - 2:
                            mem[0] = cd[68]
                            mem[32] = 4
                            if mem[(32 * idx) + _19347 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if mem[(32 * idx) + _19347 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 334 len 20]:
                                if not mem[(32 * idx) + _19347 + ceil32(return_data.size) + 334 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58347 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _19347 + ceil32(return_data.size) + 322])
                                mem[mem[64] + 52] = address(_55894)
                                _60433 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _60435 = sha3(mem[_60433 + 32 len mem[_60433]])
                                mem[_58347 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58347 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58347 + 125] = _60435
                                mem[_58347 + 157] = stor4[cd[68]].field_512
                                mem[_58347 + 72] = 85
                                mem[_58347 + 189] = 0
                                mem[64] = _58347 + 221
                                mem[_58347 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58347 + 225] = 0
                                mem[_58347 + 257] = _56289
                                mem[_58347 + 289] = msg.sender
                                mem[_58347 + 321] = 128
                                mem[_58347 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58347 + 385] = mem[s + _58347 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60435, stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, _60435, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _56289, msg.sender, 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 334 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58348 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 322])
                                mem[mem[64] + 52] = address(_55829)
                                _60437 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _60439 = sha3(mem[_60437 + 32 len mem[_60437]])
                                mem[_58348 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58348 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58348 + 125] = _60439
                                mem[_58348 + 157] = stor4[cd[68]].field_512
                                mem[_58348 + 72] = 85
                                mem[_58348 + 189] = 0
                                mem[64] = _58348 + 221
                                mem[_58348 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58348 + 225] = 0
                                mem[_58348 + 257] = _56289
                                mem[_58348 + 289] = msg.sender
                                mem[_58348 + 321] = 128
                                mem[_58348 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58348 + 385] = mem[s + _58348 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60439, stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, _60439, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _56289, msg.sender, 128, 0
                        else:
                            require idx + 2 < mem[_19347 + ceil32(return_data.size) + 290]
                            _56673 = mem[(32 * idx + 2) + _19347 + ceil32(return_data.size) + 322]
                            mem[0] = cd[68]
                            mem[32] = 4
                            if mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 2) + _19347 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 2) + _19347 + ceil32(return_data.size) + 334 len 20]:
                                if not mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 334 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58345 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 322])
                                mem[mem[64] + 52] = address(_56673)
                                _60425 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _60427 = sha3(mem[_60425 + 32 len mem[_60425]])
                                mem[_58345 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58345 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58345 + 125] = _60427
                                mem[_58345 + 157] = stor4[cd[68]].field_512
                                mem[_58345 + 72] = 85
                                mem[0] = cd[68]
                                mem[32] = 4
                                if address(_55829) == address(_55894):
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_55829) < address(_55894):
                                    if not address(_55829):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58345 + 221] = address(_55829)
                                    mem[_58345 + 241] = address(_55894)
                                    mem[_58345 + 189] = 40
                                    mem[_58345 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58345 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58345 + 314] = sha3(address(_55829), address(_55894))
                                    mem[_58345 + 346] = stor4[cd[68]].field_512
                                    mem[_58345 + 261] = 85
                                    mem[_58345 + 378] = 0
                                    mem[64] = _58345 + 410
                                    mem[_58345 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58345 + 414] = 0
                                    mem[_58345 + 446] = _56289
                                    mem[_58345 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60427, stor4[cd[68]].field_512))
                                    mem[_58345 + 510] = 128
                                    mem[_58345 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58345 + 574] = mem[s + _58345 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55829), address(_55894)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55829), address(_55894)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56289, address(sha3(0, stor4[cd[68]].field_0, _60427, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not address(_55894):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58345 + 221] = address(_55894)
                                    mem[_58345 + 241] = address(_55829)
                                    mem[_58345 + 189] = 40
                                    mem[_58345 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58345 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58345 + 314] = sha3(address(_55894), address(_55829))
                                    mem[_58345 + 346] = stor4[cd[68]].field_512
                                    mem[_58345 + 261] = 85
                                    mem[_58345 + 378] = 0
                                    mem[64] = _58345 + 410
                                    mem[_58345 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58345 + 414] = 0
                                    mem[_58345 + 446] = _56289
                                    mem[_58345 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60427, stor4[cd[68]].field_512))
                                    mem[_58345 + 510] = 128
                                    mem[_58345 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58345 + 574] = mem[s + _58345 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55894), address(_55829)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55894), address(_55829)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56289, address(sha3(0, stor4[cd[68]].field_0, _60427, stor4[cd[68]].field_512)), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _19347 + ceil32(return_data.size) + 334 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58346 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19347 + ceil32(return_data.size) + 322])
                                mem[mem[64] + 52] = address(_55894)
                                _60429 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _60431 = sha3(mem[_60429 + 32 len mem[_60429]])
                                mem[_58346 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58346 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58346 + 125] = _60431
                                mem[_58346 + 157] = stor4[cd[68]].field_512
                                mem[_58346 + 72] = 85
                                mem[0] = cd[68]
                                mem[32] = 4
                                if address(_55829) == address(_55894):
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_55829) < address(_55894):
                                    if not address(_55829):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58346 + 221] = address(_55829)
                                    mem[_58346 + 241] = address(_55894)
                                    mem[_58346 + 189] = 40
                                    mem[_58346 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58346 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58346 + 314] = sha3(address(_55829), address(_55894))
                                    mem[_58346 + 346] = stor4[cd[68]].field_512
                                    mem[_58346 + 261] = 85
                                    mem[_58346 + 378] = 0
                                    mem[64] = _58346 + 410
                                    mem[_58346 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58346 + 414] = 0
                                    mem[_58346 + 446] = _56289
                                    mem[_58346 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60431, stor4[cd[68]].field_512))
                                    mem[_58346 + 510] = 128
                                    mem[_58346 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58346 + 574] = mem[s + _58346 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55829), address(_55894)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55829), address(_55894)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56289, address(sha3(0, stor4[cd[68]].field_0, _60431, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not address(_55894):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58346 + 221] = address(_55894)
                                    mem[_58346 + 241] = address(_55829)
                                    mem[_58346 + 189] = 40
                                    mem[_58346 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58346 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58346 + 314] = sha3(address(_55894), address(_55829))
                                    mem[_58346 + 346] = stor4[cd[68]].field_512
                                    mem[_58346 + 261] = 85
                                    mem[_58346 + 378] = 0
                                    mem[64] = _58346 + 410
                                    mem[_58346 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58346 + 414] = 0
                                    mem[_58346 + 446] = _56289
                                    mem[_58346 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60431, stor4[cd[68]].field_512))
                                    mem[_58346 + 510] = 128
                                    mem[_58346 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58346 + 574] = mem[s + _58346 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55894), address(_55829)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55894), address(_55829)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56289, address(sha3(0, stor4[cd[68]].field_0, _60431, stor4[cd[68]].field_512)), 128, 0
                    else:
                        if idx >= mem[_19347 + ceil32(return_data.size) + 290] - 2:
                            mem[0] = cd[68]
                            mem[32] = 4
                            if mem[(32 * idx) + _19347 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if mem[(32 * idx) + _19347 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 334 len 20]:
                                if not mem[(32 * idx) + _19347 + ceil32(return_data.size) + 334 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58351 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _19347 + ceil32(return_data.size) + 322])
                                mem[mem[64] + 52] = address(_55894)
                                _60449 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _60451 = sha3(mem[_60449 + 32 len mem[_60449]])
                                mem[_58351 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58351 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58351 + 125] = _60451
                                mem[_58351 + 157] = stor4[cd[68]].field_512
                                mem[_58351 + 72] = 85
                                mem[_58351 + 189] = 0
                                mem[64] = _58351 + 221
                                mem[_58351 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58351 + 225] = _56289
                                mem[_58351 + 257] = 0
                                mem[_58351 + 289] = msg.sender
                                mem[_58351 + 321] = 128
                                mem[_58351 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58351 + 385] = mem[s + _58351 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60451, stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, _60451, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _56289, 0, msg.sender, 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 334 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58352 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 322])
                                mem[mem[64] + 52] = address(_55829)
                                _60453 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _60455 = sha3(mem[_60453 + 32 len mem[_60453]])
                                mem[_58352 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58352 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58352 + 125] = _60455
                                mem[_58352 + 157] = stor4[cd[68]].field_512
                                mem[_58352 + 72] = 85
                                mem[_58352 + 189] = 0
                                mem[64] = _58352 + 221
                                mem[_58352 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58352 + 225] = _56289
                                mem[_58352 + 257] = 0
                                mem[_58352 + 289] = msg.sender
                                mem[_58352 + 321] = 128
                                mem[_58352 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58352 + 385] = mem[s + _58352 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60455, stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, _60455, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _56289, 0, msg.sender, 128, 0
                        else:
                            require idx + 2 < mem[_19347 + ceil32(return_data.size) + 290]
                            _56674 = mem[(32 * idx + 2) + _19347 + ceil32(return_data.size) + 322]
                            mem[0] = cd[68]
                            mem[32] = 4
                            if mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 2) + _19347 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 2) + _19347 + ceil32(return_data.size) + 334 len 20]:
                                if not mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 334 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58349 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 322])
                                mem[mem[64] + 52] = address(_56674)
                                _60441 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _60443 = sha3(mem[_60441 + 32 len mem[_60441]])
                                mem[_58349 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58349 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58349 + 125] = _60443
                                mem[_58349 + 157] = stor4[cd[68]].field_512
                                mem[_58349 + 72] = 85
                                mem[0] = cd[68]
                                mem[32] = 4
                                if address(_55829) == address(_55894):
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_55829) < address(_55894):
                                    if not address(_55829):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58349 + 221] = address(_55829)
                                    mem[_58349 + 241] = address(_55894)
                                    mem[_58349 + 189] = 40
                                    mem[_58349 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58349 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58349 + 314] = sha3(address(_55829), address(_55894))
                                    mem[_58349 + 346] = stor4[cd[68]].field_512
                                    mem[_58349 + 261] = 85
                                    mem[_58349 + 378] = 0
                                    mem[64] = _58349 + 410
                                    mem[_58349 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58349 + 414] = _56289
                                    mem[_58349 + 446] = 0
                                    mem[_58349 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60443, stor4[cd[68]].field_512))
                                    mem[_58349 + 510] = 128
                                    mem[_58349 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58349 + 574] = mem[s + _58349 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55829), address(_55894)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55829), address(_55894)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56289, 0, address(sha3(0, stor4[cd[68]].field_0, _60443, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not address(_55894):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58349 + 221] = address(_55894)
                                    mem[_58349 + 241] = address(_55829)
                                    mem[_58349 + 189] = 40
                                    mem[_58349 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58349 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58349 + 314] = sha3(address(_55894), address(_55829))
                                    mem[_58349 + 346] = stor4[cd[68]].field_512
                                    mem[_58349 + 261] = 85
                                    mem[_58349 + 378] = 0
                                    mem[64] = _58349 + 410
                                    mem[_58349 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58349 + 414] = _56289
                                    mem[_58349 + 446] = 0
                                    mem[_58349 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60443, stor4[cd[68]].field_512))
                                    mem[_58349 + 510] = 128
                                    mem[_58349 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58349 + 574] = mem[s + _58349 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55894), address(_55829)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55894), address(_55829)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56289, 0, address(sha3(0, stor4[cd[68]].field_0, _60443, stor4[cd[68]].field_512)), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _19347 + ceil32(return_data.size) + 334 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58350 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19347 + ceil32(return_data.size) + 322])
                                mem[mem[64] + 52] = address(_55894)
                                _60445 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _60447 = sha3(mem[_60445 + 32 len mem[_60445]])
                                mem[_58350 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58350 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58350 + 125] = _60447
                                mem[_58350 + 157] = stor4[cd[68]].field_512
                                mem[_58350 + 72] = 85
                                mem[0] = cd[68]
                                mem[32] = 4
                                if address(_55829) == address(_55894):
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_55829) < address(_55894):
                                    if not address(_55829):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58350 + 221] = address(_55829)
                                    mem[_58350 + 241] = address(_55894)
                                    mem[_58350 + 189] = 40
                                    mem[_58350 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58350 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58350 + 314] = sha3(address(_55829), address(_55894))
                                    mem[_58350 + 346] = stor4[cd[68]].field_512
                                    mem[_58350 + 261] = 85
                                    mem[_58350 + 378] = 0
                                    mem[64] = _58350 + 410
                                    mem[_58350 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58350 + 414] = _56289
                                    mem[_58350 + 446] = 0
                                    mem[_58350 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60447, stor4[cd[68]].field_512))
                                    mem[_58350 + 510] = 128
                                    mem[_58350 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58350 + 574] = mem[s + _58350 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55829), address(_55894)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55829), address(_55894)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56289, 0, address(sha3(0, stor4[cd[68]].field_0, _60447, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not address(_55894):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58350 + 221] = address(_55894)
                                    mem[_58350 + 241] = address(_55829)
                                    mem[_58350 + 189] = 40
                                    mem[_58350 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58350 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58350 + 314] = sha3(address(_55894), address(_55829))
                                    mem[_58350 + 346] = stor4[cd[68]].field_512
                                    mem[_58350 + 261] = 85
                                    mem[_58350 + 378] = 0
                                    mem[64] = _58350 + 410
                                    mem[_58350 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58350 + 414] = _56289
                                    mem[_58350 + 446] = 0
                                    mem[_58350 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60447, stor4[cd[68]].field_512))
                                    mem[_58350 + 510] = 128
                                    mem[_58350 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58350 + 574] = mem[s + _58350 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55894), address(_55829)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55894), address(_55829)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56289, 0, address(sha3(0, stor4[cd[68]].field_0, _60447, stor4[cd[68]].field_512)), 128, 0
                else:
                    if not mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 334 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                    _56291 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                    if mem[(32 * idx) + _19347 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 334 len 20]:
                        if idx >= mem[_19347 + ceil32(return_data.size) + 290] - 2:
                            mem[0] = cd[68]
                            mem[32] = 4
                            if mem[(32 * idx) + _19347 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if mem[(32 * idx) + _19347 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 334 len 20]:
                                if not mem[(32 * idx) + _19347 + ceil32(return_data.size) + 334 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58355 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _19347 + ceil32(return_data.size) + 322])
                                mem[mem[64] + 52] = address(_55894)
                                _60465 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _60467 = sha3(mem[_60465 + 32 len mem[_60465]])
                                mem[_58355 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58355 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58355 + 125] = _60467
                                mem[_58355 + 157] = stor4[cd[68]].field_512
                                mem[_58355 + 72] = 85
                                mem[_58355 + 189] = 0
                                mem[64] = _58355 + 221
                                mem[_58355 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58355 + 225] = 0
                                mem[_58355 + 257] = _56291
                                mem[_58355 + 289] = msg.sender
                                mem[_58355 + 321] = 128
                                mem[_58355 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58355 + 385] = mem[s + _58355 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60467, stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, _60467, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _56291, msg.sender, 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 334 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58356 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 322])
                                mem[mem[64] + 52] = address(_55829)
                                _60469 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _60471 = sha3(mem[_60469 + 32 len mem[_60469]])
                                mem[_58356 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58356 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58356 + 125] = _60471
                                mem[_58356 + 157] = stor4[cd[68]].field_512
                                mem[_58356 + 72] = 85
                                mem[_58356 + 189] = 0
                                mem[64] = _58356 + 221
                                mem[_58356 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58356 + 225] = 0
                                mem[_58356 + 257] = _56291
                                mem[_58356 + 289] = msg.sender
                                mem[_58356 + 321] = 128
                                mem[_58356 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58356 + 385] = mem[s + _58356 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60471, stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, _60471, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _56291, msg.sender, 128, 0
                        else:
                            require idx + 2 < mem[_19347 + ceil32(return_data.size) + 290]
                            _56675 = mem[(32 * idx + 2) + _19347 + ceil32(return_data.size) + 322]
                            mem[0] = cd[68]
                            mem[32] = 4
                            if mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 2) + _19347 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 2) + _19347 + ceil32(return_data.size) + 334 len 20]:
                                if not mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 334 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58353 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 322])
                                mem[mem[64] + 52] = address(_56675)
                                _60457 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _60459 = sha3(mem[_60457 + 32 len mem[_60457]])
                                mem[_58353 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58353 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58353 + 125] = _60459
                                mem[_58353 + 157] = stor4[cd[68]].field_512
                                mem[_58353 + 72] = 85
                                mem[0] = cd[68]
                                mem[32] = 4
                                if address(_55829) == address(_55894):
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_55829) < address(_55894):
                                    if not address(_55829):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58353 + 221] = address(_55829)
                                    mem[_58353 + 241] = address(_55894)
                                    mem[_58353 + 189] = 40
                                    mem[_58353 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58353 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58353 + 314] = sha3(address(_55829), address(_55894))
                                    mem[_58353 + 346] = stor4[cd[68]].field_512
                                    mem[_58353 + 261] = 85
                                    mem[_58353 + 378] = 0
                                    mem[64] = _58353 + 410
                                    mem[_58353 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58353 + 414] = 0
                                    mem[_58353 + 446] = _56291
                                    mem[_58353 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60459, stor4[cd[68]].field_512))
                                    mem[_58353 + 510] = 128
                                    mem[_58353 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58353 + 574] = mem[s + _58353 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55829), address(_55894)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55829), address(_55894)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56291, address(sha3(0, stor4[cd[68]].field_0, _60459, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not address(_55894):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58353 + 221] = address(_55894)
                                    mem[_58353 + 241] = address(_55829)
                                    mem[_58353 + 189] = 40
                                    mem[_58353 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58353 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58353 + 314] = sha3(address(_55894), address(_55829))
                                    mem[_58353 + 346] = stor4[cd[68]].field_512
                                    mem[_58353 + 261] = 85
                                    mem[_58353 + 378] = 0
                                    mem[64] = _58353 + 410
                                    mem[_58353 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58353 + 414] = 0
                                    mem[_58353 + 446] = _56291
                                    mem[_58353 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60459, stor4[cd[68]].field_512))
                                    mem[_58353 + 510] = 128
                                    mem[_58353 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58353 + 574] = mem[s + _58353 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55894), address(_55829)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55894), address(_55829)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56291, address(sha3(0, stor4[cd[68]].field_0, _60459, stor4[cd[68]].field_512)), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _19347 + ceil32(return_data.size) + 334 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58354 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19347 + ceil32(return_data.size) + 322])
                                mem[mem[64] + 52] = address(_55894)
                                _60461 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _60463 = sha3(mem[_60461 + 32 len mem[_60461]])
                                mem[_58354 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58354 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58354 + 125] = _60463
                                mem[_58354 + 157] = stor4[cd[68]].field_512
                                mem[_58354 + 72] = 85
                                mem[0] = cd[68]
                                mem[32] = 4
                                if address(_55829) == address(_55894):
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_55829) < address(_55894):
                                    if not address(_55829):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58354 + 221] = address(_55829)
                                    mem[_58354 + 241] = address(_55894)
                                    mem[_58354 + 189] = 40
                                    mem[_58354 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58354 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58354 + 314] = sha3(address(_55829), address(_55894))
                                    mem[_58354 + 346] = stor4[cd[68]].field_512
                                    mem[_58354 + 261] = 85
                                    mem[_58354 + 378] = 0
                                    mem[64] = _58354 + 410
                                    mem[_58354 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58354 + 414] = 0
                                    mem[_58354 + 446] = _56291
                                    mem[_58354 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60463, stor4[cd[68]].field_512))
                                    mem[_58354 + 510] = 128
                                    mem[_58354 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58354 + 574] = mem[s + _58354 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55829), address(_55894)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55829), address(_55894)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56291, address(sha3(0, stor4[cd[68]].field_0, _60463, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not address(_55894):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58354 + 221] = address(_55894)
                                    mem[_58354 + 241] = address(_55829)
                                    mem[_58354 + 189] = 40
                                    mem[_58354 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58354 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58354 + 314] = sha3(address(_55894), address(_55829))
                                    mem[_58354 + 346] = stor4[cd[68]].field_512
                                    mem[_58354 + 261] = 85
                                    mem[_58354 + 378] = 0
                                    mem[64] = _58354 + 410
                                    mem[_58354 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58354 + 414] = 0
                                    mem[_58354 + 446] = _56291
                                    mem[_58354 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60463, stor4[cd[68]].field_512))
                                    mem[_58354 + 510] = 128
                                    mem[_58354 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58354 + 574] = mem[s + _58354 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55894), address(_55829)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55894), address(_55829)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56291, address(sha3(0, stor4[cd[68]].field_0, _60463, stor4[cd[68]].field_512)), 128, 0
                    else:
                        if idx >= mem[_19347 + ceil32(return_data.size) + 290] - 2:
                            mem[0] = cd[68]
                            mem[32] = 4
                            if mem[(32 * idx) + _19347 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if mem[(32 * idx) + _19347 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 334 len 20]:
                                if not mem[(32 * idx) + _19347 + ceil32(return_data.size) + 334 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58359 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _19347 + ceil32(return_data.size) + 322])
                                mem[mem[64] + 52] = address(_55894)
                                _60481 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _60483 = sha3(mem[_60481 + 32 len mem[_60481]])
                                mem[_58359 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58359 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58359 + 125] = _60483
                                mem[_58359 + 157] = stor4[cd[68]].field_512
                                mem[_58359 + 72] = 85
                                mem[_58359 + 189] = 0
                                mem[64] = _58359 + 221
                                mem[_58359 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58359 + 225] = _56291
                                mem[_58359 + 257] = 0
                                mem[_58359 + 289] = msg.sender
                                mem[_58359 + 321] = 128
                                mem[_58359 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58359 + 385] = mem[s + _58359 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60483, stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, _60483, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _56291, 0, msg.sender, 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 334 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58360 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 322])
                                mem[mem[64] + 52] = address(_55829)
                                _60485 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _60487 = sha3(mem[_60485 + 32 len mem[_60485]])
                                mem[_58360 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58360 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58360 + 125] = _60487
                                mem[_58360 + 157] = stor4[cd[68]].field_512
                                mem[_58360 + 72] = 85
                                mem[_58360 + 189] = 0
                                mem[64] = _58360 + 221
                                mem[_58360 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58360 + 225] = _56291
                                mem[_58360 + 257] = 0
                                mem[_58360 + 289] = msg.sender
                                mem[_58360 + 321] = 128
                                mem[_58360 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58360 + 385] = mem[s + _58360 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60487, stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, _60487, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _56291, 0, msg.sender, 128, 0
                        else:
                            require idx + 2 < mem[_19347 + ceil32(return_data.size) + 290]
                            _56676 = mem[(32 * idx + 2) + _19347 + ceil32(return_data.size) + 322]
                            mem[0] = cd[68]
                            mem[32] = 4
                            if mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 2) + _19347 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 2) + _19347 + ceil32(return_data.size) + 334 len 20]:
                                if not mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 334 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58357 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 322])
                                mem[mem[64] + 52] = address(_56676)
                                _60473 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _60475 = sha3(mem[_60473 + 32 len mem[_60473]])
                                mem[_58357 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58357 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58357 + 125] = _60475
                                mem[_58357 + 157] = stor4[cd[68]].field_512
                                mem[_58357 + 72] = 85
                                mem[0] = cd[68]
                                mem[32] = 4
                                if address(_55829) == address(_55894):
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_55829) < address(_55894):
                                    if not address(_55829):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58357 + 221] = address(_55829)
                                    mem[_58357 + 241] = address(_55894)
                                    mem[_58357 + 189] = 40
                                    mem[_58357 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58357 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58357 + 314] = sha3(address(_55829), address(_55894))
                                    mem[_58357 + 346] = stor4[cd[68]].field_512
                                    mem[_58357 + 261] = 85
                                    mem[_58357 + 378] = 0
                                    mem[64] = _58357 + 410
                                    mem[_58357 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58357 + 414] = _56291
                                    mem[_58357 + 446] = 0
                                    mem[_58357 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60475, stor4[cd[68]].field_512))
                                    mem[_58357 + 510] = 128
                                    mem[_58357 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58357 + 574] = mem[s + _58357 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55829), address(_55894)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55829), address(_55894)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56291, 0, address(sha3(0, stor4[cd[68]].field_0, _60475, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not address(_55894):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58357 + 221] = address(_55894)
                                    mem[_58357 + 241] = address(_55829)
                                    mem[_58357 + 189] = 40
                                    mem[_58357 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58357 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58357 + 314] = sha3(address(_55894), address(_55829))
                                    mem[_58357 + 346] = stor4[cd[68]].field_512
                                    mem[_58357 + 261] = 85
                                    mem[_58357 + 378] = 0
                                    mem[64] = _58357 + 410
                                    mem[_58357 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58357 + 414] = _56291
                                    mem[_58357 + 446] = 0
                                    mem[_58357 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60475, stor4[cd[68]].field_512))
                                    mem[_58357 + 510] = 128
                                    mem[_58357 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58357 + 574] = mem[s + _58357 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55894), address(_55829)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55894), address(_55829)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56291, 0, address(sha3(0, stor4[cd[68]].field_0, _60475, stor4[cd[68]].field_512)), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _19347 + ceil32(return_data.size) + 334 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58358 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19347 + ceil32(return_data.size) + 322])
                                mem[mem[64] + 52] = address(_55894)
                                _60477 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _60479 = sha3(mem[_60477 + 32 len mem[_60477]])
                                mem[_58358 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58358 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58358 + 125] = _60479
                                mem[_58358 + 157] = stor4[cd[68]].field_512
                                mem[_58358 + 72] = 85
                                mem[0] = cd[68]
                                mem[32] = 4
                                if address(_55829) == address(_55894):
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_55829) < address(_55894):
                                    if not address(_55829):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58358 + 221] = address(_55829)
                                    mem[_58358 + 241] = address(_55894)
                                    mem[_58358 + 189] = 40
                                    mem[_58358 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58358 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58358 + 314] = sha3(address(_55829), address(_55894))
                                    mem[_58358 + 346] = stor4[cd[68]].field_512
                                    mem[_58358 + 261] = 85
                                    mem[_58358 + 378] = 0
                                    mem[64] = _58358 + 410
                                    mem[_58358 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58358 + 414] = _56291
                                    mem[_58358 + 446] = 0
                                    mem[_58358 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60479, stor4[cd[68]].field_512))
                                    mem[_58358 + 510] = 128
                                    mem[_58358 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58358 + 574] = mem[s + _58358 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55829), address(_55894)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55829), address(_55894)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56291, 0, address(sha3(0, stor4[cd[68]].field_0, _60479, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not address(_55894):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58358 + 221] = address(_55894)
                                    mem[_58358 + 241] = address(_55829)
                                    mem[_58358 + 189] = 40
                                    mem[_58358 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58358 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58358 + 314] = sha3(address(_55894), address(_55829))
                                    mem[_58358 + 346] = stor4[cd[68]].field_512
                                    mem[_58358 + 261] = 85
                                    mem[_58358 + 378] = 0
                                    mem[64] = _58358 + 410
                                    mem[_58358 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58358 + 414] = _56291
                                    mem[_58358 + 446] = 0
                                    mem[_58358 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60479, stor4[cd[68]].field_512))
                                    mem[_58358 + 510] = 128
                                    mem[_58358 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58358 + 574] = mem[s + _58358 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55894), address(_55829)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55894), address(_55829)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56291, 0, address(sha3(0, stor4[cd[68]].field_0, _60479, stor4[cd[68]].field_512)), 128, 0
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                idx = idx + 1
                continue 
            mem[mem[64]] = 32
            _55957 = mem[(32 * ('cd', 36).length) + 128]
            mem[mem[64] + 32] = mem[(32 * ('cd', 36).length) + 128]
            mem[mem[64] + 64 len 32 * _55957] = mem[(32 * ('cd', 36).length) + 160 len 32 * _55957]
            return 32, mem[mem[64] + 32 len (32 * _55957) + 32]
        require return_data.size >= 32
        require mem[_19347 + 321] == bool(mem[_19347 + 321])
        if not mem[_19347 + 321]:
            revert with 0, 'TransferHelper: TRANSFER_FAILED'
        mem[64] = _19347 + ceil32(return_data.size) + (32 * ('cd', 36).length) + 322
        mem[_19347 + ceil32(return_data.size) + 290] = ('cd', 36).length
        mem[_19347 + ceil32(return_data.size) + 322 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
        mem[_19347 + ceil32(return_data.size) + (32 * ('cd', 36).length) + 322] = 0
        idx = 0
        while idx < ('cd', 36).length - 1:
            require idx < mem[_19347 + ceil32(return_data.size) + 290]
            _55831 = mem[(32 * idx) + _19347 + ceil32(return_data.size) + 322]
            require idx + 1 < mem[_19347 + ceil32(return_data.size) + 290]
            _55896 = mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 322]
            if mem[(32 * idx) + _19347 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 334 len 20]:
                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
            if mem[(32 * idx) + _19347 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 334 len 20]:
                if not mem[(32 * idx) + _19347 + ceil32(return_data.size) + 334 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                _56293 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                if mem[(32 * idx) + _19347 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx) + _19347 + ceil32(return_data.size) + 334 len 20]:
                    if idx >= mem[_19347 + ceil32(return_data.size) + 290] - 2:
                        mem[0] = cd[68]
                        mem[32] = 4
                        if mem[(32 * idx) + _19347 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 334 len 20]:
                            revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                        if mem[(32 * idx) + _19347 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 334 len 20]:
                            if not mem[(32 * idx) + _19347 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58363 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx) + _19347 + ceil32(return_data.size) + 322])
                            mem[mem[64] + 52] = address(_55896)
                            _60497 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _60499 = sha3(mem[_60497 + 32 len mem[_60497]])
                            mem[_58363 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58363 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58363 + 125] = _60499
                            mem[_58363 + 157] = stor4[cd[68]].field_512
                            mem[_58363 + 72] = 85
                            mem[_58363 + 189] = 0
                            mem[64] = _58363 + 221
                            mem[_58363 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_58363 + 225] = 0
                            mem[_58363 + 257] = _56293
                            mem[_58363 + 289] = msg.sender
                            mem[_58363 + 321] = 128
                            mem[_58363 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _58363 + 385] = mem[s + _58363 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60499, stor4[cd[68]].field_512)))
                            call address(sha3(0, stor4[cd[68]].field_0, _60499, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _56293, msg.sender, 128, 0
                        else:
                            if not mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58364 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 322])
                            mem[mem[64] + 52] = address(_55831)
                            _60501 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _60503 = sha3(mem[_60501 + 32 len mem[_60501]])
                            mem[_58364 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58364 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58364 + 125] = _60503
                            mem[_58364 + 157] = stor4[cd[68]].field_512
                            mem[_58364 + 72] = 85
                            mem[_58364 + 189] = 0
                            mem[64] = _58364 + 221
                            mem[_58364 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_58364 + 225] = 0
                            mem[_58364 + 257] = _56293
                            mem[_58364 + 289] = msg.sender
                            mem[_58364 + 321] = 128
                            mem[_58364 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _58364 + 385] = mem[s + _58364 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60503, stor4[cd[68]].field_512)))
                            call address(sha3(0, stor4[cd[68]].field_0, _60503, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _56293, msg.sender, 128, 0
                    else:
                        require idx + 2 < mem[_19347 + ceil32(return_data.size) + 290]
                        _56677 = mem[(32 * idx + 2) + _19347 + ceil32(return_data.size) + 322]
                        mem[0] = cd[68]
                        mem[32] = 4
                        if mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 2) + _19347 + ceil32(return_data.size) + 334 len 20]:
                            revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                        if mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 2) + _19347 + ceil32(return_data.size) + 334 len 20]:
                            if not mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58361 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 322])
                            mem[mem[64] + 52] = address(_56677)
                            _60489 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _60491 = sha3(mem[_60489 + 32 len mem[_60489]])
                            mem[_58361 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58361 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58361 + 125] = _60491
                            mem[_58361 + 157] = stor4[cd[68]].field_512
                            mem[_58361 + 72] = 85
                            mem[0] = cd[68]
                            mem[32] = 4
                            if address(_55831) == address(_55896):
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if address(_55831) < address(_55896):
                                if not address(_55831):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58361 + 221] = address(_55831)
                                mem[_58361 + 241] = address(_55896)
                                mem[_58361 + 189] = 40
                                mem[_58361 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58361 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58361 + 314] = sha3(address(_55831), address(_55896))
                                mem[_58361 + 346] = stor4[cd[68]].field_512
                                mem[_58361 + 261] = 85
                                mem[_58361 + 378] = 0
                                mem[64] = _58361 + 410
                                mem[_58361 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58361 + 414] = 0
                                mem[_58361 + 446] = _56293
                                mem[_58361 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60491, stor4[cd[68]].field_512))
                                mem[_58361 + 510] = 128
                                mem[_58361 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58361 + 574] = mem[s + _58361 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55831), address(_55896)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55831), address(_55896)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _56293, address(sha3(0, stor4[cd[68]].field_0, _60491, stor4[cd[68]].field_512)), 128, 0
                            else:
                                if not address(_55896):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58361 + 221] = address(_55896)
                                mem[_58361 + 241] = address(_55831)
                                mem[_58361 + 189] = 40
                                mem[_58361 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58361 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58361 + 314] = sha3(address(_55896), address(_55831))
                                mem[_58361 + 346] = stor4[cd[68]].field_512
                                mem[_58361 + 261] = 85
                                mem[_58361 + 378] = 0
                                mem[64] = _58361 + 410
                                mem[_58361 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58361 + 414] = 0
                                mem[_58361 + 446] = _56293
                                mem[_58361 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60491, stor4[cd[68]].field_512))
                                mem[_58361 + 510] = 128
                                mem[_58361 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58361 + 574] = mem[s + _58361 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55896), address(_55831)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55896), address(_55831)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _56293, address(sha3(0, stor4[cd[68]].field_0, _60491, stor4[cd[68]].field_512)), 128, 0
                        else:
                            if not mem[(32 * idx + 2) + _19347 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58362 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19347 + ceil32(return_data.size) + 322])
                            mem[mem[64] + 52] = address(_55896)
                            _60493 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _60495 = sha3(mem[_60493 + 32 len mem[_60493]])
                            mem[_58362 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58362 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58362 + 125] = _60495
                            mem[_58362 + 157] = stor4[cd[68]].field_512
                            mem[_58362 + 72] = 85
                            mem[0] = cd[68]
                            mem[32] = 4
                            if address(_55831) == address(_55896):
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if address(_55831) < address(_55896):
                                if not address(_55831):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58362 + 221] = address(_55831)
                                mem[_58362 + 241] = address(_55896)
                                mem[_58362 + 189] = 40
                                mem[_58362 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58362 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58362 + 314] = sha3(address(_55831), address(_55896))
                                mem[_58362 + 346] = stor4[cd[68]].field_512
                                mem[_58362 + 261] = 85
                                mem[_58362 + 378] = 0
                                mem[64] = _58362 + 410
                                mem[_58362 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58362 + 414] = 0
                                mem[_58362 + 446] = _56293
                                mem[_58362 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60495, stor4[cd[68]].field_512))
                                mem[_58362 + 510] = 128
                                mem[_58362 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58362 + 574] = mem[s + _58362 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55831), address(_55896)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55831), address(_55896)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _56293, address(sha3(0, stor4[cd[68]].field_0, _60495, stor4[cd[68]].field_512)), 128, 0
                            else:
                                if not address(_55896):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58362 + 221] = address(_55896)
                                mem[_58362 + 241] = address(_55831)
                                mem[_58362 + 189] = 40
                                mem[_58362 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58362 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58362 + 314] = sha3(address(_55896), address(_55831))
                                mem[_58362 + 346] = stor4[cd[68]].field_512
                                mem[_58362 + 261] = 85
                                mem[_58362 + 378] = 0
                                mem[64] = _58362 + 410
                                mem[_58362 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58362 + 414] = 0
                                mem[_58362 + 446] = _56293
                                mem[_58362 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60495, stor4[cd[68]].field_512))
                                mem[_58362 + 510] = 128
                                mem[_58362 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58362 + 574] = mem[s + _58362 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55896), address(_55831)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55896), address(_55831)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _56293, address(sha3(0, stor4[cd[68]].field_0, _60495, stor4[cd[68]].field_512)), 128, 0
                else:
                    if idx >= mem[_19347 + ceil32(return_data.size) + 290] - 2:
                        mem[0] = cd[68]
                        mem[32] = 4
                        if mem[(32 * idx) + _19347 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 334 len 20]:
                            revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                        if mem[(32 * idx) + _19347 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 334 len 20]:
                            if not mem[(32 * idx) + _19347 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58367 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx) + _19347 + ceil32(return_data.size) + 322])
                            mem[mem[64] + 52] = address(_55896)
                            _60513 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _60515 = sha3(mem[_60513 + 32 len mem[_60513]])
                            mem[_58367 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58367 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58367 + 125] = _60515
                            mem[_58367 + 157] = stor4[cd[68]].field_512
                            mem[_58367 + 72] = 85
                            mem[_58367 + 189] = 0
                            mem[64] = _58367 + 221
                            mem[_58367 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_58367 + 225] = _56293
                            mem[_58367 + 257] = 0
                            mem[_58367 + 289] = msg.sender
                            mem[_58367 + 321] = 128
                            mem[_58367 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _58367 + 385] = mem[s + _58367 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60515, stor4[cd[68]].field_512)))
                            call address(sha3(0, stor4[cd[68]].field_0, _60515, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _56293, 0, msg.sender, 128, 0
                        else:
                            if not mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58368 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 322])
                            mem[mem[64] + 52] = address(_55831)
                            _60517 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _60519 = sha3(mem[_60517 + 32 len mem[_60517]])
                            mem[_58368 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58368 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58368 + 125] = _60519
                            mem[_58368 + 157] = stor4[cd[68]].field_512
                            mem[_58368 + 72] = 85
                            mem[_58368 + 189] = 0
                            mem[64] = _58368 + 221
                            mem[_58368 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_58368 + 225] = _56293
                            mem[_58368 + 257] = 0
                            mem[_58368 + 289] = msg.sender
                            mem[_58368 + 321] = 128
                            mem[_58368 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _58368 + 385] = mem[s + _58368 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60519, stor4[cd[68]].field_512)))
                            call address(sha3(0, stor4[cd[68]].field_0, _60519, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _56293, 0, msg.sender, 128, 0
                    else:
                        require idx + 2 < mem[_19347 + ceil32(return_data.size) + 290]
                        _56678 = mem[(32 * idx + 2) + _19347 + ceil32(return_data.size) + 322]
                        mem[0] = cd[68]
                        mem[32] = 4
                        if mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 2) + _19347 + ceil32(return_data.size) + 334 len 20]:
                            revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                        if mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 2) + _19347 + ceil32(return_data.size) + 334 len 20]:
                            if not mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58365 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 322])
                            mem[mem[64] + 52] = address(_56678)
                            _60505 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _60507 = sha3(mem[_60505 + 32 len mem[_60505]])
                            mem[_58365 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58365 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58365 + 125] = _60507
                            mem[_58365 + 157] = stor4[cd[68]].field_512
                            mem[_58365 + 72] = 85
                            mem[0] = cd[68]
                            mem[32] = 4
                            if address(_55831) == address(_55896):
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if address(_55831) < address(_55896):
                                if not address(_55831):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58365 + 221] = address(_55831)
                                mem[_58365 + 241] = address(_55896)
                                mem[_58365 + 189] = 40
                                mem[_58365 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58365 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58365 + 314] = sha3(address(_55831), address(_55896))
                                mem[_58365 + 346] = stor4[cd[68]].field_512
                                mem[_58365 + 261] = 85
                                mem[_58365 + 378] = 0
                                mem[64] = _58365 + 410
                                mem[_58365 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58365 + 414] = _56293
                                mem[_58365 + 446] = 0
                                mem[_58365 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60507, stor4[cd[68]].field_512))
                                mem[_58365 + 510] = 128
                                mem[_58365 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58365 + 574] = mem[s + _58365 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55831), address(_55896)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55831), address(_55896)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _56293, 0, address(sha3(0, stor4[cd[68]].field_0, _60507, stor4[cd[68]].field_512)), 128, 0
                            else:
                                if not address(_55896):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58365 + 221] = address(_55896)
                                mem[_58365 + 241] = address(_55831)
                                mem[_58365 + 189] = 40
                                mem[_58365 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58365 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58365 + 314] = sha3(address(_55896), address(_55831))
                                mem[_58365 + 346] = stor4[cd[68]].field_512
                                mem[_58365 + 261] = 85
                                mem[_58365 + 378] = 0
                                mem[64] = _58365 + 410
                                mem[_58365 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58365 + 414] = _56293
                                mem[_58365 + 446] = 0
                                mem[_58365 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60507, stor4[cd[68]].field_512))
                                mem[_58365 + 510] = 128
                                mem[_58365 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58365 + 574] = mem[s + _58365 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55896), address(_55831)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55896), address(_55831)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _56293, 0, address(sha3(0, stor4[cd[68]].field_0, _60507, stor4[cd[68]].field_512)), 128, 0
                        else:
                            if not mem[(32 * idx + 2) + _19347 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58366 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19347 + ceil32(return_data.size) + 322])
                            mem[mem[64] + 52] = address(_55896)
                            _60509 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _60511 = sha3(mem[_60509 + 32 len mem[_60509]])
                            mem[_58366 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58366 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58366 + 125] = _60511
                            mem[_58366 + 157] = stor4[cd[68]].field_512
                            mem[_58366 + 72] = 85
                            mem[0] = cd[68]
                            mem[32] = 4
                            if address(_55831) == address(_55896):
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if address(_55831) < address(_55896):
                                if not address(_55831):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58366 + 221] = address(_55831)
                                mem[_58366 + 241] = address(_55896)
                                mem[_58366 + 189] = 40
                                mem[_58366 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58366 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58366 + 314] = sha3(address(_55831), address(_55896))
                                mem[_58366 + 346] = stor4[cd[68]].field_512
                                mem[_58366 + 261] = 85
                                mem[_58366 + 378] = 0
                                mem[64] = _58366 + 410
                                mem[_58366 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58366 + 414] = _56293
                                mem[_58366 + 446] = 0
                                mem[_58366 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60511, stor4[cd[68]].field_512))
                                mem[_58366 + 510] = 128
                                mem[_58366 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58366 + 574] = mem[s + _58366 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55831), address(_55896)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55831), address(_55896)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _56293, 0, address(sha3(0, stor4[cd[68]].field_0, _60511, stor4[cd[68]].field_512)), 128, 0
                            else:
                                if not address(_55896):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58366 + 221] = address(_55896)
                                mem[_58366 + 241] = address(_55831)
                                mem[_58366 + 189] = 40
                                mem[_58366 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58366 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58366 + 314] = sha3(address(_55896), address(_55831))
                                mem[_58366 + 346] = stor4[cd[68]].field_512
                                mem[_58366 + 261] = 85
                                mem[_58366 + 378] = 0
                                mem[64] = _58366 + 410
                                mem[_58366 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58366 + 414] = _56293
                                mem[_58366 + 446] = 0
                                mem[_58366 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60511, stor4[cd[68]].field_512))
                                mem[_58366 + 510] = 128
                                mem[_58366 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58366 + 574] = mem[s + _58366 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55896), address(_55831)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55896), address(_55831)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _56293, 0, address(sha3(0, stor4[cd[68]].field_0, _60511, stor4[cd[68]].field_512)), 128, 0
            else:
                if not mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 334 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                _56295 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                if mem[(32 * idx) + _19347 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 334 len 20]:
                    if idx >= mem[_19347 + ceil32(return_data.size) + 290] - 2:
                        mem[0] = cd[68]
                        mem[32] = 4
                        if mem[(32 * idx) + _19347 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 334 len 20]:
                            revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                        if mem[(32 * idx) + _19347 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 334 len 20]:
                            if not mem[(32 * idx) + _19347 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58371 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx) + _19347 + ceil32(return_data.size) + 322])
                            mem[mem[64] + 52] = address(_55896)
                            _60529 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _60531 = sha3(mem[_60529 + 32 len mem[_60529]])
                            mem[_58371 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58371 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58371 + 125] = _60531
                            mem[_58371 + 157] = stor4[cd[68]].field_512
                            mem[_58371 + 72] = 85
                            mem[_58371 + 189] = 0
                            mem[64] = _58371 + 221
                            mem[_58371 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_58371 + 225] = 0
                            mem[_58371 + 257] = _56295
                            mem[_58371 + 289] = msg.sender
                            mem[_58371 + 321] = 128
                            mem[_58371 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _58371 + 385] = mem[s + _58371 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60531, stor4[cd[68]].field_512)))
                            call address(sha3(0, stor4[cd[68]].field_0, _60531, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _56295, msg.sender, 128, 0
                        else:
                            if not mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58372 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 322])
                            mem[mem[64] + 52] = address(_55831)
                            _60533 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _60535 = sha3(mem[_60533 + 32 len mem[_60533]])
                            mem[_58372 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58372 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58372 + 125] = _60535
                            mem[_58372 + 157] = stor4[cd[68]].field_512
                            mem[_58372 + 72] = 85
                            mem[_58372 + 189] = 0
                            mem[64] = _58372 + 221
                            mem[_58372 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_58372 + 225] = 0
                            mem[_58372 + 257] = _56295
                            mem[_58372 + 289] = msg.sender
                            mem[_58372 + 321] = 128
                            mem[_58372 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _58372 + 385] = mem[s + _58372 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60535, stor4[cd[68]].field_512)))
                            call address(sha3(0, stor4[cd[68]].field_0, _60535, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _56295, msg.sender, 128, 0
                    else:
                        require idx + 2 < mem[_19347 + ceil32(return_data.size) + 290]
                        _56679 = mem[(32 * idx + 2) + _19347 + ceil32(return_data.size) + 322]
                        mem[0] = cd[68]
                        mem[32] = 4
                        if mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 2) + _19347 + ceil32(return_data.size) + 334 len 20]:
                            revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                        if mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 2) + _19347 + ceil32(return_data.size) + 334 len 20]:
                            if not mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58369 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 322])
                            mem[mem[64] + 52] = address(_56679)
                            _60521 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _60523 = sha3(mem[_60521 + 32 len mem[_60521]])
                            mem[_58369 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58369 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58369 + 125] = _60523
                            mem[_58369 + 157] = stor4[cd[68]].field_512
                            mem[_58369 + 72] = 85
                            mem[0] = cd[68]
                            mem[32] = 4
                            if address(_55831) == address(_55896):
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if address(_55831) < address(_55896):
                                if not address(_55831):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58369 + 221] = address(_55831)
                                mem[_58369 + 241] = address(_55896)
                                mem[_58369 + 189] = 40
                                mem[_58369 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58369 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58369 + 314] = sha3(address(_55831), address(_55896))
                                mem[_58369 + 346] = stor4[cd[68]].field_512
                                mem[_58369 + 261] = 85
                                mem[_58369 + 378] = 0
                                mem[64] = _58369 + 410
                                mem[_58369 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58369 + 414] = 0
                                mem[_58369 + 446] = _56295
                                mem[_58369 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60523, stor4[cd[68]].field_512))
                                mem[_58369 + 510] = 128
                                mem[_58369 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58369 + 574] = mem[s + _58369 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55831), address(_55896)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55831), address(_55896)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _56295, address(sha3(0, stor4[cd[68]].field_0, _60523, stor4[cd[68]].field_512)), 128, 0
                            else:
                                if not address(_55896):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58369 + 221] = address(_55896)
                                mem[_58369 + 241] = address(_55831)
                                mem[_58369 + 189] = 40
                                mem[_58369 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58369 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58369 + 314] = sha3(address(_55896), address(_55831))
                                mem[_58369 + 346] = stor4[cd[68]].field_512
                                mem[_58369 + 261] = 85
                                mem[_58369 + 378] = 0
                                mem[64] = _58369 + 410
                                mem[_58369 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58369 + 414] = 0
                                mem[_58369 + 446] = _56295
                                mem[_58369 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60523, stor4[cd[68]].field_512))
                                mem[_58369 + 510] = 128
                                mem[_58369 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58369 + 574] = mem[s + _58369 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55896), address(_55831)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55896), address(_55831)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _56295, address(sha3(0, stor4[cd[68]].field_0, _60523, stor4[cd[68]].field_512)), 128, 0
                        else:
                            if not mem[(32 * idx + 2) + _19347 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58370 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19347 + ceil32(return_data.size) + 322])
                            mem[mem[64] + 52] = address(_55896)
                            _60525 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _60527 = sha3(mem[_60525 + 32 len mem[_60525]])
                            mem[_58370 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58370 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58370 + 125] = _60527
                            mem[_58370 + 157] = stor4[cd[68]].field_512
                            mem[_58370 + 72] = 85
                            mem[0] = cd[68]
                            mem[32] = 4
                            if address(_55831) == address(_55896):
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if address(_55831) < address(_55896):
                                if not address(_55831):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58370 + 221] = address(_55831)
                                mem[_58370 + 241] = address(_55896)
                                mem[_58370 + 189] = 40
                                mem[_58370 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58370 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58370 + 314] = sha3(address(_55831), address(_55896))
                                mem[_58370 + 346] = stor4[cd[68]].field_512
                                mem[_58370 + 261] = 85
                                mem[_58370 + 378] = 0
                                mem[64] = _58370 + 410
                                mem[_58370 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58370 + 414] = 0
                                mem[_58370 + 446] = _56295
                                mem[_58370 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60527, stor4[cd[68]].field_512))
                                mem[_58370 + 510] = 128
                                mem[_58370 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58370 + 574] = mem[s + _58370 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55831), address(_55896)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55831), address(_55896)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _56295, address(sha3(0, stor4[cd[68]].field_0, _60527, stor4[cd[68]].field_512)), 128, 0
                            else:
                                if not address(_55896):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58370 + 221] = address(_55896)
                                mem[_58370 + 241] = address(_55831)
                                mem[_58370 + 189] = 40
                                mem[_58370 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58370 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58370 + 314] = sha3(address(_55896), address(_55831))
                                mem[_58370 + 346] = stor4[cd[68]].field_512
                                mem[_58370 + 261] = 85
                                mem[_58370 + 378] = 0
                                mem[64] = _58370 + 410
                                mem[_58370 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58370 + 414] = 0
                                mem[_58370 + 446] = _56295
                                mem[_58370 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60527, stor4[cd[68]].field_512))
                                mem[_58370 + 510] = 128
                                mem[_58370 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58370 + 574] = mem[s + _58370 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55896), address(_55831)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55896), address(_55831)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _56295, address(sha3(0, stor4[cd[68]].field_0, _60527, stor4[cd[68]].field_512)), 128, 0
                else:
                    if idx >= mem[_19347 + ceil32(return_data.size) + 290] - 2:
                        mem[0] = cd[68]
                        mem[32] = 4
                        if mem[(32 * idx) + _19347 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 334 len 20]:
                            revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                        if mem[(32 * idx) + _19347 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 334 len 20]:
                            if not mem[(32 * idx) + _19347 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58375 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx) + _19347 + ceil32(return_data.size) + 322])
                            mem[mem[64] + 52] = address(_55896)
                            _60545 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _60547 = sha3(mem[_60545 + 32 len mem[_60545]])
                            mem[_58375 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58375 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58375 + 125] = _60547
                            mem[_58375 + 157] = stor4[cd[68]].field_512
                            mem[_58375 + 72] = 85
                            mem[_58375 + 189] = 0
                            mem[64] = _58375 + 221
                            mem[_58375 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_58375 + 225] = _56295
                            mem[_58375 + 257] = 0
                            mem[_58375 + 289] = msg.sender
                            mem[_58375 + 321] = 128
                            mem[_58375 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _58375 + 385] = mem[s + _58375 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60547, stor4[cd[68]].field_512)))
                            call address(sha3(0, stor4[cd[68]].field_0, _60547, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _56295, 0, msg.sender, 128, 0
                        else:
                            if not mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58376 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 322])
                            mem[mem[64] + 52] = address(_55831)
                            _60549 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _60551 = sha3(mem[_60549 + 32 len mem[_60549]])
                            mem[_58376 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58376 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58376 + 125] = _60551
                            mem[_58376 + 157] = stor4[cd[68]].field_512
                            mem[_58376 + 72] = 85
                            mem[_58376 + 189] = 0
                            mem[64] = _58376 + 221
                            mem[_58376 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_58376 + 225] = _56295
                            mem[_58376 + 257] = 0
                            mem[_58376 + 289] = msg.sender
                            mem[_58376 + 321] = 128
                            mem[_58376 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _58376 + 385] = mem[s + _58376 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60551, stor4[cd[68]].field_512)))
                            call address(sha3(0, stor4[cd[68]].field_0, _60551, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _56295, 0, msg.sender, 128, 0
                    else:
                        require idx + 2 < mem[_19347 + ceil32(return_data.size) + 290]
                        _56680 = mem[(32 * idx + 2) + _19347 + ceil32(return_data.size) + 322]
                        mem[0] = cd[68]
                        mem[32] = 4
                        if mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 2) + _19347 + ceil32(return_data.size) + 334 len 20]:
                            revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                        if mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 2) + _19347 + ceil32(return_data.size) + 334 len 20]:
                            if not mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58373 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19347 + ceil32(return_data.size) + 322])
                            mem[mem[64] + 52] = address(_56680)
                            _60537 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _60539 = sha3(mem[_60537 + 32 len mem[_60537]])
                            mem[_58373 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58373 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58373 + 125] = _60539
                            mem[_58373 + 157] = stor4[cd[68]].field_512
                            mem[_58373 + 72] = 85
                            mem[0] = cd[68]
                            mem[32] = 4
                            if address(_55831) == address(_55896):
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if address(_55831) < address(_55896):
                                if not address(_55831):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58373 + 221] = address(_55831)
                                mem[_58373 + 241] = address(_55896)
                                mem[_58373 + 189] = 40
                                mem[_58373 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58373 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58373 + 314] = sha3(address(_55831), address(_55896))
                                mem[_58373 + 346] = stor4[cd[68]].field_512
                                mem[_58373 + 261] = 85
                                mem[_58373 + 378] = 0
                                mem[64] = _58373 + 410
                                mem[_58373 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58373 + 414] = _56295
                                mem[_58373 + 446] = 0
                                mem[_58373 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60539, stor4[cd[68]].field_512))
                                mem[_58373 + 510] = 128
                                mem[_58373 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58373 + 574] = mem[s + _58373 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55831), address(_55896)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55831), address(_55896)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _56295, 0, address(sha3(0, stor4[cd[68]].field_0, _60539, stor4[cd[68]].field_512)), 128, 0
                            else:
                                if not address(_55896):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58373 + 221] = address(_55896)
                                mem[_58373 + 241] = address(_55831)
                                mem[_58373 + 189] = 40
                                mem[_58373 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58373 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58373 + 314] = sha3(address(_55896), address(_55831))
                                mem[_58373 + 346] = stor4[cd[68]].field_512
                                mem[_58373 + 261] = 85
                                mem[_58373 + 378] = 0
                                mem[64] = _58373 + 410
                                mem[_58373 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58373 + 414] = _56295
                                mem[_58373 + 446] = 0
                                mem[_58373 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60539, stor4[cd[68]].field_512))
                                mem[_58373 + 510] = 128
                                mem[_58373 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58373 + 574] = mem[s + _58373 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55896), address(_55831)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55896), address(_55831)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _56295, 0, address(sha3(0, stor4[cd[68]].field_0, _60539, stor4[cd[68]].field_512)), 128, 0
                        else:
                            if not mem[(32 * idx + 2) + _19347 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58374 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19347 + ceil32(return_data.size) + 322])
                            mem[mem[64] + 52] = address(_55896)
                            _60541 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _60543 = sha3(mem[_60541 + 32 len mem[_60541]])
                            mem[_58374 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58374 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58374 + 125] = _60543
                            mem[_58374 + 157] = stor4[cd[68]].field_512
                            mem[_58374 + 72] = 85
                            mem[0] = cd[68]
                            mem[32] = 4
                            if address(_55831) == address(_55896):
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if address(_55831) < address(_55896):
                                if not address(_55831):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58374 + 221] = address(_55831)
                                mem[_58374 + 241] = address(_55896)
                                mem[_58374 + 189] = 40
                                mem[_58374 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58374 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58374 + 314] = sha3(address(_55831), address(_55896))
                                mem[_58374 + 346] = stor4[cd[68]].field_512
                                mem[_58374 + 261] = 85
                                mem[_58374 + 378] = 0
                                mem[64] = _58374 + 410
                                mem[_58374 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58374 + 414] = _56295
                                mem[_58374 + 446] = 0
                                mem[_58374 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60543, stor4[cd[68]].field_512))
                                mem[_58374 + 510] = 128
                                mem[_58374 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58374 + 574] = mem[s + _58374 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55831), address(_55896)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55831), address(_55896)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _56295, 0, address(sha3(0, stor4[cd[68]].field_0, _60543, stor4[cd[68]].field_512)), 128, 0
                            else:
                                if not address(_55896):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58374 + 221] = address(_55896)
                                mem[_58374 + 241] = address(_55831)
                                mem[_58374 + 189] = 40
                                mem[_58374 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58374 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58374 + 314] = sha3(address(_55896), address(_55831))
                                mem[_58374 + 346] = stor4[cd[68]].field_512
                                mem[_58374 + 261] = 85
                                mem[_58374 + 378] = 0
                                mem[64] = _58374 + 410
                                mem[_58374 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58374 + 414] = _56295
                                mem[_58374 + 446] = 0
                                mem[_58374 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60543, stor4[cd[68]].field_512))
                                mem[_58374 + 510] = 128
                                mem[_58374 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58374 + 574] = mem[s + _58374 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55896), address(_55831)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55896), address(_55831)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _56295, 0, address(sha3(0, stor4[cd[68]].field_0, _60543, stor4[cd[68]].field_512)), 128, 0
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            idx = idx + 1
            continue 
        mem[mem[64]] = 32
        _55959 = mem[(32 * ('cd', 36).length) + 128]
        mem[mem[64] + 32] = mem[(32 * ('cd', 36).length) + 128]
        mem[mem[64] + 64 len 32 * _55959] = mem[(32 * ('cd', 36).length) + 160 len 32 * _55959]
        return 32, mem[mem[64] + 32 len (32 * _55959) + 32]
    if not address(('cd', 36)[1]):
        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
    _19348 = mem[64]
    mem[mem[64] + 32] = address(('cd', 36)[1])
    mem[mem[64] + 52] = address(('cd', 36)[0])
    _19429 = mem[64]
    mem[mem[64]] = 40
    mem[64] = mem[64] + 72
    _19431 = sha3(mem[_19429 + 32 len mem[_19429]])
    mem[_19348 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
    mem[_19348 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
    mem[_19348 + 125] = _19431
    mem[_19348 + 157] = stor4[cd[68]].field_512
    mem[_19348 + 72] = 85
    require 0 < mem[(32 * ('cd', 36).length) + 128]
    _19500 = mem[(32 * ('cd', 36).length) + 160]
    mem[_19348 + 225] = address(sha3(0, stor4[cd[68]].field_0, _19431, stor4[cd[68]].field_512))
    mem[_19348 + 257] = _19500
    mem[_19348 + 189] = 68
    mem[_19348 + 221 len 4] = unknown_0xa9059cbb(?????)
    mem[_19348 + 289 len 96] = 0, address(sha3(0, stor4[cd[68]].field_0, _19431, stor4[cd[68]].field_512)), _19500, mem[_19348 + 289 len 28]
    mem[_19348 + 357] = 0
    call address(('cd', 36)[0]) with:
         gas gas_remaining wei
        args mem[_19348 + 293 len 64]
    if not return_data.size:
        if not ext_call.success:
            revert with 0, 'TransferHelper: TRANSFER_FAILED'
        if not mem[96]:
            mem[64] = _19348 + (32 * ('cd', 36).length) + 321
            mem[_19348 + 289] = ('cd', 36).length
            mem[_19348 + 321 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
            mem[_19348 + (32 * ('cd', 36).length) + 321] = 0
            idx = 0
            while idx < ('cd', 36).length - 1:
                require idx < mem[_19348 + 289]
                _55841 = mem[(32 * idx) + _19348 + 321]
                require idx + 1 < mem[_19348 + 289]
                _55906 = mem[(32 * idx + 1) + _19348 + 321]
                if mem[(32 * idx) + _19348 + 333 len 20] == mem[(32 * idx + 1) + _19348 + 333 len 20]:
                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                if mem[(32 * idx) + _19348 + 333 len 20] < mem[(32 * idx + 1) + _19348 + 333 len 20]:
                    if not mem[(32 * idx) + _19348 + 333 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                    _56313 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                    if mem[(32 * idx) + _19348 + 333 len 20] == mem[(32 * idx) + _19348 + 333 len 20]:
                        if idx >= mem[_19348 + 289] - 2:
                            mem[0] = cd[68]
                            mem[32] = 4
                            if mem[(32 * idx) + _19348 + 333 len 20] == mem[(32 * idx + 1) + _19348 + 333 len 20]:
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if mem[(32 * idx) + _19348 + 333 len 20] < mem[(32 * idx + 1) + _19348 + 333 len 20]:
                                if not mem[(32 * idx) + _19348 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58443 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _19348 + 321])
                                mem[mem[64] + 52] = address(_55906)
                                _60817 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _60819 = sha3(mem[_60817 + 32 len mem[_60817]])
                                mem[_58443 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58443 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58443 + 125] = _60819
                                mem[_58443 + 157] = stor4[cd[68]].field_512
                                mem[_58443 + 72] = 85
                                mem[_58443 + 189] = 0
                                mem[64] = _58443 + 221
                                mem[_58443 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58443 + 225] = 0
                                mem[_58443 + 257] = _56313
                                mem[_58443 + 289] = msg.sender
                                mem[_58443 + 321] = 128
                                mem[_58443 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58443 + 385] = mem[s + _58443 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60819, stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, _60819, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _56313, msg.sender, 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _19348 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58444 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19348 + 321])
                                mem[mem[64] + 52] = address(_55841)
                                _60821 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _60823 = sha3(mem[_60821 + 32 len mem[_60821]])
                                mem[_58444 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58444 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58444 + 125] = _60823
                                mem[_58444 + 157] = stor4[cd[68]].field_512
                                mem[_58444 + 72] = 85
                                mem[_58444 + 189] = 0
                                mem[64] = _58444 + 221
                                mem[_58444 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58444 + 225] = 0
                                mem[_58444 + 257] = _56313
                                mem[_58444 + 289] = msg.sender
                                mem[_58444 + 321] = 128
                                mem[_58444 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58444 + 385] = mem[s + _58444 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60823, stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, _60823, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _56313, msg.sender, 128, 0
                        else:
                            require idx + 2 < mem[_19348 + 289]
                            _56697 = mem[(32 * idx + 2) + _19348 + 321]
                            mem[0] = cd[68]
                            mem[32] = 4
                            if mem[(32 * idx + 1) + _19348 + 333 len 20] == mem[(32 * idx + 2) + _19348 + 333 len 20]:
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if mem[(32 * idx + 1) + _19348 + 333 len 20] < mem[(32 * idx + 2) + _19348 + 333 len 20]:
                                if not mem[(32 * idx + 1) + _19348 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58441 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19348 + 321])
                                mem[mem[64] + 52] = address(_56697)
                                _60809 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _60811 = sha3(mem[_60809 + 32 len mem[_60809]])
                                mem[_58441 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58441 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58441 + 125] = _60811
                                mem[_58441 + 157] = stor4[cd[68]].field_512
                                mem[_58441 + 72] = 85
                                mem[0] = cd[68]
                                mem[32] = 4
                                if address(_55841) == address(_55906):
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_55841) < address(_55906):
                                    if not address(_55841):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58441 + 221] = address(_55841)
                                    mem[_58441 + 241] = address(_55906)
                                    mem[_58441 + 189] = 40
                                    mem[_58441 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58441 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58441 + 314] = sha3(address(_55841), address(_55906))
                                    mem[_58441 + 346] = stor4[cd[68]].field_512
                                    mem[_58441 + 261] = 85
                                    mem[_58441 + 378] = 0
                                    mem[64] = _58441 + 410
                                    mem[_58441 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58441 + 414] = 0
                                    mem[_58441 + 446] = _56313
                                    mem[_58441 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60811, stor4[cd[68]].field_512))
                                    mem[_58441 + 510] = 128
                                    mem[_58441 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58441 + 574] = mem[s + _58441 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55841), address(_55906)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55841), address(_55906)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56313, address(sha3(0, stor4[cd[68]].field_0, _60811, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not address(_55906):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58441 + 221] = address(_55906)
                                    mem[_58441 + 241] = address(_55841)
                                    mem[_58441 + 189] = 40
                                    mem[_58441 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58441 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58441 + 314] = sha3(address(_55906), address(_55841))
                                    mem[_58441 + 346] = stor4[cd[68]].field_512
                                    mem[_58441 + 261] = 85
                                    mem[_58441 + 378] = 0
                                    mem[64] = _58441 + 410
                                    mem[_58441 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58441 + 414] = 0
                                    mem[_58441 + 446] = _56313
                                    mem[_58441 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60811, stor4[cd[68]].field_512))
                                    mem[_58441 + 510] = 128
                                    mem[_58441 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58441 + 574] = mem[s + _58441 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55906), address(_55841)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55906), address(_55841)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56313, address(sha3(0, stor4[cd[68]].field_0, _60811, stor4[cd[68]].field_512)), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _19348 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58442 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19348 + 321])
                                mem[mem[64] + 52] = address(_55906)
                                _60813 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _60815 = sha3(mem[_60813 + 32 len mem[_60813]])
                                mem[_58442 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58442 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58442 + 125] = _60815
                                mem[_58442 + 157] = stor4[cd[68]].field_512
                                mem[_58442 + 72] = 85
                                mem[0] = cd[68]
                                mem[32] = 4
                                if address(_55841) == address(_55906):
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_55841) < address(_55906):
                                    if not address(_55841):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58442 + 221] = address(_55841)
                                    mem[_58442 + 241] = address(_55906)
                                    mem[_58442 + 189] = 40
                                    mem[_58442 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58442 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58442 + 314] = sha3(address(_55841), address(_55906))
                                    mem[_58442 + 346] = stor4[cd[68]].field_512
                                    mem[_58442 + 261] = 85
                                    mem[_58442 + 378] = 0
                                    mem[64] = _58442 + 410
                                    mem[_58442 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58442 + 414] = 0
                                    mem[_58442 + 446] = _56313
                                    mem[_58442 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60815, stor4[cd[68]].field_512))
                                    mem[_58442 + 510] = 128
                                    mem[_58442 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58442 + 574] = mem[s + _58442 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55841), address(_55906)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55841), address(_55906)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56313, address(sha3(0, stor4[cd[68]].field_0, _60815, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not address(_55906):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58442 + 221] = address(_55906)
                                    mem[_58442 + 241] = address(_55841)
                                    mem[_58442 + 189] = 40
                                    mem[_58442 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58442 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58442 + 314] = sha3(address(_55906), address(_55841))
                                    mem[_58442 + 346] = stor4[cd[68]].field_512
                                    mem[_58442 + 261] = 85
                                    mem[_58442 + 378] = 0
                                    mem[64] = _58442 + 410
                                    mem[_58442 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58442 + 414] = 0
                                    mem[_58442 + 446] = _56313
                                    mem[_58442 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60815, stor4[cd[68]].field_512))
                                    mem[_58442 + 510] = 128
                                    mem[_58442 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58442 + 574] = mem[s + _58442 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55906), address(_55841)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55906), address(_55841)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56313, address(sha3(0, stor4[cd[68]].field_0, _60815, stor4[cd[68]].field_512)), 128, 0
                    else:
                        if idx >= mem[_19348 + 289] - 2:
                            mem[0] = cd[68]
                            mem[32] = 4
                            if mem[(32 * idx) + _19348 + 333 len 20] == mem[(32 * idx + 1) + _19348 + 333 len 20]:
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if mem[(32 * idx) + _19348 + 333 len 20] < mem[(32 * idx + 1) + _19348 + 333 len 20]:
                                if not mem[(32 * idx) + _19348 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58447 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _19348 + 321])
                                mem[mem[64] + 52] = address(_55906)
                                _60833 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _60835 = sha3(mem[_60833 + 32 len mem[_60833]])
                                mem[_58447 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58447 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58447 + 125] = _60835
                                mem[_58447 + 157] = stor4[cd[68]].field_512
                                mem[_58447 + 72] = 85
                                mem[_58447 + 189] = 0
                                mem[64] = _58447 + 221
                                mem[_58447 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58447 + 225] = _56313
                                mem[_58447 + 257] = 0
                                mem[_58447 + 289] = msg.sender
                                mem[_58447 + 321] = 128
                                mem[_58447 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58447 + 385] = mem[s + _58447 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60835, stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, _60835, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _56313, 0, msg.sender, 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _19348 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58448 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19348 + 321])
                                mem[mem[64] + 52] = address(_55841)
                                _60837 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _60839 = sha3(mem[_60837 + 32 len mem[_60837]])
                                mem[_58448 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58448 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58448 + 125] = _60839
                                mem[_58448 + 157] = stor4[cd[68]].field_512
                                mem[_58448 + 72] = 85
                                mem[_58448 + 189] = 0
                                mem[64] = _58448 + 221
                                mem[_58448 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58448 + 225] = _56313
                                mem[_58448 + 257] = 0
                                mem[_58448 + 289] = msg.sender
                                mem[_58448 + 321] = 128
                                mem[_58448 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58448 + 385] = mem[s + _58448 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60839, stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, _60839, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _56313, 0, msg.sender, 128, 0
                        else:
                            require idx + 2 < mem[_19348 + 289]
                            _56698 = mem[(32 * idx + 2) + _19348 + 321]
                            mem[0] = cd[68]
                            mem[32] = 4
                            if mem[(32 * idx + 1) + _19348 + 333 len 20] == mem[(32 * idx + 2) + _19348 + 333 len 20]:
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if mem[(32 * idx + 1) + _19348 + 333 len 20] < mem[(32 * idx + 2) + _19348 + 333 len 20]:
                                if not mem[(32 * idx + 1) + _19348 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58445 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19348 + 321])
                                mem[mem[64] + 52] = address(_56698)
                                _60825 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _60827 = sha3(mem[_60825 + 32 len mem[_60825]])
                                mem[_58445 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58445 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58445 + 125] = _60827
                                mem[_58445 + 157] = stor4[cd[68]].field_512
                                mem[_58445 + 72] = 85
                                mem[0] = cd[68]
                                mem[32] = 4
                                if address(_55841) == address(_55906):
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_55841) < address(_55906):
                                    if not address(_55841):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58445 + 221] = address(_55841)
                                    mem[_58445 + 241] = address(_55906)
                                    mem[_58445 + 189] = 40
                                    mem[_58445 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58445 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58445 + 314] = sha3(address(_55841), address(_55906))
                                    mem[_58445 + 346] = stor4[cd[68]].field_512
                                    mem[_58445 + 261] = 85
                                    mem[_58445 + 378] = 0
                                    mem[64] = _58445 + 410
                                    mem[_58445 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58445 + 414] = _56313
                                    mem[_58445 + 446] = 0
                                    mem[_58445 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60827, stor4[cd[68]].field_512))
                                    mem[_58445 + 510] = 128
                                    mem[_58445 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58445 + 574] = mem[s + _58445 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55841), address(_55906)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55841), address(_55906)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56313, 0, address(sha3(0, stor4[cd[68]].field_0, _60827, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not address(_55906):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58445 + 221] = address(_55906)
                                    mem[_58445 + 241] = address(_55841)
                                    mem[_58445 + 189] = 40
                                    mem[_58445 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58445 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58445 + 314] = sha3(address(_55906), address(_55841))
                                    mem[_58445 + 346] = stor4[cd[68]].field_512
                                    mem[_58445 + 261] = 85
                                    mem[_58445 + 378] = 0
                                    mem[64] = _58445 + 410
                                    mem[_58445 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58445 + 414] = _56313
                                    mem[_58445 + 446] = 0
                                    mem[_58445 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60827, stor4[cd[68]].field_512))
                                    mem[_58445 + 510] = 128
                                    mem[_58445 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58445 + 574] = mem[s + _58445 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55906), address(_55841)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55906), address(_55841)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56313, 0, address(sha3(0, stor4[cd[68]].field_0, _60827, stor4[cd[68]].field_512)), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _19348 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58446 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19348 + 321])
                                mem[mem[64] + 52] = address(_55906)
                                _60829 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _60831 = sha3(mem[_60829 + 32 len mem[_60829]])
                                mem[_58446 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58446 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58446 + 125] = _60831
                                mem[_58446 + 157] = stor4[cd[68]].field_512
                                mem[_58446 + 72] = 85
                                mem[0] = cd[68]
                                mem[32] = 4
                                if address(_55841) == address(_55906):
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_55841) < address(_55906):
                                    if not address(_55841):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58446 + 221] = address(_55841)
                                    mem[_58446 + 241] = address(_55906)
                                    mem[_58446 + 189] = 40
                                    mem[_58446 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58446 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58446 + 314] = sha3(address(_55841), address(_55906))
                                    mem[_58446 + 346] = stor4[cd[68]].field_512
                                    mem[_58446 + 261] = 85
                                    mem[_58446 + 378] = 0
                                    mem[64] = _58446 + 410
                                    mem[_58446 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58446 + 414] = _56313
                                    mem[_58446 + 446] = 0
                                    mem[_58446 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60831, stor4[cd[68]].field_512))
                                    mem[_58446 + 510] = 128
                                    mem[_58446 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58446 + 574] = mem[s + _58446 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55841), address(_55906)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55841), address(_55906)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56313, 0, address(sha3(0, stor4[cd[68]].field_0, _60831, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not address(_55906):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58446 + 221] = address(_55906)
                                    mem[_58446 + 241] = address(_55841)
                                    mem[_58446 + 189] = 40
                                    mem[_58446 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58446 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58446 + 314] = sha3(address(_55906), address(_55841))
                                    mem[_58446 + 346] = stor4[cd[68]].field_512
                                    mem[_58446 + 261] = 85
                                    mem[_58446 + 378] = 0
                                    mem[64] = _58446 + 410
                                    mem[_58446 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58446 + 414] = _56313
                                    mem[_58446 + 446] = 0
                                    mem[_58446 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60831, stor4[cd[68]].field_512))
                                    mem[_58446 + 510] = 128
                                    mem[_58446 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58446 + 574] = mem[s + _58446 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55906), address(_55841)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55906), address(_55841)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56313, 0, address(sha3(0, stor4[cd[68]].field_0, _60831, stor4[cd[68]].field_512)), 128, 0
                else:
                    if not mem[(32 * idx + 1) + _19348 + 333 len 20]:
                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                    require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                    _56315 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                    if mem[(32 * idx) + _19348 + 333 len 20] == mem[(32 * idx + 1) + _19348 + 333 len 20]:
                        if idx >= mem[_19348 + 289] - 2:
                            mem[0] = cd[68]
                            mem[32] = 4
                            if mem[(32 * idx) + _19348 + 333 len 20] == mem[(32 * idx + 1) + _19348 + 333 len 20]:
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if mem[(32 * idx) + _19348 + 333 len 20] < mem[(32 * idx + 1) + _19348 + 333 len 20]:
                                if not mem[(32 * idx) + _19348 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58451 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _19348 + 321])
                                mem[mem[64] + 52] = address(_55906)
                                _60849 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _60851 = sha3(mem[_60849 + 32 len mem[_60849]])
                                mem[_58451 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58451 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58451 + 125] = _60851
                                mem[_58451 + 157] = stor4[cd[68]].field_512
                                mem[_58451 + 72] = 85
                                mem[_58451 + 189] = 0
                                mem[64] = _58451 + 221
                                mem[_58451 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58451 + 225] = 0
                                mem[_58451 + 257] = _56315
                                mem[_58451 + 289] = msg.sender
                                mem[_58451 + 321] = 128
                                mem[_58451 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58451 + 385] = mem[s + _58451 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60851, stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, _60851, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _56315, msg.sender, 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _19348 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58452 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19348 + 321])
                                mem[mem[64] + 52] = address(_55841)
                                _60853 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _60855 = sha3(mem[_60853 + 32 len mem[_60853]])
                                mem[_58452 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58452 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58452 + 125] = _60855
                                mem[_58452 + 157] = stor4[cd[68]].field_512
                                mem[_58452 + 72] = 85
                                mem[_58452 + 189] = 0
                                mem[64] = _58452 + 221
                                mem[_58452 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58452 + 225] = 0
                                mem[_58452 + 257] = _56315
                                mem[_58452 + 289] = msg.sender
                                mem[_58452 + 321] = 128
                                mem[_58452 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58452 + 385] = mem[s + _58452 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60855, stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, _60855, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _56315, msg.sender, 128, 0
                        else:
                            require idx + 2 < mem[_19348 + 289]
                            _56699 = mem[(32 * idx + 2) + _19348 + 321]
                            mem[0] = cd[68]
                            mem[32] = 4
                            if mem[(32 * idx + 1) + _19348 + 333 len 20] == mem[(32 * idx + 2) + _19348 + 333 len 20]:
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if mem[(32 * idx + 1) + _19348 + 333 len 20] < mem[(32 * idx + 2) + _19348 + 333 len 20]:
                                if not mem[(32 * idx + 1) + _19348 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58449 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19348 + 321])
                                mem[mem[64] + 52] = address(_56699)
                                _60841 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _60843 = sha3(mem[_60841 + 32 len mem[_60841]])
                                mem[_58449 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58449 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58449 + 125] = _60843
                                mem[_58449 + 157] = stor4[cd[68]].field_512
                                mem[_58449 + 72] = 85
                                mem[0] = cd[68]
                                mem[32] = 4
                                if address(_55841) == address(_55906):
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_55841) < address(_55906):
                                    if not address(_55841):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58449 + 221] = address(_55841)
                                    mem[_58449 + 241] = address(_55906)
                                    mem[_58449 + 189] = 40
                                    mem[_58449 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58449 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58449 + 314] = sha3(address(_55841), address(_55906))
                                    mem[_58449 + 346] = stor4[cd[68]].field_512
                                    mem[_58449 + 261] = 85
                                    mem[_58449 + 378] = 0
                                    mem[64] = _58449 + 410
                                    mem[_58449 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58449 + 414] = 0
                                    mem[_58449 + 446] = _56315
                                    mem[_58449 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60843, stor4[cd[68]].field_512))
                                    mem[_58449 + 510] = 128
                                    mem[_58449 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58449 + 574] = mem[s + _58449 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55841), address(_55906)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55841), address(_55906)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56315, address(sha3(0, stor4[cd[68]].field_0, _60843, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not address(_55906):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58449 + 221] = address(_55906)
                                    mem[_58449 + 241] = address(_55841)
                                    mem[_58449 + 189] = 40
                                    mem[_58449 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58449 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58449 + 314] = sha3(address(_55906), address(_55841))
                                    mem[_58449 + 346] = stor4[cd[68]].field_512
                                    mem[_58449 + 261] = 85
                                    mem[_58449 + 378] = 0
                                    mem[64] = _58449 + 410
                                    mem[_58449 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58449 + 414] = 0
                                    mem[_58449 + 446] = _56315
                                    mem[_58449 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60843, stor4[cd[68]].field_512))
                                    mem[_58449 + 510] = 128
                                    mem[_58449 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58449 + 574] = mem[s + _58449 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55906), address(_55841)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55906), address(_55841)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56315, address(sha3(0, stor4[cd[68]].field_0, _60843, stor4[cd[68]].field_512)), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _19348 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58450 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19348 + 321])
                                mem[mem[64] + 52] = address(_55906)
                                _60845 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _60847 = sha3(mem[_60845 + 32 len mem[_60845]])
                                mem[_58450 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58450 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58450 + 125] = _60847
                                mem[_58450 + 157] = stor4[cd[68]].field_512
                                mem[_58450 + 72] = 85
                                mem[0] = cd[68]
                                mem[32] = 4
                                if address(_55841) == address(_55906):
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_55841) < address(_55906):
                                    if not address(_55841):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58450 + 221] = address(_55841)
                                    mem[_58450 + 241] = address(_55906)
                                    mem[_58450 + 189] = 40
                                    mem[_58450 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58450 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58450 + 314] = sha3(address(_55841), address(_55906))
                                    mem[_58450 + 346] = stor4[cd[68]].field_512
                                    mem[_58450 + 261] = 85
                                    mem[_58450 + 378] = 0
                                    mem[64] = _58450 + 410
                                    mem[_58450 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58450 + 414] = 0
                                    mem[_58450 + 446] = _56315
                                    mem[_58450 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60847, stor4[cd[68]].field_512))
                                    mem[_58450 + 510] = 128
                                    mem[_58450 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58450 + 574] = mem[s + _58450 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55841), address(_55906)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55841), address(_55906)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56315, address(sha3(0, stor4[cd[68]].field_0, _60847, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not address(_55906):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58450 + 221] = address(_55906)
                                    mem[_58450 + 241] = address(_55841)
                                    mem[_58450 + 189] = 40
                                    mem[_58450 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58450 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58450 + 314] = sha3(address(_55906), address(_55841))
                                    mem[_58450 + 346] = stor4[cd[68]].field_512
                                    mem[_58450 + 261] = 85
                                    mem[_58450 + 378] = 0
                                    mem[64] = _58450 + 410
                                    mem[_58450 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58450 + 414] = 0
                                    mem[_58450 + 446] = _56315
                                    mem[_58450 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60847, stor4[cd[68]].field_512))
                                    mem[_58450 + 510] = 128
                                    mem[_58450 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58450 + 574] = mem[s + _58450 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55906), address(_55841)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55906), address(_55841)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _56315, address(sha3(0, stor4[cd[68]].field_0, _60847, stor4[cd[68]].field_512)), 128, 0
                    else:
                        if idx >= mem[_19348 + 289] - 2:
                            mem[0] = cd[68]
                            mem[32] = 4
                            if mem[(32 * idx) + _19348 + 333 len 20] == mem[(32 * idx + 1) + _19348 + 333 len 20]:
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if mem[(32 * idx) + _19348 + 333 len 20] < mem[(32 * idx + 1) + _19348 + 333 len 20]:
                                if not mem[(32 * idx) + _19348 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58455 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx) + _19348 + 321])
                                mem[mem[64] + 52] = address(_55906)
                                _60865 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _60867 = sha3(mem[_60865 + 32 len mem[_60865]])
                                mem[_58455 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58455 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58455 + 125] = _60867
                                mem[_58455 + 157] = stor4[cd[68]].field_512
                                mem[_58455 + 72] = 85
                                mem[_58455 + 189] = 0
                                mem[64] = _58455 + 221
                                mem[_58455 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58455 + 225] = _56315
                                mem[_58455 + 257] = 0
                                mem[_58455 + 289] = msg.sender
                                mem[_58455 + 321] = 128
                                mem[_58455 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58455 + 385] = mem[s + _58455 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60867, stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, _60867, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _56315, 0, msg.sender, 128, 0
                            else:
                                if not mem[(32 * idx + 1) + _19348 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58456 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19348 + 321])
                                mem[mem[64] + 52] = address(_55841)
                                _60869 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _60871 = sha3(mem[_60869 + 32 len mem[_60869]])
                                mem[_58456 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58456 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58456 + 125] = _60871
                                mem[_58456 + 157] = stor4[cd[68]].field_512
                                mem[_58456 + 72] = 85
                                mem[_58456 + 189] = 0
                                mem[64] = _58456 + 221
                                mem[_58456 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58456 + 225] = _56315
                                mem[_58456 + 257] = 0
                                mem[_58456 + 289] = msg.sender
                                mem[_58456 + 321] = 128
                                mem[_58456 + 353] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58456 + 385] = mem[s + _58456 + 221]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60871, stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, _60871, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _56315, 0, msg.sender, 128, 0
                        else:
                            require idx + 2 < mem[_19348 + 289]
                            _56700 = mem[(32 * idx + 2) + _19348 + 321]
                            mem[0] = cd[68]
                            mem[32] = 4
                            if mem[(32 * idx + 1) + _19348 + 333 len 20] == mem[(32 * idx + 2) + _19348 + 333 len 20]:
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if mem[(32 * idx + 1) + _19348 + 333 len 20] < mem[(32 * idx + 2) + _19348 + 333 len 20]:
                                if not mem[(32 * idx + 1) + _19348 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58453 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19348 + 321])
                                mem[mem[64] + 52] = address(_56700)
                                _60857 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _60859 = sha3(mem[_60857 + 32 len mem[_60857]])
                                mem[_58453 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58453 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58453 + 125] = _60859
                                mem[_58453 + 157] = stor4[cd[68]].field_512
                                mem[_58453 + 72] = 85
                                mem[0] = cd[68]
                                mem[32] = 4
                                if address(_55841) == address(_55906):
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_55841) < address(_55906):
                                    if not address(_55841):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58453 + 221] = address(_55841)
                                    mem[_58453 + 241] = address(_55906)
                                    mem[_58453 + 189] = 40
                                    mem[_58453 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58453 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58453 + 314] = sha3(address(_55841), address(_55906))
                                    mem[_58453 + 346] = stor4[cd[68]].field_512
                                    mem[_58453 + 261] = 85
                                    mem[_58453 + 378] = 0
                                    mem[64] = _58453 + 410
                                    mem[_58453 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58453 + 414] = _56315
                                    mem[_58453 + 446] = 0
                                    mem[_58453 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60859, stor4[cd[68]].field_512))
                                    mem[_58453 + 510] = 128
                                    mem[_58453 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58453 + 574] = mem[s + _58453 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55841), address(_55906)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55841), address(_55906)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56315, 0, address(sha3(0, stor4[cd[68]].field_0, _60859, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not address(_55906):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58453 + 221] = address(_55906)
                                    mem[_58453 + 241] = address(_55841)
                                    mem[_58453 + 189] = 40
                                    mem[_58453 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58453 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58453 + 314] = sha3(address(_55906), address(_55841))
                                    mem[_58453 + 346] = stor4[cd[68]].field_512
                                    mem[_58453 + 261] = 85
                                    mem[_58453 + 378] = 0
                                    mem[64] = _58453 + 410
                                    mem[_58453 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58453 + 414] = _56315
                                    mem[_58453 + 446] = 0
                                    mem[_58453 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60859, stor4[cd[68]].field_512))
                                    mem[_58453 + 510] = 128
                                    mem[_58453 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58453 + 574] = mem[s + _58453 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55906), address(_55841)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55906), address(_55841)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56315, 0, address(sha3(0, stor4[cd[68]].field_0, _60859, stor4[cd[68]].field_512)), 128, 0
                            else:
                                if not mem[(32 * idx + 2) + _19348 + 333 len 20]:
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                _58454 = mem[64]
                                mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19348 + 321])
                                mem[mem[64] + 52] = address(_55906)
                                _60861 = mem[64]
                                mem[mem[64]] = 40
                                mem[64] = mem[64] + 72
                                _60863 = sha3(mem[_60861 + 32 len mem[_60861]])
                                mem[_58454 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58454 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58454 + 125] = _60863
                                mem[_58454 + 157] = stor4[cd[68]].field_512
                                mem[_58454 + 72] = 85
                                mem[0] = cd[68]
                                mem[32] = 4
                                if address(_55841) == address(_55906):
                                    revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                                if address(_55841) < address(_55906):
                                    if not address(_55841):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58454 + 221] = address(_55841)
                                    mem[_58454 + 241] = address(_55906)
                                    mem[_58454 + 189] = 40
                                    mem[_58454 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58454 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58454 + 314] = sha3(address(_55841), address(_55906))
                                    mem[_58454 + 346] = stor4[cd[68]].field_512
                                    mem[_58454 + 261] = 85
                                    mem[_58454 + 378] = 0
                                    mem[64] = _58454 + 410
                                    mem[_58454 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58454 + 414] = _56315
                                    mem[_58454 + 446] = 0
                                    mem[_58454 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60863, stor4[cd[68]].field_512))
                                    mem[_58454 + 510] = 128
                                    mem[_58454 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58454 + 574] = mem[s + _58454 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55841), address(_55906)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55841), address(_55906)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56315, 0, address(sha3(0, stor4[cd[68]].field_0, _60863, stor4[cd[68]].field_512)), 128, 0
                                else:
                                    if not address(_55906):
                                        revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                    mem[_58454 + 221] = address(_55906)
                                    mem[_58454 + 241] = address(_55841)
                                    mem[_58454 + 189] = 40
                                    mem[_58454 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                    mem[_58454 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                    mem[_58454 + 314] = sha3(address(_55906), address(_55841))
                                    mem[_58454 + 346] = stor4[cd[68]].field_512
                                    mem[_58454 + 261] = 85
                                    mem[_58454 + 378] = 0
                                    mem[64] = _58454 + 410
                                    mem[_58454 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_58454 + 414] = _56315
                                    mem[_58454 + 446] = 0
                                    mem[_58454 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60863, stor4[cd[68]].field_512))
                                    mem[_58454 + 510] = 128
                                    mem[_58454 + 542] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + _58454 + 574] = mem[s + _58454 + 410]
                                        s = s + 32
                                        continue 
                                    require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55906), address(_55841)), stor4[cd[68]].field_512)))
                                    call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55906), address(_55841)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _56315, 0, address(sha3(0, stor4[cd[68]].field_0, _60863, stor4[cd[68]].field_512)), 128, 0
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                idx = idx + 1
                continue 
            mem[mem[64]] = 32
            _55969 = mem[(32 * ('cd', 36).length) + 128]
            mem[mem[64] + 32] = mem[(32 * ('cd', 36).length) + 128]
            mem[mem[64] + 64 len 32 * _55969] = mem[(32 * ('cd', 36).length) + 160 len 32 * _55969]
            return 32, mem[mem[64] + 32 len (32 * _55969) + 32]
        require mem[96] >= 32
        require mem[128] == bool(mem[128])
        if not mem[128]:
            revert with 0, 'TransferHelper: TRANSFER_FAILED'
        mem[64] = _19348 + (32 * ('cd', 36).length) + 321
        mem[_19348 + 289] = ('cd', 36).length
        mem[_19348 + 321 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
        mem[_19348 + (32 * ('cd', 36).length) + 321] = 0
        idx = 0
        while idx < ('cd', 36).length - 1:
            require idx < mem[_19348 + 289]
            _55843 = mem[(32 * idx) + _19348 + 321]
            require idx + 1 < mem[_19348 + 289]
            _55908 = mem[(32 * idx + 1) + _19348 + 321]
            if mem[(32 * idx) + _19348 + 333 len 20] == mem[(32 * idx + 1) + _19348 + 333 len 20]:
                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
            if mem[(32 * idx) + _19348 + 333 len 20] < mem[(32 * idx + 1) + _19348 + 333 len 20]:
                if not mem[(32 * idx) + _19348 + 333 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                _56317 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                if mem[(32 * idx) + _19348 + 333 len 20] == mem[(32 * idx) + _19348 + 333 len 20]:
                    if idx >= mem[_19348 + 289] - 2:
                        mem[0] = cd[68]
                        mem[32] = 4
                        if mem[(32 * idx) + _19348 + 333 len 20] == mem[(32 * idx + 1) + _19348 + 333 len 20]:
                            revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                        if mem[(32 * idx) + _19348 + 333 len 20] < mem[(32 * idx + 1) + _19348 + 333 len 20]:
                            if not mem[(32 * idx) + _19348 + 333 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58459 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx) + _19348 + 321])
                            mem[mem[64] + 52] = address(_55908)
                            _60881 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _60883 = sha3(mem[_60881 + 32 len mem[_60881]])
                            mem[_58459 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58459 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58459 + 125] = _60883
                            mem[_58459 + 157] = stor4[cd[68]].field_512
                            mem[_58459 + 72] = 85
                            mem[_58459 + 189] = 0
                            mem[64] = _58459 + 221
                            mem[_58459 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_58459 + 225] = 0
                            mem[_58459 + 257] = _56317
                            mem[_58459 + 289] = msg.sender
                            mem[_58459 + 321] = 128
                            mem[_58459 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _58459 + 385] = mem[s + _58459 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60883, stor4[cd[68]].field_512)))
                            call address(sha3(0, stor4[cd[68]].field_0, _60883, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _56317, msg.sender, 128, 0
                        else:
                            if not mem[(32 * idx + 1) + _19348 + 333 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58460 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19348 + 321])
                            mem[mem[64] + 52] = address(_55843)
                            _60885 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _60887 = sha3(mem[_60885 + 32 len mem[_60885]])
                            mem[_58460 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58460 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58460 + 125] = _60887
                            mem[_58460 + 157] = stor4[cd[68]].field_512
                            mem[_58460 + 72] = 85
                            mem[_58460 + 189] = 0
                            mem[64] = _58460 + 221
                            mem[_58460 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_58460 + 225] = 0
                            mem[_58460 + 257] = _56317
                            mem[_58460 + 289] = msg.sender
                            mem[_58460 + 321] = 128
                            mem[_58460 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _58460 + 385] = mem[s + _58460 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60887, stor4[cd[68]].field_512)))
                            call address(sha3(0, stor4[cd[68]].field_0, _60887, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _56317, msg.sender, 128, 0
                    else:
                        require idx + 2 < mem[_19348 + 289]
                        _56701 = mem[(32 * idx + 2) + _19348 + 321]
                        mem[0] = cd[68]
                        mem[32] = 4
                        if mem[(32 * idx + 1) + _19348 + 333 len 20] == mem[(32 * idx + 2) + _19348 + 333 len 20]:
                            revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                        if mem[(32 * idx + 1) + _19348 + 333 len 20] < mem[(32 * idx + 2) + _19348 + 333 len 20]:
                            if not mem[(32 * idx + 1) + _19348 + 333 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58457 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19348 + 321])
                            mem[mem[64] + 52] = address(_56701)
                            _60873 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _60875 = sha3(mem[_60873 + 32 len mem[_60873]])
                            mem[_58457 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58457 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58457 + 125] = _60875
                            mem[_58457 + 157] = stor4[cd[68]].field_512
                            mem[_58457 + 72] = 85
                            mem[0] = cd[68]
                            mem[32] = 4
                            if address(_55843) == address(_55908):
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if address(_55843) < address(_55908):
                                if not address(_55843):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58457 + 221] = address(_55843)
                                mem[_58457 + 241] = address(_55908)
                                mem[_58457 + 189] = 40
                                mem[_58457 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58457 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58457 + 314] = sha3(address(_55843), address(_55908))
                                mem[_58457 + 346] = stor4[cd[68]].field_512
                                mem[_58457 + 261] = 85
                                mem[_58457 + 378] = 0
                                mem[64] = _58457 + 410
                                mem[_58457 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58457 + 414] = 0
                                mem[_58457 + 446] = _56317
                                mem[_58457 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60875, stor4[cd[68]].field_512))
                                mem[_58457 + 510] = 128
                                mem[_58457 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58457 + 574] = mem[s + _58457 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55843), address(_55908)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55843), address(_55908)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _56317, address(sha3(0, stor4[cd[68]].field_0, _60875, stor4[cd[68]].field_512)), 128, 0
                            else:
                                if not address(_55908):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58457 + 221] = address(_55908)
                                mem[_58457 + 241] = address(_55843)
                                mem[_58457 + 189] = 40
                                mem[_58457 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58457 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58457 + 314] = sha3(address(_55908), address(_55843))
                                mem[_58457 + 346] = stor4[cd[68]].field_512
                                mem[_58457 + 261] = 85
                                mem[_58457 + 378] = 0
                                mem[64] = _58457 + 410
                                mem[_58457 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58457 + 414] = 0
                                mem[_58457 + 446] = _56317
                                mem[_58457 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60875, stor4[cd[68]].field_512))
                                mem[_58457 + 510] = 128
                                mem[_58457 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58457 + 574] = mem[s + _58457 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55908), address(_55843)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55908), address(_55843)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _56317, address(sha3(0, stor4[cd[68]].field_0, _60875, stor4[cd[68]].field_512)), 128, 0
                        else:
                            if not mem[(32 * idx + 2) + _19348 + 333 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58458 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19348 + 321])
                            mem[mem[64] + 52] = address(_55908)
                            _60877 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _60879 = sha3(mem[_60877 + 32 len mem[_60877]])
                            mem[_58458 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58458 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58458 + 125] = _60879
                            mem[_58458 + 157] = stor4[cd[68]].field_512
                            mem[_58458 + 72] = 85
                            mem[0] = cd[68]
                            mem[32] = 4
                            if address(_55843) == address(_55908):
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if address(_55843) < address(_55908):
                                if not address(_55843):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58458 + 221] = address(_55843)
                                mem[_58458 + 241] = address(_55908)
                                mem[_58458 + 189] = 40
                                mem[_58458 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58458 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58458 + 314] = sha3(address(_55843), address(_55908))
                                mem[_58458 + 346] = stor4[cd[68]].field_512
                                mem[_58458 + 261] = 85
                                mem[_58458 + 378] = 0
                                mem[64] = _58458 + 410
                                mem[_58458 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58458 + 414] = 0
                                mem[_58458 + 446] = _56317
                                mem[_58458 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60879, stor4[cd[68]].field_512))
                                mem[_58458 + 510] = 128
                                mem[_58458 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58458 + 574] = mem[s + _58458 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55843), address(_55908)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55843), address(_55908)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _56317, address(sha3(0, stor4[cd[68]].field_0, _60879, stor4[cd[68]].field_512)), 128, 0
                            else:
                                if not address(_55908):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58458 + 221] = address(_55908)
                                mem[_58458 + 241] = address(_55843)
                                mem[_58458 + 189] = 40
                                mem[_58458 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58458 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58458 + 314] = sha3(address(_55908), address(_55843))
                                mem[_58458 + 346] = stor4[cd[68]].field_512
                                mem[_58458 + 261] = 85
                                mem[_58458 + 378] = 0
                                mem[64] = _58458 + 410
                                mem[_58458 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58458 + 414] = 0
                                mem[_58458 + 446] = _56317
                                mem[_58458 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60879, stor4[cd[68]].field_512))
                                mem[_58458 + 510] = 128
                                mem[_58458 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58458 + 574] = mem[s + _58458 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55908), address(_55843)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55908), address(_55843)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _56317, address(sha3(0, stor4[cd[68]].field_0, _60879, stor4[cd[68]].field_512)), 128, 0
                else:
                    if idx >= mem[_19348 + 289] - 2:
                        mem[0] = cd[68]
                        mem[32] = 4
                        if mem[(32 * idx) + _19348 + 333 len 20] == mem[(32 * idx + 1) + _19348 + 333 len 20]:
                            revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                        if mem[(32 * idx) + _19348 + 333 len 20] < mem[(32 * idx + 1) + _19348 + 333 len 20]:
                            if not mem[(32 * idx) + _19348 + 333 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58463 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx) + _19348 + 321])
                            mem[mem[64] + 52] = address(_55908)
                            _60897 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _60899 = sha3(mem[_60897 + 32 len mem[_60897]])
                            mem[_58463 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58463 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58463 + 125] = _60899
                            mem[_58463 + 157] = stor4[cd[68]].field_512
                            mem[_58463 + 72] = 85
                            mem[_58463 + 189] = 0
                            mem[64] = _58463 + 221
                            mem[_58463 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_58463 + 225] = _56317
                            mem[_58463 + 257] = 0
                            mem[_58463 + 289] = msg.sender
                            mem[_58463 + 321] = 128
                            mem[_58463 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _58463 + 385] = mem[s + _58463 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60899, stor4[cd[68]].field_512)))
                            call address(sha3(0, stor4[cd[68]].field_0, _60899, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _56317, 0, msg.sender, 128, 0
                        else:
                            if not mem[(32 * idx + 1) + _19348 + 333 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58464 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19348 + 321])
                            mem[mem[64] + 52] = address(_55843)
                            _60901 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _60903 = sha3(mem[_60901 + 32 len mem[_60901]])
                            mem[_58464 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58464 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58464 + 125] = _60903
                            mem[_58464 + 157] = stor4[cd[68]].field_512
                            mem[_58464 + 72] = 85
                            mem[_58464 + 189] = 0
                            mem[64] = _58464 + 221
                            mem[_58464 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_58464 + 225] = _56317
                            mem[_58464 + 257] = 0
                            mem[_58464 + 289] = msg.sender
                            mem[_58464 + 321] = 128
                            mem[_58464 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _58464 + 385] = mem[s + _58464 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60903, stor4[cd[68]].field_512)))
                            call address(sha3(0, stor4[cd[68]].field_0, _60903, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _56317, 0, msg.sender, 128, 0
                    else:
                        require idx + 2 < mem[_19348 + 289]
                        _56702 = mem[(32 * idx + 2) + _19348 + 321]
                        mem[0] = cd[68]
                        mem[32] = 4
                        if mem[(32 * idx + 1) + _19348 + 333 len 20] == mem[(32 * idx + 2) + _19348 + 333 len 20]:
                            revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                        if mem[(32 * idx + 1) + _19348 + 333 len 20] < mem[(32 * idx + 2) + _19348 + 333 len 20]:
                            if not mem[(32 * idx + 1) + _19348 + 333 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58461 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19348 + 321])
                            mem[mem[64] + 52] = address(_56702)
                            _60889 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _60891 = sha3(mem[_60889 + 32 len mem[_60889]])
                            mem[_58461 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58461 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58461 + 125] = _60891
                            mem[_58461 + 157] = stor4[cd[68]].field_512
                            mem[_58461 + 72] = 85
                            mem[0] = cd[68]
                            mem[32] = 4
                            if address(_55843) == address(_55908):
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if address(_55843) < address(_55908):
                                if not address(_55843):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58461 + 221] = address(_55843)
                                mem[_58461 + 241] = address(_55908)
                                mem[_58461 + 189] = 40
                                mem[_58461 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58461 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58461 + 314] = sha3(address(_55843), address(_55908))
                                mem[_58461 + 346] = stor4[cd[68]].field_512
                                mem[_58461 + 261] = 85
                                mem[_58461 + 378] = 0
                                mem[64] = _58461 + 410
                                mem[_58461 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58461 + 414] = _56317
                                mem[_58461 + 446] = 0
                                mem[_58461 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60891, stor4[cd[68]].field_512))
                                mem[_58461 + 510] = 128
                                mem[_58461 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58461 + 574] = mem[s + _58461 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55843), address(_55908)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55843), address(_55908)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _56317, 0, address(sha3(0, stor4[cd[68]].field_0, _60891, stor4[cd[68]].field_512)), 128, 0
                            else:
                                if not address(_55908):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58461 + 221] = address(_55908)
                                mem[_58461 + 241] = address(_55843)
                                mem[_58461 + 189] = 40
                                mem[_58461 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58461 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58461 + 314] = sha3(address(_55908), address(_55843))
                                mem[_58461 + 346] = stor4[cd[68]].field_512
                                mem[_58461 + 261] = 85
                                mem[_58461 + 378] = 0
                                mem[64] = _58461 + 410
                                mem[_58461 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58461 + 414] = _56317
                                mem[_58461 + 446] = 0
                                mem[_58461 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60891, stor4[cd[68]].field_512))
                                mem[_58461 + 510] = 128
                                mem[_58461 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58461 + 574] = mem[s + _58461 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55908), address(_55843)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55908), address(_55843)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _56317, 0, address(sha3(0, stor4[cd[68]].field_0, _60891, stor4[cd[68]].field_512)), 128, 0
                        else:
                            if not mem[(32 * idx + 2) + _19348 + 333 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58462 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19348 + 321])
                            mem[mem[64] + 52] = address(_55908)
                            _60893 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _60895 = sha3(mem[_60893 + 32 len mem[_60893]])
                            mem[_58462 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58462 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58462 + 125] = _60895
                            mem[_58462 + 157] = stor4[cd[68]].field_512
                            mem[_58462 + 72] = 85
                            mem[0] = cd[68]
                            mem[32] = 4
                            if address(_55843) == address(_55908):
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if address(_55843) < address(_55908):
                                if not address(_55843):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58462 + 221] = address(_55843)
                                mem[_58462 + 241] = address(_55908)
                                mem[_58462 + 189] = 40
                                mem[_58462 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58462 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58462 + 314] = sha3(address(_55843), address(_55908))
                                mem[_58462 + 346] = stor4[cd[68]].field_512
                                mem[_58462 + 261] = 85
                                mem[_58462 + 378] = 0
                                mem[64] = _58462 + 410
                                mem[_58462 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58462 + 414] = _56317
                                mem[_58462 + 446] = 0
                                mem[_58462 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60895, stor4[cd[68]].field_512))
                                mem[_58462 + 510] = 128
                                mem[_58462 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58462 + 574] = mem[s + _58462 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55843), address(_55908)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55843), address(_55908)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _56317, 0, address(sha3(0, stor4[cd[68]].field_0, _60895, stor4[cd[68]].field_512)), 128, 0
                            else:
                                if not address(_55908):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58462 + 221] = address(_55908)
                                mem[_58462 + 241] = address(_55843)
                                mem[_58462 + 189] = 40
                                mem[_58462 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58462 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58462 + 314] = sha3(address(_55908), address(_55843))
                                mem[_58462 + 346] = stor4[cd[68]].field_512
                                mem[_58462 + 261] = 85
                                mem[_58462 + 378] = 0
                                mem[64] = _58462 + 410
                                mem[_58462 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58462 + 414] = _56317
                                mem[_58462 + 446] = 0
                                mem[_58462 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60895, stor4[cd[68]].field_512))
                                mem[_58462 + 510] = 128
                                mem[_58462 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58462 + 574] = mem[s + _58462 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55908), address(_55843)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55908), address(_55843)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _56317, 0, address(sha3(0, stor4[cd[68]].field_0, _60895, stor4[cd[68]].field_512)), 128, 0
            else:
                if not mem[(32 * idx + 1) + _19348 + 333 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                _56319 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                if mem[(32 * idx) + _19348 + 333 len 20] == mem[(32 * idx + 1) + _19348 + 333 len 20]:
                    if idx >= mem[_19348 + 289] - 2:
                        mem[0] = cd[68]
                        mem[32] = 4
                        if mem[(32 * idx) + _19348 + 333 len 20] == mem[(32 * idx + 1) + _19348 + 333 len 20]:
                            revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                        if mem[(32 * idx) + _19348 + 333 len 20] < mem[(32 * idx + 1) + _19348 + 333 len 20]:
                            if not mem[(32 * idx) + _19348 + 333 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58467 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx) + _19348 + 321])
                            mem[mem[64] + 52] = address(_55908)
                            _60913 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _60915 = sha3(mem[_60913 + 32 len mem[_60913]])
                            mem[_58467 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58467 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58467 + 125] = _60915
                            mem[_58467 + 157] = stor4[cd[68]].field_512
                            mem[_58467 + 72] = 85
                            mem[_58467 + 189] = 0
                            mem[64] = _58467 + 221
                            mem[_58467 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_58467 + 225] = 0
                            mem[_58467 + 257] = _56319
                            mem[_58467 + 289] = msg.sender
                            mem[_58467 + 321] = 128
                            mem[_58467 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _58467 + 385] = mem[s + _58467 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60915, stor4[cd[68]].field_512)))
                            call address(sha3(0, stor4[cd[68]].field_0, _60915, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _56319, msg.sender, 128, 0
                        else:
                            if not mem[(32 * idx + 1) + _19348 + 333 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58468 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19348 + 321])
                            mem[mem[64] + 52] = address(_55843)
                            _60917 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _60919 = sha3(mem[_60917 + 32 len mem[_60917]])
                            mem[_58468 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58468 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58468 + 125] = _60919
                            mem[_58468 + 157] = stor4[cd[68]].field_512
                            mem[_58468 + 72] = 85
                            mem[_58468 + 189] = 0
                            mem[64] = _58468 + 221
                            mem[_58468 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_58468 + 225] = 0
                            mem[_58468 + 257] = _56319
                            mem[_58468 + 289] = msg.sender
                            mem[_58468 + 321] = 128
                            mem[_58468 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _58468 + 385] = mem[s + _58468 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60919, stor4[cd[68]].field_512)))
                            call address(sha3(0, stor4[cd[68]].field_0, _60919, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _56319, msg.sender, 128, 0
                    else:
                        require idx + 2 < mem[_19348 + 289]
                        _56703 = mem[(32 * idx + 2) + _19348 + 321]
                        mem[0] = cd[68]
                        mem[32] = 4
                        if mem[(32 * idx + 1) + _19348 + 333 len 20] == mem[(32 * idx + 2) + _19348 + 333 len 20]:
                            revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                        if mem[(32 * idx + 1) + _19348 + 333 len 20] < mem[(32 * idx + 2) + _19348 + 333 len 20]:
                            if not mem[(32 * idx + 1) + _19348 + 333 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58465 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19348 + 321])
                            mem[mem[64] + 52] = address(_56703)
                            _60905 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _60907 = sha3(mem[_60905 + 32 len mem[_60905]])
                            mem[_58465 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58465 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58465 + 125] = _60907
                            mem[_58465 + 157] = stor4[cd[68]].field_512
                            mem[_58465 + 72] = 85
                            mem[0] = cd[68]
                            mem[32] = 4
                            if address(_55843) == address(_55908):
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if address(_55843) < address(_55908):
                                if not address(_55843):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58465 + 221] = address(_55843)
                                mem[_58465 + 241] = address(_55908)
                                mem[_58465 + 189] = 40
                                mem[_58465 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58465 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58465 + 314] = sha3(address(_55843), address(_55908))
                                mem[_58465 + 346] = stor4[cd[68]].field_512
                                mem[_58465 + 261] = 85
                                mem[_58465 + 378] = 0
                                mem[64] = _58465 + 410
                                mem[_58465 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58465 + 414] = 0
                                mem[_58465 + 446] = _56319
                                mem[_58465 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60907, stor4[cd[68]].field_512))
                                mem[_58465 + 510] = 128
                                mem[_58465 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58465 + 574] = mem[s + _58465 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55843), address(_55908)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55843), address(_55908)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _56319, address(sha3(0, stor4[cd[68]].field_0, _60907, stor4[cd[68]].field_512)), 128, 0
                            else:
                                if not address(_55908):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58465 + 221] = address(_55908)
                                mem[_58465 + 241] = address(_55843)
                                mem[_58465 + 189] = 40
                                mem[_58465 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58465 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58465 + 314] = sha3(address(_55908), address(_55843))
                                mem[_58465 + 346] = stor4[cd[68]].field_512
                                mem[_58465 + 261] = 85
                                mem[_58465 + 378] = 0
                                mem[64] = _58465 + 410
                                mem[_58465 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58465 + 414] = 0
                                mem[_58465 + 446] = _56319
                                mem[_58465 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60907, stor4[cd[68]].field_512))
                                mem[_58465 + 510] = 128
                                mem[_58465 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58465 + 574] = mem[s + _58465 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55908), address(_55843)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55908), address(_55843)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _56319, address(sha3(0, stor4[cd[68]].field_0, _60907, stor4[cd[68]].field_512)), 128, 0
                        else:
                            if not mem[(32 * idx + 2) + _19348 + 333 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58466 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19348 + 321])
                            mem[mem[64] + 52] = address(_55908)
                            _60909 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _60911 = sha3(mem[_60909 + 32 len mem[_60909]])
                            mem[_58466 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58466 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58466 + 125] = _60911
                            mem[_58466 + 157] = stor4[cd[68]].field_512
                            mem[_58466 + 72] = 85
                            mem[0] = cd[68]
                            mem[32] = 4
                            if address(_55843) == address(_55908):
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if address(_55843) < address(_55908):
                                if not address(_55843):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58466 + 221] = address(_55843)
                                mem[_58466 + 241] = address(_55908)
                                mem[_58466 + 189] = 40
                                mem[_58466 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58466 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58466 + 314] = sha3(address(_55843), address(_55908))
                                mem[_58466 + 346] = stor4[cd[68]].field_512
                                mem[_58466 + 261] = 85
                                mem[_58466 + 378] = 0
                                mem[64] = _58466 + 410
                                mem[_58466 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58466 + 414] = 0
                                mem[_58466 + 446] = _56319
                                mem[_58466 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60911, stor4[cd[68]].field_512))
                                mem[_58466 + 510] = 128
                                mem[_58466 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58466 + 574] = mem[s + _58466 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55843), address(_55908)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55843), address(_55908)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _56319, address(sha3(0, stor4[cd[68]].field_0, _60911, stor4[cd[68]].field_512)), 128, 0
                            else:
                                if not address(_55908):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58466 + 221] = address(_55908)
                                mem[_58466 + 241] = address(_55843)
                                mem[_58466 + 189] = 40
                                mem[_58466 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58466 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58466 + 314] = sha3(address(_55908), address(_55843))
                                mem[_58466 + 346] = stor4[cd[68]].field_512
                                mem[_58466 + 261] = 85
                                mem[_58466 + 378] = 0
                                mem[64] = _58466 + 410
                                mem[_58466 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58466 + 414] = 0
                                mem[_58466 + 446] = _56319
                                mem[_58466 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60911, stor4[cd[68]].field_512))
                                mem[_58466 + 510] = 128
                                mem[_58466 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58466 + 574] = mem[s + _58466 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55908), address(_55843)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55908), address(_55843)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _56319, address(sha3(0, stor4[cd[68]].field_0, _60911, stor4[cd[68]].field_512)), 128, 0
                else:
                    if idx >= mem[_19348 + 289] - 2:
                        mem[0] = cd[68]
                        mem[32] = 4
                        if mem[(32 * idx) + _19348 + 333 len 20] == mem[(32 * idx + 1) + _19348 + 333 len 20]:
                            revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                        if mem[(32 * idx) + _19348 + 333 len 20] < mem[(32 * idx + 1) + _19348 + 333 len 20]:
                            if not mem[(32 * idx) + _19348 + 333 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58471 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx) + _19348 + 321])
                            mem[mem[64] + 52] = address(_55908)
                            _60929 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _60931 = sha3(mem[_60929 + 32 len mem[_60929]])
                            mem[_58471 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58471 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58471 + 125] = _60931
                            mem[_58471 + 157] = stor4[cd[68]].field_512
                            mem[_58471 + 72] = 85
                            mem[_58471 + 189] = 0
                            mem[64] = _58471 + 221
                            mem[_58471 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_58471 + 225] = _56319
                            mem[_58471 + 257] = 0
                            mem[_58471 + 289] = msg.sender
                            mem[_58471 + 321] = 128
                            mem[_58471 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _58471 + 385] = mem[s + _58471 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60931, stor4[cd[68]].field_512)))
                            call address(sha3(0, stor4[cd[68]].field_0, _60931, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _56319, 0, msg.sender, 128, 0
                        else:
                            if not mem[(32 * idx + 1) + _19348 + 333 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58472 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19348 + 321])
                            mem[mem[64] + 52] = address(_55843)
                            _60933 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _60935 = sha3(mem[_60933 + 32 len mem[_60933]])
                            mem[_58472 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58472 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58472 + 125] = _60935
                            mem[_58472 + 157] = stor4[cd[68]].field_512
                            mem[_58472 + 72] = 85
                            mem[_58472 + 189] = 0
                            mem[64] = _58472 + 221
                            mem[_58472 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_58472 + 225] = _56319
                            mem[_58472 + 257] = 0
                            mem[_58472 + 289] = msg.sender
                            mem[_58472 + 321] = 128
                            mem[_58472 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _58472 + 385] = mem[s + _58472 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60935, stor4[cd[68]].field_512)))
                            call address(sha3(0, stor4[cd[68]].field_0, _60935, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _56319, 0, msg.sender, 128, 0
                    else:
                        require idx + 2 < mem[_19348 + 289]
                        _56704 = mem[(32 * idx + 2) + _19348 + 321]
                        mem[0] = cd[68]
                        mem[32] = 4
                        if mem[(32 * idx + 1) + _19348 + 333 len 20] == mem[(32 * idx + 2) + _19348 + 333 len 20]:
                            revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                        if mem[(32 * idx + 1) + _19348 + 333 len 20] < mem[(32 * idx + 2) + _19348 + 333 len 20]:
                            if not mem[(32 * idx + 1) + _19348 + 333 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58469 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19348 + 321])
                            mem[mem[64] + 52] = address(_56704)
                            _60921 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _60923 = sha3(mem[_60921 + 32 len mem[_60921]])
                            mem[_58469 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58469 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58469 + 125] = _60923
                            mem[_58469 + 157] = stor4[cd[68]].field_512
                            mem[_58469 + 72] = 85
                            mem[0] = cd[68]
                            mem[32] = 4
                            if address(_55843) == address(_55908):
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if address(_55843) < address(_55908):
                                if not address(_55843):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58469 + 221] = address(_55843)
                                mem[_58469 + 241] = address(_55908)
                                mem[_58469 + 189] = 40
                                mem[_58469 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58469 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58469 + 314] = sha3(address(_55843), address(_55908))
                                mem[_58469 + 346] = stor4[cd[68]].field_512
                                mem[_58469 + 261] = 85
                                mem[_58469 + 378] = 0
                                mem[64] = _58469 + 410
                                mem[_58469 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58469 + 414] = _56319
                                mem[_58469 + 446] = 0
                                mem[_58469 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60923, stor4[cd[68]].field_512))
                                mem[_58469 + 510] = 128
                                mem[_58469 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58469 + 574] = mem[s + _58469 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55843), address(_55908)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55843), address(_55908)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _56319, 0, address(sha3(0, stor4[cd[68]].field_0, _60923, stor4[cd[68]].field_512)), 128, 0
                            else:
                                if not address(_55908):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58469 + 221] = address(_55908)
                                mem[_58469 + 241] = address(_55843)
                                mem[_58469 + 189] = 40
                                mem[_58469 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58469 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58469 + 314] = sha3(address(_55908), address(_55843))
                                mem[_58469 + 346] = stor4[cd[68]].field_512
                                mem[_58469 + 261] = 85
                                mem[_58469 + 378] = 0
                                mem[64] = _58469 + 410
                                mem[_58469 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58469 + 414] = _56319
                                mem[_58469 + 446] = 0
                                mem[_58469 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60923, stor4[cd[68]].field_512))
                                mem[_58469 + 510] = 128
                                mem[_58469 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58469 + 574] = mem[s + _58469 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55908), address(_55843)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55908), address(_55843)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _56319, 0, address(sha3(0, stor4[cd[68]].field_0, _60923, stor4[cd[68]].field_512)), 128, 0
                        else:
                            if not mem[(32 * idx + 2) + _19348 + 333 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58470 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19348 + 321])
                            mem[mem[64] + 52] = address(_55908)
                            _60925 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _60927 = sha3(mem[_60925 + 32 len mem[_60925]])
                            mem[_58470 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58470 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58470 + 125] = _60927
                            mem[_58470 + 157] = stor4[cd[68]].field_512
                            mem[_58470 + 72] = 85
                            mem[0] = cd[68]
                            mem[32] = 4
                            if address(_55843) == address(_55908):
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if address(_55843) < address(_55908):
                                if not address(_55843):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58470 + 221] = address(_55843)
                                mem[_58470 + 241] = address(_55908)
                                mem[_58470 + 189] = 40
                                mem[_58470 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58470 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58470 + 314] = sha3(address(_55843), address(_55908))
                                mem[_58470 + 346] = stor4[cd[68]].field_512
                                mem[_58470 + 261] = 85
                                mem[_58470 + 378] = 0
                                mem[64] = _58470 + 410
                                mem[_58470 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58470 + 414] = _56319
                                mem[_58470 + 446] = 0
                                mem[_58470 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60927, stor4[cd[68]].field_512))
                                mem[_58470 + 510] = 128
                                mem[_58470 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58470 + 574] = mem[s + _58470 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55843), address(_55908)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55843), address(_55908)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _56319, 0, address(sha3(0, stor4[cd[68]].field_0, _60927, stor4[cd[68]].field_512)), 128, 0
                            else:
                                if not address(_55908):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58470 + 221] = address(_55908)
                                mem[_58470 + 241] = address(_55843)
                                mem[_58470 + 189] = 40
                                mem[_58470 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58470 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58470 + 314] = sha3(address(_55908), address(_55843))
                                mem[_58470 + 346] = stor4[cd[68]].field_512
                                mem[_58470 + 261] = 85
                                mem[_58470 + 378] = 0
                                mem[64] = _58470 + 410
                                mem[_58470 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58470 + 414] = _56319
                                mem[_58470 + 446] = 0
                                mem[_58470 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60927, stor4[cd[68]].field_512))
                                mem[_58470 + 510] = 128
                                mem[_58470 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58470 + 574] = mem[s + _58470 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55908), address(_55843)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55908), address(_55843)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _56319, 0, address(sha3(0, stor4[cd[68]].field_0, _60927, stor4[cd[68]].field_512)), 128, 0
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            idx = idx + 1
            continue 
        mem[mem[64]] = 32
        _55971 = mem[(32 * ('cd', 36).length) + 128]
        mem[mem[64] + 32] = mem[(32 * ('cd', 36).length) + 128]
        mem[mem[64] + 64 len 32 * _55971] = mem[(32 * ('cd', 36).length) + 160 len 32 * _55971]
        return 32, mem[mem[64] + 32 len (32 * _55971) + 32]
    mem[_19348 + 289] = return_data.size
    mem[_19348 + 321 len return_data.size] = ext_call.return_data[0 len return_data.size]
    if not ext_call.success:
        revert with 0, 'TransferHelper: TRANSFER_FAILED'
    if not return_data.size:
        mem[64] = _19348 + ceil32(return_data.size) + (32 * ('cd', 36).length) + 322
        mem[_19348 + ceil32(return_data.size) + 290] = ('cd', 36).length
        mem[_19348 + ceil32(return_data.size) + 322 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
        mem[_19348 + ceil32(return_data.size) + (32 * ('cd', 36).length) + 322] = 0
        idx = 0
        while idx < ('cd', 36).length - 1:
            require idx < mem[_19348 + ceil32(return_data.size) + 290]
            _55845 = mem[(32 * idx) + _19348 + ceil32(return_data.size) + 322]
            require idx + 1 < mem[_19348 + ceil32(return_data.size) + 290]
            _55910 = mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 322]
            if mem[(32 * idx) + _19348 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 334 len 20]:
                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
            if mem[(32 * idx) + _19348 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 334 len 20]:
                if not mem[(32 * idx) + _19348 + ceil32(return_data.size) + 334 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                _56321 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                if mem[(32 * idx) + _19348 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx) + _19348 + ceil32(return_data.size) + 334 len 20]:
                    if idx >= mem[_19348 + ceil32(return_data.size) + 290] - 2:
                        mem[0] = cd[68]
                        mem[32] = 4
                        if mem[(32 * idx) + _19348 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 334 len 20]:
                            revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                        if mem[(32 * idx) + _19348 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 334 len 20]:
                            if not mem[(32 * idx) + _19348 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58475 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx) + _19348 + ceil32(return_data.size) + 322])
                            mem[mem[64] + 52] = address(_55910)
                            _60945 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _60947 = sha3(mem[_60945 + 32 len mem[_60945]])
                            mem[_58475 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58475 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58475 + 125] = _60947
                            mem[_58475 + 157] = stor4[cd[68]].field_512
                            mem[_58475 + 72] = 85
                            mem[_58475 + 189] = 0
                            mem[64] = _58475 + 221
                            mem[_58475 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_58475 + 225] = 0
                            mem[_58475 + 257] = _56321
                            mem[_58475 + 289] = msg.sender
                            mem[_58475 + 321] = 128
                            mem[_58475 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _58475 + 385] = mem[s + _58475 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60947, stor4[cd[68]].field_512)))
                            call address(sha3(0, stor4[cd[68]].field_0, _60947, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _56321, msg.sender, 128, 0
                        else:
                            if not mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58476 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 322])
                            mem[mem[64] + 52] = address(_55845)
                            _60949 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _60951 = sha3(mem[_60949 + 32 len mem[_60949]])
                            mem[_58476 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58476 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58476 + 125] = _60951
                            mem[_58476 + 157] = stor4[cd[68]].field_512
                            mem[_58476 + 72] = 85
                            mem[_58476 + 189] = 0
                            mem[64] = _58476 + 221
                            mem[_58476 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_58476 + 225] = 0
                            mem[_58476 + 257] = _56321
                            mem[_58476 + 289] = msg.sender
                            mem[_58476 + 321] = 128
                            mem[_58476 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _58476 + 385] = mem[s + _58476 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60951, stor4[cd[68]].field_512)))
                            call address(sha3(0, stor4[cd[68]].field_0, _60951, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _56321, msg.sender, 128, 0
                    else:
                        require idx + 2 < mem[_19348 + ceil32(return_data.size) + 290]
                        _56705 = mem[(32 * idx + 2) + _19348 + ceil32(return_data.size) + 322]
                        mem[0] = cd[68]
                        mem[32] = 4
                        if mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 2) + _19348 + ceil32(return_data.size) + 334 len 20]:
                            revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                        if mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 2) + _19348 + ceil32(return_data.size) + 334 len 20]:
                            if not mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58473 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 322])
                            mem[mem[64] + 52] = address(_56705)
                            _60937 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _60939 = sha3(mem[_60937 + 32 len mem[_60937]])
                            mem[_58473 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58473 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58473 + 125] = _60939
                            mem[_58473 + 157] = stor4[cd[68]].field_512
                            mem[_58473 + 72] = 85
                            mem[0] = cd[68]
                            mem[32] = 4
                            if address(_55845) == address(_55910):
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if address(_55845) < address(_55910):
                                if not address(_55845):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58473 + 221] = address(_55845)
                                mem[_58473 + 241] = address(_55910)
                                mem[_58473 + 189] = 40
                                mem[_58473 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58473 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58473 + 314] = sha3(address(_55845), address(_55910))
                                mem[_58473 + 346] = stor4[cd[68]].field_512
                                mem[_58473 + 261] = 85
                                mem[_58473 + 378] = 0
                                mem[64] = _58473 + 410
                                mem[_58473 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58473 + 414] = 0
                                mem[_58473 + 446] = _56321
                                mem[_58473 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60939, stor4[cd[68]].field_512))
                                mem[_58473 + 510] = 128
                                mem[_58473 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58473 + 574] = mem[s + _58473 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55845), address(_55910)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55845), address(_55910)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _56321, address(sha3(0, stor4[cd[68]].field_0, _60939, stor4[cd[68]].field_512)), 128, 0
                            else:
                                if not address(_55910):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58473 + 221] = address(_55910)
                                mem[_58473 + 241] = address(_55845)
                                mem[_58473 + 189] = 40
                                mem[_58473 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58473 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58473 + 314] = sha3(address(_55910), address(_55845))
                                mem[_58473 + 346] = stor4[cd[68]].field_512
                                mem[_58473 + 261] = 85
                                mem[_58473 + 378] = 0
                                mem[64] = _58473 + 410
                                mem[_58473 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58473 + 414] = 0
                                mem[_58473 + 446] = _56321
                                mem[_58473 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60939, stor4[cd[68]].field_512))
                                mem[_58473 + 510] = 128
                                mem[_58473 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58473 + 574] = mem[s + _58473 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55910), address(_55845)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55910), address(_55845)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _56321, address(sha3(0, stor4[cd[68]].field_0, _60939, stor4[cd[68]].field_512)), 128, 0
                        else:
                            if not mem[(32 * idx + 2) + _19348 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58474 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19348 + ceil32(return_data.size) + 322])
                            mem[mem[64] + 52] = address(_55910)
                            _60941 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _60943 = sha3(mem[_60941 + 32 len mem[_60941]])
                            mem[_58474 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58474 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58474 + 125] = _60943
                            mem[_58474 + 157] = stor4[cd[68]].field_512
                            mem[_58474 + 72] = 85
                            mem[0] = cd[68]
                            mem[32] = 4
                            if address(_55845) == address(_55910):
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if address(_55845) < address(_55910):
                                if not address(_55845):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58474 + 221] = address(_55845)
                                mem[_58474 + 241] = address(_55910)
                                mem[_58474 + 189] = 40
                                mem[_58474 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58474 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58474 + 314] = sha3(address(_55845), address(_55910))
                                mem[_58474 + 346] = stor4[cd[68]].field_512
                                mem[_58474 + 261] = 85
                                mem[_58474 + 378] = 0
                                mem[64] = _58474 + 410
                                mem[_58474 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58474 + 414] = 0
                                mem[_58474 + 446] = _56321
                                mem[_58474 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60943, stor4[cd[68]].field_512))
                                mem[_58474 + 510] = 128
                                mem[_58474 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58474 + 574] = mem[s + _58474 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55845), address(_55910)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55845), address(_55910)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _56321, address(sha3(0, stor4[cd[68]].field_0, _60943, stor4[cd[68]].field_512)), 128, 0
                            else:
                                if not address(_55910):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58474 + 221] = address(_55910)
                                mem[_58474 + 241] = address(_55845)
                                mem[_58474 + 189] = 40
                                mem[_58474 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58474 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58474 + 314] = sha3(address(_55910), address(_55845))
                                mem[_58474 + 346] = stor4[cd[68]].field_512
                                mem[_58474 + 261] = 85
                                mem[_58474 + 378] = 0
                                mem[64] = _58474 + 410
                                mem[_58474 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58474 + 414] = 0
                                mem[_58474 + 446] = _56321
                                mem[_58474 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60943, stor4[cd[68]].field_512))
                                mem[_58474 + 510] = 128
                                mem[_58474 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58474 + 574] = mem[s + _58474 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55910), address(_55845)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55910), address(_55845)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _56321, address(sha3(0, stor4[cd[68]].field_0, _60943, stor4[cd[68]].field_512)), 128, 0
                else:
                    if idx >= mem[_19348 + ceil32(return_data.size) + 290] - 2:
                        mem[0] = cd[68]
                        mem[32] = 4
                        if mem[(32 * idx) + _19348 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 334 len 20]:
                            revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                        if mem[(32 * idx) + _19348 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 334 len 20]:
                            if not mem[(32 * idx) + _19348 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58479 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx) + _19348 + ceil32(return_data.size) + 322])
                            mem[mem[64] + 52] = address(_55910)
                            _60961 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _60963 = sha3(mem[_60961 + 32 len mem[_60961]])
                            mem[_58479 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58479 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58479 + 125] = _60963
                            mem[_58479 + 157] = stor4[cd[68]].field_512
                            mem[_58479 + 72] = 85
                            mem[_58479 + 189] = 0
                            mem[64] = _58479 + 221
                            mem[_58479 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_58479 + 225] = _56321
                            mem[_58479 + 257] = 0
                            mem[_58479 + 289] = msg.sender
                            mem[_58479 + 321] = 128
                            mem[_58479 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _58479 + 385] = mem[s + _58479 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60963, stor4[cd[68]].field_512)))
                            call address(sha3(0, stor4[cd[68]].field_0, _60963, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _56321, 0, msg.sender, 128, 0
                        else:
                            if not mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58480 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 322])
                            mem[mem[64] + 52] = address(_55845)
                            _60965 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _60967 = sha3(mem[_60965 + 32 len mem[_60965]])
                            mem[_58480 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58480 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58480 + 125] = _60967
                            mem[_58480 + 157] = stor4[cd[68]].field_512
                            mem[_58480 + 72] = 85
                            mem[_58480 + 189] = 0
                            mem[64] = _58480 + 221
                            mem[_58480 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_58480 + 225] = _56321
                            mem[_58480 + 257] = 0
                            mem[_58480 + 289] = msg.sender
                            mem[_58480 + 321] = 128
                            mem[_58480 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _58480 + 385] = mem[s + _58480 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60967, stor4[cd[68]].field_512)))
                            call address(sha3(0, stor4[cd[68]].field_0, _60967, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _56321, 0, msg.sender, 128, 0
                    else:
                        require idx + 2 < mem[_19348 + ceil32(return_data.size) + 290]
                        _56706 = mem[(32 * idx + 2) + _19348 + ceil32(return_data.size) + 322]
                        mem[0] = cd[68]
                        mem[32] = 4
                        if mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 2) + _19348 + ceil32(return_data.size) + 334 len 20]:
                            revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                        if mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 2) + _19348 + ceil32(return_data.size) + 334 len 20]:
                            if not mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58477 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 322])
                            mem[mem[64] + 52] = address(_56706)
                            _60953 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _60955 = sha3(mem[_60953 + 32 len mem[_60953]])
                            mem[_58477 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58477 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58477 + 125] = _60955
                            mem[_58477 + 157] = stor4[cd[68]].field_512
                            mem[_58477 + 72] = 85
                            mem[0] = cd[68]
                            mem[32] = 4
                            if address(_55845) == address(_55910):
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if address(_55845) < address(_55910):
                                if not address(_55845):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58477 + 221] = address(_55845)
                                mem[_58477 + 241] = address(_55910)
                                mem[_58477 + 189] = 40
                                mem[_58477 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58477 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58477 + 314] = sha3(address(_55845), address(_55910))
                                mem[_58477 + 346] = stor4[cd[68]].field_512
                                mem[_58477 + 261] = 85
                                mem[_58477 + 378] = 0
                                mem[64] = _58477 + 410
                                mem[_58477 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58477 + 414] = _56321
                                mem[_58477 + 446] = 0
                                mem[_58477 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60955, stor4[cd[68]].field_512))
                                mem[_58477 + 510] = 128
                                mem[_58477 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58477 + 574] = mem[s + _58477 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55845), address(_55910)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55845), address(_55910)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _56321, 0, address(sha3(0, stor4[cd[68]].field_0, _60955, stor4[cd[68]].field_512)), 128, 0
                            else:
                                if not address(_55910):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58477 + 221] = address(_55910)
                                mem[_58477 + 241] = address(_55845)
                                mem[_58477 + 189] = 40
                                mem[_58477 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58477 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58477 + 314] = sha3(address(_55910), address(_55845))
                                mem[_58477 + 346] = stor4[cd[68]].field_512
                                mem[_58477 + 261] = 85
                                mem[_58477 + 378] = 0
                                mem[64] = _58477 + 410
                                mem[_58477 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58477 + 414] = _56321
                                mem[_58477 + 446] = 0
                                mem[_58477 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60955, stor4[cd[68]].field_512))
                                mem[_58477 + 510] = 128
                                mem[_58477 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58477 + 574] = mem[s + _58477 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55910), address(_55845)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55910), address(_55845)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _56321, 0, address(sha3(0, stor4[cd[68]].field_0, _60955, stor4[cd[68]].field_512)), 128, 0
                        else:
                            if not mem[(32 * idx + 2) + _19348 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58478 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19348 + ceil32(return_data.size) + 322])
                            mem[mem[64] + 52] = address(_55910)
                            _60957 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _60959 = sha3(mem[_60957 + 32 len mem[_60957]])
                            mem[_58478 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58478 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58478 + 125] = _60959
                            mem[_58478 + 157] = stor4[cd[68]].field_512
                            mem[_58478 + 72] = 85
                            mem[0] = cd[68]
                            mem[32] = 4
                            if address(_55845) == address(_55910):
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if address(_55845) < address(_55910):
                                if not address(_55845):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58478 + 221] = address(_55845)
                                mem[_58478 + 241] = address(_55910)
                                mem[_58478 + 189] = 40
                                mem[_58478 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58478 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58478 + 314] = sha3(address(_55845), address(_55910))
                                mem[_58478 + 346] = stor4[cd[68]].field_512
                                mem[_58478 + 261] = 85
                                mem[_58478 + 378] = 0
                                mem[64] = _58478 + 410
                                mem[_58478 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58478 + 414] = _56321
                                mem[_58478 + 446] = 0
                                mem[_58478 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60959, stor4[cd[68]].field_512))
                                mem[_58478 + 510] = 128
                                mem[_58478 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58478 + 574] = mem[s + _58478 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55845), address(_55910)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55845), address(_55910)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _56321, 0, address(sha3(0, stor4[cd[68]].field_0, _60959, stor4[cd[68]].field_512)), 128, 0
                            else:
                                if not address(_55910):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58478 + 221] = address(_55910)
                                mem[_58478 + 241] = address(_55845)
                                mem[_58478 + 189] = 40
                                mem[_58478 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58478 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58478 + 314] = sha3(address(_55910), address(_55845))
                                mem[_58478 + 346] = stor4[cd[68]].field_512
                                mem[_58478 + 261] = 85
                                mem[_58478 + 378] = 0
                                mem[64] = _58478 + 410
                                mem[_58478 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58478 + 414] = _56321
                                mem[_58478 + 446] = 0
                                mem[_58478 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60959, stor4[cd[68]].field_512))
                                mem[_58478 + 510] = 128
                                mem[_58478 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58478 + 574] = mem[s + _58478 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55910), address(_55845)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55910), address(_55845)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _56321, 0, address(sha3(0, stor4[cd[68]].field_0, _60959, stor4[cd[68]].field_512)), 128, 0
            else:
                if not mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 334 len 20]:
                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
                _56323 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
                if mem[(32 * idx) + _19348 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 334 len 20]:
                    if idx >= mem[_19348 + ceil32(return_data.size) + 290] - 2:
                        mem[0] = cd[68]
                        mem[32] = 4
                        if mem[(32 * idx) + _19348 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 334 len 20]:
                            revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                        if mem[(32 * idx) + _19348 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 334 len 20]:
                            if not mem[(32 * idx) + _19348 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58483 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx) + _19348 + ceil32(return_data.size) + 322])
                            mem[mem[64] + 52] = address(_55910)
                            _60977 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _60979 = sha3(mem[_60977 + 32 len mem[_60977]])
                            mem[_58483 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58483 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58483 + 125] = _60979
                            mem[_58483 + 157] = stor4[cd[68]].field_512
                            mem[_58483 + 72] = 85
                            mem[_58483 + 189] = 0
                            mem[64] = _58483 + 221
                            mem[_58483 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_58483 + 225] = 0
                            mem[_58483 + 257] = _56323
                            mem[_58483 + 289] = msg.sender
                            mem[_58483 + 321] = 128
                            mem[_58483 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _58483 + 385] = mem[s + _58483 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60979, stor4[cd[68]].field_512)))
                            call address(sha3(0, stor4[cd[68]].field_0, _60979, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _56323, msg.sender, 128, 0
                        else:
                            if not mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58484 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 322])
                            mem[mem[64] + 52] = address(_55845)
                            _60981 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _60983 = sha3(mem[_60981 + 32 len mem[_60981]])
                            mem[_58484 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58484 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58484 + 125] = _60983
                            mem[_58484 + 157] = stor4[cd[68]].field_512
                            mem[_58484 + 72] = 85
                            mem[_58484 + 189] = 0
                            mem[64] = _58484 + 221
                            mem[_58484 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_58484 + 225] = 0
                            mem[_58484 + 257] = _56323
                            mem[_58484 + 289] = msg.sender
                            mem[_58484 + 321] = 128
                            mem[_58484 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _58484 + 385] = mem[s + _58484 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60983, stor4[cd[68]].field_512)))
                            call address(sha3(0, stor4[cd[68]].field_0, _60983, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _56323, msg.sender, 128, 0
                    else:
                        require idx + 2 < mem[_19348 + ceil32(return_data.size) + 290]
                        _56707 = mem[(32 * idx + 2) + _19348 + ceil32(return_data.size) + 322]
                        mem[0] = cd[68]
                        mem[32] = 4
                        if mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 2) + _19348 + ceil32(return_data.size) + 334 len 20]:
                            revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                        if mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 2) + _19348 + ceil32(return_data.size) + 334 len 20]:
                            if not mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58481 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 322])
                            mem[mem[64] + 52] = address(_56707)
                            _60969 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _60971 = sha3(mem[_60969 + 32 len mem[_60969]])
                            mem[_58481 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58481 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58481 + 125] = _60971
                            mem[_58481 + 157] = stor4[cd[68]].field_512
                            mem[_58481 + 72] = 85
                            mem[0] = cd[68]
                            mem[32] = 4
                            if address(_55845) == address(_55910):
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if address(_55845) < address(_55910):
                                if not address(_55845):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58481 + 221] = address(_55845)
                                mem[_58481 + 241] = address(_55910)
                                mem[_58481 + 189] = 40
                                mem[_58481 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58481 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58481 + 314] = sha3(address(_55845), address(_55910))
                                mem[_58481 + 346] = stor4[cd[68]].field_512
                                mem[_58481 + 261] = 85
                                mem[_58481 + 378] = 0
                                mem[64] = _58481 + 410
                                mem[_58481 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58481 + 414] = 0
                                mem[_58481 + 446] = _56323
                                mem[_58481 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60971, stor4[cd[68]].field_512))
                                mem[_58481 + 510] = 128
                                mem[_58481 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58481 + 574] = mem[s + _58481 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55845), address(_55910)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55845), address(_55910)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _56323, address(sha3(0, stor4[cd[68]].field_0, _60971, stor4[cd[68]].field_512)), 128, 0
                            else:
                                if not address(_55910):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58481 + 221] = address(_55910)
                                mem[_58481 + 241] = address(_55845)
                                mem[_58481 + 189] = 40
                                mem[_58481 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58481 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58481 + 314] = sha3(address(_55910), address(_55845))
                                mem[_58481 + 346] = stor4[cd[68]].field_512
                                mem[_58481 + 261] = 85
                                mem[_58481 + 378] = 0
                                mem[64] = _58481 + 410
                                mem[_58481 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58481 + 414] = 0
                                mem[_58481 + 446] = _56323
                                mem[_58481 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60971, stor4[cd[68]].field_512))
                                mem[_58481 + 510] = 128
                                mem[_58481 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58481 + 574] = mem[s + _58481 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55910), address(_55845)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55910), address(_55845)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _56323, address(sha3(0, stor4[cd[68]].field_0, _60971, stor4[cd[68]].field_512)), 128, 0
                        else:
                            if not mem[(32 * idx + 2) + _19348 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58482 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19348 + ceil32(return_data.size) + 322])
                            mem[mem[64] + 52] = address(_55910)
                            _60973 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _60975 = sha3(mem[_60973 + 32 len mem[_60973]])
                            mem[_58482 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58482 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58482 + 125] = _60975
                            mem[_58482 + 157] = stor4[cd[68]].field_512
                            mem[_58482 + 72] = 85
                            mem[0] = cd[68]
                            mem[32] = 4
                            if address(_55845) == address(_55910):
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if address(_55845) < address(_55910):
                                if not address(_55845):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58482 + 221] = address(_55845)
                                mem[_58482 + 241] = address(_55910)
                                mem[_58482 + 189] = 40
                                mem[_58482 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58482 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58482 + 314] = sha3(address(_55845), address(_55910))
                                mem[_58482 + 346] = stor4[cd[68]].field_512
                                mem[_58482 + 261] = 85
                                mem[_58482 + 378] = 0
                                mem[64] = _58482 + 410
                                mem[_58482 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58482 + 414] = 0
                                mem[_58482 + 446] = _56323
                                mem[_58482 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60975, stor4[cd[68]].field_512))
                                mem[_58482 + 510] = 128
                                mem[_58482 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58482 + 574] = mem[s + _58482 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55845), address(_55910)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55845), address(_55910)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _56323, address(sha3(0, stor4[cd[68]].field_0, _60975, stor4[cd[68]].field_512)), 128, 0
                            else:
                                if not address(_55910):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58482 + 221] = address(_55910)
                                mem[_58482 + 241] = address(_55845)
                                mem[_58482 + 189] = 40
                                mem[_58482 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58482 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58482 + 314] = sha3(address(_55910), address(_55845))
                                mem[_58482 + 346] = stor4[cd[68]].field_512
                                mem[_58482 + 261] = 85
                                mem[_58482 + 378] = 0
                                mem[64] = _58482 + 410
                                mem[_58482 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58482 + 414] = 0
                                mem[_58482 + 446] = _56323
                                mem[_58482 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60975, stor4[cd[68]].field_512))
                                mem[_58482 + 510] = 128
                                mem[_58482 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58482 + 574] = mem[s + _58482 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55910), address(_55845)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55910), address(_55845)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _56323, address(sha3(0, stor4[cd[68]].field_0, _60975, stor4[cd[68]].field_512)), 128, 0
                else:
                    if idx >= mem[_19348 + ceil32(return_data.size) + 290] - 2:
                        mem[0] = cd[68]
                        mem[32] = 4
                        if mem[(32 * idx) + _19348 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 334 len 20]:
                            revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                        if mem[(32 * idx) + _19348 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 334 len 20]:
                            if not mem[(32 * idx) + _19348 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58487 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx) + _19348 + ceil32(return_data.size) + 322])
                            mem[mem[64] + 52] = address(_55910)
                            _60993 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _60995 = sha3(mem[_60993 + 32 len mem[_60993]])
                            mem[_58487 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58487 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58487 + 125] = _60995
                            mem[_58487 + 157] = stor4[cd[68]].field_512
                            mem[_58487 + 72] = 85
                            mem[_58487 + 189] = 0
                            mem[64] = _58487 + 221
                            mem[_58487 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_58487 + 225] = _56323
                            mem[_58487 + 257] = 0
                            mem[_58487 + 289] = msg.sender
                            mem[_58487 + 321] = 128
                            mem[_58487 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _58487 + 385] = mem[s + _58487 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60995, stor4[cd[68]].field_512)))
                            call address(sha3(0, stor4[cd[68]].field_0, _60995, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _56323, 0, msg.sender, 128, 0
                        else:
                            if not mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58488 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 322])
                            mem[mem[64] + 52] = address(_55845)
                            _60997 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _60999 = sha3(mem[_60997 + 32 len mem[_60997]])
                            mem[_58488 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58488 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58488 + 125] = _60999
                            mem[_58488 + 157] = stor4[cd[68]].field_512
                            mem[_58488 + 72] = 85
                            mem[_58488 + 189] = 0
                            mem[64] = _58488 + 221
                            mem[_58488 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_58488 + 225] = _56323
                            mem[_58488 + 257] = 0
                            mem[_58488 + 289] = msg.sender
                            mem[_58488 + 321] = 128
                            mem[_58488 + 353] = 0
                            s = 0
                            while s < 0:
                                mem[s + _58488 + 385] = mem[s + _58488 + 221]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _60999, stor4[cd[68]].field_512)))
                            call address(sha3(0, stor4[cd[68]].field_0, _60999, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _56323, 0, msg.sender, 128, 0
                    else:
                        require idx + 2 < mem[_19348 + ceil32(return_data.size) + 290]
                        _56708 = mem[(32 * idx + 2) + _19348 + ceil32(return_data.size) + 322]
                        mem[0] = cd[68]
                        mem[32] = 4
                        if mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 2) + _19348 + ceil32(return_data.size) + 334 len 20]:
                            revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                        if mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 2) + _19348 + ceil32(return_data.size) + 334 len 20]:
                            if not mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58485 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 322])
                            mem[mem[64] + 52] = address(_56708)
                            _60985 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _60987 = sha3(mem[_60985 + 32 len mem[_60985]])
                            mem[_58485 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58485 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58485 + 125] = _60987
                            mem[_58485 + 157] = stor4[cd[68]].field_512
                            mem[_58485 + 72] = 85
                            mem[0] = cd[68]
                            mem[32] = 4
                            if address(_55845) == address(_55910):
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if address(_55845) < address(_55910):
                                if not address(_55845):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58485 + 221] = address(_55845)
                                mem[_58485 + 241] = address(_55910)
                                mem[_58485 + 189] = 40
                                mem[_58485 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58485 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58485 + 314] = sha3(address(_55845), address(_55910))
                                mem[_58485 + 346] = stor4[cd[68]].field_512
                                mem[_58485 + 261] = 85
                                mem[_58485 + 378] = 0
                                mem[64] = _58485 + 410
                                mem[_58485 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58485 + 414] = _56323
                                mem[_58485 + 446] = 0
                                mem[_58485 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60987, stor4[cd[68]].field_512))
                                mem[_58485 + 510] = 128
                                mem[_58485 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58485 + 574] = mem[s + _58485 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55845), address(_55910)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55845), address(_55910)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _56323, 0, address(sha3(0, stor4[cd[68]].field_0, _60987, stor4[cd[68]].field_512)), 128, 0
                            else:
                                if not address(_55910):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58485 + 221] = address(_55910)
                                mem[_58485 + 241] = address(_55845)
                                mem[_58485 + 189] = 40
                                mem[_58485 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58485 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58485 + 314] = sha3(address(_55910), address(_55845))
                                mem[_58485 + 346] = stor4[cd[68]].field_512
                                mem[_58485 + 261] = 85
                                mem[_58485 + 378] = 0
                                mem[64] = _58485 + 410
                                mem[_58485 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58485 + 414] = _56323
                                mem[_58485 + 446] = 0
                                mem[_58485 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60987, stor4[cd[68]].field_512))
                                mem[_58485 + 510] = 128
                                mem[_58485 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58485 + 574] = mem[s + _58485 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55910), address(_55845)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55910), address(_55845)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _56323, 0, address(sha3(0, stor4[cd[68]].field_0, _60987, stor4[cd[68]].field_512)), 128, 0
                        else:
                            if not mem[(32 * idx + 2) + _19348 + ceil32(return_data.size) + 334 len 20]:
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            _58486 = mem[64]
                            mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19348 + ceil32(return_data.size) + 322])
                            mem[mem[64] + 52] = address(_55910)
                            _60989 = mem[64]
                            mem[mem[64]] = 40
                            mem[64] = mem[64] + 72
                            _60991 = sha3(mem[_60989 + 32 len mem[_60989]])
                            mem[_58486 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58486 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58486 + 125] = _60991
                            mem[_58486 + 157] = stor4[cd[68]].field_512
                            mem[_58486 + 72] = 85
                            mem[0] = cd[68]
                            mem[32] = 4
                            if address(_55845) == address(_55910):
                                revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                            if address(_55845) < address(_55910):
                                if not address(_55845):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58486 + 221] = address(_55845)
                                mem[_58486 + 241] = address(_55910)
                                mem[_58486 + 189] = 40
                                mem[_58486 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58486 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58486 + 314] = sha3(address(_55845), address(_55910))
                                mem[_58486 + 346] = stor4[cd[68]].field_512
                                mem[_58486 + 261] = 85
                                mem[_58486 + 378] = 0
                                mem[64] = _58486 + 410
                                mem[_58486 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58486 + 414] = _56323
                                mem[_58486 + 446] = 0
                                mem[_58486 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60991, stor4[cd[68]].field_512))
                                mem[_58486 + 510] = 128
                                mem[_58486 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58486 + 574] = mem[s + _58486 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55845), address(_55910)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55845), address(_55910)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _56323, 0, address(sha3(0, stor4[cd[68]].field_0, _60991, stor4[cd[68]].field_512)), 128, 0
                            else:
                                if not address(_55910):
                                    revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                                mem[_58486 + 221] = address(_55910)
                                mem[_58486 + 241] = address(_55845)
                                mem[_58486 + 189] = 40
                                mem[_58486 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                                mem[_58486 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                                mem[_58486 + 314] = sha3(address(_55910), address(_55845))
                                mem[_58486 + 346] = stor4[cd[68]].field_512
                                mem[_58486 + 261] = 85
                                mem[_58486 + 378] = 0
                                mem[64] = _58486 + 410
                                mem[_58486 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_58486 + 414] = _56323
                                mem[_58486 + 446] = 0
                                mem[_58486 + 478] = address(sha3(0, stor4[cd[68]].field_0, _60991, stor4[cd[68]].field_512))
                                mem[_58486 + 510] = 128
                                mem[_58486 + 542] = 0
                                s = 0
                                while s < 0:
                                    mem[s + _58486 + 574] = mem[s + _58486 + 410]
                                    s = s + 32
                                    continue 
                                require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55910), address(_55845)), stor4[cd[68]].field_512)))
                                call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55910), address(_55845)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _56323, 0, address(sha3(0, stor4[cd[68]].field_0, _60991, stor4[cd[68]].field_512)), 128, 0
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            idx = idx + 1
            continue 
        mem[mem[64]] = 32
        _55973 = mem[(32 * ('cd', 36).length) + 128]
        mem[mem[64] + 32] = mem[(32 * ('cd', 36).length) + 128]
        mem[mem[64] + 64 len 32 * _55973] = mem[(32 * ('cd', 36).length) + 160 len 32 * _55973]
        return 32, mem[mem[64] + 32 len (32 * _55973) + 32]
    require return_data.size >= 32
    require mem[_19348 + 321] == bool(mem[_19348 + 321])
    if not mem[_19348 + 321]:
        revert with 0, 'TransferHelper: TRANSFER_FAILED'
    mem[64] = _19348 + ceil32(return_data.size) + (32 * ('cd', 36).length) + 322
    mem[_19348 + ceil32(return_data.size) + 290] = ('cd', 36).length
    mem[_19348 + ceil32(return_data.size) + 322 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
    mem[_19348 + ceil32(return_data.size) + (32 * ('cd', 36).length) + 322] = 0
    idx = 0
    while idx < ('cd', 36).length - 1:
        require idx < mem[_19348 + ceil32(return_data.size) + 290]
        _55847 = mem[(32 * idx) + _19348 + ceil32(return_data.size) + 322]
        require idx + 1 < mem[_19348 + ceil32(return_data.size) + 290]
        _55912 = mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 322]
        if mem[(32 * idx) + _19348 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 334 len 20]:
            revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
        if mem[(32 * idx) + _19348 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 334 len 20]:
            if not mem[(32 * idx) + _19348 + ceil32(return_data.size) + 334 len 20]:
                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
            require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
            _56325 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
            if mem[(32 * idx) + _19348 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx) + _19348 + ceil32(return_data.size) + 334 len 20]:
                if idx >= mem[_19348 + ceil32(return_data.size) + 290] - 2:
                    mem[0] = cd[68]
                    mem[32] = 4
                    if mem[(32 * idx) + _19348 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 334 len 20]:
                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                    if mem[(32 * idx) + _19348 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 334 len 20]:
                        if not mem[(32 * idx) + _19348 + ceil32(return_data.size) + 334 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        _58491 = mem[64]
                        mem[mem[64] + 32] = address(mem[(32 * idx) + _19348 + ceil32(return_data.size) + 322])
                        mem[mem[64] + 52] = address(_55912)
                        _61009 = mem[64]
                        mem[mem[64]] = 40
                        mem[64] = mem[64] + 72
                        _61011 = sha3(mem[_61009 + 32 len mem[_61009]])
                        mem[_58491 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_58491 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                        mem[_58491 + 125] = _61011
                        mem[_58491 + 157] = stor4[cd[68]].field_512
                        mem[_58491 + 72] = 85
                        mem[_58491 + 189] = 0
                        mem[64] = _58491 + 221
                        mem[_58491 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_58491 + 225] = 0
                        mem[_58491 + 257] = _56325
                        mem[_58491 + 289] = msg.sender
                        mem[_58491 + 321] = 128
                        mem[_58491 + 353] = 0
                        s = 0
                        while s < 0:
                            mem[s + _58491 + 385] = mem[s + _58491 + 221]
                            s = s + 32
                            continue 
                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _61011, stor4[cd[68]].field_512)))
                        call address(sha3(0, stor4[cd[68]].field_0, _61011, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0, _56325, msg.sender, 128, 0
                    else:
                        if not mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 334 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        _58492 = mem[64]
                        mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 322])
                        mem[mem[64] + 52] = address(_55847)
                        _61013 = mem[64]
                        mem[mem[64]] = 40
                        mem[64] = mem[64] + 72
                        _61015 = sha3(mem[_61013 + 32 len mem[_61013]])
                        mem[_58492 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_58492 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                        mem[_58492 + 125] = _61015
                        mem[_58492 + 157] = stor4[cd[68]].field_512
                        mem[_58492 + 72] = 85
                        mem[_58492 + 189] = 0
                        mem[64] = _58492 + 221
                        mem[_58492 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_58492 + 225] = 0
                        mem[_58492 + 257] = _56325
                        mem[_58492 + 289] = msg.sender
                        mem[_58492 + 321] = 128
                        mem[_58492 + 353] = 0
                        s = 0
                        while s < 0:
                            mem[s + _58492 + 385] = mem[s + _58492 + 221]
                            s = s + 32
                            continue 
                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _61015, stor4[cd[68]].field_512)))
                        call address(sha3(0, stor4[cd[68]].field_0, _61015, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0, _56325, msg.sender, 128, 0
                else:
                    require idx + 2 < mem[_19348 + ceil32(return_data.size) + 290]
                    _56709 = mem[(32 * idx + 2) + _19348 + ceil32(return_data.size) + 322]
                    mem[0] = cd[68]
                    mem[32] = 4
                    if mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 2) + _19348 + ceil32(return_data.size) + 334 len 20]:
                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                    if mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 2) + _19348 + ceil32(return_data.size) + 334 len 20]:
                        if not mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 334 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        _58489 = mem[64]
                        mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 322])
                        mem[mem[64] + 52] = address(_56709)
                        _61001 = mem[64]
                        mem[mem[64]] = 40
                        mem[64] = mem[64] + 72
                        _61003 = sha3(mem[_61001 + 32 len mem[_61001]])
                        mem[_58489 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_58489 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                        mem[_58489 + 125] = _61003
                        mem[_58489 + 157] = stor4[cd[68]].field_512
                        mem[_58489 + 72] = 85
                        mem[0] = cd[68]
                        mem[32] = 4
                        if address(_55847) == address(_55912):
                            revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                        if address(_55847) < address(_55912):
                            if not address(_55847):
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            mem[_58489 + 221] = address(_55847)
                            mem[_58489 + 241] = address(_55912)
                            mem[_58489 + 189] = 40
                            mem[_58489 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58489 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58489 + 314] = sha3(address(_55847), address(_55912))
                            mem[_58489 + 346] = stor4[cd[68]].field_512
                            mem[_58489 + 261] = 85
                            mem[_58489 + 378] = 0
                            mem[64] = _58489 + 410
                            mem[_58489 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_58489 + 414] = 0
                            mem[_58489 + 446] = _56325
                            mem[_58489 + 478] = address(sha3(0, stor4[cd[68]].field_0, _61003, stor4[cd[68]].field_512))
                            mem[_58489 + 510] = 128
                            mem[_58489 + 542] = 0
                            s = 0
                            while s < 0:
                                mem[s + _58489 + 574] = mem[s + _58489 + 410]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55847), address(_55912)), stor4[cd[68]].field_512)))
                            call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55847), address(_55912)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _56325, address(sha3(0, stor4[cd[68]].field_0, _61003, stor4[cd[68]].field_512)), 128, 0
                        else:
                            if not address(_55912):
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            mem[_58489 + 221] = address(_55912)
                            mem[_58489 + 241] = address(_55847)
                            mem[_58489 + 189] = 40
                            mem[_58489 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58489 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58489 + 314] = sha3(address(_55912), address(_55847))
                            mem[_58489 + 346] = stor4[cd[68]].field_512
                            mem[_58489 + 261] = 85
                            mem[_58489 + 378] = 0
                            mem[64] = _58489 + 410
                            mem[_58489 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_58489 + 414] = 0
                            mem[_58489 + 446] = _56325
                            mem[_58489 + 478] = address(sha3(0, stor4[cd[68]].field_0, _61003, stor4[cd[68]].field_512))
                            mem[_58489 + 510] = 128
                            mem[_58489 + 542] = 0
                            s = 0
                            while s < 0:
                                mem[s + _58489 + 574] = mem[s + _58489 + 410]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55912), address(_55847)), stor4[cd[68]].field_512)))
                            call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55912), address(_55847)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _56325, address(sha3(0, stor4[cd[68]].field_0, _61003, stor4[cd[68]].field_512)), 128, 0
                    else:
                        if not mem[(32 * idx + 2) + _19348 + ceil32(return_data.size) + 334 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        _58490 = mem[64]
                        mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19348 + ceil32(return_data.size) + 322])
                        mem[mem[64] + 52] = address(_55912)
                        _61005 = mem[64]
                        mem[mem[64]] = 40
                        mem[64] = mem[64] + 72
                        _61007 = sha3(mem[_61005 + 32 len mem[_61005]])
                        mem[_58490 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_58490 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                        mem[_58490 + 125] = _61007
                        mem[_58490 + 157] = stor4[cd[68]].field_512
                        mem[_58490 + 72] = 85
                        mem[0] = cd[68]
                        mem[32] = 4
                        if address(_55847) == address(_55912):
                            revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                        if address(_55847) < address(_55912):
                            if not address(_55847):
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            mem[_58490 + 221] = address(_55847)
                            mem[_58490 + 241] = address(_55912)
                            mem[_58490 + 189] = 40
                            mem[_58490 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58490 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58490 + 314] = sha3(address(_55847), address(_55912))
                            mem[_58490 + 346] = stor4[cd[68]].field_512
                            mem[_58490 + 261] = 85
                            mem[_58490 + 378] = 0
                            mem[64] = _58490 + 410
                            mem[_58490 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_58490 + 414] = 0
                            mem[_58490 + 446] = _56325
                            mem[_58490 + 478] = address(sha3(0, stor4[cd[68]].field_0, _61007, stor4[cd[68]].field_512))
                            mem[_58490 + 510] = 128
                            mem[_58490 + 542] = 0
                            s = 0
                            while s < 0:
                                mem[s + _58490 + 574] = mem[s + _58490 + 410]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55847), address(_55912)), stor4[cd[68]].field_512)))
                            call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55847), address(_55912)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _56325, address(sha3(0, stor4[cd[68]].field_0, _61007, stor4[cd[68]].field_512)), 128, 0
                        else:
                            if not address(_55912):
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            mem[_58490 + 221] = address(_55912)
                            mem[_58490 + 241] = address(_55847)
                            mem[_58490 + 189] = 40
                            mem[_58490 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58490 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58490 + 314] = sha3(address(_55912), address(_55847))
                            mem[_58490 + 346] = stor4[cd[68]].field_512
                            mem[_58490 + 261] = 85
                            mem[_58490 + 378] = 0
                            mem[64] = _58490 + 410
                            mem[_58490 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_58490 + 414] = 0
                            mem[_58490 + 446] = _56325
                            mem[_58490 + 478] = address(sha3(0, stor4[cd[68]].field_0, _61007, stor4[cd[68]].field_512))
                            mem[_58490 + 510] = 128
                            mem[_58490 + 542] = 0
                            s = 0
                            while s < 0:
                                mem[s + _58490 + 574] = mem[s + _58490 + 410]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55912), address(_55847)), stor4[cd[68]].field_512)))
                            call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55912), address(_55847)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _56325, address(sha3(0, stor4[cd[68]].field_0, _61007, stor4[cd[68]].field_512)), 128, 0
            else:
                if idx >= mem[_19348 + ceil32(return_data.size) + 290] - 2:
                    mem[0] = cd[68]
                    mem[32] = 4
                    if mem[(32 * idx) + _19348 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 334 len 20]:
                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                    if mem[(32 * idx) + _19348 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 334 len 20]:
                        if not mem[(32 * idx) + _19348 + ceil32(return_data.size) + 334 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        _58495 = mem[64]
                        mem[mem[64] + 32] = address(mem[(32 * idx) + _19348 + ceil32(return_data.size) + 322])
                        mem[mem[64] + 52] = address(_55912)
                        _61025 = mem[64]
                        mem[mem[64]] = 40
                        mem[64] = mem[64] + 72
                        _61027 = sha3(mem[_61025 + 32 len mem[_61025]])
                        mem[_58495 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_58495 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                        mem[_58495 + 125] = _61027
                        mem[_58495 + 157] = stor4[cd[68]].field_512
                        mem[_58495 + 72] = 85
                        mem[_58495 + 189] = 0
                        mem[64] = _58495 + 221
                        mem[_58495 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_58495 + 225] = _56325
                        mem[_58495 + 257] = 0
                        mem[_58495 + 289] = msg.sender
                        mem[_58495 + 321] = 128
                        mem[_58495 + 353] = 0
                        s = 0
                        while s < 0:
                            mem[s + _58495 + 385] = mem[s + _58495 + 221]
                            s = s + 32
                            continue 
                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _61027, stor4[cd[68]].field_512)))
                        call address(sha3(0, stor4[cd[68]].field_0, _61027, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args _56325, 0, msg.sender, 128, 0
                    else:
                        if not mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 334 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        _58496 = mem[64]
                        mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 322])
                        mem[mem[64] + 52] = address(_55847)
                        _61029 = mem[64]
                        mem[mem[64]] = 40
                        mem[64] = mem[64] + 72
                        _61031 = sha3(mem[_61029 + 32 len mem[_61029]])
                        mem[_58496 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_58496 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                        mem[_58496 + 125] = _61031
                        mem[_58496 + 157] = stor4[cd[68]].field_512
                        mem[_58496 + 72] = 85
                        mem[_58496 + 189] = 0
                        mem[64] = _58496 + 221
                        mem[_58496 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_58496 + 225] = _56325
                        mem[_58496 + 257] = 0
                        mem[_58496 + 289] = msg.sender
                        mem[_58496 + 321] = 128
                        mem[_58496 + 353] = 0
                        s = 0
                        while s < 0:
                            mem[s + _58496 + 385] = mem[s + _58496 + 221]
                            s = s + 32
                            continue 
                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _61031, stor4[cd[68]].field_512)))
                        call address(sha3(0, stor4[cd[68]].field_0, _61031, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args _56325, 0, msg.sender, 128, 0
                else:
                    require idx + 2 < mem[_19348 + ceil32(return_data.size) + 290]
                    _56710 = mem[(32 * idx + 2) + _19348 + ceil32(return_data.size) + 322]
                    mem[0] = cd[68]
                    mem[32] = 4
                    if mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 2) + _19348 + ceil32(return_data.size) + 334 len 20]:
                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                    if mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 2) + _19348 + ceil32(return_data.size) + 334 len 20]:
                        if not mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 334 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        _58493 = mem[64]
                        mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 322])
                        mem[mem[64] + 52] = address(_56710)
                        _61017 = mem[64]
                        mem[mem[64]] = 40
                        mem[64] = mem[64] + 72
                        _61019 = sha3(mem[_61017 + 32 len mem[_61017]])
                        mem[_58493 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_58493 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                        mem[_58493 + 125] = _61019
                        mem[_58493 + 157] = stor4[cd[68]].field_512
                        mem[_58493 + 72] = 85
                        mem[0] = cd[68]
                        mem[32] = 4
                        if address(_55847) == address(_55912):
                            revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                        if address(_55847) < address(_55912):
                            if not address(_55847):
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            mem[_58493 + 221] = address(_55847)
                            mem[_58493 + 241] = address(_55912)
                            mem[_58493 + 189] = 40
                            mem[_58493 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58493 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58493 + 314] = sha3(address(_55847), address(_55912))
                            mem[_58493 + 346] = stor4[cd[68]].field_512
                            mem[_58493 + 261] = 85
                            mem[_58493 + 378] = 0
                            mem[64] = _58493 + 410
                            mem[_58493 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_58493 + 414] = _56325
                            mem[_58493 + 446] = 0
                            mem[_58493 + 478] = address(sha3(0, stor4[cd[68]].field_0, _61019, stor4[cd[68]].field_512))
                            mem[_58493 + 510] = 128
                            mem[_58493 + 542] = 0
                            s = 0
                            while s < 0:
                                mem[s + _58493 + 574] = mem[s + _58493 + 410]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55847), address(_55912)), stor4[cd[68]].field_512)))
                            call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55847), address(_55912)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _56325, 0, address(sha3(0, stor4[cd[68]].field_0, _61019, stor4[cd[68]].field_512)), 128, 0
                        else:
                            if not address(_55912):
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            mem[_58493 + 221] = address(_55912)
                            mem[_58493 + 241] = address(_55847)
                            mem[_58493 + 189] = 40
                            mem[_58493 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58493 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58493 + 314] = sha3(address(_55912), address(_55847))
                            mem[_58493 + 346] = stor4[cd[68]].field_512
                            mem[_58493 + 261] = 85
                            mem[_58493 + 378] = 0
                            mem[64] = _58493 + 410
                            mem[_58493 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_58493 + 414] = _56325
                            mem[_58493 + 446] = 0
                            mem[_58493 + 478] = address(sha3(0, stor4[cd[68]].field_0, _61019, stor4[cd[68]].field_512))
                            mem[_58493 + 510] = 128
                            mem[_58493 + 542] = 0
                            s = 0
                            while s < 0:
                                mem[s + _58493 + 574] = mem[s + _58493 + 410]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55912), address(_55847)), stor4[cd[68]].field_512)))
                            call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55912), address(_55847)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _56325, 0, address(sha3(0, stor4[cd[68]].field_0, _61019, stor4[cd[68]].field_512)), 128, 0
                    else:
                        if not mem[(32 * idx + 2) + _19348 + ceil32(return_data.size) + 334 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        _58494 = mem[64]
                        mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19348 + ceil32(return_data.size) + 322])
                        mem[mem[64] + 52] = address(_55912)
                        _61021 = mem[64]
                        mem[mem[64]] = 40
                        mem[64] = mem[64] + 72
                        _61023 = sha3(mem[_61021 + 32 len mem[_61021]])
                        mem[_58494 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_58494 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                        mem[_58494 + 125] = _61023
                        mem[_58494 + 157] = stor4[cd[68]].field_512
                        mem[_58494 + 72] = 85
                        mem[0] = cd[68]
                        mem[32] = 4
                        if address(_55847) == address(_55912):
                            revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                        if address(_55847) < address(_55912):
                            if not address(_55847):
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            mem[_58494 + 221] = address(_55847)
                            mem[_58494 + 241] = address(_55912)
                            mem[_58494 + 189] = 40
                            mem[_58494 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58494 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58494 + 314] = sha3(address(_55847), address(_55912))
                            mem[_58494 + 346] = stor4[cd[68]].field_512
                            mem[_58494 + 261] = 85
                            mem[_58494 + 378] = 0
                            mem[64] = _58494 + 410
                            mem[_58494 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_58494 + 414] = _56325
                            mem[_58494 + 446] = 0
                            mem[_58494 + 478] = address(sha3(0, stor4[cd[68]].field_0, _61023, stor4[cd[68]].field_512))
                            mem[_58494 + 510] = 128
                            mem[_58494 + 542] = 0
                            s = 0
                            while s < 0:
                                mem[s + _58494 + 574] = mem[s + _58494 + 410]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55847), address(_55912)), stor4[cd[68]].field_512)))
                            call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55847), address(_55912)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _56325, 0, address(sha3(0, stor4[cd[68]].field_0, _61023, stor4[cd[68]].field_512)), 128, 0
                        else:
                            if not address(_55912):
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            mem[_58494 + 221] = address(_55912)
                            mem[_58494 + 241] = address(_55847)
                            mem[_58494 + 189] = 40
                            mem[_58494 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58494 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58494 + 314] = sha3(address(_55912), address(_55847))
                            mem[_58494 + 346] = stor4[cd[68]].field_512
                            mem[_58494 + 261] = 85
                            mem[_58494 + 378] = 0
                            mem[64] = _58494 + 410
                            mem[_58494 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_58494 + 414] = _56325
                            mem[_58494 + 446] = 0
                            mem[_58494 + 478] = address(sha3(0, stor4[cd[68]].field_0, _61023, stor4[cd[68]].field_512))
                            mem[_58494 + 510] = 128
                            mem[_58494 + 542] = 0
                            s = 0
                            while s < 0:
                                mem[s + _58494 + 574] = mem[s + _58494 + 410]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55912), address(_55847)), stor4[cd[68]].field_512)))
                            call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55912), address(_55847)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _56325, 0, address(sha3(0, stor4[cd[68]].field_0, _61023, stor4[cd[68]].field_512)), 128, 0
        else:
            if not mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 334 len 20]:
                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
            require idx + 1 < mem[(32 * ('cd', 36).length) + 128]
            _56327 = mem[(32 * idx + 1) + (32 * ('cd', 36).length) + 160]
            if mem[(32 * idx) + _19348 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 334 len 20]:
                if idx >= mem[_19348 + ceil32(return_data.size) + 290] - 2:
                    mem[0] = cd[68]
                    mem[32] = 4
                    if mem[(32 * idx) + _19348 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 334 len 20]:
                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                    if mem[(32 * idx) + _19348 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 334 len 20]:
                        if not mem[(32 * idx) + _19348 + ceil32(return_data.size) + 334 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        _58499 = mem[64]
                        mem[mem[64] + 32] = address(mem[(32 * idx) + _19348 + ceil32(return_data.size) + 322])
                        mem[mem[64] + 52] = address(_55912)
                        _61041 = mem[64]
                        mem[mem[64]] = 40
                        mem[64] = mem[64] + 72
                        _61043 = sha3(mem[_61041 + 32 len mem[_61041]])
                        mem[_58499 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_58499 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                        mem[_58499 + 125] = _61043
                        mem[_58499 + 157] = stor4[cd[68]].field_512
                        mem[_58499 + 72] = 85
                        mem[_58499 + 189] = 0
                        mem[64] = _58499 + 221
                        mem[_58499 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_58499 + 225] = 0
                        mem[_58499 + 257] = _56327
                        mem[_58499 + 289] = msg.sender
                        mem[_58499 + 321] = 128
                        mem[_58499 + 353] = 0
                        s = 0
                        while s < 0:
                            mem[s + _58499 + 385] = mem[s + _58499 + 221]
                            s = s + 32
                            continue 
                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _61043, stor4[cd[68]].field_512)))
                        call address(sha3(0, stor4[cd[68]].field_0, _61043, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0, _56327, msg.sender, 128, 0
                    else:
                        if not mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 334 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        _58500 = mem[64]
                        mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 322])
                        mem[mem[64] + 52] = address(_55847)
                        _61045 = mem[64]
                        mem[mem[64]] = 40
                        mem[64] = mem[64] + 72
                        _61047 = sha3(mem[_61045 + 32 len mem[_61045]])
                        mem[_58500 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_58500 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                        mem[_58500 + 125] = _61047
                        mem[_58500 + 157] = stor4[cd[68]].field_512
                        mem[_58500 + 72] = 85
                        mem[_58500 + 189] = 0
                        mem[64] = _58500 + 221
                        mem[_58500 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_58500 + 225] = 0
                        mem[_58500 + 257] = _56327
                        mem[_58500 + 289] = msg.sender
                        mem[_58500 + 321] = 128
                        mem[_58500 + 353] = 0
                        s = 0
                        while s < 0:
                            mem[s + _58500 + 385] = mem[s + _58500 + 221]
                            s = s + 32
                            continue 
                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _61047, stor4[cd[68]].field_512)))
                        call address(sha3(0, stor4[cd[68]].field_0, _61047, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0, _56327, msg.sender, 128, 0
                else:
                    require idx + 2 < mem[_19348 + ceil32(return_data.size) + 290]
                    _56711 = mem[(32 * idx + 2) + _19348 + ceil32(return_data.size) + 322]
                    mem[0] = cd[68]
                    mem[32] = 4
                    if mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 2) + _19348 + ceil32(return_data.size) + 334 len 20]:
                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                    if mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 2) + _19348 + ceil32(return_data.size) + 334 len 20]:
                        if not mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 334 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        _58497 = mem[64]
                        mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 322])
                        mem[mem[64] + 52] = address(_56711)
                        _61033 = mem[64]
                        mem[mem[64]] = 40
                        mem[64] = mem[64] + 72
                        _61035 = sha3(mem[_61033 + 32 len mem[_61033]])
                        mem[_58497 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_58497 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                        mem[_58497 + 125] = _61035
                        mem[_58497 + 157] = stor4[cd[68]].field_512
                        mem[_58497 + 72] = 85
                        mem[0] = cd[68]
                        mem[32] = 4
                        if address(_55847) == address(_55912):
                            revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                        if address(_55847) < address(_55912):
                            if not address(_55847):
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            mem[_58497 + 221] = address(_55847)
                            mem[_58497 + 241] = address(_55912)
                            mem[_58497 + 189] = 40
                            mem[_58497 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58497 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58497 + 314] = sha3(address(_55847), address(_55912))
                            mem[_58497 + 346] = stor4[cd[68]].field_512
                            mem[_58497 + 261] = 85
                            mem[_58497 + 378] = 0
                            mem[64] = _58497 + 410
                            mem[_58497 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_58497 + 414] = 0
                            mem[_58497 + 446] = _56327
                            mem[_58497 + 478] = address(sha3(0, stor4[cd[68]].field_0, _61035, stor4[cd[68]].field_512))
                            mem[_58497 + 510] = 128
                            mem[_58497 + 542] = 0
                            s = 0
                            while s < 0:
                                mem[s + _58497 + 574] = mem[s + _58497 + 410]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55847), address(_55912)), stor4[cd[68]].field_512)))
                            call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55847), address(_55912)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _56327, address(sha3(0, stor4[cd[68]].field_0, _61035, stor4[cd[68]].field_512)), 128, 0
                        else:
                            if not address(_55912):
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            mem[_58497 + 221] = address(_55912)
                            mem[_58497 + 241] = address(_55847)
                            mem[_58497 + 189] = 40
                            mem[_58497 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58497 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58497 + 314] = sha3(address(_55912), address(_55847))
                            mem[_58497 + 346] = stor4[cd[68]].field_512
                            mem[_58497 + 261] = 85
                            mem[_58497 + 378] = 0
                            mem[64] = _58497 + 410
                            mem[_58497 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_58497 + 414] = 0
                            mem[_58497 + 446] = _56327
                            mem[_58497 + 478] = address(sha3(0, stor4[cd[68]].field_0, _61035, stor4[cd[68]].field_512))
                            mem[_58497 + 510] = 128
                            mem[_58497 + 542] = 0
                            s = 0
                            while s < 0:
                                mem[s + _58497 + 574] = mem[s + _58497 + 410]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55912), address(_55847)), stor4[cd[68]].field_512)))
                            call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55912), address(_55847)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _56327, address(sha3(0, stor4[cd[68]].field_0, _61035, stor4[cd[68]].field_512)), 128, 0
                    else:
                        if not mem[(32 * idx + 2) + _19348 + ceil32(return_data.size) + 334 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        _58498 = mem[64]
                        mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19348 + ceil32(return_data.size) + 322])
                        mem[mem[64] + 52] = address(_55912)
                        _61037 = mem[64]
                        mem[mem[64]] = 40
                        mem[64] = mem[64] + 72
                        _61039 = sha3(mem[_61037 + 32 len mem[_61037]])
                        mem[_58498 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_58498 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                        mem[_58498 + 125] = _61039
                        mem[_58498 + 157] = stor4[cd[68]].field_512
                        mem[_58498 + 72] = 85
                        mem[0] = cd[68]
                        mem[32] = 4
                        if address(_55847) == address(_55912):
                            revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                        if address(_55847) < address(_55912):
                            if not address(_55847):
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            mem[_58498 + 221] = address(_55847)
                            mem[_58498 + 241] = address(_55912)
                            mem[_58498 + 189] = 40
                            mem[_58498 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58498 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58498 + 314] = sha3(address(_55847), address(_55912))
                            mem[_58498 + 346] = stor4[cd[68]].field_512
                            mem[_58498 + 261] = 85
                            mem[_58498 + 378] = 0
                            mem[64] = _58498 + 410
                            mem[_58498 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_58498 + 414] = 0
                            mem[_58498 + 446] = _56327
                            mem[_58498 + 478] = address(sha3(0, stor4[cd[68]].field_0, _61039, stor4[cd[68]].field_512))
                            mem[_58498 + 510] = 128
                            mem[_58498 + 542] = 0
                            s = 0
                            while s < 0:
                                mem[s + _58498 + 574] = mem[s + _58498 + 410]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55847), address(_55912)), stor4[cd[68]].field_512)))
                            call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55847), address(_55912)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _56327, address(sha3(0, stor4[cd[68]].field_0, _61039, stor4[cd[68]].field_512)), 128, 0
                        else:
                            if not address(_55912):
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            mem[_58498 + 221] = address(_55912)
                            mem[_58498 + 241] = address(_55847)
                            mem[_58498 + 189] = 40
                            mem[_58498 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58498 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58498 + 314] = sha3(address(_55912), address(_55847))
                            mem[_58498 + 346] = stor4[cd[68]].field_512
                            mem[_58498 + 261] = 85
                            mem[_58498 + 378] = 0
                            mem[64] = _58498 + 410
                            mem[_58498 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_58498 + 414] = 0
                            mem[_58498 + 446] = _56327
                            mem[_58498 + 478] = address(sha3(0, stor4[cd[68]].field_0, _61039, stor4[cd[68]].field_512))
                            mem[_58498 + 510] = 128
                            mem[_58498 + 542] = 0
                            s = 0
                            while s < 0:
                                mem[s + _58498 + 574] = mem[s + _58498 + 410]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55912), address(_55847)), stor4[cd[68]].field_512)))
                            call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55912), address(_55847)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _56327, address(sha3(0, stor4[cd[68]].field_0, _61039, stor4[cd[68]].field_512)), 128, 0
            else:
                if idx >= mem[_19348 + ceil32(return_data.size) + 290] - 2:
                    mem[0] = cd[68]
                    mem[32] = 4
                    if mem[(32 * idx) + _19348 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 334 len 20]:
                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                    if mem[(32 * idx) + _19348 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 334 len 20]:
                        if not mem[(32 * idx) + _19348 + ceil32(return_data.size) + 334 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        _58503 = mem[64]
                        mem[mem[64] + 32] = address(mem[(32 * idx) + _19348 + ceil32(return_data.size) + 322])
                        mem[mem[64] + 52] = address(_55912)
                        _61057 = mem[64]
                        mem[mem[64]] = 40
                        mem[64] = mem[64] + 72
                        _61059 = sha3(mem[_61057 + 32 len mem[_61057]])
                        mem[_58503 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_58503 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                        mem[_58503 + 125] = _61059
                        mem[_58503 + 157] = stor4[cd[68]].field_512
                        mem[_58503 + 72] = 85
                        mem[_58503 + 189] = 0
                        mem[64] = _58503 + 221
                        mem[_58503 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_58503 + 225] = _56327
                        mem[_58503 + 257] = 0
                        mem[_58503 + 289] = msg.sender
                        mem[_58503 + 321] = 128
                        mem[_58503 + 353] = 0
                        s = 0
                        while s < 0:
                            mem[s + _58503 + 385] = mem[s + _58503 + 221]
                            s = s + 32
                            continue 
                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _61059, stor4[cd[68]].field_512)))
                        call address(sha3(0, stor4[cd[68]].field_0, _61059, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args _56327, 0, msg.sender, 128, 0
                    else:
                        if not mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 334 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        _58504 = mem[64]
                        mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 322])
                        mem[mem[64] + 52] = address(_55847)
                        _61061 = mem[64]
                        mem[mem[64]] = 40
                        mem[64] = mem[64] + 72
                        _61063 = sha3(mem[_61061 + 32 len mem[_61061]])
                        mem[_58504 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_58504 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                        mem[_58504 + 125] = _61063
                        mem[_58504 + 157] = stor4[cd[68]].field_512
                        mem[_58504 + 72] = 85
                        mem[_58504 + 189] = 0
                        mem[64] = _58504 + 221
                        mem[_58504 + 221] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_58504 + 225] = _56327
                        mem[_58504 + 257] = 0
                        mem[_58504 + 289] = msg.sender
                        mem[_58504 + 321] = 128
                        mem[_58504 + 353] = 0
                        s = 0
                        while s < 0:
                            mem[s + _58504 + 385] = mem[s + _58504 + 221]
                            s = s + 32
                            continue 
                        require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, _61063, stor4[cd[68]].field_512)))
                        call address(sha3(0, stor4[cd[68]].field_0, _61063, stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args _56327, 0, msg.sender, 128, 0
                else:
                    require idx + 2 < mem[_19348 + ceil32(return_data.size) + 290]
                    _56712 = mem[(32 * idx + 2) + _19348 + ceil32(return_data.size) + 322]
                    mem[0] = cd[68]
                    mem[32] = 4
                    if mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 334 len 20] == mem[(32 * idx + 2) + _19348 + ceil32(return_data.size) + 334 len 20]:
                        revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                    if mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 334 len 20] < mem[(32 * idx + 2) + _19348 + ceil32(return_data.size) + 334 len 20]:
                        if not mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 334 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        _58501 = mem[64]
                        mem[mem[64] + 32] = address(mem[(32 * idx + 1) + _19348 + ceil32(return_data.size) + 322])
                        mem[mem[64] + 52] = address(_56712)
                        _61049 = mem[64]
                        mem[mem[64]] = 40
                        mem[64] = mem[64] + 72
                        _61051 = sha3(mem[_61049 + 32 len mem[_61049]])
                        mem[_58501 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_58501 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                        mem[_58501 + 125] = _61051
                        mem[_58501 + 157] = stor4[cd[68]].field_512
                        mem[_58501 + 72] = 85
                        mem[0] = cd[68]
                        mem[32] = 4
                        if address(_55847) == address(_55912):
                            revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                        if address(_55847) < address(_55912):
                            if not address(_55847):
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            mem[_58501 + 221] = address(_55847)
                            mem[_58501 + 241] = address(_55912)
                            mem[_58501 + 189] = 40
                            mem[_58501 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58501 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58501 + 314] = sha3(address(_55847), address(_55912))
                            mem[_58501 + 346] = stor4[cd[68]].field_512
                            mem[_58501 + 261] = 85
                            mem[_58501 + 378] = 0
                            mem[64] = _58501 + 410
                            mem[_58501 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_58501 + 414] = _56327
                            mem[_58501 + 446] = 0
                            mem[_58501 + 478] = address(sha3(0, stor4[cd[68]].field_0, _61051, stor4[cd[68]].field_512))
                            mem[_58501 + 510] = 128
                            mem[_58501 + 542] = 0
                            s = 0
                            while s < 0:
                                mem[s + _58501 + 574] = mem[s + _58501 + 410]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55847), address(_55912)), stor4[cd[68]].field_512)))
                            call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55847), address(_55912)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _56327, 0, address(sha3(0, stor4[cd[68]].field_0, _61051, stor4[cd[68]].field_512)), 128, 0
                        else:
                            if not address(_55912):
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            mem[_58501 + 221] = address(_55912)
                            mem[_58501 + 241] = address(_55847)
                            mem[_58501 + 189] = 40
                            mem[_58501 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58501 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58501 + 314] = sha3(address(_55912), address(_55847))
                            mem[_58501 + 346] = stor4[cd[68]].field_512
                            mem[_58501 + 261] = 85
                            mem[_58501 + 378] = 0
                            mem[64] = _58501 + 410
                            mem[_58501 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_58501 + 414] = _56327
                            mem[_58501 + 446] = 0
                            mem[_58501 + 478] = address(sha3(0, stor4[cd[68]].field_0, _61051, stor4[cd[68]].field_512))
                            mem[_58501 + 510] = 128
                            mem[_58501 + 542] = 0
                            s = 0
                            while s < 0:
                                mem[s + _58501 + 574] = mem[s + _58501 + 410]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55912), address(_55847)), stor4[cd[68]].field_512)))
                            call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55912), address(_55847)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _56327, 0, address(sha3(0, stor4[cd[68]].field_0, _61051, stor4[cd[68]].field_512)), 128, 0
                    else:
                        if not mem[(32 * idx + 2) + _19348 + ceil32(return_data.size) + 334 len 20]:
                            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                        _58502 = mem[64]
                        mem[mem[64] + 32] = address(mem[(32 * idx + 2) + _19348 + ceil32(return_data.size) + 322])
                        mem[mem[64] + 52] = address(_55912)
                        _61053 = mem[64]
                        mem[mem[64]] = 40
                        mem[64] = mem[64] + 72
                        _61055 = sha3(mem[_61053 + 32 len mem[_61053]])
                        mem[_58502 + 104] = 0xff00000000000000000000000000000000000000000000000000000000000000
                        mem[_58502 + 105] = Mask(160, 96, stor4[cd[68]].field_0)
                        mem[_58502 + 125] = _61055
                        mem[_58502 + 157] = stor4[cd[68]].field_512
                        mem[_58502 + 72] = 85
                        mem[0] = cd[68]
                        mem[32] = 4
                        if address(_55847) == address(_55912):
                            revert with 0, 'PancakeLibrary: IDENTICAL_ADDRESSES'
                        if address(_55847) < address(_55912):
                            if not address(_55847):
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            mem[_58502 + 221] = address(_55847)
                            mem[_58502 + 241] = address(_55912)
                            mem[_58502 + 189] = 40
                            mem[_58502 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58502 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58502 + 314] = sha3(address(_55847), address(_55912))
                            mem[_58502 + 346] = stor4[cd[68]].field_512
                            mem[_58502 + 261] = 85
                            mem[_58502 + 378] = 0
                            mem[64] = _58502 + 410
                            mem[_58502 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_58502 + 414] = _56327
                            mem[_58502 + 446] = 0
                            mem[_58502 + 478] = address(sha3(0, stor4[cd[68]].field_0, _61055, stor4[cd[68]].field_512))
                            mem[_58502 + 510] = 128
                            mem[_58502 + 542] = 0
                            s = 0
                            while s < 0:
                                mem[s + _58502 + 574] = mem[s + _58502 + 410]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55847), address(_55912)), stor4[cd[68]].field_512)))
                            call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55847), address(_55912)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _56327, 0, address(sha3(0, stor4[cd[68]].field_0, _61055, stor4[cd[68]].field_512)), 128, 0
                        else:
                            if not address(_55912):
                                revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
                            mem[_58502 + 221] = address(_55912)
                            mem[_58502 + 241] = address(_55847)
                            mem[_58502 + 189] = 40
                            mem[_58502 + 293] = 0xff00000000000000000000000000000000000000000000000000000000000000
                            mem[_58502 + 294] = Mask(160, 96, stor4[cd[68]].field_0)
                            mem[_58502 + 314] = sha3(address(_55912), address(_55847))
                            mem[_58502 + 346] = stor4[cd[68]].field_512
                            mem[_58502 + 261] = 85
                            mem[_58502 + 378] = 0
                            mem[64] = _58502 + 410
                            mem[_58502 + 410] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_58502 + 414] = _56327
                            mem[_58502 + 446] = 0
                            mem[_58502 + 478] = address(sha3(0, stor4[cd[68]].field_0, _61055, stor4[cd[68]].field_512))
                            mem[_58502 + 510] = 128
                            mem[_58502 + 542] = 0
                            s = 0
                            while s < 0:
                                mem[s + _58502 + 574] = mem[s + _58502 + 410]
                                s = s + 32
                                continue 
                            require ext_code.size(address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55912), address(_55847)), stor4[cd[68]].field_512)))
                            call address(sha3(0, stor4[cd[68]].field_0, sha3(address(_55912), address(_55847)), stor4[cd[68]].field_512)).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _56327, 0, address(sha3(0, stor4[cd[68]].field_0, _61055, stor4[cd[68]].field_512)), 128, 0
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        idx = idx + 1
        continue 
    mem[mem[64]] = 32
    _55975 = mem[(32 * ('cd', 36).length) + 128]
    mem[mem[64] + 32] = mem[(32 * ('cd', 36).length) + 128]
    mem[mem[64] + 64 len 32 * _55975] = mem[(32 * ('cd', 36).length) + 160 len 32 * _55975]
    return 32, mem[mem[64] + 32 len (32 * _55975) + 32]
}



}
